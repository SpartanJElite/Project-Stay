

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 23:32:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80  0000                     
    81                           ; Version 2.20
    82                           ; Generated 05/05/2020 GMT
    83                           ; 
    84                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F87K22 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  005D9C                     __pidataCOMRAM:
   118                           	callstack 0
   119                           
   120                           ;initializer for _Servo2_on
   121  005D9C  0FA0               	dw	4000
   122  005D9E  0000               	dw	0
   123                           
   124                           ;initializer for _Servo1_on
   125  005DA0  0FA0               	dw	4000
   126  005DA2  0000               	dw	0
   127                           
   128                           	psect	idataBANK1
   129  005DA4                     __pidataBANK1:
   130                           	callstack 0
   131                           
   132                           ;initializer for _Servo2_off
   133  005DA4  28E0               	dw	10464
   134  005DA6  0001               	dw	1
   135                           
   136                           ;initializer for _Servo1_off
   137  005DA8  28E0               	dw	10464
   138  005DAA  0001               	dw	1
   139                           
   140                           	psect	smallconst
   141  001000                     __psmallconst:
   142                           	callstack 0
   143  001000  00                 	db	0
   144  001001                     _aT:
   145                           	callstack 0
   146  001001  AAA9               	dw	43689
   147  001003  3EAA               	dw	16042
   148  001005  CA98               	dw	51864
   149  001007  BE4C               	dw	48716
   150  001009  F50D               	dw	62733
   151  00100B  3E11               	dw	15889
   152  00100D  1247               	dw	4679
   153  00100F  BDDA               	dw	48602
   154  001011  AC25               	dw	44069
   155  001013  3D7C               	dw	15740
   156  001015                     __end_of_aT:
   157                           	callstack 0
   158  001015                     _atanlo:
   159                           	callstack 0
   160  001015  3769               	dw	14185
   161  001017  31AC               	dw	12716
   162  001019  2168               	dw	8552
   163  00101B  3322               	dw	13090
   164  00101D  0FB4               	dw	4020
   165  00101F  3314               	dw	13076
   166  001021  2168               	dw	8552
   167  001023  33A2               	dw	13218
   168  001025                     __end_of_atanlo:
   169                           	callstack 0
   170  001025                     _atanhi:
   171                           	callstack 0
   172  001025  6338               	dw	25400
   173  001027  3EED               	dw	16109
   174  001029  0FDA               	dw	4058
   175  00102B  3F49               	dw	16201
   176  00102D  985E               	dw	39006
   177  00102F  3F7B               	dw	16251
   178  001031  0FDA               	dw	4058
   179  001033  3FC9               	dw	16329
   180  001035                     __end_of_atanhi:
   181                           	callstack 0
   182  001035  BD2E               	dw	48430
   183  001037  B3BB               	dw	46011
   184  001039                     __end_of_pi_lo:
   185                           	callstack 0
   186  001039  0FDB               	dw	4059
   187  00103B  4049               	dw	16457
   188  00103D                     __end_of_pi:
   189                           	callstack 0
   190  00103D                     STR_2:
   191  00103D  20                 	db	32
   192  00103E  61                 	db	97	;'a'
   193  00103F  63                 	db	99	;'c'
   194  001040  63                 	db	99	;'c'
   195  001041  41                 	db	65	;'A'
   196  001042  6E                 	db	110	;'n'
   197  001043  67                 	db	103	;'g'
   198  001044  6C                 	db	108	;'l'
   199  001045  65                 	db	101	;'e'
   200  001046  59                 	db	89	;'Y'
   201  001047  20                 	db	32
   202  001048  3D                 	db	61	;'='
   203  001049  20                 	db	32
   204  00104A  25                 	db	37
   205  00104B  2E                 	db	46
   206  00104C  32                 	db	50	;'2'
   207  00104D  66                 	db	102	;'f'
   208  00104E  20                 	db	32
   209  00104F  0D                 	db	13
   210  001050  0A                 	db	10
   211  001051  00                 	db	0
   212  001052                     STR_1:
   213  001052  20                 	db	32
   214  001053  61                 	db	97	;'a'
   215  001054  63                 	db	99	;'c'
   216  001055  63                 	db	99	;'c'
   217  001056  41                 	db	65	;'A'
   218  001057  6E                 	db	110	;'n'
   219  001058  67                 	db	103	;'g'
   220  001059  6C                 	db	108	;'l'
   221  00105A  65                 	db	101	;'e'
   222  00105B  58                 	db	88	;'X'
   223  00105C  20                 	db	32
   224  00105D  3D                 	db	61	;'='
   225  00105E  20                 	db	32
   226  00105F  25                 	db	37
   227  001060  2E                 	db	46
   228  001061  32                 	db	50	;'2'
   229  001062  66                 	db	102	;'f'
   230  001063  20                 	db	32
   231  001064  09                 	db	9
   232  001065  00                 	db	0
   233  001066                     STR_3:
   234  001066  49                 	db	73	;'I'
   235  001067  4E                 	db	78	;'N'
   236  001068  46                 	db	70	;'F'
   237  001069  00                 	db	0
   238  00106A                     STR_7:
   239  00106A  4E                 	db	78	;'N'
   240  00106B  41                 	db	65	;'A'
   241  00106C  4E                 	db	78	;'N'
   242  00106D  00                 	db	0
   243  00106E                     STR_4:
   244  00106E  69                 	db	105	;'i'
   245  00106F  6E                 	db	110	;'n'
   246  001070  66                 	db	102	;'f'
   247  001071  00                 	db	0
   248  001072                     STR_8:
   249  001072  6E                 	db	110	;'n'
   250  001073  61                 	db	97	;'a'
   251  001074  6E                 	db	110	;'n'
   252  001075  00                 	db	0
   253  001076                     STR_11:
   254  001076  6C                 	db	108	;'l'
   255  001077  66                 	db	102	;'f'
   256  001078  00                 	db	0
   257  001079  00                 	db	0	; dummy byte at the end
   258  0000                     
   259                           	psect	nvCOMRAM
   260  00004B                     __pnvCOMRAM:
   261                           	callstack 0
   262  00004B                     _CCPR1X:
   263                           	callstack 0
   264  00004B                     	ds	1
   265                           
   266                           	psect	nvBANK0
   267  0000FE                     __pnvBANK0:
   268                           	callstack 0
   269  0000FE                     _CCPR4X:
   270                           	callstack 0
   271  0000FE                     	ds	1
   272  0000                     _CCPTMRS1	set	3884
   273  0000                     _CCPTMRS0	set	3885
   274  0000                     _TXREG1	set	4013
   275  0000                     _SSP1STATbits	set	4039
   276  0000                     _SSP1BUF	set	4041
   277  0000                     _SSP1CON2bits	set	4037
   278  0000                     _CCPR4L	set	3960
   279  0000                     _LATEbits	set	3981
   280  0000                     _CCPR4H	set	3961
   281  0000                     _CCPR1L	set	4028
   282  0000                     _LATDbits	set	3980
   283  0000                     _CCPR1H	set	4029
   284  0000                     _PIR2bits	set	4001
   285  0000                     _PIR1bits	set	3998
   286  0000                     _PIR4bits	set	4023
   287  0000                     _PIR3bits	set	4004
   288  0000                     _BSR	set	4064
   289  0000                     _WREG	set	4072
   290  0000                     _STATUS	set	4056
   291  0000                     _T3CONbits	set	4017
   292  0000                     _T1CONbits	set	4045
   293  0000                     _T0CONbits	set	4053
   294  0000                     _RCSTA1bits	set	4011
   295  0000                     _TXSTA1bits	set	4012
   296  0000                     _SPBRGH1	set	4052
   297  0000                     _SPBRG1	set	4015
   298  0000                     _BAUDCON1bits	set	3941
   299  0000                     _TRISCbits	set	3988
   300  0000                     _SSP1ADD	set	4040
   301  0000                     _SSP1STAT	set	4039
   302  0000                     _SSP1CON2	set	4037
   303  0000                     _SSP1CON1	set	4038
   304  0000                     _PIE2bits	set	4000
   305  0000                     _PIE4bits	set	4022
   306  0000                     _IPR4bits	set	4024
   307  0000                     _IPR2bits	set	4002
   308  0000                     _CCP4CON	set	3959
   309  0000                     _T3CON	set	4017
   310  0000                     _PIE1bits	set	3997
   311  0000                     _PIE3bits	set	4003
   312  0000                     _IPR3bits	set	4005
   313  0000                     _IPR1bits	set	3999
   314  0000                     _CCP1CON	set	4027
   315  0000                     _T1CON	set	4045
   316  0000                     _INTCONbits	set	4082
   317  0000                     _RCONbits	set	4048
   318  0000                     _LATE	set	3981
   319  0000                     _TRISE	set	3990
   320  0000                     _LATD	set	3980
   321  0000                     _TRISD	set	3989
   322  0000                     _LATC	set	3979
   323  0000                     _TRISC	set	3988
   324                           
   325                           ; #config settings
   326                           
   327                           	psect	cinit
   328  005898                     __pcinit:
   329                           	callstack 0
   330  005898                     start_initialization:
   331                           	callstack 0
   332  005898                     __initialization:
   333                           	callstack 0
   334                           
   335                           ; Initialize objects allocated to BANK1 (8 bytes)
   336                           ; load TBLPTR registers with __pidataBANK1
   337  005898  0EA4               	movlw	low __pidataBANK1
   338  00589A  6EF6               	movwf	tblptrl,c
   339  00589C  0E5D               	movlw	high __pidataBANK1
   340  00589E  6EF7               	movwf	tblptrh,c
   341  0058A0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   342  0058A2  6EF8               	movwf	tblptru,c
   343  0058A4  EE01  F0F6         	lfsr	0,__pdataBANK1
   344  0058A8  EE10 F008          	lfsr	1,8
   345  0058AC                     copy_data0:
   346  0058AC  0009               	tblrd		*+
   347  0058AE  CFF5 FFEE          	movff	tablat,postinc0
   348  0058B2  50E5               	movf	postdec1,w,c
   349  0058B4  50E1               	movf	fsr1l,w,c
   350  0058B6  E1FA               	bnz	copy_data0
   351                           
   352                           ; Initialize objects allocated to COMRAM (8 bytes)
   353                           ; load TBLPTR registers with __pidataCOMRAM
   354  0058B8  0E9C               	movlw	low __pidataCOMRAM
   355  0058BA  6EF6               	movwf	tblptrl,c
   356  0058BC  0E5D               	movlw	high __pidataCOMRAM
   357  0058BE  6EF7               	movwf	tblptrh,c
   358  0058C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   359  0058C2  6EF8               	movwf	tblptru,c
   360  0058C4  EE00  F043         	lfsr	0,__pdataCOMRAM
   361  0058C8  EE10 F008          	lfsr	1,8
   362  0058CC                     copy_data1:
   363  0058CC  0009               	tblrd		*+
   364  0058CE  CFF5 FFEE          	movff	tablat,postinc0
   365  0058D2  50E5               	movf	postdec1,w,c
   366  0058D4  50E1               	movf	fsr1l,w,c
   367  0058D6  E1FA               	bnz	copy_data1
   368                           
   369                           ; Clear objects allocated to BANK1 (118 bytes)
   370  0058D8  EE01  F080         	lfsr	0,__pbssBANK1
   371  0058DC  0E76               	movlw	118
   372  0058DE                     clear_0:
   373  0058DE  6AEE               	clrf	postinc0,c
   374  0058E0  06E8               	decf	wreg,f,c
   375  0058E2  E1FD               	bnz	clear_0
   376                           
   377                           ; Clear objects allocated to COMRAM (11 bytes)
   378  0058E4  EE00  F038         	lfsr	0,__pbssCOMRAM
   379  0058E8  0E0B               	movlw	11
   380  0058EA                     clear_1:
   381  0058EA  6AEE               	clrf	postinc0,c
   382  0058EC  06E8               	decf	wreg,f,c
   383  0058EE  E1FD               	bnz	clear_1
   384  0058F0                     end_of_initialization:
   385                           	callstack 0
   386  0058F0                     __end_of__initialization:
   387                           	callstack 0
   388  0058F0  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   389  0058F2  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   390  0058F4  0100               	movlb	0
   391  0058F6  EF7D  F02C         	goto	_main	;jump to C main() function
   392                           
   393                           	psect	bssCOMRAM
   394  000038                     __pbssCOMRAM:
   395                           	callstack 0
   396  000038                     _width:
   397                           	callstack 0
   398  000038                     	ds	2
   399  00003A                     _prec:
   400                           	callstack 0
   401  00003A                     	ds	2
   402  00003C                     _flags:
   403                           	callstack 0
   404  00003C                     	ds	2
   405  00003E                     _BSR_temp:
   406                           	callstack 0
   407  00003E                     	ds	1
   408  00003F                     _Wreg_temp:
   409                           	callstack 0
   410  00003F                     	ds	1
   411  000040                     _Status_temp:
   412                           	callstack 0
   413  000040                     	ds	1
   414  000041                     _TMR3X:
   415                           	callstack 0
   416  000041                     	ds	1
   417  000042                     _TMR1X:
   418                           	callstack 0
   419  000042                     	ds	1
   420                           
   421                           	psect	dataCOMRAM
   422  000043                     __pdataCOMRAM:
   423                           	callstack 0
   424  000043                     _Servo2_on:
   425                           	callstack 0
   426  000043                     	ds	4
   427  000047                     _Servo1_on:
   428                           	callstack 0
   429  000047                     	ds	4
   430                           
   431                           	psect	bssBANK1
   432  000180                     __pbssBANK1:
   433                           	callstack 0
   434  000180                     floorf@F527:
   435                           	callstack 0
   436  000180                     	ds	4
   437  000184                     fabsf@F465:
   438                           	callstack 0
   439  000184                     	ds	4
   440  000188                     ___fpclassifyf@F465:
   441                           	callstack 0
   442  000188                     	ds	4
   443  00018C                     _yaw:
   444                           	callstack 0
   445  00018C                     	ds	4
   446  000190                     _GyroAngleY:
   447                           	callstack 0
   448  000190                     	ds	4
   449  000194                     _GyroAngleX:
   450                           	callstack 0
   451  000194                     	ds	4
   452  000198                     _previousTime:
   453                           	callstack 0
   454  000198                     	ds	4
   455  00019C                     _CurrentTime:
   456                           	callstack 0
   457  00019C                     	ds	4
   458  0001A0                     _time0counter:
   459                           	callstack 0
   460  0001A0                     	ds	4
   461  0001A4                     _nout:
   462                           	callstack 0
   463  0001A4                     	ds	2
   464  0001A6                     _dbuf:
   465                           	callstack 0
   466  0001A6                     	ds	80
   467                           
   468                           	psect	dataBANK1
   469  0001F6                     __pdataBANK1:
   470                           	callstack 0
   471  0001F6                     _Servo2_off:
   472                           	callstack 0
   473  0001F6                     	ds	4
   474  0001FA                     _Servo1_off:
   475                           	callstack 0
   476  0001FA                     	ds	4
   477                           
   478                           	psect	cstackBANK1
   479  000100                     __pcstackBANK1:
   480                           	callstack 0
   481  000100                     ?_sprintf:
   482                           	callstack 0
   483  000100                     sprintf@s:
   484                           	callstack 0
   485  000100                     _atan2f$2607:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0x0
   489  000100                     	ds	2
   490  000102                     sprintf@fmt:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x2
   494  000102                     	ds	2
   495  000104                     _atan2f$2608:
   496                           	callstack 0
   497                           
   498                           ; 4 bytes @ 0x4
   499  000104                     	ds	4
   500  000108                     sprintf@ap:
   501                           	callstack 0
   502  000108                     _atan2f$2609:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x8
   506  000108                     	ds	2
   507  00010A                     sprintf@f:
   508                           	callstack 0
   509                           
   510                           ; 6 bytes @ 0xA
   511  00010A                     	ds	2
   512  00010C                     atan2f@__xc8_float_word:
   513                           	callstack 0
   514                           
   515                           ; 4 bytes @ 0xC
   516  00010C                     	ds	4
   517  000110                     atan2f@z:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0x10
   521  000110                     	ds	4
   522  000114                     atan2f@ix:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x14
   526  000114                     	ds	4
   527  000118                     atan2f@iy:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x18
   531  000118                     	ds	4
   532  00011C                     atan2f@m:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x1C
   536  00011C                     	ds	4
   537  000120                     ??_MPU6050_Read:
   538                           
   539                           ; 1 bytes @ 0x20
   540  000120                     	ds	4
   541  000124                     MPU6050_Read@buffer:
   542                           	callstack 0
   543                           
   544                           ; 40 bytes @ 0x24
   545  000124                     	ds	40
   546  00014C                     MPU6050_Read@AX:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0x4C
   550  00014C                     	ds	4
   551  000150                     MPU6050_Read@AY:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x50
   555  000150                     	ds	4
   556  000154                     MPU6050_Read@Ax:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x54
   560  000154                     	ds	2
   561  000156                     MPU6050_Read@Ay:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x56
   565  000156                     	ds	2
   566  000158                     MPU6050_Read@Az:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x58
   570  000158                     	ds	2
   571  00015A                     MPU6050_Read@Gx:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x5A
   575  00015A                     	ds	2
   576  00015C                     MPU6050_Read@Gy:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x5C
   580  00015C                     	ds	2
   581  00015E                     MPU6050_Read@Gz:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x5E
   585  00015E                     	ds	2
   586  000160                     MPU6050_Read@T:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x60
   590  000160                     	ds	2
   591  000162                     MPU6050_Read@accAngleX:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x62
   595  000162                     	ds	4
   596  000166                     MPU6050_Read@accAngleY:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x66
   600  000166                     	ds	4
   601  00016A                     MPU6050_Read@AZ:
   602                           	callstack 0
   603                           
   604                           ; 4 bytes @ 0x6A
   605  00016A                     	ds	4
   606  00016E                     _MPU6050_Read$2603:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x6E
   610  00016E                     	ds	4
   611  000172                     _MPU6050_Read$2604:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x72
   615  000172                     	ds	4
   616  000176                     _MPU6050_Read$2605:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x76
   620  000176                     	ds	4
   621  00017A                     _MPU6050_Read$2606:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0x7A
   625  00017A                     	ds	4
   626  00017E                     main@i:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x7E
   630  00017E                     	ds	2
   631                           
   632                           	psect	cstackBANK0
   633  000060                     __pcstackBANK0:
   634                           	callstack 0
   635  000060                     ??_Servo1:
   636  000060                     ??_Servo2:
   637  000060                     ___fldiv@rem:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x0
   641  000060                     	ds	4
   642  000064                     ___fldiv@sign:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x4
   646  000064                     	ds	1
   647  000065                     ___fldiv@new_exp:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x5
   651  000065                     	ds	2
   652  000067                     ___fldiv@grs:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x7
   656  000067                     	ds	1
   657  000068                     Servo1@temp:
   658                           	callstack 0
   659  000068                     Servo2@temp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x8
   663  000068                     	ds	3
   664  00006B                     ___fldiv@bexp:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0xB
   668  00006B                     	ds	1
   669  00006C                     ___fldiv@aexp:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0xC
   673  00006C                     	ds	1
   674  00006D                     ?___flmul:
   675                           	callstack 0
   676  00006D                     ___flmul@b:
   677                           	callstack 0
   678  00006D                     floorf@m:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0xD
   682  00006D                     	ds	4
   683  000071                     floorf@e:
   684                           	callstack 0
   685  000071                     ___flmul@a:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x11
   689  000071                     	ds	2
   690  000073                     floorf@u:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x13
   694  000073                     	ds	2
   695  000075                     ___flmul@sign:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x15
   699  000075                     	ds	1
   700  000076                     ___flmul@aexp:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x16
   704  000076                     	ds	1
   705  000077                     ___flmul@grs:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x17
   709  000077                     	ds	4
   710  00007B                     ___flmul@bexp:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x1B
   714  00007B                     	ds	1
   715  00007C                     ___flmul@prod:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x1C
   719  00007C                     	ds	4
   720  000080                     ___flmul@temp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x20
   724  000080                     	ds	2
   725  000082                     ?___fladd:
   726                           	callstack 0
   727  000082                     ___flge@ff1:
   728                           	callstack 0
   729  000082                     ___fladd@b:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x22
   733  000082                     	ds	4
   734  000086                     ___flge@ff2:
   735                           	callstack 0
   736  000086                     ___fladd@a:
   737                           	callstack 0
   738                           
   739                           ; 4 bytes @ 0x26
   740  000086                     	ds	4
   741  00008A                     ??___fladd:
   742  00008A                     ??___flge:
   743                           
   744                           ; 1 bytes @ 0x2A
   745  00008A                     	ds	4
   746  00008E                     ___fladd@signs:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x2E
   750  00008E                     	ds	1
   751  00008F                     ___fladd@aexp:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x2F
   755  00008F                     	ds	1
   756  000090                     ___fladd@bexp:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x30
   760  000090                     	ds	1
   761  000091                     ___fladd@grs:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x31
   765  000091                     	ds	1
   766  000092                     ?___flsub:
   767                           	callstack 0
   768  000092                     ___flsub@b:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x32
   772  000092                     	ds	4
   773  000096                     ___flsub@a:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x36
   777  000096                     	ds	4
   778  00009A                     ?_efgtoa:
   779                           	callstack 0
   780  00009A                     ?_atanf:
   781                           	callstack 0
   782  00009A                     efgtoa@fp:
   783                           	callstack 0
   784  00009A                     atanf@x:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x3A
   788  00009A                     	ds	2
   789  00009C                     efgtoa@f:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0x3C
   793  00009C                     	ds	2
   794  00009E                     ??_atanf:
   795                           
   796                           ; 1 bytes @ 0x3E
   797  00009E                     	ds	2
   798  0000A0                     efgtoa@c:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x40
   802  0000A0                     	ds	1
   803  0000A1                     ??_efgtoa:
   804                           
   805                           ; 1 bytes @ 0x41
   806  0000A1                     	ds	1
   807  0000A2                     atanf@__xc8_float_word:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x42
   811  0000A2                     	ds	4
   812  0000A6                     _efgtoa$2235:
   813                           	callstack 0
   814  0000A6                     _atanf$2611:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x46
   818  0000A6                     	ds	2
   819  0000A8                     _efgtoa$2236:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x48
   823  0000A8                     	ds	2
   824  0000AA                     _efgtoa$2241:
   825                           	callstack 0
   826  0000AA                     _atanf$2613:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x4A
   830  0000AA                     	ds	2
   831  0000AC                     _efgtoa$2245:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x4C
   835  0000AC                     	ds	2
   836  0000AE                     _efgtoa$2246:
   837                           	callstack 0
   838  0000AE                     _atanf$2614:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x4E
   842  0000AE                     	ds	2
   843  0000B0                     _efgtoa$2247:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x50
   847  0000B0                     	ds	2
   848  0000B2                     efgtoa@t:
   849                           	callstack 0
   850  0000B2                     atanf@s1:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x52
   854  0000B2                     	ds	2
   855  0000B4                     efgtoa@pp:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x54
   859  0000B4                     	ds	2
   860  0000B6                     efgtoa@ne:
   861                           	callstack 0
   862  0000B6                     atanf@s2:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x56
   866  0000B6                     	ds	2
   867  0000B8                     efgtoa@m:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x58
   871  0000B8                     	ds	2
   872  0000BA                     atanf@sign:
   873                           	callstack 0
   874  0000BA                     efgtoa@ou:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x5A
   878  0000BA                     	ds	4
   879  0000BE                     efgtoa@d:
   880                           	callstack 0
   881  0000BE                     _atanf$2610:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x5E
   885  0000BE                     	ds	2
   886  0000C0                     efgtoa@sign:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x60
   890  0000C0                     	ds	2
   891  0000C2                     efgtoa@p:
   892                           	callstack 0
   893  0000C2                     _atanf$2612:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x62
   897  0000C2                     	ds	2
   898  0000C4                     efgtoa@w:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x64
   902  0000C4                     	ds	2
   903  0000C6                     efgtoa@nmode:
   904                           	callstack 0
   905  0000C6                     atanf@w:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x66
   909  0000C6                     	ds	1
   910  0000C7                     efgtoa@mode:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x67
   914  0000C7                     	ds	1
   915  0000C8                     efgtoa@h:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x68
   919  0000C8                     	ds	2
   920  0000CA                     atanf@id:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x6A
   924  0000CA                     	ds	2
   925  0000CC                     atanf@z:
   926                           	callstack 0
   927  0000CC                     efgtoa@l:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0x6C
   931  0000CC                     	ds	4
   932  0000D0                     efgtoa@i:
   933                           	callstack 0
   934  0000D0                     atanf@ix:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0x70
   938  0000D0                     	ds	2
   939  0000D2                     efgtoa@g:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x72
   943  0000D2                     	ds	2
   944  0000D4                     ?_atan2f:
   945                           	callstack 0
   946  0000D4                     atan2f@y:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x74
   950  0000D4                     	ds	2
   951  0000D6                     efgtoa@e:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x76
   955  0000D6                     	ds	2
   956  0000D8                     efgtoa@n:
   957                           	callstack 0
   958  0000D8                     atan2f@x:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x78
   962  0000D8                     	ds	2
   963  0000DA                     efgtoa@u:
   964                           	callstack 0
   965                           
   966                           ; 4 bytes @ 0x7A
   967  0000DA                     	ds	2
   968  0000DC                     ??_atan2f:
   969                           
   970                           ; 1 bytes @ 0x7C
   971  0000DC                     	ds	2
   972  0000DE                     ?_vfpfcnvrt:
   973                           	callstack 0
   974  0000DE                     vfpfcnvrt@fp:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x7E
   978  0000DE                     	ds	2
   979  0000E0                     vfpfcnvrt@fmt:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x80
   983  0000E0                     	ds	2
   984  0000E2                     vfpfcnvrt@ap:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x82
   988  0000E2                     	ds	2
   989  0000E4                     ??_vfpfcnvrt:
   990                           
   991                           ; 1 bytes @ 0x84
   992  0000E4                     	ds	4
   993  0000E8                     _vfpfcnvrt$2261:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x88
   997  0000E8                     	ds	2
   998  0000EA                     _vfpfcnvrt$2265:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x8A
  1002  0000EA                     	ds	2
  1003  0000EC                     vfpfcnvrt@f:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x8C
  1007  0000EC                     	ds	4
  1008  0000F0                     vfpfcnvrt@ct:
  1009                           	callstack 0
  1010                           
  1011                           ; 3 bytes @ 0x90
  1012  0000F0                     	ds	3
  1013  0000F3                     vfpfcnvrt@c:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x93
  1017  0000F3                     	ds	1
  1018  0000F4                     ?_vfprintf:
  1019                           	callstack 0
  1020  0000F4                     vfprintf@fp:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x94
  1024  0000F4                     	ds	2
  1025  0000F6                     vfprintf@fmt:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x96
  1029  0000F6                     	ds	2
  1030  0000F8                     vfprintf@ap:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x98
  1034  0000F8                     	ds	2
  1035  0000FA                     vfprintf@cfmt:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x9A
  1039  0000FA                     	ds	2
  1040  0000FC                     ??_main:
  1041                           
  1042                           ; 1 bytes @ 0x9C
  1043  0000FC                     	ds	2
  1044                           
  1045                           	psect	cstackCOMRAM
  1046  000001                     __pcstackCOMRAM:
  1047                           	callstack 0
  1048  000001                     ??_CCP1handler:
  1049  000001                     ??_CCP4handler:
  1050  000001                     
  1051                           ; 1 bytes @ 0x0
  1052  000001                     	ds	12
  1053  00000D                     CCP1handler@CCPRT:
  1054                           	callstack 0
  1055  00000D                     CCP4handler@CCPRT:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0xC
  1059  00000D                     	ds	4
  1060  000011                     ??_LoPriISR:
  1061                           
  1062                           ; 1 bytes @ 0x10
  1063  000011                     	ds	3
  1064  000014                     ??_I2C_Master_Wait:
  1065  000014                     ?___fpclassifyf:
  1066                           	callstack 0
  1067  000014                     ?_strlen:
  1068                           	callstack 0
  1069  000014                     ?_isupper:
  1070                           	callstack 0
  1071  000014                     ?_isdigit:
  1072                           	callstack 0
  1073  000014                     ?_strncmp:
  1074                           	callstack 0
  1075  000014                     ?_isspace:
  1076                           	callstack 0
  1077  000014                     ?___wmul:
  1078                           	callstack 0
  1079  000014                     ?___awdiv:
  1080                           	callstack 0
  1081  000014                     ?___awmod:
  1082                           	callstack 0
  1083  000014                     ?___lmul:
  1084                           	callstack 0
  1085  000014                     ?___lldiv:
  1086                           	callstack 0
  1087  000014                     ?___fltol:
  1088                           	callstack 0
  1089  000014                     ?___xxtofl:
  1090                           	callstack 0
  1091  000014                     I2C_Read@ACK_NACK:
  1092                           	callstack 0
  1093  000014                     UART_Write@data:
  1094                           	callstack 0
  1095  000014                     ___wmul@multiplier:
  1096                           	callstack 0
  1097  000014                     ___awdiv@dividend:
  1098                           	callstack 0
  1099  000014                     ___awmod@dividend:
  1100                           	callstack 0
  1101  000014                     isdigit@c:
  1102                           	callstack 0
  1103  000014                     isspace@c:
  1104                           	callstack 0
  1105  000014                     isupper@c:
  1106                           	callstack 0
  1107  000014                     fputc@c:
  1108                           	callstack 0
  1109  000014                     strcpy@dest:
  1110                           	callstack 0
  1111  000014                     strlen@s:
  1112                           	callstack 0
  1113  000014                     strncmp@_l:
  1114                           	callstack 0
  1115  000014                     ___lmul@multiplier:
  1116                           	callstack 0
  1117  000014                     ___lldiv@dividend:
  1118                           	callstack 0
  1119  000014                     ___fleq@ff1:
  1120                           	callstack 0
  1121  000014                     ___fltol@f1:
  1122                           	callstack 0
  1123  000014                     ___xxtofl@val:
  1124                           	callstack 0
  1125  000014                     ___fpclassifyf@x:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x13
  1129  000014                     	ds	1
  1130  000015                     I2C_Master_Write@data:
  1131                           	callstack 0
  1132  000015                     I2C_Read@Data:
  1133                           	callstack 0
  1134  000015                     UART_Write_String@buf:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x14
  1138  000015                     	ds	1
  1139  000016                     ??_isupper:
  1140  000016                     ??_isdigit:
  1141  000016                     ??_isspace:
  1142  000016                     I2C_Start@add:
  1143                           	callstack 0
  1144  000016                     ___wmul@multiplicand:
  1145                           	callstack 0
  1146  000016                     ___awdiv@divisor:
  1147                           	callstack 0
  1148  000016                     ___awmod@divisor:
  1149                           	callstack 0
  1150  000016                     fputc@fp:
  1151                           	callstack 0
  1152  000016                     strcpy@src:
  1153                           	callstack 0
  1154  000016                     strlen@a:
  1155                           	callstack 0
  1156  000016                     strncmp@_r:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x15
  1160  000016                     	ds	1
  1161  000017                     ??_Initial:
  1162  000017                     UART_Write_String@i:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x16
  1166  000017                     	ds	1
  1167  000018                     ??___fpclassifyf:
  1168  000018                     ??_fputc:
  1169  000018                     ??_strcpy:
  1170  000018                     ??___fltol:
  1171  000018                     ??___xxtofl:
  1172  000018                     ___awdiv@counter:
  1173                           	callstack 0
  1174  000018                     ___awmod@counter:
  1175                           	callstack 0
  1176  000018                     ___wmul@product:
  1177                           	callstack 0
  1178  000018                     strncmp@n:
  1179                           	callstack 0
  1180  000018                     ___lmul@multiplicand:
  1181                           	callstack 0
  1182  000018                     ___lldiv@divisor:
  1183                           	callstack 0
  1184  000018                     ___fleq@ff2:
  1185                           	callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x17
  1188  000018                     	ds	1
  1189  000019                     ___awdiv@sign:
  1190                           	callstack 0
  1191  000019                     ___awmod@sign:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x18
  1195  000019                     	ds	1
  1196  00001A                     ??_strncmp:
  1197  00001A                     ?_tolower:
  1198                           	callstack 0
  1199  00001A                     _isspace$2318:
  1200                           	callstack 0
  1201  00001A                     ___awdiv@quotient:
  1202                           	callstack 0
  1203  00001A                     strcpy@s:
  1204                           	callstack 0
  1205  00001A                     tolower@c:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x19
  1209  00001A                     	ds	1
  1210  00001B                     ?_atoi:
  1211                           	callstack 0
  1212  00001B                     atoi@s:
  1213                           	callstack 0
  1214  00001B                     strncmp@l:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x1A
  1218  00001B                     	ds	1
  1219  00001C                     ??_tolower:
  1220  00001C                     ??___fleq:
  1221  00001C                     ___fltol@sign1:
  1222                           	callstack 0
  1223  00001C                     ___xxtofl@sign:
  1224                           	callstack 0
  1225  00001C                     ___fpclassifyf@e:
  1226                           	callstack 0
  1227  00001C                     strcpy@d:
  1228                           	callstack 0
  1229  00001C                     ___lmul@product:
  1230                           	callstack 0
  1231  00001C                     ___lldiv@quotient:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x1B
  1235  00001C                     	ds	1
  1236  00001D                     ??_atoi:
  1237  00001D                     ___fltol@exp1:
  1238                           	callstack 0
  1239  00001D                     ___xxtofl@exp:
  1240                           	callstack 0
  1241  00001D                     fputs@s:
  1242                           	callstack 0
  1243  00001D                     strncmp@r:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x1C
  1247  00001D                     	ds	1
  1248  00001E                     ___xxtofl@arg:
  1249                           	callstack 0
  1250  00001E                     ___fpclassifyf@u:
  1251                           	callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x1D
  1254  00001E                     	ds	1
  1255  00001F                     fputs@fp:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x1E
  1259  00001F                     	ds	1
  1260  000020                     ___lldiv@counter:
  1261                           	callstack 0
  1262  000020                     _tolower$2382:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x1F
  1266  000020                     	ds	1
  1267  000021                     ?_map:
  1268                           	callstack 0
  1269  000021                     fputs@c:
  1270                           	callstack 0
  1271  000021                     map@value:
  1272                           	callstack 0
  1273  000021                     atoi@neg:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x20
  1277  000021                     	ds	1
  1278  000022                     ?___fldiv:
  1279                           	callstack 0
  1280  000022                     fputs@i:
  1281                           	callstack 0
  1282  000022                     ___fldiv@b:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x21
  1286  000022                     	ds	1
  1287  000023                     map@valuemin:
  1288                           	callstack 0
  1289  000023                     _atoi$2287:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x22
  1293  000023                     	ds	1
  1294  000024                     ?_pad:
  1295                           	callstack 0
  1296  000024                     pad@fp:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x23
  1300  000024                     	ds	1
  1301  000025                     map@valuemax:
  1302                           	callstack 0
  1303  000025                     _atoi$2289:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x24
  1307  000025                     	ds	1
  1308  000026                     pad@buf:
  1309                           	callstack 0
  1310  000026                     ___fldiv@a:
  1311                           	callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x25
  1314  000026                     	ds	1
  1315  000027                     _atoi$2288:
  1316                           	callstack 0
  1317  000027                     map@newmin:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x26
  1321  000027                     	ds	1
  1322  000028                     pad@p:
  1323                           	callstack 0
  1324  000028                     atoi@n:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0x27
  1328  000028                     	ds	1
  1329  000029                     map@newmax:
  1330                           	callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x28
  1333  000029                     	ds	1
  1334  00002A                     ??___fldiv:
  1335  00002A                     ??_pad:
  1336                           
  1337                           ; 1 bytes @ 0x29
  1338  00002A                     	ds	1
  1339  00002B                     ??_map:
  1340  00002B                     pad@i:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x2A
  1344  00002B                     	ds	2
  1345  00002D                     pad@w:
  1346                           	callstack 0
  1347  00002D                     map@second:
  1348                           	callstack 0
  1349                           
  1350                           ; 4 bytes @ 0x2C
  1351  00002D                     	ds	1
  1352  00002E                     ?_fabsf:
  1353                           	callstack 0
  1354  00002E                     ?_floorf:
  1355                           	callstack 0
  1356  00002E                     ?___flneg:
  1357                           	callstack 0
  1358  00002E                     ___flneg@f1:
  1359                           	callstack 0
  1360  00002E                     fabsf@x:
  1361                           	callstack 0
  1362  00002E                     floorf@x:
  1363                           	callstack 0
  1364                           
  1365                           ; 4 bytes @ 0x2D
  1366  00002E                     	ds	3
  1367  000031                     map@first:
  1368                           	callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x30
  1371  000031                     	ds	1
  1372  000032                     ??___flmul:
  1373  000032                     ??_floorf:
  1374  000032                     fabsf@u:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x31
  1378  000032                     	ds	1
  1379  000033                     map@third:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x32
  1383  000033                     	ds	2
  1384  000035                     Servo1@angle:
  1385                           	callstack 0
  1386  000035                     Servo2@angle:
  1387                           	callstack 0
  1388                           
  1389                           ; 2 bytes @ 0x34
  1390  000035                     	ds	1
  1391  000036                     
  1392                           ; 1 bytes @ 0x35
  1393  000036                     	ds	2
  1394  000038                     
  1395                           ; 1 bytes @ 0x37
  1396 ;;
  1397 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1398 ;;
  1399 ;; *************** function _main *****************
  1400 ;; Defined at:
  1401 ;;		line 70 in file "Le_Jason_Project.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  i               2  126[BANK1 ] int 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;Total ram usage:        4 bytes
  1420 ;; Hardware stack levels required when called: 12
  1421 ;; This function calls:
  1422 ;;		_Initial
  1423 ;;		_MPU6050_Read
  1424 ;;		_Servo1
  1425 ;;		_Servo2
  1426 ;; This function is called by:
  1427 ;;		Startup code after reset
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text0
  1432  0058FA                     __ptext0:
  1433                           	callstack 0
  1434  0058FA                     _main:
  1435                           	callstack 19
  1436  0058FA                     
  1437                           ;Le_Jason_Project.c: 71:     LATC = 0x00;
  1438  0058FA  EC4A  F026         	call	_Initial	;wreg free
  1439                           
  1440                           ;Le_Jason_Project.c: 72:     TRISD = 0x00;
  1441  0058FE  0E00               	movlw	0
  1442  005900  6E36               	movwf	(Servo1@angle+1)^0,c
  1443  005902  0E2D               	movlw	45
  1444  005904  6E35               	movwf	Servo1@angle^0,c
  1445  005906  ECFA  F02A         	call	_Servo1	;wreg free
  1446                           
  1447                           ;Le_Jason_Project.c: 73:     LATD = 0x00;
  1448  00590A  0E00               	movlw	0
  1449  00590C  6E36               	movwf	(Servo2@angle+1)^0,c
  1450  00590E  0E2D               	movlw	45
  1451  005910  6E35               	movwf	Servo2@angle^0,c
  1452  005912  ECA8  F02A         	call	_Servo2	;wreg free
  1453  005916                     l8166:
  1454                           
  1455                           ;Le_Jason_Project.c: 75:     LATE = 0x00;
  1456  005916  0E00               	movlw	0
  1457  005918  0101               	movlb	1	; () banked
  1458  00591A  6F7F               	movwf	(main@i+1)& (0+255),b
  1459  00591C  0EB4               	movlw	180
  1460  00591E  6F7E               	movwf	main@i& (0+255),b
  1461  005920                     l8172:
  1462                           
  1463                           ; BSR set to: 1
  1464                           ;Le_Jason_Project.c: 78:     RCONbits.IPEN = 1;
  1465  005920  EC4D  F016         	call	_MPU6050_Read	;wreg free
  1466  005924                     
  1467                           ;Le_Jason_Project.c: 79:     INTCONbits.GIEL = 1;
  1468  005924  0E02               	movlw	2
  1469  005926  0100               	movlb	0	; () banked
  1470  005928  6FFD               	movwf	(??_main+1)& (0+255),b
  1471  00592A  0E04               	movlw	4
  1472  00592C  6FFC               	movwf	??_main& (0+255),b
  1473  00592E  0EBA               	movlw	186
  1474  005930                     u8867:
  1475  005930  2EE8               	decfsz	wreg,f,c
  1476  005932  D7FE               	bra	u8867
  1477  005934  2FFC               	decfsz	??_main& (0+255),f,b
  1478  005936  D7FC               	bra	u8867
  1479  005938  2FFD               	decfsz	(??_main+1)& (0+255),f,b
  1480  00593A  D7FA               	bra	u8867
  1481  00593C  F000               	nop	
  1482  00593E                     
  1483                           ;Le_Jason_Project.c: 80:     INTCONbits.GIEH = 1;
  1484  00593E  0101               	movlb	1	; () banked
  1485  005940  077E               	decf	main@i& (0+255),f,b
  1486  005942  A0D8               	btfss	status,0,c
  1487  005944  077F               	decf	(main@i+1)& (0+255),f,b
  1488  005946                     
  1489                           ; BSR set to: 1
  1490  005946  BF7F               	btfsc	(main@i+1)& (0+255),7,b
  1491  005948  EFAA  F02C         	goto	u8840
  1492  00594C  EFA8  F02C         	goto	u8841
  1493  005950                     u8841:
  1494  005950  EF90  F02C         	goto	l8172
  1495  005954                     u8840:
  1496  005954  EF8B  F02C         	goto	l8166
  1497  005958  EF51  F000         	goto	start
  1498  00595C                     __end_of_main:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _MPU6050_Read *****************
  1502 ;; Defined at:
  1503 ;;		line 425 in file "Le_Jason_Project.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  buffer         40   36[BANK1 ] unsigned char [40]
  1508 ;;  AZ              4  106[BANK1 ] float 
  1509 ;;  accAngleY       4  102[BANK1 ] float 
  1510 ;;  accAngleX       4   98[BANK1 ] float 
  1511 ;;  AY              4   80[BANK1 ] float 
  1512 ;;  AX              4   76[BANK1 ] float 
  1513 ;;  t               4    0        float 
  1514 ;;  GZ              4    0        float 
  1515 ;;  GY              4    0        float 
  1516 ;;  GX              4    0        float 
  1517 ;;  pitch           4    0        float 
  1518 ;;  roll            4    0        float 
  1519 ;;  T               2   96[BANK1 ] int 
  1520 ;;  Gz              2   94[BANK1 ] int 
  1521 ;;  Gy              2   92[BANK1 ] int 
  1522 ;;  Gx              2   90[BANK1 ] int 
  1523 ;;  Az              2   88[BANK1 ] int 
  1524 ;;  Ay              2   86[BANK1 ] int 
  1525 ;;  Ax              2   84[BANK1 ] int 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Locals:         0       0      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Totals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;Total ram usage:       94 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; Hardware stack levels required when called: 11
  1542 ;; This function calls:
  1543 ;;		_I2C_Master_Stop
  1544 ;;		_I2C_Master_Write
  1545 ;;		_I2C_Read
  1546 ;;		_I2C_Start
  1547 ;;		_Servo1
  1548 ;;		_Servo2
  1549 ;;		_UART_Write_String
  1550 ;;		___fladd
  1551 ;;		___fldiv
  1552 ;;		___flmul
  1553 ;;		___flneg
  1554 ;;		___fltol
  1555 ;;		___xxtofl
  1556 ;;		_atan2f
  1557 ;;		_sprintf
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text1
  1564  002C9A                     __ptext1:
  1565                           	callstack 0
  1566  002C9A                     _MPU6050_Read:
  1567                           	callstack 19
  1568  002C9A                     
  1569                           ;Le_Jason_Project.c: 426:     I2C_Master_Stop();;Le_Jason_Project.c: 427: ;Le_Jason_Proj
      +                          ect.c: 428:     AX = (float)Ax/16384.0;;Le_Jason_Project.c: 429:     AY = (float)Ay/1638
      +                          4.0;;Le_Jason_Project.c: 432:     GY = (float)Gy/131.0;
  1570  002C9A  0ED0               	movlw	208
  1571  002C9C  ECC6  F02E         	call	_I2C_Start
  1572                           
  1573                           ;Le_Jason_Project.c: 433:     GZ = (float)Gz/131.0;
  1574  002CA0  0E3B               	movlw	59
  1575  002CA2  EC98  F02E         	call	_I2C_Master_Write
  1576                           
  1577                           ;Le_Jason_Project.c: 434:     t = ((float)T/340.00)+36.53;
  1578  002CA6  ECD6  F02E         	call	_I2C_Master_Stop	;wreg free
  1579  002CAA  0ED1               	movlw	209
  1580  002CAC  ECC6  F02E         	call	_I2C_Start
  1581  002CB0  0E00               	movlw	0
  1582  002CB2  EC84  F02D         	call	_I2C_Read
  1583  002CB6  0E00               	movlw	0
  1584  002CB8  EC84  F02D         	call	_I2C_Read
  1585  002CBC  0101               	movlb	1	; () banked
  1586  002CBE  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1587  002CC0  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1588  002CC2  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1589  002CC4  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1590  002CC6  0E00               	movlw	0
  1591  002CC8  EC84  F02D         	call	_I2C_Read
  1592  002CCC  0101               	movlb	1	; () banked
  1593  002CCE  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1594  002CD0  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1595  002CD2  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1596  002CD4  6F54               	movwf	MPU6050_Read@Ax& (0+255),b
  1597  002CD6  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1598  002CD8  6F55               	movwf	(MPU6050_Read@Ax+1)& (0+255),b
  1599  002CDA                     
  1600                           ; BSR set to: 1
  1601  002CDA  0E00               	movlw	0
  1602  002CDC  EC84  F02D         	call	_I2C_Read
  1603  002CE0  0101               	movlb	1	; () banked
  1604  002CE2  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1605  002CE4  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1606  002CE6  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1607  002CE8  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1608  002CEA  0E00               	movlw	0
  1609  002CEC  EC84  F02D         	call	_I2C_Read
  1610  002CF0  0101               	movlb	1	; () banked
  1611  002CF2  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1612  002CF4  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1613  002CF6  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1614  002CF8  6F56               	movwf	MPU6050_Read@Ay& (0+255),b
  1615  002CFA  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1616  002CFC  6F57               	movwf	(MPU6050_Read@Ay+1)& (0+255),b
  1617  002CFE                     
  1618                           ; BSR set to: 1
  1619  002CFE  0E00               	movlw	0
  1620  002D00  EC84  F02D         	call	_I2C_Read
  1621  002D04  0101               	movlb	1	; () banked
  1622  002D06  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1623  002D08  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1624  002D0A  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1625  002D0C  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1626  002D0E  0E00               	movlw	0
  1627  002D10  EC84  F02D         	call	_I2C_Read
  1628  002D14  0101               	movlb	1	; () banked
  1629  002D16  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1630  002D18  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1631  002D1A  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1632  002D1C  6F58               	movwf	MPU6050_Read@Az& (0+255),b
  1633  002D1E  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1634  002D20  6F59               	movwf	(MPU6050_Read@Az+1)& (0+255),b
  1635  002D22                     
  1636                           ; BSR set to: 1
  1637  002D22  0E00               	movlw	0
  1638  002D24  EC84  F02D         	call	_I2C_Read
  1639  002D28  0101               	movlb	1	; () banked
  1640  002D2A  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1641  002D2C  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1642  002D2E  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1643  002D30  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1644  002D32  0E00               	movlw	0
  1645  002D34  EC84  F02D         	call	_I2C_Read
  1646  002D38  0101               	movlb	1	; () banked
  1647  002D3A  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1648  002D3C  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1649  002D3E  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1650  002D40  6F60               	movwf	MPU6050_Read@T& (0+255),b
  1651  002D42  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1652  002D44  6F61               	movwf	(MPU6050_Read@T+1)& (0+255),b
  1653  002D46                     
  1654                           ; BSR set to: 1
  1655  002D46  0E00               	movlw	0
  1656  002D48  EC84  F02D         	call	_I2C_Read
  1657  002D4C  0101               	movlb	1	; () banked
  1658  002D4E  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1659  002D50  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1660  002D52  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1661  002D54  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1662  002D56  0E00               	movlw	0
  1663  002D58  EC84  F02D         	call	_I2C_Read
  1664  002D5C  0101               	movlb	1	; () banked
  1665  002D5E  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1666  002D60  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1667  002D62  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1668  002D64  6F5A               	movwf	MPU6050_Read@Gx& (0+255),b
  1669  002D66  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1670  002D68  6F5B               	movwf	(MPU6050_Read@Gx+1)& (0+255),b
  1671  002D6A                     
  1672                           ; BSR set to: 1
  1673  002D6A  0E00               	movlw	0
  1674  002D6C  EC84  F02D         	call	_I2C_Read
  1675  002D70  0101               	movlb	1	; () banked
  1676  002D72  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1677  002D74  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1678  002D76  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1679  002D78  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1680  002D7A  0E00               	movlw	0
  1681  002D7C  EC84  F02D         	call	_I2C_Read
  1682  002D80  0101               	movlb	1	; () banked
  1683  002D82  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1684  002D84  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1685  002D86  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1686  002D88  6F5C               	movwf	MPU6050_Read@Gy& (0+255),b
  1687  002D8A  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1688  002D8C  6F5D               	movwf	(MPU6050_Read@Gy+1)& (0+255),b
  1689  002D8E                     
  1690                           ; BSR set to: 1
  1691  002D8E  0E00               	movlw	0
  1692  002D90  EC84  F02D         	call	_I2C_Read
  1693  002D94  0101               	movlb	1	; () banked
  1694  002D96  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1695  002D98  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1696  002D9A  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1697  002D9C  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1698  002D9E  0E01               	movlw	1
  1699  002DA0  EC84  F02D         	call	_I2C_Read
  1700  002DA4  0101               	movlb	1	; () banked
  1701  002DA6  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1702  002DA8  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1703  002DAA  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1704  002DAC  6F5E               	movwf	MPU6050_Read@Gz& (0+255),b
  1705  002DAE  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1706  002DB0  6F5F               	movwf	(MPU6050_Read@Gz+1)& (0+255),b
  1707  002DB2                     
  1708                           ; BSR set to: 1
  1709  002DB2  ECD6  F02E         	call	_I2C_Master_Stop	;wreg free
  1710  002DB6  C154  F014         	movff	MPU6050_Read@Ax,___xxtofl@val
  1711  002DBA  C155  F015         	movff	MPU6050_Read@Ax+1,___xxtofl@val+1
  1712  002DBE  0E00               	movlw	0
  1713  002DC0  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  1714  002DC2  0EFF               	movlw	-1
  1715  002DC4  6E16               	movwf	(___xxtofl@val+2)^0,c
  1716  002DC6  6E17               	movwf	(___xxtofl@val+3)^0,c
  1717  002DC8  0E01               	movlw	1
  1718  002DCA  EC2D  F023         	call	___xxtofl
  1719  002DCE  C014  F022         	movff	?___xxtofl,___fldiv@b
  1720  002DD2  C015  F023         	movff	?___xxtofl+1,___fldiv@b+1
  1721  002DD6  C016  F024         	movff	?___xxtofl+2,___fldiv@b+2
  1722  002DDA  C017  F025         	movff	?___xxtofl+3,___fldiv@b+3
  1723  002DDE  0E00               	movlw	0
  1724  002DE0  6E26               	movwf	___fldiv@a^0,c
  1725  002DE2  0E00               	movlw	0
  1726  002DE4  6E27               	movwf	(___fldiv@a+1)^0,c
  1727  002DE6  0E80               	movlw	128
  1728  002DE8  6E28               	movwf	(___fldiv@a+2)^0,c
  1729  002DEA  0E46               	movlw	70
  1730  002DEC  6E29               	movwf	(___fldiv@a+3)^0,c
  1731  002DEE  EC54  F020         	call	___fldiv	;wreg free
  1732  002DF2  C022  F14C         	movff	?___fldiv,MPU6050_Read@AX
  1733  002DF6  C023  F14D         	movff	?___fldiv+1,MPU6050_Read@AX+1
  1734  002DFA  C024  F14E         	movff	?___fldiv+2,MPU6050_Read@AX+2
  1735  002DFE  C025  F14F         	movff	?___fldiv+3,MPU6050_Read@AX+3
  1736  002E02  C156  F014         	movff	MPU6050_Read@Ay,___xxtofl@val
  1737  002E06  C157  F015         	movff	MPU6050_Read@Ay+1,___xxtofl@val+1
  1738  002E0A  0E00               	movlw	0
  1739  002E0C  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  1740  002E0E  0EFF               	movlw	-1
  1741  002E10  6E16               	movwf	(___xxtofl@val+2)^0,c
  1742  002E12  6E17               	movwf	(___xxtofl@val+3)^0,c
  1743  002E14  0E01               	movlw	1
  1744  002E16  EC2D  F023         	call	___xxtofl
  1745  002E1A  C014  F022         	movff	?___xxtofl,___fldiv@b
  1746  002E1E  C015  F023         	movff	?___xxtofl+1,___fldiv@b+1
  1747  002E22  C016  F024         	movff	?___xxtofl+2,___fldiv@b+2
  1748  002E26  C017  F025         	movff	?___xxtofl+3,___fldiv@b+3
  1749  002E2A  0E00               	movlw	0
  1750  002E2C  6E26               	movwf	___fldiv@a^0,c
  1751  002E2E  0E00               	movlw	0
  1752  002E30  6E27               	movwf	(___fldiv@a+1)^0,c
  1753  002E32  0E80               	movlw	128
  1754  002E34  6E28               	movwf	(___fldiv@a+2)^0,c
  1755  002E36  0E46               	movlw	70
  1756  002E38  6E29               	movwf	(___fldiv@a+3)^0,c
  1757  002E3A  EC54  F020         	call	___fldiv	;wreg free
  1758  002E3E  C022  F150         	movff	?___fldiv,MPU6050_Read@AY
  1759  002E42  C023  F151         	movff	?___fldiv+1,MPU6050_Read@AY+1
  1760  002E46  C024  F152         	movff	?___fldiv+2,MPU6050_Read@AY+2
  1761  002E4A  C025  F153         	movff	?___fldiv+3,MPU6050_Read@AY+3
  1762  002E4E  C158  F014         	movff	MPU6050_Read@Az,___xxtofl@val
  1763  002E52  C159  F015         	movff	MPU6050_Read@Az+1,___xxtofl@val+1
  1764  002E56  0E00               	movlw	0
  1765  002E58  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  1766  002E5A  0EFF               	movlw	-1
  1767  002E5C  6E16               	movwf	(___xxtofl@val+2)^0,c
  1768  002E5E  6E17               	movwf	(___xxtofl@val+3)^0,c
  1769  002E60  0E01               	movlw	1
  1770  002E62  EC2D  F023         	call	___xxtofl
  1771  002E66  C014  F022         	movff	?___xxtofl,___fldiv@b
  1772  002E6A  C015  F023         	movff	?___xxtofl+1,___fldiv@b+1
  1773  002E6E  C016  F024         	movff	?___xxtofl+2,___fldiv@b+2
  1774  002E72  C017  F025         	movff	?___xxtofl+3,___fldiv@b+3
  1775  002E76  0E00               	movlw	0
  1776  002E78  6E26               	movwf	___fldiv@a^0,c
  1777  002E7A  0E00               	movlw	0
  1778  002E7C  6E27               	movwf	(___fldiv@a+1)^0,c
  1779  002E7E  0E80               	movlw	128
  1780  002E80  6E28               	movwf	(___fldiv@a+2)^0,c
  1781  002E82  0E46               	movlw	70
  1782  002E84  6E29               	movwf	(___fldiv@a+3)^0,c
  1783  002E86  EC54  F020         	call	___fldiv	;wreg free
  1784  002E8A  C022  F16A         	movff	?___fldiv,MPU6050_Read@AZ
  1785  002E8E  C023  F16B         	movff	?___fldiv+1,MPU6050_Read@AZ+1
  1786  002E92  C024  F16C         	movff	?___fldiv+2,MPU6050_Read@AZ+2
  1787  002E96  C025  F16D         	movff	?___fldiv+3,MPU6050_Read@AZ+3
  1788  002E9A  C15A  F014         	movff	MPU6050_Read@Gx,___xxtofl@val
  1789  002E9E  C15B  F015         	movff	MPU6050_Read@Gx+1,___xxtofl@val+1
  1790  002EA2  0E00               	movlw	0
  1791  002EA4  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  1792  002EA6  0EFF               	movlw	-1
  1793  002EA8  6E16               	movwf	(___xxtofl@val+2)^0,c
  1794  002EAA  6E17               	movwf	(___xxtofl@val+3)^0,c
  1795  002EAC  0E01               	movlw	1
  1796  002EAE  EC2D  F023         	call	___xxtofl
  1797  002EB2  C014  F022         	movff	?___xxtofl,___fldiv@b
  1798  002EB6  C015  F023         	movff	?___xxtofl+1,___fldiv@b+1
  1799  002EBA  C016  F024         	movff	?___xxtofl+2,___fldiv@b+2
  1800  002EBE  C017  F025         	movff	?___xxtofl+3,___fldiv@b+3
  1801  002EC2  0E00               	movlw	0
  1802  002EC4  6E26               	movwf	___fldiv@a^0,c
  1803  002EC6  0E00               	movlw	0
  1804  002EC8  6E27               	movwf	(___fldiv@a+1)^0,c
  1805  002ECA  0E03               	movlw	3
  1806  002ECC  6E28               	movwf	(___fldiv@a+2)^0,c
  1807  002ECE  0E43               	movlw	67
  1808  002ED0  6E29               	movwf	(___fldiv@a+3)^0,c
  1809  002ED2  EC54  F020         	call	___fldiv	;wreg free
  1810  002ED6  C15C  F014         	movff	MPU6050_Read@Gy,___xxtofl@val
  1811  002EDA  C15D  F015         	movff	MPU6050_Read@Gy+1,___xxtofl@val+1
  1812  002EDE  0E00               	movlw	0
  1813  002EE0  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  1814  002EE2  0EFF               	movlw	-1
  1815  002EE4  6E16               	movwf	(___xxtofl@val+2)^0,c
  1816  002EE6  6E17               	movwf	(___xxtofl@val+3)^0,c
  1817  002EE8  0E01               	movlw	1
  1818  002EEA  EC2D  F023         	call	___xxtofl
  1819  002EEE  C014  F022         	movff	?___xxtofl,___fldiv@b
  1820  002EF2  C015  F023         	movff	?___xxtofl+1,___fldiv@b+1
  1821  002EF6  C016  F024         	movff	?___xxtofl+2,___fldiv@b+2
  1822  002EFA  C017  F025         	movff	?___xxtofl+3,___fldiv@b+3
  1823  002EFE  0E00               	movlw	0
  1824  002F00  6E26               	movwf	___fldiv@a^0,c
  1825  002F02  0E00               	movlw	0
  1826  002F04  6E27               	movwf	(___fldiv@a+1)^0,c
  1827  002F06  0E03               	movlw	3
  1828  002F08  6E28               	movwf	(___fldiv@a+2)^0,c
  1829  002F0A  0E43               	movlw	67
  1830  002F0C  6E29               	movwf	(___fldiv@a+3)^0,c
  1831  002F0E  EC54  F020         	call	___fldiv	;wreg free
  1832  002F12  C15E  F014         	movff	MPU6050_Read@Gz,___xxtofl@val
  1833  002F16  C15F  F015         	movff	MPU6050_Read@Gz+1,___xxtofl@val+1
  1834  002F1A  0E00               	movlw	0
  1835  002F1C  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  1836  002F1E  0EFF               	movlw	-1
  1837  002F20  6E16               	movwf	(___xxtofl@val+2)^0,c
  1838  002F22  6E17               	movwf	(___xxtofl@val+3)^0,c
  1839  002F24  0E01               	movlw	1
  1840  002F26  EC2D  F023         	call	___xxtofl
  1841  002F2A  C014  F022         	movff	?___xxtofl,___fldiv@b
  1842  002F2E  C015  F023         	movff	?___xxtofl+1,___fldiv@b+1
  1843  002F32  C016  F024         	movff	?___xxtofl+2,___fldiv@b+2
  1844  002F36  C017  F025         	movff	?___xxtofl+3,___fldiv@b+3
  1845  002F3A  0E00               	movlw	0
  1846  002F3C  6E26               	movwf	___fldiv@a^0,c
  1847  002F3E  0E00               	movlw	0
  1848  002F40  6E27               	movwf	(___fldiv@a+1)^0,c
  1849  002F42  0E03               	movlw	3
  1850  002F44  6E28               	movwf	(___fldiv@a+2)^0,c
  1851  002F46  0E43               	movlw	67
  1852  002F48  6E29               	movwf	(___fldiv@a+3)^0,c
  1853  002F4A  EC54  F020         	call	___fldiv	;wreg free
  1854  002F4E  0E00               	movlw	0
  1855  002F50  6E26               	movwf	___fldiv@a^0,c
  1856  002F52  0E00               	movlw	0
  1857  002F54  6E27               	movwf	(___fldiv@a+1)^0,c
  1858  002F56  0EAA               	movlw	170
  1859  002F58  6E28               	movwf	(___fldiv@a+2)^0,c
  1860  002F5A  0E43               	movlw	67
  1861  002F5C  6E29               	movwf	(___fldiv@a+3)^0,c
  1862  002F5E  C160  F014         	movff	MPU6050_Read@T,___xxtofl@val
  1863  002F62  C161  F015         	movff	MPU6050_Read@T+1,___xxtofl@val+1
  1864  002F66  0E00               	movlw	0
  1865  002F68  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  1866  002F6A  0EFF               	movlw	-1
  1867  002F6C  6E16               	movwf	(___xxtofl@val+2)^0,c
  1868  002F6E  6E17               	movwf	(___xxtofl@val+3)^0,c
  1869  002F70  0E01               	movlw	1
  1870  002F72  EC2D  F023         	call	___xxtofl
  1871  002F76  C014  F022         	movff	?___xxtofl,___fldiv@b
  1872  002F7A  C015  F023         	movff	?___xxtofl+1,___fldiv@b+1
  1873  002F7E  C016  F024         	movff	?___xxtofl+2,___fldiv@b+2
  1874  002F82  C017  F025         	movff	?___xxtofl+3,___fldiv@b+3
  1875  002F86  EC54  F020         	call	___fldiv	;wreg free
  1876  002F8A  C022  F082         	movff	?___fldiv,___fladd@b
  1877  002F8E  C023  F083         	movff	?___fldiv+1,___fladd@b+1
  1878  002F92  C024  F084         	movff	?___fldiv+2,___fladd@b+2
  1879  002F96  C025  F085         	movff	?___fldiv+3,___fladd@b+3
  1880  002F9A  0EB8               	movlw	184
  1881  002F9C  0100               	movlb	0	; () banked
  1882  002F9E  6F86               	movwf	___fladd@a& (0+255),b
  1883  002FA0  0E1E               	movlw	30
  1884  002FA2  6F87               	movwf	(___fladd@a+1)& (0+255),b
  1885  002FA4  0E12               	movlw	18
  1886  002FA6  6F88               	movwf	(___fladd@a+2)& (0+255),b
  1887  002FA8  0E42               	movlw	66
  1888  002FAA  6F89               	movwf	(___fladd@a+3)& (0+255),b
  1889  002FAC  EC8F  F019         	call	___fladd	;wreg free
  1890  002FB0                     
  1891                           ;Le_Jason_Project.c: 477:       accAngleX=(-atan2f(AX/9.8,AZ/9.8)/2/3.141592654*360)+1.9
      +                          ;
  1892  002FB0  0ECD               	movlw	205
  1893  002FB2  6E26               	movwf	___fldiv@a^0,c
  1894  002FB4  0ECC               	movlw	204
  1895  002FB6  6E27               	movwf	(___fldiv@a+1)^0,c
  1896  002FB8  0E1C               	movlw	28
  1897  002FBA  6E28               	movwf	(___fldiv@a+2)^0,c
  1898  002FBC  0E41               	movlw	65
  1899  002FBE  6E29               	movwf	(___fldiv@a+3)^0,c
  1900  002FC0  C16A  F022         	movff	MPU6050_Read@AZ,___fldiv@b
  1901  002FC4  C16B  F023         	movff	MPU6050_Read@AZ+1,___fldiv@b+1
  1902  002FC8  C16C  F024         	movff	MPU6050_Read@AZ+2,___fldiv@b+2
  1903  002FCC  C16D  F025         	movff	MPU6050_Read@AZ+3,___fldiv@b+3
  1904  002FD0  EC54  F020         	call	___fldiv	;wreg free
  1905  002FD4  C022  F16E         	movff	?___fldiv,_MPU6050_Read$2603
  1906  002FD8  C023  F16F         	movff	?___fldiv+1,_MPU6050_Read$2603+1
  1907  002FDC  C024  F170         	movff	?___fldiv+2,_MPU6050_Read$2603+2
  1908  002FE0  C025  F171         	movff	?___fldiv+3,_MPU6050_Read$2603+3
  1909  002FE4                     
  1910                           ;Le_Jason_Project.c: 477:       accAngleX=(-atan2f(AX/9.8,AZ/9.8)/2/3.141592654*360)+1.9
      +                          ;
  1911  002FE4  0ECD               	movlw	205
  1912  002FE6  6E26               	movwf	___fldiv@a^0,c
  1913  002FE8  0ECC               	movlw	204
  1914  002FEA  6E27               	movwf	(___fldiv@a+1)^0,c
  1915  002FEC  0E1C               	movlw	28
  1916  002FEE  6E28               	movwf	(___fldiv@a+2)^0,c
  1917  002FF0  0E41               	movlw	65
  1918  002FF2  6E29               	movwf	(___fldiv@a+3)^0,c
  1919  002FF4  C14C  F022         	movff	MPU6050_Read@AX,___fldiv@b
  1920  002FF8  C14D  F023         	movff	MPU6050_Read@AX+1,___fldiv@b+1
  1921  002FFC  C14E  F024         	movff	MPU6050_Read@AX+2,___fldiv@b+2
  1922  003000  C14F  F025         	movff	MPU6050_Read@AX+3,___fldiv@b+3
  1923  003004  EC54  F020         	call	___fldiv	;wreg free
  1924  003008  C022  F172         	movff	?___fldiv,_MPU6050_Read$2604
  1925  00300C  C023  F173         	movff	?___fldiv+1,_MPU6050_Read$2604+1
  1926  003010  C024  F174         	movff	?___fldiv+2,_MPU6050_Read$2604+2
  1927  003014  C025  F175         	movff	?___fldiv+3,_MPU6050_Read$2604+3
  1928  003018                     
  1929                           ;Le_Jason_Project.c: 477:       accAngleX=(-atan2f(AX/9.8,AZ/9.8)/2/3.141592654*360)+1.9
      +                          ;
  1930  003018  C16E  F0D8         	movff	_MPU6050_Read$2603,atan2f@x
  1931  00301C  C16F  F0D9         	movff	_MPU6050_Read$2603+1,atan2f@x+1
  1932  003020  C170  F0DA         	movff	_MPU6050_Read$2603+2,atan2f@x+2
  1933  003024  C171  F0DB         	movff	_MPU6050_Read$2603+3,atan2f@x+3
  1934  003028  C172  F0D4         	movff	_MPU6050_Read$2604,atan2f@y
  1935  00302C  C173  F0D5         	movff	_MPU6050_Read$2604+1,atan2f@y+1
  1936  003030  C174  F0D6         	movff	_MPU6050_Read$2604+2,atan2f@y+2
  1937  003034  C175  F0D7         	movff	_MPU6050_Read$2604+3,atan2f@y+3
  1938  003038  EC99  F012         	call	_atan2f	;wreg free
  1939  00303C  C0D4  F176         	movff	?_atan2f,_MPU6050_Read$2605
  1940  003040  C0D5  F177         	movff	?_atan2f+1,_MPU6050_Read$2605+1
  1941  003044  C0D6  F178         	movff	?_atan2f+2,_MPU6050_Read$2605+2
  1942  003048  C0D7  F179         	movff	?_atan2f+3,_MPU6050_Read$2605+3
  1943  00304C                     
  1944                           ;Le_Jason_Project.c: 477:       accAngleX=(-atan2f(AX/9.8,AZ/9.8)/2/3.141592654*360)+1.9
      +                          ;
  1945  00304C  0E00               	movlw	0
  1946  00304E  6E26               	movwf	___fldiv@a^0,c
  1947  003050  0E00               	movlw	0
  1948  003052  6E27               	movwf	(___fldiv@a+1)^0,c
  1949  003054  0E00               	movlw	0
  1950  003056  6E28               	movwf	(___fldiv@a+2)^0,c
  1951  003058  0E40               	movlw	64
  1952  00305A  6E29               	movwf	(___fldiv@a+3)^0,c
  1953  00305C  C176  F02E         	movff	_MPU6050_Read$2605,___flneg@f1
  1954  003060  C177  F02F         	movff	_MPU6050_Read$2605+1,___flneg@f1+1
  1955  003064  C178  F030         	movff	_MPU6050_Read$2605+2,___flneg@f1+2
  1956  003068  C179  F031         	movff	_MPU6050_Read$2605+3,___flneg@f1+3
  1957  00306C  EC21  F02E         	call	___flneg	;wreg free
  1958  003070  C02E  F022         	movff	?___flneg,___fldiv@b
  1959  003074  C02F  F023         	movff	?___flneg+1,___fldiv@b+1
  1960  003078  C030  F024         	movff	?___flneg+2,___fldiv@b+2
  1961  00307C  C031  F025         	movff	?___flneg+3,___fldiv@b+3
  1962  003080  EC54  F020         	call	___fldiv	;wreg free
  1963  003084  C022  F17A         	movff	?___fldiv,_MPU6050_Read$2606
  1964  003088  C023  F17B         	movff	?___fldiv+1,_MPU6050_Read$2606+1
  1965  00308C  C024  F17C         	movff	?___fldiv+2,_MPU6050_Read$2606+2
  1966  003090  C025  F17D         	movff	?___fldiv+3,_MPU6050_Read$2606+3
  1967  003094                     
  1968                           ;Le_Jason_Project.c: 477:       accAngleX=(-atan2f(AX/9.8,AZ/9.8)/2/3.141592654*360)+1.9
      +                          ;
  1969  003094  0E00               	movlw	0
  1970  003096  0100               	movlb	0	; () banked
  1971  003098  6F71               	movwf	___flmul@a& (0+255),b
  1972  00309A  0E00               	movlw	0
  1973  00309C  6F72               	movwf	(___flmul@a+1)& (0+255),b
  1974  00309E  0EB4               	movlw	180
  1975  0030A0  6F73               	movwf	(___flmul@a+2)& (0+255),b
  1976  0030A2  0E43               	movlw	67
  1977  0030A4  6F74               	movwf	(___flmul@a+3)& (0+255),b
  1978  0030A6  0EDB               	movlw	219
  1979  0030A8  6E26               	movwf	___fldiv@a^0,c
  1980  0030AA  0E0F               	movlw	15
  1981  0030AC  6E27               	movwf	(___fldiv@a+1)^0,c
  1982  0030AE  0E49               	movlw	73
  1983  0030B0  6E28               	movwf	(___fldiv@a+2)^0,c
  1984  0030B2  0E40               	movlw	64
  1985  0030B4  6E29               	movwf	(___fldiv@a+3)^0,c
  1986  0030B6  C17A  F022         	movff	_MPU6050_Read$2606,___fldiv@b
  1987  0030BA  C17B  F023         	movff	_MPU6050_Read$2606+1,___fldiv@b+1
  1988  0030BE  C17C  F024         	movff	_MPU6050_Read$2606+2,___fldiv@b+2
  1989  0030C2  C17D  F025         	movff	_MPU6050_Read$2606+3,___fldiv@b+3
  1990  0030C6  EC54  F020         	call	___fldiv	;wreg free
  1991  0030CA  C022  F06D         	movff	?___fldiv,___flmul@b
  1992  0030CE  C023  F06E         	movff	?___fldiv+1,___flmul@b+1
  1993  0030D2  C024  F06F         	movff	?___fldiv+2,___flmul@b+2
  1994  0030D6  C025  F070         	movff	?___fldiv+3,___flmul@b+3
  1995  0030DA  EC3E  F01E         	call	___flmul	;wreg free
  1996  0030DE  C06D  F082         	movff	?___flmul,___fladd@b
  1997  0030E2  C06E  F083         	movff	?___flmul+1,___fladd@b+1
  1998  0030E6  C06F  F084         	movff	?___flmul+2,___fladd@b+2
  1999  0030EA  C070  F085         	movff	?___flmul+3,___fladd@b+3
  2000  0030EE  0E33               	movlw	51
  2001  0030F0  0100               	movlb	0	; () banked
  2002  0030F2  6F86               	movwf	___fladd@a& (0+255),b
  2003  0030F4  0E33               	movlw	51
  2004  0030F6  6F87               	movwf	(___fladd@a+1)& (0+255),b
  2005  0030F8  0EF3               	movlw	243
  2006  0030FA  6F88               	movwf	(___fladd@a+2)& (0+255),b
  2007  0030FC  0E3F               	movlw	63
  2008  0030FE  6F89               	movwf	(___fladd@a+3)& (0+255),b
  2009  003100  EC8F  F019         	call	___fladd	;wreg free
  2010  003104  C082  F162         	movff	?___fladd,MPU6050_Read@accAngleX
  2011  003108  C083  F163         	movff	?___fladd+1,MPU6050_Read@accAngleX+1
  2012  00310C  C084  F164         	movff	?___fladd+2,MPU6050_Read@accAngleX+2
  2013  003110  C085  F165         	movff	?___fladd+3,MPU6050_Read@accAngleX+3
  2014  003114                     
  2015                           ;Le_Jason_Project.c: 479:      accAngleY = (-atan2f(AY/9.8,AZ/9.8)/2/3.141592654*360)-1.
      +                          9;
  2016  003114  0ECD               	movlw	205
  2017  003116  6E26               	movwf	___fldiv@a^0,c
  2018  003118  0ECC               	movlw	204
  2019  00311A  6E27               	movwf	(___fldiv@a+1)^0,c
  2020  00311C  0E1C               	movlw	28
  2021  00311E  6E28               	movwf	(___fldiv@a+2)^0,c
  2022  003120  0E41               	movlw	65
  2023  003122  6E29               	movwf	(___fldiv@a+3)^0,c
  2024  003124  C16A  F022         	movff	MPU6050_Read@AZ,___fldiv@b
  2025  003128  C16B  F023         	movff	MPU6050_Read@AZ+1,___fldiv@b+1
  2026  00312C  C16C  F024         	movff	MPU6050_Read@AZ+2,___fldiv@b+2
  2027  003130  C16D  F025         	movff	MPU6050_Read@AZ+3,___fldiv@b+3
  2028  003134  EC54  F020         	call	___fldiv	;wreg free
  2029  003138  C022  F16E         	movff	?___fldiv,_MPU6050_Read$2603
  2030  00313C  C023  F16F         	movff	?___fldiv+1,_MPU6050_Read$2603+1
  2031  003140  C024  F170         	movff	?___fldiv+2,_MPU6050_Read$2603+2
  2032  003144  C025  F171         	movff	?___fldiv+3,_MPU6050_Read$2603+3
  2033  003148                     
  2034                           ;Le_Jason_Project.c: 479:      accAngleY = (-atan2f(AY/9.8,AZ/9.8)/2/3.141592654*360)-1.
      +                          9;
  2035  003148  0ECD               	movlw	205
  2036  00314A  6E26               	movwf	___fldiv@a^0,c
  2037  00314C  0ECC               	movlw	204
  2038  00314E  6E27               	movwf	(___fldiv@a+1)^0,c
  2039  003150  0E1C               	movlw	28
  2040  003152  6E28               	movwf	(___fldiv@a+2)^0,c
  2041  003154  0E41               	movlw	65
  2042  003156  6E29               	movwf	(___fldiv@a+3)^0,c
  2043  003158  C150  F022         	movff	MPU6050_Read@AY,___fldiv@b
  2044  00315C  C151  F023         	movff	MPU6050_Read@AY+1,___fldiv@b+1
  2045  003160  C152  F024         	movff	MPU6050_Read@AY+2,___fldiv@b+2
  2046  003164  C153  F025         	movff	MPU6050_Read@AY+3,___fldiv@b+3
  2047  003168  EC54  F020         	call	___fldiv	;wreg free
  2048  00316C  C022  F172         	movff	?___fldiv,_MPU6050_Read$2604
  2049  003170  C023  F173         	movff	?___fldiv+1,_MPU6050_Read$2604+1
  2050  003174  C024  F174         	movff	?___fldiv+2,_MPU6050_Read$2604+2
  2051  003178  C025  F175         	movff	?___fldiv+3,_MPU6050_Read$2604+3
  2052  00317C                     
  2053                           ;Le_Jason_Project.c: 479:      accAngleY = (-atan2f(AY/9.8,AZ/9.8)/2/3.141592654*360)-1.
      +                          9;
  2054  00317C  C16E  F0D8         	movff	_MPU6050_Read$2603,atan2f@x
  2055  003180  C16F  F0D9         	movff	_MPU6050_Read$2603+1,atan2f@x+1
  2056  003184  C170  F0DA         	movff	_MPU6050_Read$2603+2,atan2f@x+2
  2057  003188  C171  F0DB         	movff	_MPU6050_Read$2603+3,atan2f@x+3
  2058  00318C  C172  F0D4         	movff	_MPU6050_Read$2604,atan2f@y
  2059  003190  C173  F0D5         	movff	_MPU6050_Read$2604+1,atan2f@y+1
  2060  003194  C174  F0D6         	movff	_MPU6050_Read$2604+2,atan2f@y+2
  2061  003198  C175  F0D7         	movff	_MPU6050_Read$2604+3,atan2f@y+3
  2062  00319C  EC99  F012         	call	_atan2f	;wreg free
  2063  0031A0  C0D4  F176         	movff	?_atan2f,_MPU6050_Read$2605
  2064  0031A4  C0D5  F177         	movff	?_atan2f+1,_MPU6050_Read$2605+1
  2065  0031A8  C0D6  F178         	movff	?_atan2f+2,_MPU6050_Read$2605+2
  2066  0031AC  C0D7  F179         	movff	?_atan2f+3,_MPU6050_Read$2605+3
  2067  0031B0                     
  2068                           ;Le_Jason_Project.c: 479:      accAngleY = (-atan2f(AY/9.8,AZ/9.8)/2/3.141592654*360)-1.
      +                          9;
  2069  0031B0  0E00               	movlw	0
  2070  0031B2  6E26               	movwf	___fldiv@a^0,c
  2071  0031B4  0E00               	movlw	0
  2072  0031B6  6E27               	movwf	(___fldiv@a+1)^0,c
  2073  0031B8  0E00               	movlw	0
  2074  0031BA  6E28               	movwf	(___fldiv@a+2)^0,c
  2075  0031BC  0E40               	movlw	64
  2076  0031BE  6E29               	movwf	(___fldiv@a+3)^0,c
  2077  0031C0  C176  F02E         	movff	_MPU6050_Read$2605,___flneg@f1
  2078  0031C4  C177  F02F         	movff	_MPU6050_Read$2605+1,___flneg@f1+1
  2079  0031C8  C178  F030         	movff	_MPU6050_Read$2605+2,___flneg@f1+2
  2080  0031CC  C179  F031         	movff	_MPU6050_Read$2605+3,___flneg@f1+3
  2081  0031D0  EC21  F02E         	call	___flneg	;wreg free
  2082  0031D4  C02E  F022         	movff	?___flneg,___fldiv@b
  2083  0031D8  C02F  F023         	movff	?___flneg+1,___fldiv@b+1
  2084  0031DC  C030  F024         	movff	?___flneg+2,___fldiv@b+2
  2085  0031E0  C031  F025         	movff	?___flneg+3,___fldiv@b+3
  2086  0031E4  EC54  F020         	call	___fldiv	;wreg free
  2087  0031E8  C022  F17A         	movff	?___fldiv,_MPU6050_Read$2606
  2088  0031EC  C023  F17B         	movff	?___fldiv+1,_MPU6050_Read$2606+1
  2089  0031F0  C024  F17C         	movff	?___fldiv+2,_MPU6050_Read$2606+2
  2090  0031F4  C025  F17D         	movff	?___fldiv+3,_MPU6050_Read$2606+3
  2091  0031F8                     
  2092                           ;Le_Jason_Project.c: 479:      accAngleY = (-atan2f(AY/9.8,AZ/9.8)/2/3.141592654*360)-1.
      +                          9;
  2093  0031F8  0E00               	movlw	0
  2094  0031FA  0100               	movlb	0	; () banked
  2095  0031FC  6F71               	movwf	___flmul@a& (0+255),b
  2096  0031FE  0E00               	movlw	0
  2097  003200  6F72               	movwf	(___flmul@a+1)& (0+255),b
  2098  003202  0EB4               	movlw	180
  2099  003204  6F73               	movwf	(___flmul@a+2)& (0+255),b
  2100  003206  0E43               	movlw	67
  2101  003208  6F74               	movwf	(___flmul@a+3)& (0+255),b
  2102  00320A  0EDB               	movlw	219
  2103  00320C  6E26               	movwf	___fldiv@a^0,c
  2104  00320E  0E0F               	movlw	15
  2105  003210  6E27               	movwf	(___fldiv@a+1)^0,c
  2106  003212  0E49               	movlw	73
  2107  003214  6E28               	movwf	(___fldiv@a+2)^0,c
  2108  003216  0E40               	movlw	64
  2109  003218  6E29               	movwf	(___fldiv@a+3)^0,c
  2110  00321A  C17A  F022         	movff	_MPU6050_Read$2606,___fldiv@b
  2111  00321E  C17B  F023         	movff	_MPU6050_Read$2606+1,___fldiv@b+1
  2112  003222  C17C  F024         	movff	_MPU6050_Read$2606+2,___fldiv@b+2
  2113  003226  C17D  F025         	movff	_MPU6050_Read$2606+3,___fldiv@b+3
  2114  00322A  EC54  F020         	call	___fldiv	;wreg free
  2115  00322E  C022  F06D         	movff	?___fldiv,___flmul@b
  2116  003232  C023  F06E         	movff	?___fldiv+1,___flmul@b+1
  2117  003236  C024  F06F         	movff	?___fldiv+2,___flmul@b+2
  2118  00323A  C025  F070         	movff	?___fldiv+3,___flmul@b+3
  2119  00323E  EC3E  F01E         	call	___flmul	;wreg free
  2120  003242  C06D  F082         	movff	?___flmul,___fladd@b
  2121  003246  C06E  F083         	movff	?___flmul+1,___fladd@b+1
  2122  00324A  C06F  F084         	movff	?___flmul+2,___fladd@b+2
  2123  00324E  C070  F085         	movff	?___flmul+3,___fladd@b+3
  2124  003252  0E33               	movlw	51
  2125  003254  0100               	movlb	0	; () banked
  2126  003256  6F86               	movwf	___fladd@a& (0+255),b
  2127  003258  0E33               	movlw	51
  2128  00325A  6F87               	movwf	(___fladd@a+1)& (0+255),b
  2129  00325C  0EF3               	movlw	243
  2130  00325E  6F88               	movwf	(___fladd@a+2)& (0+255),b
  2131  003260  0EBF               	movlw	191
  2132  003262  6F89               	movwf	(___fladd@a+3)& (0+255),b
  2133  003264  EC8F  F019         	call	___fladd	;wreg free
  2134  003268  C082  F166         	movff	?___fladd,MPU6050_Read@accAngleY
  2135  00326C  C083  F167         	movff	?___fladd+1,MPU6050_Read@accAngleY+1
  2136  003270  C084  F168         	movff	?___fladd+2,MPU6050_Read@accAngleY+2
  2137  003274  C085  F169         	movff	?___fladd+3,MPU6050_Read@accAngleY+3
  2138  003278                     
  2139                           ;Le_Jason_Project.c: 486:     sprintf(buffer," accAngleX = %.2f \t",accAngleX);
  2140  003278  0E24               	movlw	low MPU6050_Read@buffer
  2141  00327A  0101               	movlb	1	; () banked
  2142  00327C  6F00               	movwf	sprintf@s& (0+255),b
  2143  00327E  0E01               	movlw	high MPU6050_Read@buffer
  2144  003280  6F01               	movwf	(sprintf@s+1)& (0+255),b
  2145  003282  0E52               	movlw	low STR_1
  2146  003284  6F02               	movwf	sprintf@fmt& (0+255),b
  2147  003286  0E10               	movlw	high STR_1
  2148  003288  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2149  00328A  C162  F104         	movff	MPU6050_Read@accAngleX,?_sprintf+4
  2150  00328E  C163  F105         	movff	MPU6050_Read@accAngleX+1,?_sprintf+5
  2151  003292  C164  F106         	movff	MPU6050_Read@accAngleX+2,?_sprintf+6
  2152  003296  C165  F107         	movff	MPU6050_Read@accAngleX+3,?_sprintf+7
  2153  00329A  EC0D  F02D         	call	_sprintf	;wreg free
  2154  00329E                     
  2155                           ;Le_Jason_Project.c: 487:     UART_Write_String(buffer);
  2156  00329E  0E24               	movlw	low MPU6050_Read@buffer
  2157  0032A0  6E15               	movwf	UART_Write_String@buf^0,c
  2158  0032A2  0E01               	movlw	high MPU6050_Read@buffer
  2159  0032A4  6E16               	movwf	(UART_Write_String@buf+1)^0,c
  2160  0032A6  ECC9  F02D         	call	_UART_Write_String	;wreg free
  2161  0032AA                     
  2162                           ;Le_Jason_Project.c: 488:     sprintf(buffer," accAngleY = %.2f \r\n",accAngleY);
  2163  0032AA  0E24               	movlw	low MPU6050_Read@buffer
  2164  0032AC  0101               	movlb	1	; () banked
  2165  0032AE  6F00               	movwf	sprintf@s& (0+255),b
  2166  0032B0  0E01               	movlw	high MPU6050_Read@buffer
  2167  0032B2  6F01               	movwf	(sprintf@s+1)& (0+255),b
  2168  0032B4  0E3D               	movlw	low STR_2
  2169  0032B6  6F02               	movwf	sprintf@fmt& (0+255),b
  2170  0032B8  0E10               	movlw	high STR_2
  2171  0032BA  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2172  0032BC  C166  F104         	movff	MPU6050_Read@accAngleY,?_sprintf+4
  2173  0032C0  C167  F105         	movff	MPU6050_Read@accAngleY+1,?_sprintf+5
  2174  0032C4  C168  F106         	movff	MPU6050_Read@accAngleY+2,?_sprintf+6
  2175  0032C8  C169  F107         	movff	MPU6050_Read@accAngleY+3,?_sprintf+7
  2176  0032CC  EC0D  F02D         	call	_sprintf	;wreg free
  2177  0032D0                     
  2178                           ;Le_Jason_Project.c: 489:     UART_Write_String(buffer);
  2179  0032D0  0E24               	movlw	low MPU6050_Read@buffer
  2180  0032D2  6E15               	movwf	UART_Write_String@buf^0,c
  2181  0032D4  0E01               	movlw	high MPU6050_Read@buffer
  2182  0032D6  6E16               	movwf	(UART_Write_String@buf+1)^0,c
  2183  0032D8  ECC9  F02D         	call	_UART_Write_String	;wreg free
  2184  0032DC                     
  2185                           ;Le_Jason_Project.c: 491:     Servo1(accAngleX);
  2186  0032DC  C162  F014         	movff	MPU6050_Read@accAngleX,___fltol@f1
  2187  0032E0  C163  F015         	movff	MPU6050_Read@accAngleX+1,___fltol@f1+1
  2188  0032E4  C164  F016         	movff	MPU6050_Read@accAngleX+2,___fltol@f1+2
  2189  0032E8  C165  F017         	movff	MPU6050_Read@accAngleX+3,___fltol@f1+3
  2190  0032EC  ECDD  F026         	call	___fltol	;wreg free
  2191  0032F0  C014  F035         	movff	?___fltol,Servo1@angle
  2192  0032F4  C015  F036         	movff	?___fltol+1,Servo1@angle+1
  2193  0032F8  ECFA  F02A         	call	_Servo1	;wreg free
  2194  0032FC                     
  2195                           ;Le_Jason_Project.c: 492:     Servo2(accAngleY);
  2196  0032FC  C166  F014         	movff	MPU6050_Read@accAngleY,___fltol@f1
  2197  003300  C167  F015         	movff	MPU6050_Read@accAngleY+1,___fltol@f1+1
  2198  003304  C168  F016         	movff	MPU6050_Read@accAngleY+2,___fltol@f1+2
  2199  003308  C169  F017         	movff	MPU6050_Read@accAngleY+3,___fltol@f1+3
  2200  00330C  ECDD  F026         	call	___fltol	;wreg free
  2201  003310  C014  F035         	movff	?___fltol,Servo2@angle
  2202  003314  C015  F036         	movff	?___fltol+1,Servo2@angle+1
  2203  003318  ECA8  F02A         	call	_Servo2	;wreg free
  2204  00331C  0012               	return		;funcret
  2205  00331E                     __end_of_MPU6050_Read:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _sprintf *****************
  2209 ;; Defined at:
  2210 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  s               2    0[BANK1 ] PTR unsigned char 
  2213 ;;		 -> MPU6050_Read@buffer(40), 
  2214 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2215 ;;		 -> STR_2(21), STR_1(20), 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  f               6   10[BANK1 ] struct _IO_FILE
  2218 ;;  ap              2    8[BANK1 ] PTR void [1]
  2219 ;;		 -> ?_sprintf(2), 
  2220 ;;  ret             2    0        int 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  2    0[BANK1 ] int 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2230 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;Total ram usage:       16 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 10
  2237 ;; This function calls:
  2238 ;;		_vfprintf
  2239 ;; This function is called by:
  2240 ;;		_MPU6050_Read
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text2
  2245  005A1A                     __ptext2:
  2246                           	callstack 0
  2247  005A1A                     _sprintf:
  2248                           	callstack 19
  2249  005A1A  0E04               	movlw	low (?_sprintf+4)
  2250  005A1C  0101               	movlb	1	; () banked
  2251  005A1E  6F08               	movwf	sprintf@ap& (0+255),b
  2252  005A20  0E01               	movlw	high (?_sprintf+4)
  2253  005A22  6F09               	movwf	(sprintf@ap+1)& (0+255),b
  2254  005A24  C100  F10A         	movff	sprintf@s,sprintf@f
  2255  005A28  C101  F10B         	movff	sprintf@s+1,sprintf@f+1
  2256  005A2C                     
  2257                           ; BSR set to: 1
  2258  005A2C  0E00               	movlw	0
  2259  005A2E  6F0D               	movwf	(sprintf@f+3)& (0+255),b
  2260  005A30  0E00               	movlw	0
  2261  005A32  6F0C               	movwf	(sprintf@f+2)& (0+255),b
  2262  005A34                     
  2263                           ; BSR set to: 1
  2264  005A34  0E00               	movlw	0
  2265  005A36  6F0F               	movwf	(sprintf@f+5)& (0+255),b
  2266  005A38  0E00               	movlw	0
  2267  005A3A  6F0E               	movwf	(sprintf@f+4)& (0+255),b
  2268  005A3C                     
  2269                           ; BSR set to: 1
  2270  005A3C  0E0A               	movlw	low sprintf@f
  2271  005A3E  0100               	movlb	0	; () banked
  2272  005A40  6FF4               	movwf	vfprintf@fp& (0+255),b
  2273  005A42  0E01               	movlw	high sprintf@f
  2274  005A44  6FF5               	movwf	(vfprintf@fp+1)& (0+255),b
  2275  005A46  C102  F0F6         	movff	sprintf@fmt,vfprintf@fmt
  2276  005A4A  C103  F0F7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2277  005A4E  0E08               	movlw	low sprintf@ap
  2278  005A50  6FF8               	movwf	vfprintf@ap& (0+255),b
  2279  005A52  0E01               	movlw	high sprintf@ap
  2280  005A54  6FF9               	movwf	(vfprintf@ap+1)& (0+255),b
  2281  005A56  ECE0  F02B         	call	_vfprintf	;wreg free
  2282  005A5A  0101               	movlb	1	; () banked
  2283  005A5C  510C               	movf	(sprintf@f+2)& (0+255),w,b
  2284  005A5E  2500               	addwf	sprintf@s& (0+255),w,b
  2285  005A60  6ED9               	movwf	fsr2l,c
  2286  005A62  510D               	movf	(sprintf@f+3)& (0+255),w,b
  2287  005A64  2101               	addwfc	(sprintf@s+1)& (0+255),w,b
  2288  005A66  6EDA               	movwf	fsr2h,c
  2289  005A68  0E00               	movlw	0
  2290  005A6A  6EDF               	movwf	indf2,c
  2291  005A6C                     
  2292                           ; BSR set to: 1
  2293  005A6C  0012               	return		;funcret
  2294  005A6E                     __end_of_sprintf:
  2295                           	callstack 0
  2296                           
  2297 ;; *************** function _vfprintf *****************
  2298 ;; Defined at:
  2299 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  fp              2  148[BANK0 ] PTR struct _IO_FILE
  2302 ;;		 -> sprintf@f(6), 
  2303 ;;  fmt             2  150[BANK0 ] PTR const unsigned char 
  2304 ;;		 -> STR_2(21), STR_1(20), 
  2305 ;;  ap              2  152[BANK0 ] PTR PTR void 
  2306 ;;		 -> sprintf@ap(2), 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  cfmt            2  154[BANK0 ] PTR unsigned char 
  2309 ;;		 -> STR_2(21), STR_1(20), 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  2  148[BANK0 ] int 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2319 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;Total ram usage:        8 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 9
  2326 ;; This function calls:
  2327 ;;		_vfpfcnvrt
  2328 ;; This function is called by:
  2329 ;;		_sprintf
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text3
  2334  0057C0                     __ptext3:
  2335                           	callstack 0
  2336  0057C0                     _vfprintf:
  2337                           	callstack 19
  2338  0057C0                     
  2339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2340  0057C0  C0F6  F0FA         	movff	vfprintf@fmt,vfprintf@cfmt
  2341  0057C4  C0F7  F0FB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2342  0057C8                     
  2343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2344  0057C8  0E00               	movlw	0
  2345  0057CA  0101               	movlb	1	; () banked
  2346  0057CC  6FA5               	movwf	(_nout+1)& (0+255),b
  2347  0057CE  0E00               	movlw	0
  2348  0057D0  6FA4               	movwf	_nout& (0+255),b
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2351  0057D2  EF02  F02C         	goto	l7670
  2352  0057D6                     l7668:
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2356  0057D6  C0F4  F0DE         	movff	vfprintf@fp,vfpfcnvrt@fp
  2357  0057DA  C0F5  F0DF         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2358  0057DE  0EFA               	movlw	low vfprintf@cfmt
  2359  0057E0  0100               	movlb	0	; () banked
  2360  0057E2  6FE0               	movwf	vfpfcnvrt@fmt& (0+255),b
  2361  0057E4  0E00               	movlw	high vfprintf@cfmt
  2362  0057E6  6FE1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2363  0057E8  C0F8  F0E2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2364  0057EC  C0F9  F0E3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2365  0057F0  ECF0  F01B         	call	_vfpfcnvrt	;wreg free
  2366  0057F4  0100               	movlb	0	; () banked
  2367  0057F6  51DE               	movf	?_vfpfcnvrt& (0+255),w,b
  2368  0057F8  0101               	movlb	1	; () banked
  2369  0057FA  27A4               	addwf	_nout& (0+255),f,b
  2370  0057FC  0100               	movlb	0	; () banked
  2371  0057FE  51DF               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2372  005800  0101               	movlb	1	; () banked
  2373  005802  23A5               	addwfc	(_nout+1)& (0+255),f,b
  2374  005804                     l7670:
  2375                           
  2376                           ; BSR set to: 1
  2377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2378  005804  C0FA  FFF6         	movff	vfprintf@cfmt,tblptrl
  2379  005808  C0FB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2380  00580C                     	if	0	;tblptru may be non-zero
  2381  00580C                     	endif
  2382  00580C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2383  00580C  0E00               	movlw	low (__mediumconst shr (0+16))
  2384  00580E  6EF8               	movwf	tblptru,c
  2385  005810                     	endif
  2386  005810  0008               	tblrd		*
  2387  005812  50F5               	movf	tablat,w,c
  2388  005814  0900               	iorlw	0
  2389  005816  A4D8               	btfss	status,2,c
  2390  005818  EF10  F02C         	goto	u8521
  2391  00581C  EF12  F02C         	goto	u8520
  2392  005820                     u8521:
  2393  005820  EFEB  F02B         	goto	l7668
  2394  005824                     u8520:
  2395  005824                     
  2396                           ; BSR set to: 1
  2397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2398  005824  C1A4  F0F4         	movff	_nout,?_vfprintf
  2399  005828  C1A5  F0F5         	movff	_nout+1,?_vfprintf+1
  2400  00582C                     
  2401                           ; BSR set to: 1
  2402  00582C  0012               	return		;funcret
  2403  00582E                     __end_of_vfprintf:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _vfpfcnvrt *****************
  2407 ;; Defined at:
  2408 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  fp              2  126[BANK0 ] PTR struct _IO_FILE
  2411 ;;		 -> sprintf@f(6), 
  2412 ;;  fmt             2  128[BANK0 ] PTR PTR unsigned char 
  2413 ;;		 -> vfprintf@cfmt(2), 
  2414 ;;  ap              2  130[BANK0 ] PTR PTR void 
  2415 ;;		 -> sprintf@ap(2), 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  llu             8    0        unsigned long long 
  2418 ;;  ll              8    0        long long 
  2419 ;;  f               4  140[BANK0 ] long long 
  2420 ;;  ct              3  144[BANK0 ] unsigned char [3]
  2421 ;;  vp              3    0        PTR void 
  2422 ;;  cp              3    0        PTR unsigned char 
  2423 ;;  i               2    0        int 
  2424 ;;  done            2    0        int 
  2425 ;;  c               1  147[BANK0 ] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  2  126[BANK0 ] int 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2435 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;Total ram usage:       22 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 8
  2442 ;; This function calls:
  2443 ;;		_atoi
  2444 ;;		_efgtoa
  2445 ;;		_fputc
  2446 ;;		_isdigit
  2447 ;;		_isupper
  2448 ;;		_strncmp
  2449 ;;		_tolower
  2450 ;; This function is called by:
  2451 ;;		_vfprintf
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text4
  2456  0037E0                     __ptext4:
  2457                           	callstack 0
  2458  0037E0                     _vfpfcnvrt:
  2459                           	callstack 19
  2460  0037E0                     
  2461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2462  0037E0  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2463  0037E4  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2464  0037E8  CFDE FFF6          	movff	postinc2,tblptrl
  2465  0037EC  CFDD FFF7          	movff	postdec2,tblptrh
  2466  0037F0                     	if	0	;tblptru may be non-zero
  2467  0037F0                     	endif
  2468  0037F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2469  0037F0  0E00               	movlw	low (__mediumconst shr (0+16))
  2470  0037F2  6EF8               	movwf	tblptru,c
  2471  0037F4                     	endif
  2472  0037F4  0008               	tblrd		*
  2473  0037F6  50F5               	movf	tablat,w,c
  2474  0037F8  0A25               	xorlw	37
  2475  0037FA  A4D8               	btfss	status,2,c
  2476  0037FC  EF02  F01C         	goto	u8231
  2477  003800  EF04  F01C         	goto	u8230
  2478  003804                     u8231:
  2479  003804  EF20  F01E         	goto	l7544
  2480  003808                     u8230:
  2481  003808                     
  2482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2483  003808  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2484  00380C  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2485  003810  2ADE               	incf	postinc2,f,c
  2486  003812  0E00               	movlw	0
  2487  003814  22DD               	addwfc	postdec2,f,c
  2488  003816                     
  2489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2490  003816  0E00               	movlw	0
  2491  003818  6E39               	movwf	(_width+1)^0,c
  2492  00381A  0E00               	movlw	0
  2493  00381C  6E38               	movwf	_width^0,c
  2494  00381E  C038  F03C         	movff	_width,_flags
  2495  003822  C039  F03D         	movff	_width+1,_flags+1
  2496  003826                     
  2497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2498  003826  683A               	setf	_prec^0,c
  2499  003828  683B               	setf	(_prec+1)^0,c
  2500  00382A                     
  2501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2502  00382A  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2503  00382E  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2504  003832  CFDE FFF6          	movff	postinc2,tblptrl
  2505  003836  CFDD FFF7          	movff	postdec2,tblptrh
  2506  00383A                     	if	0	;tblptru may be non-zero
  2507  00383A                     	endif
  2508  00383A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2509  00383A  0E00               	movlw	low (__mediumconst shr (0+16))
  2510  00383C  6EF8               	movwf	tblptru,c
  2511  00383E                     	endif
  2512  00383E  0008               	tblrd		*
  2513  003840  50F5               	movf	tablat,w,c
  2514  003842  0A2E               	xorlw	46
  2515  003844  A4D8               	btfss	status,2,c
  2516  003846  EF27  F01C         	goto	u8241
  2517  00384A  EF29  F01C         	goto	u8240
  2518  00384E                     u8241:
  2519  00384E  EFAB  F01C         	goto	l7490
  2520  003852                     u8240:
  2521  003852                     
  2522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2523  003852  0E00               	movlw	0
  2524  003854  6E3B               	movwf	(_prec+1)^0,c
  2525  003856  0E00               	movlw	0
  2526  003858  6E3A               	movwf	_prec^0,c
  2527  00385A                     
  2528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2529  00385A  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2530  00385E  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2531  003862  2ADE               	incf	postinc2,f,c
  2532  003864  0E00               	movlw	0
  2533  003866  22DD               	addwfc	postdec2,f,c
  2534  003868                     
  2535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2536  003868  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2537  00386C  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2538  003870  CFDE FFF6          	movff	postinc2,tblptrl
  2539  003874  CFDD FFF7          	movff	postdec2,tblptrh
  2540  003878                     	if	0	;tblptru may be non-zero
  2541  003878                     	endif
  2542  003878                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2543  003878  0E00               	movlw	low (__mediumconst shr (0+16))
  2544  00387A  6EF8               	movwf	tblptru,c
  2545  00387C                     	endif
  2546  00387C  0008               	tblrd		*
  2547  00387E  50F5               	movf	tablat,w,c
  2548  003880  0A2A               	xorlw	42
  2549  003882  A4D8               	btfss	status,2,c
  2550  003884  EF46  F01C         	goto	u8251
  2551  003888  EF48  F01C         	goto	u8250
  2552  00388C                     u8251:
  2553  00388C  EF65  F01C         	goto	l7480
  2554  003890                     u8250:
  2555  003890                     
  2556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2557  003890  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2558  003894  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2559  003898  2ADE               	incf	postinc2,f,c
  2560  00389A  0E00               	movlw	0
  2561  00389C  22DD               	addwfc	postdec2,f,c
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2564  00389E  C0E2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2565  0038A2  C0E3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2566  0038A6  CFDF F0E4          	movff	indf2,??_vfpfcnvrt
  2567  0038AA  0E02               	movlw	2
  2568  0038AC  26DE               	addwf	postinc2,f,c
  2569  0038AE  CFDF F0E5          	movff	indf2,??_vfpfcnvrt+1
  2570  0038B2  0E00               	movlw	0
  2571  0038B4  22DD               	addwfc	postdec2,f,c
  2572  0038B6  C0E4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2573  0038BA  C0E5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2574  0038BE  CFDE F03A          	movff	postinc2,_prec
  2575  0038C2  CFDD F03B          	movff	postdec2,_prec+1
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2578  0038C6  EFAB  F01C         	goto	l7490
  2579  0038CA                     l7480:
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2582  0038CA  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2583  0038CE  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2584  0038D2  CFDE F01B          	movff	postinc2,atoi@s
  2585  0038D6  CFDD F01C          	movff	postdec2,atoi@s+1
  2586  0038DA  EC07  F024         	call	_atoi	;wreg free
  2587  0038DE  C01B  F03A         	movff	?_atoi,_prec
  2588  0038E2  C01C  F03B         	movff	?_atoi+1,_prec+1
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2591  0038E6  EF7C  F01C         	goto	l7484
  2592  0038EA                     l7482:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2596  0038EA  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2597  0038EE  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2598  0038F2  2ADE               	incf	postinc2,f,c
  2599  0038F4  0E00               	movlw	0
  2600  0038F6  22DD               	addwfc	postdec2,f,c
  2601  0038F8                     l7484:
  2602  0038F8  0ED0               	movlw	208
  2603  0038FA  0100               	movlb	0	; () banked
  2604  0038FC  6FE4               	movwf	??_vfpfcnvrt& (0+255),b
  2605  0038FE  0EFF               	movlw	255
  2606  003900  6FE5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2607  003902  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2608  003906  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2609  00390A  CFDE FFF6          	movff	postinc2,tblptrl
  2610  00390E  CFDD FFF7          	movff	postdec2,tblptrh
  2611  003912                     	if	0	;tblptru may be non-zero
  2612  003912                     	endif
  2613  003912                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2614  003912  0E00               	movlw	low (__mediumconst shr (0+16))
  2615  003914  6EF8               	movwf	tblptru,c
  2616  003916                     	endif
  2617  003916  0008               	tblrd		*
  2618  003918  50F5               	movf	tablat,w,c
  2619  00391A  6FE6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2620  00391C  6BE7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2621  00391E  51E4               	movf	??_vfpfcnvrt& (0+255),w,b
  2622  003920  27E6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2623  003922  51E5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2624  003924  23E7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2625  003926  51E7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2626  003928  E10A               	bnz	u8260
  2627  00392A  0E0A               	movlw	10
  2628  00392C  5DE6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2629  00392E  A0D8               	btfss	status,0,c
  2630  003930  EF9C  F01C         	goto	u8261
  2631  003934  EF9F  F01C         	goto	u8260
  2632  003938                     u8261:
  2633  003938  0E01               	movlw	1
  2634  00393A  EFA0  F01C         	goto	u8270
  2635  00393E                     u8260:
  2636  00393E  0E00               	movlw	0
  2637  003940                     u8270:
  2638  003940  6FE8               	movwf	_vfpfcnvrt$2261& (0+255),b
  2639  003942  6BE9               	clrf	(_vfpfcnvrt$2261+1)& (0+255),b
  2640  003944                     
  2641                           ; BSR set to: 0
  2642  003944  51E8               	movf	_vfpfcnvrt$2261& (0+255),w,b
  2643  003946  11E9               	iorwf	(_vfpfcnvrt$2261+1)& (0+255),w,b
  2644  003948  A4D8               	btfss	status,2,c
  2645  00394A  EFA9  F01C         	goto	u8281
  2646  00394E  EFAB  F01C         	goto	u8280
  2647  003952                     u8281:
  2648  003952  EF75  F01C         	goto	l7482
  2649  003956                     u8280:
  2650  003956                     l7490:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2653  003956  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2654  00395A  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2655  00395E  CFDE FFF6          	movff	postinc2,tblptrl
  2656  003962  CFDD FFF7          	movff	postdec2,tblptrh
  2657  003966                     	if	0	;tblptru may be non-zero
  2658  003966                     	endif
  2659  003966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2660  003966  0E00               	movlw	low (__mediumconst shr (0+16))
  2661  003968  6EF8               	movwf	tblptru,c
  2662  00396A                     	endif
  2663  00396A  0008               	tblrd		*
  2664  00396C  50F5               	movf	tablat,w,c
  2665  00396E  6E1A               	movwf	tolower@c^0,c
  2666  003970  6A1B               	clrf	(tolower@c+1)^0,c
  2667  003972  ECAE  F02C         	call	_tolower	;wreg free
  2668  003976  501A               	movf	?_tolower^0,w,c
  2669  003978  0100               	movlb	0	; () banked
  2670  00397A  6FF0               	movwf	vfpfcnvrt@ct& (0+255),b
  2671  00397C                     
  2672                           ; BSR set to: 0
  2673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2674  00397C  51F0               	movf	vfpfcnvrt@ct& (0+255),w,b
  2675  00397E  B4D8               	btfsc	status,2,c
  2676  003980  EFC4  F01C         	goto	u8291
  2677  003984  EFC6  F01C         	goto	u8290
  2678  003988                     u8291:
  2679  003988  EF04  F01D         	goto	l7500
  2680  00398C                     u8290:
  2681  00398C                     
  2682                           ; BSR set to: 0
  2683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2684  00398C  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2685  003990  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2686  003994  CFDE F0E4          	movff	postinc2,??_vfpfcnvrt
  2687  003998  CFDD F0E5          	movff	postdec2,??_vfpfcnvrt+1
  2688  00399C  0E01               	movlw	1
  2689  00399E  27E4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2690  0039A0  0E00               	movlw	0
  2691  0039A2  23E5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2692  0039A4  C0E4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2693  0039A8  C0E5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2694  0039AC                     	if	0	;tblptru may be non-zero
  2695  0039AC                     	endif
  2696  0039AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2697  0039AC  0E00               	movlw	low (__mediumconst shr (0+16))
  2698  0039AE  6EF8               	movwf	tblptru,c
  2699  0039B0                     	endif
  2700  0039B0  0008               	tblrd		*
  2701  0039B2  50F5               	movf	tablat,w,c
  2702  0039B4  6E1A               	movwf	tolower@c^0,c
  2703  0039B6  6A1B               	clrf	(tolower@c+1)^0,c
  2704  0039B8  ECAE  F02C         	call	_tolower	;wreg free
  2705  0039BC  501A               	movf	?_tolower^0,w,c
  2706  0039BE  0100               	movlb	0	; () banked
  2707  0039C0  6FF1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2708  0039C2                     
  2709                           ; BSR set to: 0
  2710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2711  0039C2  51F1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2712  0039C4  B4D8               	btfsc	status,2,c
  2713  0039C6  EFE7  F01C         	goto	u8301
  2714  0039CA  EFE9  F01C         	goto	u8300
  2715  0039CE                     u8301:
  2716  0039CE  EF04  F01D         	goto	l7500
  2717  0039D2                     u8300:
  2718  0039D2                     
  2719                           ; BSR set to: 0
  2720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2721  0039D2  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2722  0039D6  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2723  0039DA  CFDE F0E4          	movff	postinc2,??_vfpfcnvrt
  2724  0039DE  CFDD F0E5          	movff	postdec2,??_vfpfcnvrt+1
  2725  0039E2  0E02               	movlw	2
  2726  0039E4  27E4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2727  0039E6  0E00               	movlw	0
  2728  0039E8  23E5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2729  0039EA  C0E4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2730  0039EE  C0E5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2731  0039F2                     	if	0	;tblptru may be non-zero
  2732  0039F2                     	endif
  2733  0039F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2734  0039F2  0E00               	movlw	low (__mediumconst shr (0+16))
  2735  0039F4  6EF8               	movwf	tblptru,c
  2736  0039F6                     	endif
  2737  0039F6  0008               	tblrd		*
  2738  0039F8  50F5               	movf	tablat,w,c
  2739  0039FA  6E1A               	movwf	tolower@c^0,c
  2740  0039FC  6A1B               	clrf	(tolower@c+1)^0,c
  2741  0039FE  ECAE  F02C         	call	_tolower	;wreg free
  2742  003A02  501A               	movf	?_tolower^0,w,c
  2743  003A04  0100               	movlb	0	; () banked
  2744  003A06  6FF2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2745  003A08                     l7500:
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2749  003A08  0E66               	movlw	102
  2750  003A0A  19F0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2751  003A0C  A4D8               	btfss	status,2,c
  2752  003A0E  EF0B  F01D         	goto	u8311
  2753  003A12  EF0D  F01D         	goto	u8310
  2754  003A16                     u8311:
  2755  003A16  EF4F  F01D         	goto	l7512
  2756  003A1A                     u8310:
  2757  003A1A                     
  2758                           ; BSR set to: 0
  2759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2760  003A1A  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2761  003A1E  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2762  003A22  CFDE FFF6          	movff	postinc2,tblptrl
  2763  003A26  CFDD FFF7          	movff	postdec2,tblptrh
  2764  003A2A                     	if	0	;tblptru may be non-zero
  2765  003A2A                     	endif
  2766  003A2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2767  003A2A  0E00               	movlw	low (__mediumconst shr (0+16))
  2768  003A2C  6EF8               	movwf	tblptru,c
  2769  003A2E                     	endif
  2770  003A2E  0008               	tblrd		*
  2771  003A30  CFF5 F0F3          	movff	tablat,vfpfcnvrt@c
  2772  003A34                     
  2773                           ; BSR set to: 0
  2774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2775  003A34  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2776  003A38  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2777  003A3C  2ADE               	incf	postinc2,f,c
  2778  003A3E  0E00               	movlw	0
  2779  003A40  22DD               	addwfc	postdec2,f,c
  2780  003A42                     
  2781                           ; BSR set to: 0
  2782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2783  003A42  C0E2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2784  003A46  C0E3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2785  003A4A  CFDF F0E4          	movff	indf2,??_vfpfcnvrt
  2786  003A4E  0E04               	movlw	4
  2787  003A50  26DE               	addwf	postinc2,f,c
  2788  003A52  CFDF F0E5          	movff	indf2,??_vfpfcnvrt+1
  2789  003A56  0E00               	movlw	0
  2790  003A58  22DD               	addwfc	postdec2,f,c
  2791  003A5A  C0E4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2792  003A5E  C0E5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2793  003A62  CFDE F0EC          	movff	postinc2,vfpfcnvrt@f
  2794  003A66  CFDE F0ED          	movff	postinc2,vfpfcnvrt@f+1
  2795  003A6A  CFDE F0EE          	movff	postinc2,vfpfcnvrt@f+2
  2796  003A6E  CFDE F0EF          	movff	postinc2,vfpfcnvrt@f+3
  2797  003A72                     l7508:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2801  003A72  C0DE  F09A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2802  003A76  C0DF  F09B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2803  003A7A  C0EC  F09C         	movff	vfpfcnvrt@f,efgtoa@f
  2804  003A7E  C0ED  F09D         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2805  003A82  C0EE  F09E         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2806  003A86  C0EF  F09F         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2807  003A8A  C0F3  F0A0         	movff	vfpfcnvrt@c,efgtoa@c
  2808  003A8E  EC3D  F008         	call	_efgtoa	;wreg free
  2809  003A92  C09A  F0DE         	movff	?_efgtoa,?_vfpfcnvrt
  2810  003A96  C09B  F0DF         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2811  003A9A  EF3D  F01E         	goto	l1261
  2812  003A9E                     l7512:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2816  003A9E  0EF0               	movlw	low vfpfcnvrt@ct
  2817  003AA0  6E14               	movwf	strncmp@_l^0,c
  2818  003AA2  0E00               	movlw	high vfpfcnvrt@ct
  2819  003AA4  6E15               	movwf	(strncmp@_l+1)^0,c
  2820  003AA6  0E76               	movlw	low STR_11
  2821  003AA8  6E16               	movwf	strncmp@_r^0,c
  2822  003AAA  0E10               	movlw	high STR_11
  2823  003AAC  6E17               	movwf	(strncmp@_r+1)^0,c
  2824  003AAE  0E00               	movlw	0
  2825  003AB0  6E19               	movwf	(strncmp@n+1)^0,c
  2826  003AB2  0E02               	movlw	2
  2827  003AB4  6E18               	movwf	strncmp@n^0,c
  2828  003AB6  EC62  F028         	call	_strncmp	;wreg free
  2829  003ABA  5014               	movf	?_strncmp^0,w,c
  2830  003ABC  1015               	iorwf	(?_strncmp+1)^0,w,c
  2831  003ABE  A4D8               	btfss	status,2,c
  2832  003AC0  EF64  F01D         	goto	u8321
  2833  003AC4  EF66  F01D         	goto	u8320
  2834  003AC8                     u8321:
  2835  003AC8  EFE6  F01D         	goto	l7528
  2836  003ACC                     u8320:
  2837  003ACC                     
  2838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2839  003ACC  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2840  003AD0  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2841  003AD4  CFDE F0E4          	movff	postinc2,??_vfpfcnvrt
  2842  003AD8  CFDD F0E5          	movff	postdec2,??_vfpfcnvrt+1
  2843  003ADC  0E01               	movlw	1
  2844  003ADE  0100               	movlb	0	; () banked
  2845  003AE0  27E4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2846  003AE2  0E00               	movlw	0
  2847  003AE4  23E5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2848  003AE6  C0E4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2849  003AEA  C0E5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2850  003AEE                     	if	0	;tblptru may be non-zero
  2851  003AEE                     	endif
  2852  003AEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2853  003AEE  0E00               	movlw	low (__mediumconst shr (0+16))
  2854  003AF0  6EF8               	movwf	tblptru,c
  2855  003AF2                     	endif
  2856  003AF2  0008               	tblrd		*
  2857  003AF4  CFF5 F0F3          	movff	tablat,vfpfcnvrt@c
  2858  003AF8  0EBF               	movlw	191
  2859  003AFA  6FE4               	movwf	??_vfpfcnvrt& (0+255),b
  2860  003AFC  0EFF               	movlw	255
  2861  003AFE  6FE5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2862  003B00  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2863  003B04  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2864  003B08  CFDE FFF6          	movff	postinc2,tblptrl
  2865  003B0C  CFDD FFF7          	movff	postdec2,tblptrh
  2866  003B10                     	if	0	;tblptru may be non-zero
  2867  003B10                     	endif
  2868  003B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2869  003B10  0E00               	movlw	low (__mediumconst shr (0+16))
  2870  003B12  6EF8               	movwf	tblptru,c
  2871  003B14                     	endif
  2872  003B14  0008               	tblrd		*
  2873  003B16  50F5               	movf	tablat,w,c
  2874  003B18  6FE6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2875  003B1A  6BE7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2876  003B1C  51E4               	movf	??_vfpfcnvrt& (0+255),w,b
  2877  003B1E  27E6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2878  003B20  51E5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2879  003B22  23E7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2880  003B24  51E7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2881  003B26  E10A               	bnz	u8330
  2882  003B28  0E1A               	movlw	26
  2883  003B2A  5DE6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2884  003B2C  A0D8               	btfss	status,0,c
  2885  003B2E  EF9B  F01D         	goto	u8331
  2886  003B32  EF9E  F01D         	goto	u8330
  2887  003B36                     u8331:
  2888  003B36  0E01               	movlw	1
  2889  003B38  EF9F  F01D         	goto	u8340
  2890  003B3C                     u8330:
  2891  003B3C  0E00               	movlw	0
  2892  003B3E                     u8340:
  2893  003B3E  6FEA               	movwf	_vfpfcnvrt$2265& (0+255),b
  2894  003B40  6BEB               	clrf	(_vfpfcnvrt$2265+1)& (0+255),b
  2895  003B42                     
  2896                           ; BSR set to: 0
  2897  003B42  51EA               	movf	_vfpfcnvrt$2265& (0+255),w,b
  2898  003B44  11EB               	iorwf	(_vfpfcnvrt$2265+1)& (0+255),w,b
  2899  003B46  B4D8               	btfsc	status,2,c
  2900  003B48  EFA8  F01D         	goto	u8351
  2901  003B4C  EFAA  F01D         	goto	u8350
  2902  003B50                     u8351:
  2903  003B50  EFC4  F01D         	goto	l7522
  2904  003B54                     u8350:
  2905  003B54                     
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2908  003B54  C0E2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2909  003B58  C0E3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2910  003B5C  CFDF F0E4          	movff	indf2,??_vfpfcnvrt
  2911  003B60  0E04               	movlw	4
  2912  003B62  26DE               	addwf	postinc2,f,c
  2913  003B64  CFDF F0E5          	movff	indf2,??_vfpfcnvrt+1
  2914  003B68  0E00               	movlw	0
  2915  003B6A  22DD               	addwfc	postdec2,f,c
  2916  003B6C  C0E4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2917  003B70  C0E5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2918  003B74  CFDE F0EC          	movff	postinc2,vfpfcnvrt@f
  2919  003B78  CFDE F0ED          	movff	postinc2,vfpfcnvrt@f+1
  2920  003B7C  CFDE F0EE          	movff	postinc2,vfpfcnvrt@f+2
  2921  003B80  CFDE F0EF          	movff	postinc2,vfpfcnvrt@f+3
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2924  003B84  EFDC  F01D         	goto	l1268
  2925  003B88                     l7522:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2929  003B88  C0E2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2930  003B8C  C0E3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2931  003B90  CFDF F0E4          	movff	indf2,??_vfpfcnvrt
  2932  003B94  0E04               	movlw	4
  2933  003B96  26DE               	addwf	postinc2,f,c
  2934  003B98  CFDF F0E5          	movff	indf2,??_vfpfcnvrt+1
  2935  003B9C  0E00               	movlw	0
  2936  003B9E  22DD               	addwfc	postdec2,f,c
  2937  003BA0  C0E4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2938  003BA4  C0E5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2939  003BA8  CFDE F0EC          	movff	postinc2,vfpfcnvrt@f
  2940  003BAC  CFDE F0ED          	movff	postinc2,vfpfcnvrt@f+1
  2941  003BB0  CFDE F0EE          	movff	postinc2,vfpfcnvrt@f+2
  2942  003BB4  CFDE F0EF          	movff	postinc2,vfpfcnvrt@f+3
  2943  003BB8                     l1268:
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2947  003BB8  0E02               	movlw	2
  2948  003BBA  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2949  003BBE  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2950  003BC2  26DE               	addwf	postinc2,f,c
  2951  003BC4  0E00               	movlw	0
  2952  003BC6  22DD               	addwfc	postdec2,f,c
  2953  003BC8  EF39  F01D         	goto	l7508
  2954  003BCC                     l7528:
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2957  003BCC  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2958  003BD0  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2959  003BD4  CFDE FFF6          	movff	postinc2,tblptrl
  2960  003BD8  CFDD FFF7          	movff	postdec2,tblptrh
  2961  003BDC                     	if	0	;tblptru may be non-zero
  2962  003BDC                     	endif
  2963  003BDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2964  003BDC  0E00               	movlw	low (__mediumconst shr (0+16))
  2965  003BDE  6EF8               	movwf	tblptru,c
  2966  003BE0                     	endif
  2967  003BE0  0008               	tblrd		*
  2968  003BE2  50F5               	movf	tablat,w,c
  2969  003BE4  0A25               	xorlw	37
  2970  003BE6  A4D8               	btfss	status,2,c
  2971  003BE8  EFF8  F01D         	goto	u8361
  2972  003BEC  EFFA  F01D         	goto	u8360
  2973  003BF0                     u8361:
  2974  003BF0  EF12  F01E         	goto	l7538
  2975  003BF4                     u8360:
  2976  003BF4                     
  2977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2978  003BF4  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2979  003BF8  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2980  003BFC  2ADE               	incf	postinc2,f,c
  2981  003BFE  0E00               	movlw	0
  2982  003C00  22DD               	addwfc	postdec2,f,c
  2983  003C02                     
  2984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2985  003C02  0E00               	movlw	0
  2986  003C04  6E15               	movwf	(fputc@c+1)^0,c
  2987  003C06  0E25               	movlw	37
  2988  003C08  6E14               	movwf	fputc@c^0,c
  2989  003C0A  C0DE  F016         	movff	vfpfcnvrt@fp,fputc@fp
  2990  003C0E  C0DF  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2991  003C12  ECD3  F028         	call	_fputc	;wreg free
  2992  003C16                     l7534:
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2995  003C16  0E00               	movlw	0
  2996  003C18  0100               	movlb	0	; () banked
  2997  003C1A  6FDF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2998  003C1C  0E01               	movlw	1
  2999  003C1E  6FDE               	movwf	?_vfpfcnvrt& (0+255),b
  3000  003C20  EF3D  F01E         	goto	l1261
  3001  003C24                     l7538:
  3002                           
  3003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3004  003C24  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3005  003C28  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3006  003C2C  2ADE               	incf	postinc2,f,c
  3007  003C2E  0E00               	movlw	0
  3008  003C30  22DD               	addwfc	postdec2,f,c
  3009  003C32                     
  3010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3011  003C32  0E00               	movlw	0
  3012  003C34  0100               	movlb	0	; () banked
  3013  003C36  6FDF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3014  003C38  0E00               	movlw	0
  3015  003C3A  6FDE               	movwf	?_vfpfcnvrt& (0+255),b
  3016  003C3C  EF3D  F01E         	goto	l1261
  3017  003C40                     l7544:
  3018                           
  3019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3020  003C40  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3021  003C44  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3022  003C48  CFDE FFF6          	movff	postinc2,tblptrl
  3023  003C4C  CFDD FFF7          	movff	postdec2,tblptrh
  3024  003C50                     	if	0	;tblptru may be non-zero
  3025  003C50                     	endif
  3026  003C50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3027  003C50  0E00               	movlw	low (__mediumconst shr (0+16))
  3028  003C52  6EF8               	movwf	tblptru,c
  3029  003C54                     	endif
  3030  003C54  0008               	tblrd		*
  3031  003C56  50F5               	movf	tablat,w,c
  3032  003C58  6E14               	movwf	fputc@c^0,c
  3033  003C5A  6A15               	clrf	(fputc@c+1)^0,c
  3034  003C5C  C0DE  F016         	movff	vfpfcnvrt@fp,fputc@fp
  3035  003C60  C0DF  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3036  003C64  ECD3  F028         	call	_fputc	;wreg free
  3037  003C68                     
  3038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3039  003C68  C0E0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3040  003C6C  C0E1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3041  003C70  2ADE               	incf	postinc2,f,c
  3042  003C72  0E00               	movlw	0
  3043  003C74  22DD               	addwfc	postdec2,f,c
  3044  003C76  EF0B  F01E         	goto	l7534
  3045  003C7A                     l1261:
  3046  003C7A  0012               	return		;funcret
  3047  003C7C                     __end_of_vfpfcnvrt:
  3048                           	callstack 0
  3049                           
  3050 ;; *************** function _strncmp *****************
  3051 ;; Defined at:
  3052 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  3055 ;;		 -> vfpfcnvrt@ct(3), 
  3056 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  3057 ;;		 -> STR_13(3), 
  3058 ;;  n               2   23[COMRAM] unsigned int 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  r               2   28[COMRAM] PTR const unsigned char 
  3061 ;;		 -> STR_13(3), 
  3062 ;;  l               2   26[COMRAM] PTR const unsigned char 
  3063 ;;		 -> vfpfcnvrt@ct(3), 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  2   19[COMRAM] int 
  3066 ;; Registers used:
  3067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3073 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;Total ram usage:       11 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; Hardware stack levels required when called: 3
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_vfpfcnvrt
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text5
  3088  0050C4                     __ptext5:
  3089                           	callstack 0
  3090  0050C4                     _strncmp:
  3091                           	callstack 23
  3092  0050C4  C014  F01B         	movff	strncmp@_l,strncmp@l
  3093  0050C8  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  3094  0050CC  C016  F01D         	movff	strncmp@_r,strncmp@r
  3095  0050D0  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  3096  0050D4  0618               	decf	strncmp@n^0,f,c
  3097  0050D6  A0D8               	btfss	status,0,c
  3098  0050D8  0619               	decf	(strncmp@n+1)^0,f,c
  3099  0050DA  2818               	incf	strncmp@n^0,w,c
  3100  0050DC  E106               	bnz	u8111
  3101  0050DE  2819               	incf	(strncmp@n+1)^0,w,c
  3102  0050E0  A4D8               	btfss	status,2,c
  3103  0050E2  EF75  F028         	goto	u8111
  3104  0050E6  EF77  F028         	goto	u8110
  3105  0050EA                     u8111:
  3106  0050EA  EF84  F028         	goto	l7406
  3107  0050EE                     u8110:
  3108  0050EE  0E00               	movlw	0
  3109  0050F0  6E15               	movwf	(?_strncmp+1)^0,c
  3110  0050F2  0E00               	movlw	0
  3111  0050F4  6E14               	movwf	?_strncmp^0,c
  3112  0050F6  EFD2  F028         	goto	l1378
  3113  0050FA                     l7404:
  3114  0050FA  4A1B               	infsnz	strncmp@l^0,f,c
  3115  0050FC  2A1C               	incf	(strncmp@l+1)^0,f,c
  3116  0050FE  4A1D               	infsnz	strncmp@r^0,f,c
  3117  005100  2A1E               	incf	(strncmp@r+1)^0,f,c
  3118  005102  0618               	decf	strncmp@n^0,f,c
  3119  005104  A0D8               	btfss	status,0,c
  3120  005106  0619               	decf	(strncmp@n+1)^0,f,c
  3121  005108                     l7406:
  3122  005108  C01B  FFD9         	movff	strncmp@l,fsr2l
  3123  00510C  C01C  FFDA         	movff	strncmp@l+1,fsr2h
  3124  005110  50DF               	movf	indf2,w,c
  3125  005112  B4D8               	btfsc	status,2,c
  3126  005114  EF8E  F028         	goto	u8121
  3127  005118  EF90  F028         	goto	u8120
  3128  00511C                     u8121:
  3129  00511C  EFBF  F028         	goto	l7414
  3130  005120                     u8120:
  3131  005120  C01D  FFF6         	movff	strncmp@r,tblptrl
  3132  005124  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  3133  005128                     	if	0	;tblptru may be non-zero
  3134  005128                     	endif
  3135  005128                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3136  005128  0E00               	movlw	low (__mediumconst shr (0+16))
  3137  00512A  6EF8               	movwf	tblptru,c
  3138  00512C                     	endif
  3139  00512C  0008               	tblrd		*
  3140  00512E  50F5               	movf	tablat,w,c
  3141  005130  0900               	iorlw	0
  3142  005132  B4D8               	btfsc	status,2,c
  3143  005134  EF9E  F028         	goto	u8131
  3144  005138  EFA0  F028         	goto	u8130
  3145  00513C                     u8131:
  3146  00513C  EFBF  F028         	goto	l7414
  3147  005140                     u8130:
  3148  005140  5018               	movf	strncmp@n^0,w,c
  3149  005142  1019               	iorwf	(strncmp@n+1)^0,w,c
  3150  005144  B4D8               	btfsc	status,2,c
  3151  005146  EFA7  F028         	goto	u8141
  3152  00514A  EFA9  F028         	goto	u8140
  3153  00514E                     u8141:
  3154  00514E  EFBF  F028         	goto	l7414
  3155  005152                     u8140:
  3156  005152  C01B  FFD9         	movff	strncmp@l,fsr2l
  3157  005156  C01C  FFDA         	movff	strncmp@l+1,fsr2h
  3158  00515A  50DF               	movf	indf2,w,c
  3159  00515C  6E1A               	movwf	??_strncmp^0,c
  3160  00515E  C01D  FFF6         	movff	strncmp@r,tblptrl
  3161  005162  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  3162  005166                     	if	0	;tblptru may be non-zero
  3163  005166                     	endif
  3164  005166                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3165  005166  0E00               	movlw	low (__mediumconst shr (0+16))
  3166  005168  6EF8               	movwf	tblptru,c
  3167  00516A                     	endif
  3168  00516A  0008               	tblrd		*
  3169  00516C  50F5               	movf	tablat,w,c
  3170  00516E  181A               	xorwf	??_strncmp^0,w,c
  3171  005170  B4D8               	btfsc	status,2,c
  3172  005172  EFBD  F028         	goto	u8151
  3173  005176  EFBF  F028         	goto	u8150
  3174  00517A                     u8151:
  3175  00517A  EF7D  F028         	goto	l7404
  3176  00517E                     u8150:
  3177  00517E                     l7414:
  3178  00517E  C01B  FFD9         	movff	strncmp@l,fsr2l
  3179  005182  C01C  FFDA         	movff	strncmp@l+1,fsr2h
  3180  005186  50DF               	movf	indf2,w,c
  3181  005188  6E1A               	movwf	??_strncmp^0,c
  3182  00518A  C01D  FFF6         	movff	strncmp@r,tblptrl
  3183  00518E  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  3184  005192                     	if	0	;tblptru may be non-zero
  3185  005192                     	endif
  3186  005192                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3187  005192  0E00               	movlw	low (__mediumconst shr (0+16))
  3188  005194  6EF8               	movwf	tblptru,c
  3189  005196                     	endif
  3190  005196  0008               	tblrd		*
  3191  005198  50F5               	movf	tablat,w,c
  3192  00519A  5C1A               	subwf	??_strncmp^0,w,c
  3193  00519C  6E14               	movwf	?_strncmp^0,c
  3194  00519E  6A15               	clrf	(?_strncmp+1)^0,c
  3195  0051A0  A0D8               	btfss	status,0,c
  3196  0051A2  0615               	decf	(?_strncmp+1)^0,f,c
  3197  0051A4                     l1378:
  3198  0051A4  0012               	return		;funcret
  3199  0051A6                     __end_of_strncmp:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function _efgtoa *****************
  3203 ;; Defined at:
  3204 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  fp              2   58[BANK0 ] PTR struct _IO_FILE
  3207 ;;		 -> sprintf@f(6), 
  3208 ;;  f               4   60[BANK0 ] PTR struct _IO_FILE
  3209 ;;  c               1   64[BANK0 ] unsigned char 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  u               4  122[BANK0 ] unsigned char 
  3212 ;;  g               4  114[BANK0 ] unsigned char 
  3213 ;;  l               4  108[BANK0 ] unsigned char 
  3214 ;;  h               4  104[BANK0 ] unsigned char 
  3215 ;;  ou              4   90[BANK0 ] unsigned char 
  3216 ;;  n               2  120[BANK0 ] int 
  3217 ;;  e               2  118[BANK0 ] int 
  3218 ;;  i               2  112[BANK0 ] int 
  3219 ;;  w               2  100[BANK0 ] int 
  3220 ;;  p               2   98[BANK0 ] int 
  3221 ;;  sign            2   96[BANK0 ] int 
  3222 ;;  d               2   94[BANK0 ] int 
  3223 ;;  m               2   88[BANK0 ] int 
  3224 ;;  ne              2   86[BANK0 ] int 
  3225 ;;  pp              2   84[BANK0 ] int 
  3226 ;;  t               2   82[BANK0 ] int 
  3227 ;;  mode            1  103[BANK0 ] unsigned char 
  3228 ;;  nmode           1  102[BANK0 ] unsigned char 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  2   58[BANK0 ] int 
  3231 ;; Registers used:
  3232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3238 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;Total ram usage:       68 bytes
  3243 ;; Hardware stack levels used: 1
  3244 ;; Hardware stack levels required when called: 7
  3245 ;; This function calls:
  3246 ;;		___awdiv
  3247 ;;		___awmod
  3248 ;;		___fladd
  3249 ;;		___fldiv
  3250 ;;		___fleq
  3251 ;;		___flge
  3252 ;;		___flmul
  3253 ;;		___flneg
  3254 ;;		___flsub
  3255 ;;		___fltol
  3256 ;;		___fpclassifyf
  3257 ;;		_floorf
  3258 ;;		_isupper
  3259 ;;		_pad
  3260 ;;		_strcpy
  3261 ;;		_tolower
  3262 ;; This function is called by:
  3263 ;;		_vfpfcnvrt
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text6
  3268  00107A                     __ptext6:
  3269                           	callstack 0
  3270  00107A                     _efgtoa:
  3271                           	callstack 19
  3272  00107A                     
  3273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3274  00107A  0E00               	movlw	0
  3275  00107C  0100               	movlb	0	; () banked
  3276  00107E  6FC1               	movwf	(efgtoa@sign+1)& (0+255),b
  3277  001080  0E00               	movlw	0
  3278  001082  6FC0               	movwf	efgtoa@sign& (0+255),b
  3279  001084                     
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3282  001084  C09C  F0D2         	movff	efgtoa@f,efgtoa@g
  3283  001088  C09D  F0D3         	movff	efgtoa@f+1,efgtoa@g+1
  3284  00108C  C09E  F0D4         	movff	efgtoa@f+2,efgtoa@g+2
  3285  001090  C09F  F0D5         	movff	efgtoa@f+3,efgtoa@g+3
  3286  001094                     
  3287                           ; BSR set to: 0
  3288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3289  001094  BFD5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3290  001096  EF51  F008         	goto	u7500
  3291  00109A  EF4F  F008         	goto	u7501
  3292  00109E                     u7501:
  3293  00109E  EF67  F008         	goto	l7058
  3294  0010A2                     u7500:
  3295  0010A2                     
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3298  0010A2  0E00               	movlw	0
  3299  0010A4  6FC1               	movwf	(efgtoa@sign+1)& (0+255),b
  3300  0010A6  0E01               	movlw	1
  3301  0010A8  6FC0               	movwf	efgtoa@sign& (0+255),b
  3302  0010AA                     
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3305  0010AA  C0D2  F02E         	movff	efgtoa@g,___flneg@f1
  3306  0010AE  C0D3  F02F         	movff	efgtoa@g+1,___flneg@f1+1
  3307  0010B2  C0D4  F030         	movff	efgtoa@g+2,___flneg@f1+2
  3308  0010B6  C0D5  F031         	movff	efgtoa@g+3,___flneg@f1+3
  3309  0010BA  EC21  F02E         	call	___flneg	;wreg free
  3310  0010BE  C02E  F0D2         	movff	?___flneg,efgtoa@g
  3311  0010C2  C02F  F0D3         	movff	?___flneg+1,efgtoa@g+1
  3312  0010C6  C030  F0D4         	movff	?___flneg+2,efgtoa@g+2
  3313  0010CA  C031  F0D5         	movff	?___flneg+3,efgtoa@g+3
  3314  0010CE                     l7058:
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3317  0010CE  0E00               	movlw	0
  3318  0010D0  0100               	movlb	0	; () banked
  3319  0010D2  6FD9               	movwf	(efgtoa@n+1)& (0+255),b
  3320  0010D4  0E00               	movlw	0
  3321  0010D6  6FD8               	movwf	efgtoa@n& (0+255),b
  3322  0010D8                     
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3325  0010D8  C038  F0C4         	movff	_width,efgtoa@w
  3326  0010DC  C039  F0C5         	movff	_width+1,efgtoa@w+1
  3327  0010E0                     
  3328                           ; BSR set to: 0
  3329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3330  0010E0  51C0               	movf	efgtoa@sign& (0+255),w,b
  3331  0010E2  11C1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3332  0010E4  A4D8               	btfss	status,2,c
  3333  0010E6  EF77  F008         	goto	u7511
  3334  0010EA  EF79  F008         	goto	u7510
  3335  0010EE                     u7511:
  3336  0010EE  EF80  F008         	goto	l7066
  3337  0010F2                     u7510:
  3338  0010F2                     
  3339                           ; BSR set to: 0
  3340  0010F2  A43C               	btfss	_flags^0,2,c
  3341  0010F4  EF7E  F008         	goto	u7521
  3342  0010F8  EF80  F008         	goto	u7520
  3343  0010FC                     u7521:
  3344  0010FC  EF9A  F008         	goto	l7078
  3345  001100                     u7520:
  3346  001100                     l7066:
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3350  001100  51C0               	movf	efgtoa@sign& (0+255),w,b
  3351  001102  11C1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3352  001104  A4D8               	btfss	status,2,c
  3353  001106  EF87  F008         	goto	u7531
  3354  00110A  EF89  F008         	goto	u7530
  3355  00110E                     u7531:
  3356  00110E  EF8F  F008         	goto	l7070
  3357  001112                     u7530:
  3358  001112                     
  3359                           ; BSR set to: 0
  3360  001112  0E00               	movlw	0
  3361  001114  6FA7               	movwf	(_efgtoa$2235+1)& (0+255),b
  3362  001116  0E2B               	movlw	43
  3363  001118  6FA6               	movwf	_efgtoa$2235& (0+255),b
  3364  00111A  EF93  F008         	goto	l7072
  3365  00111E                     l7070:
  3366                           
  3367                           ; BSR set to: 0
  3368  00111E  0E00               	movlw	0
  3369  001120  6FA7               	movwf	(_efgtoa$2235+1)& (0+255),b
  3370  001122  0E2D               	movlw	45
  3371  001124  6FA6               	movwf	_efgtoa$2235& (0+255),b
  3372  001126                     l7072:
  3373                           
  3374                           ; BSR set to: 0
  3375  001126  C0A6  F1A6         	movff	_efgtoa$2235,_dbuf
  3376  00112A                     
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3379  00112A  4BD8               	infsnz	efgtoa@n& (0+255),f,b
  3380  00112C  2BD9               	incf	(efgtoa@n+1)& (0+255),f,b
  3381  00112E                     
  3382                           ; BSR set to: 0
  3383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3384  00112E  07C4               	decf	efgtoa@w& (0+255),f,b
  3385  001130  A0D8               	btfss	status,0,c
  3386  001132  07C5               	decf	(efgtoa@w+1)& (0+255),f,b
  3387  001134                     l7078:
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3391  001134  C0D2  F014         	movff	efgtoa@g,___fpclassifyf@x
  3392  001138  C0D3  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3393  00113C  C0D4  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3394  001140  C0D5  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3395  001144  ECE3  F027         	call	___fpclassifyf	;wreg free
  3396  001148  0414               	decf	?___fpclassifyf^0,w,c
  3397  00114A  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  3398  00114C  A4D8               	btfss	status,2,c
  3399  00114E  EFAB  F008         	goto	u7541
  3400  001152  EFAD  F008         	goto	u7540
  3401  001156                     u7541:
  3402  001156  EF04  F009         	goto	l7096
  3403  00115A                     u7540:
  3404  00115A  0EBF               	movlw	191
  3405  00115C  0100               	movlb	0	; () banked
  3406  00115E  6FA1               	movwf	??_efgtoa& (0+255),b
  3407  001160  0EFF               	movlw	255
  3408  001162  6FA2               	movwf	(??_efgtoa+1)& (0+255),b
  3409  001164  51A0               	movf	efgtoa@c& (0+255),w,b
  3410  001166  6FA3               	movwf	(??_efgtoa+2)& (0+255),b
  3411  001168  6BA4               	clrf	(??_efgtoa+3)& (0+255),b
  3412  00116A  51A1               	movf	??_efgtoa& (0+255),w,b
  3413  00116C  27A3               	addwf	(??_efgtoa+2)& (0+255),f,b
  3414  00116E  51A2               	movf	(??_efgtoa+1)& (0+255),w,b
  3415  001170  23A4               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3416  001172  51A4               	movf	(??_efgtoa+3)& (0+255),w,b
  3417  001174  E10A               	bnz	u7550
  3418  001176  0E1A               	movlw	26
  3419  001178  5DA3               	subwf	(??_efgtoa+2)& (0+255),w,b
  3420  00117A  A0D8               	btfss	status,0,c
  3421  00117C  EFC2  F008         	goto	u7551
  3422  001180  EFC5  F008         	goto	u7550
  3423  001184                     u7551:
  3424  001184  0E01               	movlw	1
  3425  001186  EFC6  F008         	goto	u7560
  3426  00118A                     u7550:
  3427  00118A  0E00               	movlw	0
  3428  00118C                     u7560:
  3429  00118C  6FA8               	movwf	_efgtoa$2236& (0+255),b
  3430  00118E  6BA9               	clrf	(_efgtoa$2236+1)& (0+255),b
  3431  001190                     
  3432                           ; BSR set to: 0
  3433  001190  51A8               	movf	_efgtoa$2236& (0+255),w,b
  3434  001192  11A9               	iorwf	(_efgtoa$2236+1)& (0+255),w,b
  3435  001194  B4D8               	btfsc	status,2,c
  3436  001196  EFCF  F008         	goto	u7571
  3437  00119A  EFD1  F008         	goto	u7570
  3438  00119E                     u7571:
  3439  00119E  EFDF  F008         	goto	l7088
  3440  0011A2                     u7570:
  3441  0011A2                     
  3442                           ; BSR set to: 0
  3443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3444  0011A2  0EA6               	movlw	low _dbuf
  3445  0011A4  25D8               	addwf	efgtoa@n& (0+255),w,b
  3446  0011A6  6E14               	movwf	strcpy@dest^0,c
  3447  0011A8  0E01               	movlw	high _dbuf
  3448  0011AA  21D9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3449  0011AC  6E15               	movwf	(strcpy@dest+1)^0,c
  3450  0011AE  0E66               	movlw	low STR_3
  3451  0011B0  6E16               	movwf	strcpy@src^0,c
  3452  0011B2  0E10               	movlw	high STR_3
  3453  0011B4  6E17               	movwf	(strcpy@src+1)^0,c
  3454  0011B6  ECDE  F02C         	call	_strcpy	;wreg free
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3457  0011BA  EFEB  F008         	goto	l7090
  3458  0011BE                     l7088:
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3462  0011BE  0EA6               	movlw	low _dbuf
  3463  0011C0  25D8               	addwf	efgtoa@n& (0+255),w,b
  3464  0011C2  6E14               	movwf	strcpy@dest^0,c
  3465  0011C4  0E01               	movlw	high _dbuf
  3466  0011C6  21D9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3467  0011C8  6E15               	movwf	(strcpy@dest+1)^0,c
  3468  0011CA  0E6E               	movlw	low STR_4
  3469  0011CC  6E16               	movwf	strcpy@src^0,c
  3470  0011CE  0E10               	movlw	high STR_4
  3471  0011D0  6E17               	movwf	(strcpy@src+1)^0,c
  3472  0011D2  ECDE  F02C         	call	_strcpy	;wreg free
  3473  0011D6                     l7090:
  3474                           
  3475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3476  0011D6  0100               	movlb	0	; () banked
  3477  0011D8  0EFD               	movlw	253
  3478  0011DA  27C4               	addwf	efgtoa@w& (0+255),f,b
  3479  0011DC  0EFF               	movlw	255
  3480  0011DE  23C5               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3481  0011E0                     l7092:
  3482                           
  3483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3484  0011E0  C09A  F024         	movff	efgtoa@fp,pad@fp
  3485  0011E4  C09B  F025         	movff	efgtoa@fp+1,pad@fp+1
  3486  0011E8  0EA6               	movlw	low _dbuf
  3487  0011EA  6E26               	movwf	pad@buf^0,c
  3488  0011EC  0E01               	movlw	high _dbuf
  3489  0011EE  6E27               	movwf	(pad@buf+1)^0,c
  3490  0011F0  C0C4  F028         	movff	efgtoa@w,pad@p
  3491  0011F4  C0C5  F029         	movff	efgtoa@w+1,pad@p+1
  3492  0011F8  EC9A  F029         	call	_pad	;wreg free
  3493  0011FC  C024  F09A         	movff	?_pad,?_efgtoa
  3494  001200  C025  F09B         	movff	?_pad+1,?_efgtoa+1
  3495  001204  EF6C  F00E         	goto	l1169
  3496  001208                     l7096:
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3499  001208  C0D2  F014         	movff	efgtoa@g,___fpclassifyf@x
  3500  00120C  C0D3  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3501  001210  C0D4  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3502  001214  C0D5  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3503  001218  ECE3  F027         	call	___fpclassifyf	;wreg free
  3504  00121C  5014               	movf	?___fpclassifyf^0,w,c
  3505  00121E  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  3506  001220  A4D8               	btfss	status,2,c
  3507  001222  EF15  F009         	goto	u7581
  3508  001226  EF17  F009         	goto	u7580
  3509  00122A                     u7581:
  3510  00122A  EF57  F009         	goto	l7114
  3511  00122E                     u7580:
  3512  00122E  0EBF               	movlw	191
  3513  001230  0100               	movlb	0	; () banked
  3514  001232  6FA1               	movwf	??_efgtoa& (0+255),b
  3515  001234  0EFF               	movlw	255
  3516  001236  6FA2               	movwf	(??_efgtoa+1)& (0+255),b
  3517  001238  51A0               	movf	efgtoa@c& (0+255),w,b
  3518  00123A  6FA3               	movwf	(??_efgtoa+2)& (0+255),b
  3519  00123C  6BA4               	clrf	(??_efgtoa+3)& (0+255),b
  3520  00123E  51A1               	movf	??_efgtoa& (0+255),w,b
  3521  001240  27A3               	addwf	(??_efgtoa+2)& (0+255),f,b
  3522  001242  51A2               	movf	(??_efgtoa+1)& (0+255),w,b
  3523  001244  23A4               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3524  001246  51A4               	movf	(??_efgtoa+3)& (0+255),w,b
  3525  001248  E10A               	bnz	u7590
  3526  00124A  0E1A               	movlw	26
  3527  00124C  5DA3               	subwf	(??_efgtoa+2)& (0+255),w,b
  3528  00124E  A0D8               	btfss	status,0,c
  3529  001250  EF2C  F009         	goto	u7591
  3530  001254  EF2F  F009         	goto	u7590
  3531  001258                     u7591:
  3532  001258  0E01               	movlw	1
  3533  00125A  EF30  F009         	goto	u7600
  3534  00125E                     u7590:
  3535  00125E  0E00               	movlw	0
  3536  001260                     u7600:
  3537  001260  6FAA               	movwf	_efgtoa$2241& (0+255),b
  3538  001262  6BAB               	clrf	(_efgtoa$2241+1)& (0+255),b
  3539  001264                     
  3540                           ; BSR set to: 0
  3541  001264  51AA               	movf	_efgtoa$2241& (0+255),w,b
  3542  001266  11AB               	iorwf	(_efgtoa$2241+1)& (0+255),w,b
  3543  001268  B4D8               	btfsc	status,2,c
  3544  00126A  EF39  F009         	goto	u7611
  3545  00126E  EF3B  F009         	goto	u7610
  3546  001272                     u7611:
  3547  001272  EF49  F009         	goto	l7106
  3548  001276                     u7610:
  3549  001276                     
  3550                           ; BSR set to: 0
  3551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3552  001276  0EA6               	movlw	low _dbuf
  3553  001278  25D8               	addwf	efgtoa@n& (0+255),w,b
  3554  00127A  6E14               	movwf	strcpy@dest^0,c
  3555  00127C  0E01               	movlw	high _dbuf
  3556  00127E  21D9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3557  001280  6E15               	movwf	(strcpy@dest+1)^0,c
  3558  001282  0E6A               	movlw	low STR_7
  3559  001284  6E16               	movwf	strcpy@src^0,c
  3560  001286  0E10               	movlw	high STR_7
  3561  001288  6E17               	movwf	(strcpy@src+1)^0,c
  3562  00128A  ECDE  F02C         	call	_strcpy	;wreg free
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3565  00128E  EFEB  F008         	goto	l7090
  3566  001292                     l7106:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3570  001292  0EA6               	movlw	low _dbuf
  3571  001294  25D8               	addwf	efgtoa@n& (0+255),w,b
  3572  001296  6E14               	movwf	strcpy@dest^0,c
  3573  001298  0E01               	movlw	high _dbuf
  3574  00129A  21D9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3575  00129C  6E15               	movwf	(strcpy@dest+1)^0,c
  3576  00129E  0E72               	movlw	low STR_8
  3577  0012A0  6E16               	movwf	strcpy@src^0,c
  3578  0012A2  0E10               	movlw	high STR_8
  3579  0012A4  6E17               	movwf	(strcpy@src+1)^0,c
  3580  0012A6  ECDE  F02C         	call	_strcpy	;wreg free
  3581  0012AA  EFEB  F008         	goto	l7090
  3582  0012AE                     l7114:
  3583                           
  3584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3585  0012AE  0E00               	movlw	0
  3586  0012B0  0100               	movlb	0	; () banked
  3587  0012B2  6FDA               	movwf	efgtoa@u& (0+255),b
  3588  0012B4  0E00               	movlw	0
  3589  0012B6  6FDB               	movwf	(efgtoa@u+1)& (0+255),b
  3590  0012B8  0E80               	movlw	128
  3591  0012BA  6FDC               	movwf	(efgtoa@u+2)& (0+255),b
  3592  0012BC  0E3F               	movlw	63
  3593  0012BE  6FDD               	movwf	(efgtoa@u+3)& (0+255),b
  3594                           
  3595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3596  0012C0  0E00               	movlw	0
  3597  0012C2  6FD7               	movwf	(efgtoa@e+1)& (0+255),b
  3598  0012C4  0E00               	movlw	0
  3599  0012C6  6FD6               	movwf	efgtoa@e& (0+255),b
  3600  0012C8                     
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3603  0012C8  C0D2  F014         	movff	efgtoa@g,___fleq@ff1
  3604  0012CC  C0D3  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  3605  0012D0  C0D4  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  3606  0012D4  C0D5  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  3607  0012D8  0E00               	movlw	0
  3608  0012DA  6E18               	movwf	___fleq@ff2^0,c
  3609  0012DC  0E00               	movlw	0
  3610  0012DE  6E19               	movwf	(___fleq@ff2+1)^0,c
  3611  0012E0  0E00               	movlw	0
  3612  0012E2  6E1A               	movwf	(___fleq@ff2+2)^0,c
  3613  0012E4  0E00               	movlw	0
  3614  0012E6  6E1B               	movwf	(___fleq@ff2+3)^0,c
  3615  0012E8  EC53  F02A         	call	___fleq	;wreg free
  3616  0012EC  B0D8               	btfsc	status,0,c
  3617  0012EE  EF7B  F009         	goto	u7621
  3618  0012F2  EF7D  F009         	goto	u7620
  3619  0012F6                     u7621:
  3620  0012F6  EF03  F00A         	goto	l7132
  3621  0012FA                     u7620:
  3622  0012FA  EF9C  F009         	goto	l7124
  3623  0012FE                     l7120:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3627  0012FE  C0DA  F06D         	movff	efgtoa@u,___flmul@b
  3628  001302  C0DB  F06E         	movff	efgtoa@u+1,___flmul@b+1
  3629  001306  C0DC  F06F         	movff	efgtoa@u+2,___flmul@b+2
  3630  00130A  C0DD  F070         	movff	efgtoa@u+3,___flmul@b+3
  3631  00130E  0E00               	movlw	0
  3632  001310  6F71               	movwf	___flmul@a& (0+255),b
  3633  001312  0E00               	movlw	0
  3634  001314  6F72               	movwf	(___flmul@a+1)& (0+255),b
  3635  001316  0E20               	movlw	32
  3636  001318  6F73               	movwf	(___flmul@a+2)& (0+255),b
  3637  00131A  0E41               	movlw	65
  3638  00131C  6F74               	movwf	(___flmul@a+3)& (0+255),b
  3639  00131E  EC3E  F01E         	call	___flmul	;wreg free
  3640  001322  C06D  F0DA         	movff	?___flmul,efgtoa@u
  3641  001326  C06E  F0DB         	movff	?___flmul+1,efgtoa@u+1
  3642  00132A  C06F  F0DC         	movff	?___flmul+2,efgtoa@u+2
  3643  00132E  C070  F0DD         	movff	?___flmul+3,efgtoa@u+3
  3644  001332                     
  3645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3646  001332  0100               	movlb	0	; () banked
  3647  001334  4BD6               	infsnz	efgtoa@e& (0+255),f,b
  3648  001336  2BD7               	incf	(efgtoa@e+1)& (0+255),f,b
  3649  001338                     l7124:
  3650                           
  3651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3652  001338  C0D2  F082         	movff	efgtoa@g,___flge@ff1
  3653  00133C  C0D3  F083         	movff	efgtoa@g+1,___flge@ff1+1
  3654  001340  C0D4  F084         	movff	efgtoa@g+2,___flge@ff1+2
  3655  001344  C0D5  F085         	movff	efgtoa@g+3,___flge@ff1+3
  3656  001348  0E00               	movlw	0
  3657  00134A  0100               	movlb	0	; () banked
  3658  00134C  6F71               	movwf	___flmul@a& (0+255),b
  3659  00134E  0E00               	movlw	0
  3660  001350  6F72               	movwf	(___flmul@a+1)& (0+255),b
  3661  001352  0E20               	movlw	32
  3662  001354  6F73               	movwf	(___flmul@a+2)& (0+255),b
  3663  001356  0E41               	movlw	65
  3664  001358  6F74               	movwf	(___flmul@a+3)& (0+255),b
  3665  00135A  C0DA  F06D         	movff	efgtoa@u,___flmul@b
  3666  00135E  C0DB  F06E         	movff	efgtoa@u+1,___flmul@b+1
  3667  001362  C0DC  F06F         	movff	efgtoa@u+2,___flmul@b+2
  3668  001366  C0DD  F070         	movff	efgtoa@u+3,___flmul@b+3
  3669  00136A  EC3E  F01E         	call	___flmul	;wreg free
  3670  00136E  C06D  F086         	movff	?___flmul,___flge@ff2
  3671  001372  C06E  F087         	movff	?___flmul+1,___flge@ff2+1
  3672  001376  C06F  F088         	movff	?___flmul+2,___flge@ff2+2
  3673  00137A  C070  F089         	movff	?___flmul+3,___flge@ff2+3
  3674  00137E  EC60  F027         	call	___flge	;wreg free
  3675  001382  0100               	movlb	0	; () banked
  3676  001384  B0D8               	btfsc	status,0,c
  3677  001386  EFC7  F009         	goto	u7631
  3678  00138A  EFC9  F009         	goto	u7630
  3679  00138E                     u7631:
  3680  00138E  EF7F  F009         	goto	l7120
  3681  001392                     u7630:
  3682  001392  EFE9  F009         	goto	l7130
  3683  001396                     l7126:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3687  001396  C0DA  F022         	movff	efgtoa@u,___fldiv@b
  3688  00139A  C0DB  F023         	movff	efgtoa@u+1,___fldiv@b+1
  3689  00139E  C0DC  F024         	movff	efgtoa@u+2,___fldiv@b+2
  3690  0013A2  C0DD  F025         	movff	efgtoa@u+3,___fldiv@b+3
  3691  0013A6  0E00               	movlw	0
  3692  0013A8  6E26               	movwf	___fldiv@a^0,c
  3693  0013AA  0E00               	movlw	0
  3694  0013AC  6E27               	movwf	(___fldiv@a+1)^0,c
  3695  0013AE  0E20               	movlw	32
  3696  0013B0  6E28               	movwf	(___fldiv@a+2)^0,c
  3697  0013B2  0E41               	movlw	65
  3698  0013B4  6E29               	movwf	(___fldiv@a+3)^0,c
  3699  0013B6  EC54  F020         	call	___fldiv	;wreg free
  3700  0013BA  C022  F0DA         	movff	?___fldiv,efgtoa@u
  3701  0013BE  C023  F0DB         	movff	?___fldiv+1,efgtoa@u+1
  3702  0013C2  C024  F0DC         	movff	?___fldiv+2,efgtoa@u+2
  3703  0013C6  C025  F0DD         	movff	?___fldiv+3,efgtoa@u+3
  3704  0013CA                     
  3705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3706  0013CA  0100               	movlb	0	; () banked
  3707  0013CC  07D6               	decf	efgtoa@e& (0+255),f,b
  3708  0013CE  A0D8               	btfss	status,0,c
  3709  0013D0  07D7               	decf	(efgtoa@e+1)& (0+255),f,b
  3710  0013D2                     l7130:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3714  0013D2  C0D2  F082         	movff	efgtoa@g,___flge@ff1
  3715  0013D6  C0D3  F083         	movff	efgtoa@g+1,___flge@ff1+1
  3716  0013DA  C0D4  F084         	movff	efgtoa@g+2,___flge@ff1+2
  3717  0013DE  C0D5  F085         	movff	efgtoa@g+3,___flge@ff1+3
  3718  0013E2  C0DA  F086         	movff	efgtoa@u,___flge@ff2
  3719  0013E6  C0DB  F087         	movff	efgtoa@u+1,___flge@ff2+1
  3720  0013EA  C0DC  F088         	movff	efgtoa@u+2,___flge@ff2+2
  3721  0013EE  C0DD  F089         	movff	efgtoa@u+3,___flge@ff2+3
  3722  0013F2  EC60  F027         	call	___flge	;wreg free
  3723  0013F6  0100               	movlb	0	; () banked
  3724  0013F8  A0D8               	btfss	status,0,c
  3725  0013FA  EF01  F00A         	goto	u7641
  3726  0013FE  EF03  F00A         	goto	u7640
  3727  001402                     u7641:
  3728  001402  EFCB  F009         	goto	l7126
  3729  001406                     u7640:
  3730  001406                     l7132:
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3733  001406  C0A0  F01A         	movff	efgtoa@c,tolower@c
  3734  00140A  6A1B               	clrf	(tolower@c+1)^0,c
  3735  00140C  ECAE  F02C         	call	_tolower	;wreg free
  3736  001410  501A               	movf	?_tolower^0,w,c
  3737  001412  0100               	movlb	0	; () banked
  3738  001414  6FC7               	movwf	efgtoa@mode& (0+255),b
  3739  001416                     
  3740                           ; BSR set to: 0
  3741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3742  001416  C0C7  F0C6         	movff	efgtoa@mode,efgtoa@nmode
  3743  00141A                     
  3744                           ; BSR set to: 0
  3745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3746  00141A  0E67               	movlw	103
  3747  00141C  19C7               	xorwf	efgtoa@mode& (0+255),w,b
  3748  00141E  A4D8               	btfss	status,2,c
  3749  001420  EF14  F00A         	goto	u7651
  3750  001424  EF16  F00A         	goto	u7650
  3751  001428                     u7651:
  3752  001428  EF3C  F00A         	goto	l7146
  3753  00142C                     u7650:
  3754  00142C                     
  3755                           ; BSR set to: 0
  3756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3757  00142C  503A               	movf	_prec^0,w,c
  3758  00142E  103B               	iorwf	(_prec+1)^0,w,c
  3759  001430  A4D8               	btfss	status,2,c
  3760  001432  EF1D  F00A         	goto	u7661
  3761  001436  EF1F  F00A         	goto	u7660
  3762  00143A                     u7661:
  3763  00143A  EF23  F00A         	goto	l7142
  3764  00143E                     u7660:
  3765  00143E                     
  3766                           ; BSR set to: 0
  3767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3768  00143E  0E00               	movlw	0
  3769  001440  6E3B               	movwf	(_prec+1)^0,c
  3770  001442  0E01               	movlw	1
  3771  001444  6E3A               	movwf	_prec^0,c
  3772  001446                     l7142:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3776  001446  BE3B               	btfsc	(_prec+1)^0,7,c
  3777  001448  EF30  F00A         	goto	u7670
  3778  00144C  503B               	movf	(_prec+1)^0,w,c
  3779  00144E  E106               	bnz	u7671
  3780  001450  043A               	decf	_prec^0,w,c
  3781  001452  B0D8               	btfsc	status,0,c
  3782  001454  EF2E  F00A         	goto	u7671
  3783  001458  EF30  F00A         	goto	u7670
  3784  00145C                     u7671:
  3785  00145C  EF36  F00A         	goto	l1187
  3786  001460                     u7670:
  3787  001460                     l7144:
  3788                           
  3789                           ; BSR set to: 0
  3790  001460  0E00               	movlw	0
  3791  001462  6FC3               	movwf	(efgtoa@p+1)& (0+255),b
  3792  001464  0E06               	movlw	6
  3793  001466  6FC2               	movwf	efgtoa@p& (0+255),b
  3794  001468  EF45  F00A         	goto	l7152
  3795  00146C                     l1187:
  3796                           
  3797                           ; BSR set to: 0
  3798  00146C  C03A  F0C2         	movff	_prec,efgtoa@p
  3799  001470  C03B  F0C3         	movff	_prec+1,efgtoa@p+1
  3800  001474  EF45  F00A         	goto	l7152
  3801  001478                     l7146:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3805  001478  BE3B               	btfsc	(_prec+1)^0,7,c
  3806  00147A  EF41  F00A         	goto	u7681
  3807  00147E  EF43  F00A         	goto	u7680
  3808  001482                     u7681:
  3809  001482  EF30  F00A         	goto	l7144
  3810  001486                     u7680:
  3811  001486  EF36  F00A         	goto	l1187
  3812  00148A                     l7152:
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3816  00148A  0E67               	movlw	103
  3817  00148C  19C7               	xorwf	efgtoa@mode& (0+255),w,b
  3818  00148E  A4D8               	btfss	status,2,c
  3819  001490  EF4C  F00A         	goto	u7691
  3820  001494  EF4E  F00A         	goto	u7690
  3821  001498                     u7691:
  3822  001498  EF7D  F00A         	goto	l7162
  3823  00149C                     u7690:
  3824  00149C                     
  3825                           ; BSR set to: 0
  3826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3827  00149C  AFD7               	btfss	(efgtoa@e+1)& (0+255),7,b
  3828  00149E  EF5C  F00A         	goto	u7700
  3829  0014A2  0EFC               	movlw	252
  3830  0014A4  5DD6               	subwf	efgtoa@e& (0+255),w,b
  3831  0014A6  0EFF               	movlw	255
  3832  0014A8  59D7               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3833  0014AA  A0D8               	btfss	status,0,c
  3834  0014AC  EF5A  F00A         	goto	u7701
  3835  0014B0  EF5C  F00A         	goto	u7700
  3836  0014B4                     u7701:
  3837  0014B4  EF7B  F00A         	goto	l7160
  3838  0014B8                     u7700:
  3839  0014B8                     
  3840                           ; BSR set to: 0
  3841  0014B8  0EFF               	movlw	255
  3842  0014BA  6FA1               	movwf	??_efgtoa& (0+255),b
  3843  0014BC  0EFF               	movlw	255
  3844  0014BE  6FA2               	movwf	(??_efgtoa+1)& (0+255),b
  3845  0014C0  C0C2  F0A3         	movff	efgtoa@p,??_efgtoa+2
  3846  0014C4  C0C3  F0A4         	movff	efgtoa@p+1,??_efgtoa+3
  3847  0014C8  51A1               	movf	??_efgtoa& (0+255),w,b
  3848  0014CA  27A3               	addwf	(??_efgtoa+2)& (0+255),f,b
  3849  0014CC  51A2               	movf	(??_efgtoa+1)& (0+255),w,b
  3850  0014CE  23A4               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3851  0014D0  51D6               	movf	efgtoa@e& (0+255),w,b
  3852  0014D2  5DA3               	subwf	(??_efgtoa+2)& (0+255),w,b
  3853  0014D4  51A4               	movf	(??_efgtoa+3)& (0+255),w,b
  3854  0014D6  0A80               	xorlw	128
  3855  0014D8  6FA5               	movwf	(??_efgtoa+4)& (0+255),b
  3856  0014DA  51D7               	movf	(efgtoa@e+1)& (0+255),w,b
  3857  0014DC  0A80               	xorlw	128
  3858  0014DE  59A5               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3859  0014E0  A0D8               	btfss	status,0,c
  3860  0014E2  EF75  F00A         	goto	u7711
  3861  0014E6  EF77  F00A         	goto	u7710
  3862  0014EA                     u7711:
  3863  0014EA  EF7B  F00A         	goto	l7160
  3864  0014EE                     u7710:
  3865  0014EE                     
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3868  0014EE  0E66               	movlw	102
  3869  0014F0  6FC6               	movwf	efgtoa@nmode& (0+255),b
  3870                           
  3871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3872  0014F2  EF7D  F00A         	goto	l7162
  3873  0014F6                     l7160:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3877  0014F6  0E65               	movlw	101
  3878  0014F8  6FC6               	movwf	efgtoa@nmode& (0+255),b
  3879  0014FA                     l7162:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3883  0014FA  C0C2  F0B8         	movff	efgtoa@p,efgtoa@m
  3884  0014FE  C0C3  F0B9         	movff	efgtoa@p+1,efgtoa@m+1
  3885  001502                     
  3886                           ; BSR set to: 0
  3887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3888  001502  0E67               	movlw	103
  3889  001504  19C7               	xorwf	efgtoa@mode& (0+255),w,b
  3890  001506  A4D8               	btfss	status,2,c
  3891  001508  EF88  F00A         	goto	u7721
  3892  00150C  EF8A  F00A         	goto	u7720
  3893  001510                     u7721:
  3894  001510  EF9A  F00A         	goto	l7170
  3895  001514                     u7720:
  3896  001514                     
  3897                           ; BSR set to: 0
  3898  001514  0E66               	movlw	102
  3899  001516  19C6               	xorwf	efgtoa@nmode& (0+255),w,b
  3900  001518  A4D8               	btfss	status,2,c
  3901  00151A  EF91  F00A         	goto	u7731
  3902  00151E  EF93  F00A         	goto	u7730
  3903  001522                     u7731:
  3904  001522  EF9C  F00A         	goto	l7172
  3905  001526                     u7730:
  3906  001526                     
  3907                           ; BSR set to: 0
  3908  001526  BFD7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3909  001528  EF9A  F00A         	goto	u7740
  3910  00152C  EF98  F00A         	goto	u7741
  3911  001530                     u7741:
  3912  001530  EF9C  F00A         	goto	l7172
  3913  001534                     u7740:
  3914  001534                     l7170:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3918  001534  4BB8               	infsnz	efgtoa@m& (0+255),f,b
  3919  001536  2BB9               	incf	(efgtoa@m+1)& (0+255),f,b
  3920  001538                     l7172:
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3924  001538  0E66               	movlw	102
  3925  00153A  19C6               	xorwf	efgtoa@nmode& (0+255),w,b
  3926  00153C  A4D8               	btfss	status,2,c
  3927  00153E  EFA3  F00A         	goto	u7751
  3928  001542  EFA5  F00A         	goto	u7750
  3929  001546                     u7751:
  3930  001546  EFC5  F00A         	goto	l7182
  3931  00154A                     u7750:
  3932  00154A                     
  3933                           ; BSR set to: 0
  3934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3935  00154A  BFD7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3936  00154C  EFAC  F00A         	goto	u7760
  3937  001550  EFAA  F00A         	goto	u7761
  3938  001554                     u7761:
  3939  001554  EFB8  F00A         	goto	l7178
  3940  001558                     u7760:
  3941  001558                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3944  001558  0E00               	movlw	0
  3945  00155A  6FDA               	movwf	efgtoa@u& (0+255),b
  3946  00155C  0E00               	movlw	0
  3947  00155E  6FDB               	movwf	(efgtoa@u+1)& (0+255),b
  3948  001560  0E80               	movlw	128
  3949  001562  6FDC               	movwf	(efgtoa@u+2)& (0+255),b
  3950  001564  0E3F               	movlw	63
  3951  001566  6FDD               	movwf	(efgtoa@u+3)& (0+255),b
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3954  001568  0E00               	movlw	0
  3955  00156A  6FD7               	movwf	(efgtoa@e+1)& (0+255),b
  3956  00156C  0E00               	movlw	0
  3957  00156E  6FD6               	movwf	efgtoa@e& (0+255),b
  3958  001570                     l7178:
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3962  001570  0E67               	movlw	103
  3963  001572  19C7               	xorwf	efgtoa@mode& (0+255),w,b
  3964  001574  B4D8               	btfsc	status,2,c
  3965  001576  EFBF  F00A         	goto	u7771
  3966  00157A  EFC1  F00A         	goto	u7770
  3967  00157E                     u7771:
  3968  00157E  EFC5  F00A         	goto	l7182
  3969  001582                     u7770:
  3970  001582                     
  3971                           ; BSR set to: 0
  3972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3973  001582  51D6               	movf	efgtoa@e& (0+255),w,b
  3974  001584  27B8               	addwf	efgtoa@m& (0+255),f,b
  3975  001586  51D7               	movf	(efgtoa@e+1)& (0+255),w,b
  3976  001588  23B9               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3977  00158A                     l7182:
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3981  00158A  0E00               	movlw	0
  3982  00158C  6FD1               	movwf	(efgtoa@i+1)& (0+255),b
  3983  00158E  0E00               	movlw	0
  3984  001590  6FD0               	movwf	efgtoa@i& (0+255),b
  3985  001592                     
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3988  001592  C0D2  F0C8         	movff	efgtoa@g,efgtoa@h
  3989  001596  C0D3  F0C9         	movff	efgtoa@g+1,efgtoa@h+1
  3990  00159A  C0D4  F0CA         	movff	efgtoa@g+2,efgtoa@h+2
  3991  00159E  C0D5  F0CB         	movff	efgtoa@g+3,efgtoa@h+3
  3992  0015A2                     
  3993                           ; BSR set to: 0
  3994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3995  0015A2  C0DA  F0BA         	movff	efgtoa@u,efgtoa@ou
  3996  0015A6  C0DB  F0BB         	movff	efgtoa@u+1,efgtoa@ou+1
  3997  0015AA  C0DC  F0BC         	movff	efgtoa@u+2,efgtoa@ou+2
  3998  0015AE  C0DD  F0BD         	movff	efgtoa@u+3,efgtoa@ou+3
  3999                           
  4000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4001  0015B2  EF56  F00B         	goto	l7196
  4002  0015B6                     l7188:
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4006  0015B6  C0C8  F022         	movff	efgtoa@h,___fldiv@b
  4007  0015BA  C0C9  F023         	movff	efgtoa@h+1,___fldiv@b+1
  4008  0015BE  C0CA  F024         	movff	efgtoa@h+2,___fldiv@b+2
  4009  0015C2  C0CB  F025         	movff	efgtoa@h+3,___fldiv@b+3
  4010  0015C6  C0DA  F026         	movff	efgtoa@u,___fldiv@a
  4011  0015CA  C0DB  F027         	movff	efgtoa@u+1,___fldiv@a+1
  4012  0015CE  C0DC  F028         	movff	efgtoa@u+2,___fldiv@a+2
  4013  0015D2  C0DD  F029         	movff	efgtoa@u+3,___fldiv@a+3
  4014  0015D6  EC54  F020         	call	___fldiv	;wreg free
  4015  0015DA  C022  F02E         	movff	?___fldiv,floorf@x
  4016  0015DE  C023  F02F         	movff	?___fldiv+1,floorf@x+1
  4017  0015E2  C024  F030         	movff	?___fldiv+2,floorf@x+2
  4018  0015E6  C025  F031         	movff	?___fldiv+3,floorf@x+3
  4019  0015EA  EC22  F022         	call	_floorf	;wreg free
  4020  0015EE  C02E  F0CC         	movff	?_floorf,efgtoa@l
  4021  0015F2  C02F  F0CD         	movff	?_floorf+1,efgtoa@l+1
  4022  0015F6  C030  F0CE         	movff	?_floorf+2,efgtoa@l+2
  4023  0015FA  C031  F0CF         	movff	?_floorf+3,efgtoa@l+3
  4024                           
  4025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4026  0015FE  C0CC  F014         	movff	efgtoa@l,___fltol@f1
  4027  001602  C0CD  F015         	movff	efgtoa@l+1,___fltol@f1+1
  4028  001606  C0CE  F016         	movff	efgtoa@l+2,___fltol@f1+2
  4029  00160A  C0CF  F017         	movff	efgtoa@l+3,___fltol@f1+3
  4030  00160E  ECDD  F026         	call	___fltol	;wreg free
  4031  001612  C014  F0BE         	movff	?___fltol,efgtoa@d
  4032  001616  C015  F0BF         	movff	?___fltol+1,efgtoa@d+1
  4033  00161A                     
  4034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4035  00161A  C0C8  F092         	movff	efgtoa@h,___flsub@b
  4036  00161E  C0C9  F093         	movff	efgtoa@h+1,___flsub@b+1
  4037  001622  C0CA  F094         	movff	efgtoa@h+2,___flsub@b+2
  4038  001626  C0CB  F095         	movff	efgtoa@h+3,___flsub@b+3
  4039  00162A  C0DA  F071         	movff	efgtoa@u,___flmul@a
  4040  00162E  C0DB  F072         	movff	efgtoa@u+1,___flmul@a+1
  4041  001632  C0DC  F073         	movff	efgtoa@u+2,___flmul@a+2
  4042  001636  C0DD  F074         	movff	efgtoa@u+3,___flmul@a+3
  4043  00163A  C0CC  F06D         	movff	efgtoa@l,___flmul@b
  4044  00163E  C0CD  F06E         	movff	efgtoa@l+1,___flmul@b+1
  4045  001642  C0CE  F06F         	movff	efgtoa@l+2,___flmul@b+2
  4046  001646  C0CF  F070         	movff	efgtoa@l+3,___flmul@b+3
  4047  00164A  EC3E  F01E         	call	___flmul	;wreg free
  4048  00164E  C06D  F096         	movff	?___flmul,___flsub@a
  4049  001652  C06E  F097         	movff	?___flmul+1,___flsub@a+1
  4050  001656  C06F  F098         	movff	?___flmul+2,___flsub@a+2
  4051  00165A  C070  F099         	movff	?___flmul+3,___flsub@a+3
  4052  00165E  EC60  F02D         	call	___flsub	;wreg free
  4053  001662  C092  F0C8         	movff	?___flsub,efgtoa@h
  4054  001666  C093  F0C9         	movff	?___flsub+1,efgtoa@h+1
  4055  00166A  C094  F0CA         	movff	?___flsub+2,efgtoa@h+2
  4056  00166E  C095  F0CB         	movff	?___flsub+3,efgtoa@h+3
  4057  001672                     
  4058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4059  001672  C0DA  F022         	movff	efgtoa@u,___fldiv@b
  4060  001676  C0DB  F023         	movff	efgtoa@u+1,___fldiv@b+1
  4061  00167A  C0DC  F024         	movff	efgtoa@u+2,___fldiv@b+2
  4062  00167E  C0DD  F025         	movff	efgtoa@u+3,___fldiv@b+3
  4063  001682  0E00               	movlw	0
  4064  001684  6E26               	movwf	___fldiv@a^0,c
  4065  001686  0E00               	movlw	0
  4066  001688  6E27               	movwf	(___fldiv@a+1)^0,c
  4067  00168A  0E20               	movlw	32
  4068  00168C  6E28               	movwf	(___fldiv@a+2)^0,c
  4069  00168E  0E41               	movlw	65
  4070  001690  6E29               	movwf	(___fldiv@a+3)^0,c
  4071  001692  EC54  F020         	call	___fldiv	;wreg free
  4072  001696  C022  F0DA         	movff	?___fldiv,efgtoa@u
  4073  00169A  C023  F0DB         	movff	?___fldiv+1,efgtoa@u+1
  4074  00169E  C024  F0DC         	movff	?___fldiv+2,efgtoa@u+2
  4075  0016A2  C025  F0DD         	movff	?___fldiv+3,efgtoa@u+3
  4076  0016A6                     
  4077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4078  0016A6  0100               	movlb	0	; () banked
  4079  0016A8  4BD0               	infsnz	efgtoa@i& (0+255),f,b
  4080  0016AA  2BD1               	incf	(efgtoa@i+1)& (0+255),f,b
  4081  0016AC                     l7196:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4085  0016AC  51B8               	movf	efgtoa@m& (0+255),w,b
  4086  0016AE  5DD0               	subwf	efgtoa@i& (0+255),w,b
  4087  0016B0  51D1               	movf	(efgtoa@i+1)& (0+255),w,b
  4088  0016B2  0A80               	xorlw	128
  4089  0016B4  6FA1               	movwf	??_efgtoa& (0+255),b
  4090  0016B6  51B9               	movf	(efgtoa@m+1)& (0+255),w,b
  4091  0016B8  0A80               	xorlw	128
  4092  0016BA  59A1               	subwfb	??_efgtoa& (0+255),w,b
  4093  0016BC  A0D8               	btfss	status,0,c
  4094  0016BE  EF63  F00B         	goto	u7781
  4095  0016C2  EF65  F00B         	goto	u7780
  4096  0016C6                     u7781:
  4097  0016C6  EFDB  F00A         	goto	l7188
  4098  0016CA                     u7780:
  4099  0016CA                     
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4102  0016CA  C0DA  F06D         	movff	efgtoa@u,___flmul@b
  4103  0016CE  C0DB  F06E         	movff	efgtoa@u+1,___flmul@b+1
  4104  0016D2  C0DC  F06F         	movff	efgtoa@u+2,___flmul@b+2
  4105  0016D6  C0DD  F070         	movff	efgtoa@u+3,___flmul@b+3
  4106  0016DA  0E00               	movlw	0
  4107  0016DC  6F71               	movwf	___flmul@a& (0+255),b
  4108  0016DE  0E00               	movlw	0
  4109  0016E0  6F72               	movwf	(___flmul@a+1)& (0+255),b
  4110  0016E2  0EA0               	movlw	160
  4111  0016E4  6F73               	movwf	(___flmul@a+2)& (0+255),b
  4112  0016E6  0E40               	movlw	64
  4113  0016E8  6F74               	movwf	(___flmul@a+3)& (0+255),b
  4114  0016EA  EC3E  F01E         	call	___flmul	;wreg free
  4115  0016EE  C06D  F0CC         	movff	?___flmul,efgtoa@l
  4116  0016F2  C06E  F0CD         	movff	?___flmul+1,efgtoa@l+1
  4117  0016F6  C06F  F0CE         	movff	?___flmul+2,efgtoa@l+2
  4118  0016FA  C070  F0CF         	movff	?___flmul+3,efgtoa@l+3
  4119  0016FE                     
  4120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4121  0016FE  C0C8  F082         	movff	efgtoa@h,___flge@ff1
  4122  001702  C0C9  F083         	movff	efgtoa@h+1,___flge@ff1+1
  4123  001706  C0CA  F084         	movff	efgtoa@h+2,___flge@ff1+2
  4124  00170A  C0CB  F085         	movff	efgtoa@h+3,___flge@ff1+3
  4125  00170E  C0CC  F086         	movff	efgtoa@l,___flge@ff2
  4126  001712  C0CD  F087         	movff	efgtoa@l+1,___flge@ff2+1
  4127  001716  C0CE  F088         	movff	efgtoa@l+2,___flge@ff2+2
  4128  00171A  C0CF  F089         	movff	efgtoa@l+3,___flge@ff2+3
  4129  00171E  EC60  F027         	call	___flge	;wreg free
  4130  001722  0100               	movlb	0	; () banked
  4131  001724  B0D8               	btfsc	status,0,c
  4132  001726  EF97  F00B         	goto	u7791
  4133  00172A  EF99  F00B         	goto	u7790
  4134  00172E                     u7791:
  4135  00172E  EFA3  F00B         	goto	l7204
  4136  001732                     u7790:
  4137  001732                     
  4138                           ; BSR set to: 0
  4139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4140  001732  0E00               	movlw	0
  4141  001734  6FCC               	movwf	efgtoa@l& (0+255),b
  4142  001736  0E00               	movlw	0
  4143  001738  6FCD               	movwf	(efgtoa@l+1)& (0+255),b
  4144  00173A  0E00               	movlw	0
  4145  00173C  6FCE               	movwf	(efgtoa@l+2)& (0+255),b
  4146  00173E  0E00               	movlw	0
  4147  001740  6FCF               	movwf	(efgtoa@l+3)& (0+255),b
  4148                           
  4149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4150  001742  EFCC  F00B         	goto	l7210
  4151  001746                     l7204:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4155  001746  C0C8  F014         	movff	efgtoa@h,___fleq@ff1
  4156  00174A  C0C9  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  4157  00174E  C0CA  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  4158  001752  C0CB  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  4159  001756  C0CC  F018         	movff	efgtoa@l,___fleq@ff2
  4160  00175A  C0CD  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  4161  00175E  C0CE  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  4162  001762  C0CF  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  4163  001766  EC53  F02A         	call	___fleq	;wreg free
  4164  00176A  A0D8               	btfss	status,0,c
  4165  00176C  EFBA  F00B         	goto	u7801
  4166  001770  EFBC  F00B         	goto	u7800
  4167  001774                     u7801:
  4168  001774  EFCC  F00B         	goto	l7210
  4169  001778                     u7800:
  4170  001778  0100               	movlb	0	; () banked
  4171  00177A  B1BE               	btfsc	efgtoa@d& (0+255),0,b
  4172  00177C  EFC2  F00B         	goto	u7811
  4173  001780  EFC4  F00B         	goto	u7810
  4174  001784                     u7811:
  4175  001784  EFCC  F00B         	goto	l7210
  4176  001788                     u7810:
  4177  001788                     
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4180  001788  0E00               	movlw	0
  4181  00178A  6FCC               	movwf	efgtoa@l& (0+255),b
  4182  00178C  0E00               	movlw	0
  4183  00178E  6FCD               	movwf	(efgtoa@l+1)& (0+255),b
  4184  001790  0E00               	movlw	0
  4185  001792  6FCE               	movwf	(efgtoa@l+2)& (0+255),b
  4186  001794  0E00               	movlw	0
  4187  001796  6FCF               	movwf	(efgtoa@l+3)& (0+255),b
  4188  001798                     l7210:
  4189                           
  4190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4191  001798  C0D2  F082         	movff	efgtoa@g,___fladd@b
  4192  00179C  C0D3  F083         	movff	efgtoa@g+1,___fladd@b+1
  4193  0017A0  C0D4  F084         	movff	efgtoa@g+2,___fladd@b+2
  4194  0017A4  C0D5  F085         	movff	efgtoa@g+3,___fladd@b+3
  4195  0017A8  C0CC  F086         	movff	efgtoa@l,___fladd@a
  4196  0017AC  C0CD  F087         	movff	efgtoa@l+1,___fladd@a+1
  4197  0017B0  C0CE  F088         	movff	efgtoa@l+2,___fladd@a+2
  4198  0017B4  C0CF  F089         	movff	efgtoa@l+3,___fladd@a+3
  4199  0017B8  EC8F  F019         	call	___fladd	;wreg free
  4200  0017BC  C082  F0C8         	movff	?___fladd,efgtoa@h
  4201  0017C0  C083  F0C9         	movff	?___fladd+1,efgtoa@h+1
  4202  0017C4  C084  F0CA         	movff	?___fladd+2,efgtoa@h+2
  4203  0017C8  C085  F0CB         	movff	?___fladd+3,efgtoa@h+3
  4204  0017CC                     
  4205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4206  0017CC  C0C8  F082         	movff	efgtoa@h,___flge@ff1
  4207  0017D0  C0C9  F083         	movff	efgtoa@h+1,___flge@ff1+1
  4208  0017D4  C0CA  F084         	movff	efgtoa@h+2,___flge@ff1+2
  4209  0017D8  C0CB  F085         	movff	efgtoa@h+3,___flge@ff1+3
  4210  0017DC  0E00               	movlw	0
  4211  0017DE  0100               	movlb	0	; () banked
  4212  0017E0  6F71               	movwf	___flmul@a& (0+255),b
  4213  0017E2  0E00               	movlw	0
  4214  0017E4  6F72               	movwf	(___flmul@a+1)& (0+255),b
  4215  0017E6  0E20               	movlw	32
  4216  0017E8  6F73               	movwf	(___flmul@a+2)& (0+255),b
  4217  0017EA  0E41               	movlw	65
  4218  0017EC  6F74               	movwf	(___flmul@a+3)& (0+255),b
  4219  0017EE  C0BA  F06D         	movff	efgtoa@ou,___flmul@b
  4220  0017F2  C0BB  F06E         	movff	efgtoa@ou+1,___flmul@b+1
  4221  0017F6  C0BC  F06F         	movff	efgtoa@ou+2,___flmul@b+2
  4222  0017FA  C0BD  F070         	movff	efgtoa@ou+3,___flmul@b+3
  4223  0017FE  EC3E  F01E         	call	___flmul	;wreg free
  4224  001802  C06D  F086         	movff	?___flmul,___flge@ff2
  4225  001806  C06E  F087         	movff	?___flmul+1,___flge@ff2+1
  4226  00180A  C06F  F088         	movff	?___flmul+2,___flge@ff2+2
  4227  00180E  C070  F089         	movff	?___flmul+3,___flge@ff2+3
  4228  001812  EC60  F027         	call	___flge	;wreg free
  4229  001816  0100               	movlb	0	; () banked
  4230  001818  A0D8               	btfss	status,0,c
  4231  00181A  EF11  F00C         	goto	u7821
  4232  00181E  EF13  F00C         	goto	u7820
  4233  001822                     u7821:
  4234  001822  EF3B  F00C         	goto	l7222
  4235  001826                     u7820:
  4236  001826                     
  4237                           ; BSR set to: 0
  4238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4239  001826  4BD6               	infsnz	efgtoa@e& (0+255),f,b
  4240  001828  2BD7               	incf	(efgtoa@e+1)& (0+255),f,b
  4241  00182A                     
  4242                           ; BSR set to: 0
  4243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4244  00182A  C0BA  F06D         	movff	efgtoa@ou,___flmul@b
  4245  00182E  C0BB  F06E         	movff	efgtoa@ou+1,___flmul@b+1
  4246  001832  C0BC  F06F         	movff	efgtoa@ou+2,___flmul@b+2
  4247  001836  C0BD  F070         	movff	efgtoa@ou+3,___flmul@b+3
  4248  00183A  0E00               	movlw	0
  4249  00183C  6F71               	movwf	___flmul@a& (0+255),b
  4250  00183E  0E00               	movlw	0
  4251  001840  6F72               	movwf	(___flmul@a+1)& (0+255),b
  4252  001842  0E20               	movlw	32
  4253  001844  6F73               	movwf	(___flmul@a+2)& (0+255),b
  4254  001846  0E41               	movlw	65
  4255  001848  6F74               	movwf	(___flmul@a+3)& (0+255),b
  4256  00184A  EC3E  F01E         	call	___flmul	;wreg free
  4257  00184E  C06D  F0BA         	movff	?___flmul,efgtoa@ou
  4258  001852  C06E  F0BB         	movff	?___flmul+1,efgtoa@ou+1
  4259  001856  C06F  F0BC         	movff	?___flmul+2,efgtoa@ou+2
  4260  00185A  C070  F0BD         	movff	?___flmul+3,efgtoa@ou+3
  4261  00185E                     
  4262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4263  00185E  0E66               	movlw	102
  4264  001860  0100               	movlb	0	; () banked
  4265  001862  19C6               	xorwf	efgtoa@nmode& (0+255),w,b
  4266  001864  A4D8               	btfss	status,2,c
  4267  001866  EF37  F00C         	goto	u7831
  4268  00186A  EF39  F00C         	goto	u7830
  4269  00186E                     u7831:
  4270  00186E  EF3B  F00C         	goto	l7222
  4271  001872                     u7830:
  4272  001872                     
  4273                           ; BSR set to: 0
  4274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4275  001872  4BB8               	infsnz	efgtoa@m& (0+255),f,b
  4276  001874  2BB9               	incf	(efgtoa@m+1)& (0+255),f,b
  4277  001876                     l7222:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4281  001876  C0BA  F0DA         	movff	efgtoa@ou,efgtoa@u
  4282  00187A  C0BB  F0DB         	movff	efgtoa@ou+1,efgtoa@u+1
  4283  00187E  C0BC  F0DC         	movff	efgtoa@ou+2,efgtoa@u+2
  4284  001882  C0BD  F0DD         	movff	efgtoa@ou+3,efgtoa@u+3
  4285  001886                     
  4286                           ; BSR set to: 0
  4287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4288  001886  0E65               	movlw	101
  4289  001888  19C6               	xorwf	efgtoa@nmode& (0+255),w,b
  4290  00188A  B4D8               	btfsc	status,2,c
  4291  00188C  EF4A  F00C         	goto	u7841
  4292  001890  EF4C  F00C         	goto	u7840
  4293  001894                     u7841:
  4294  001894  EF52  F00C         	goto	l7228
  4295  001898                     u7840:
  4296  001898                     
  4297                           ; BSR set to: 0
  4298  001898  C0D6  F0B6         	movff	efgtoa@e,efgtoa@ne
  4299  00189C  C0D7  F0B7         	movff	efgtoa@e+1,efgtoa@ne+1
  4300  0018A0  EF56  F00C         	goto	l1215
  4301  0018A4                     l7228:
  4302                           
  4303                           ; BSR set to: 0
  4304  0018A4  0E00               	movlw	0
  4305  0018A6  6FB7               	movwf	(efgtoa@ne+1)& (0+255),b
  4306  0018A8  0E00               	movlw	0
  4307  0018AA  6FB6               	movwf	efgtoa@ne& (0+255),b
  4308  0018AC                     l1215:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4312  0018AC  0E00               	movlw	0
  4313  0018AE  6FB5               	movwf	(efgtoa@pp+1)& (0+255),b
  4314  0018B0  0E00               	movlw	0
  4315  0018B2  6FB4               	movwf	efgtoa@pp& (0+255),b
  4316                           
  4317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4318  0018B4  0E00               	movlw	0
  4319  0018B6  6FB3               	movwf	(efgtoa@t+1)& (0+255),b
  4320  0018B8  0E00               	movlw	0
  4321  0018BA  6FB2               	movwf	efgtoa@t& (0+255),b
  4322                           
  4323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4324  0018BC  0E00               	movlw	0
  4325  0018BE  6FD1               	movwf	(efgtoa@i+1)& (0+255),b
  4326  0018C0  0E00               	movlw	0
  4327  0018C2  6FD0               	movwf	efgtoa@i& (0+255),b
  4328                           
  4329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4330  0018C4  EF52  F00D         	goto	l7278
  4331  0018C8                     l7230:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4335  0018C8  C0C8  F022         	movff	efgtoa@h,___fldiv@b
  4336  0018CC  C0C9  F023         	movff	efgtoa@h+1,___fldiv@b+1
  4337  0018D0  C0CA  F024         	movff	efgtoa@h+2,___fldiv@b+2
  4338  0018D4  C0CB  F025         	movff	efgtoa@h+3,___fldiv@b+3
  4339  0018D8  C0DA  F026         	movff	efgtoa@u,___fldiv@a
  4340  0018DC  C0DB  F027         	movff	efgtoa@u+1,___fldiv@a+1
  4341  0018E0  C0DC  F028         	movff	efgtoa@u+2,___fldiv@a+2
  4342  0018E4  C0DD  F029         	movff	efgtoa@u+3,___fldiv@a+3
  4343  0018E8  EC54  F020         	call	___fldiv	;wreg free
  4344  0018EC  C022  F02E         	movff	?___fldiv,floorf@x
  4345  0018F0  C023  F02F         	movff	?___fldiv+1,floorf@x+1
  4346  0018F4  C024  F030         	movff	?___fldiv+2,floorf@x+2
  4347  0018F8  C025  F031         	movff	?___fldiv+3,floorf@x+3
  4348  0018FC  EC22  F022         	call	_floorf	;wreg free
  4349  001900  C02E  F0CC         	movff	?_floorf,efgtoa@l
  4350  001904  C02F  F0CD         	movff	?_floorf+1,efgtoa@l+1
  4351  001908  C030  F0CE         	movff	?_floorf+2,efgtoa@l+2
  4352  00190C  C031  F0CF         	movff	?_floorf+3,efgtoa@l+3
  4353                           
  4354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4355  001910  C0CC  F014         	movff	efgtoa@l,___fltol@f1
  4356  001914  C0CD  F015         	movff	efgtoa@l+1,___fltol@f1+1
  4357  001918  C0CE  F016         	movff	efgtoa@l+2,___fltol@f1+2
  4358  00191C  C0CF  F017         	movff	efgtoa@l+3,___fltol@f1+3
  4359  001920  ECDD  F026         	call	___fltol	;wreg free
  4360  001924  C014  F0BE         	movff	?___fltol,efgtoa@d
  4361  001928  C015  F0BF         	movff	?___fltol+1,efgtoa@d+1
  4362  00192C                     
  4363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4364  00192C  B83C               	btfsc	_flags^0,4,c
  4365  00192E  EF9B  F00C         	goto	u7851
  4366  001932  EF9D  F00C         	goto	u7850
  4367  001936                     u7851:
  4368  001936  EFBB  F00C         	goto	l7242
  4369  00193A                     u7850:
  4370  00193A  0100               	movlb	0	; () banked
  4371  00193C  51BE               	movf	efgtoa@d& (0+255),w,b
  4372  00193E  11BF               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4373  001940  A4D8               	btfss	status,2,c
  4374  001942  EFA5  F00C         	goto	u7861
  4375  001946  EFA7  F00C         	goto	u7860
  4376  00194A                     u7861:
  4377  00194A  EFBB  F00C         	goto	l7242
  4378  00194E                     u7860:
  4379  00194E                     
  4380                           ; BSR set to: 0
  4381  00194E  0E67               	movlw	103
  4382  001950  19C7               	xorwf	efgtoa@mode& (0+255),w,b
  4383  001952  A4D8               	btfss	status,2,c
  4384  001954  EFAE  F00C         	goto	u7871
  4385  001958  EFB0  F00C         	goto	u7870
  4386  00195C                     u7871:
  4387  00195C  EFBB  F00C         	goto	l7242
  4388  001960                     u7870:
  4389  001960                     
  4390                           ; BSR set to: 0
  4391  001960  BFB7               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4392  001962  EFB7  F00C         	goto	u7880
  4393  001966  EFB5  F00C         	goto	u7881
  4394  00196A                     u7881:
  4395  00196A  EFBB  F00C         	goto	l7242
  4396  00196E                     u7880:
  4397  00196E                     
  4398                           ; BSR set to: 0
  4399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4400  00196E  4BB2               	infsnz	efgtoa@t& (0+255),f,b
  4401  001970  2BB3               	incf	(efgtoa@t+1)& (0+255),f,b
  4402                           
  4403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4404  001972  EF06  F00D         	goto	l7270
  4405  001976                     l7242:
  4406                           
  4407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4408  001976  0100               	movlb	0	; () banked
  4409  001978  51B4               	movf	efgtoa@pp& (0+255),w,b
  4410  00197A  11B5               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4411  00197C  A4D8               	btfss	status,2,c
  4412  00197E  EFC3  F00C         	goto	u7891
  4413  001982  EFC5  F00C         	goto	u7890
  4414  001986                     u7891:
  4415  001986  EFEF  F00C         	goto	l7262
  4416  00198A                     u7890:
  4417  00198A                     
  4418                           ; BSR set to: 0
  4419  00198A  BFB7               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4420  00198C  EFCC  F00C         	goto	u7900
  4421  001990  EFCA  F00C         	goto	u7901
  4422  001994                     u7901:
  4423  001994  EFEF  F00C         	goto	l7262
  4424  001998                     u7900:
  4425  001998                     
  4426                           ; BSR set to: 0
  4427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4428  001998  0EA6               	movlw	low _dbuf
  4429  00199A  25D8               	addwf	efgtoa@n& (0+255),w,b
  4430  00199C  6ED9               	movwf	fsr2l,c
  4431  00199E  0E01               	movlw	high _dbuf
  4432  0019A0  21D9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4433  0019A2  6EDA               	movwf	fsr2h,c
  4434  0019A4  0E2E               	movlw	46
  4435  0019A6  6EDF               	movwf	indf2,c
  4436  0019A8                     
  4437                           ; BSR set to: 0
  4438  0019A8  4BD8               	infsnz	efgtoa@n& (0+255),f,b
  4439  0019AA  2BD9               	incf	(efgtoa@n+1)& (0+255),f,b
  4440  0019AC                     
  4441                           ; BSR set to: 0
  4442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4443  0019AC  07C4               	decf	efgtoa@w& (0+255),f,b
  4444  0019AE  A0D8               	btfss	status,0,c
  4445  0019B0  07C5               	decf	(efgtoa@w+1)& (0+255),f,b
  4446  0019B2                     
  4447                           ; BSR set to: 0
  4448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4449  0019B2  0E00               	movlw	0
  4450  0019B4  6FB5               	movwf	(efgtoa@pp+1)& (0+255),b
  4451  0019B6  0E01               	movlw	1
  4452  0019B8  6FB4               	movwf	efgtoa@pp& (0+255),b
  4453  0019BA  EFEF  F00C         	goto	l7262
  4454  0019BE                     l7254:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4458  0019BE  0EA6               	movlw	low _dbuf
  4459  0019C0  25D8               	addwf	efgtoa@n& (0+255),w,b
  4460  0019C2  6ED9               	movwf	fsr2l,c
  4461  0019C4  0E01               	movlw	high _dbuf
  4462  0019C6  21D9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4463  0019C8  6EDA               	movwf	fsr2h,c
  4464  0019CA  0E30               	movlw	48
  4465  0019CC  6EDF               	movwf	indf2,c
  4466  0019CE                     
  4467                           ; BSR set to: 0
  4468  0019CE  4BD8               	infsnz	efgtoa@n& (0+255),f,b
  4469  0019D0  2BD9               	incf	(efgtoa@n+1)& (0+255),f,b
  4470  0019D2                     
  4471                           ; BSR set to: 0
  4472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4473  0019D2  07C4               	decf	efgtoa@w& (0+255),f,b
  4474  0019D4  A0D8               	btfss	status,0,c
  4475  0019D6  07C5               	decf	(efgtoa@w+1)& (0+255),f,b
  4476  0019D8                     
  4477                           ; BSR set to: 0
  4478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4479  0019D8  07B2               	decf	efgtoa@t& (0+255),f,b
  4480  0019DA  A0D8               	btfss	status,0,c
  4481  0019DC  07B3               	decf	(efgtoa@t+1)& (0+255),f,b
  4482  0019DE                     l7262:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4486  0019DE  51B2               	movf	efgtoa@t& (0+255),w,b
  4487  0019E0  11B3               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4488  0019E2  A4D8               	btfss	status,2,c
  4489  0019E4  EFF6  F00C         	goto	u7911
  4490  0019E8  EFF8  F00C         	goto	u7910
  4491  0019EC                     u7911:
  4492  0019EC  EFDF  F00C         	goto	l7254
  4493  0019F0                     u7910:
  4494  0019F0                     
  4495                           ; BSR set to: 0
  4496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4497  0019F0  0EA6               	movlw	low _dbuf
  4498  0019F2  25D8               	addwf	efgtoa@n& (0+255),w,b
  4499  0019F4  6ED9               	movwf	fsr2l,c
  4500  0019F6  0E01               	movlw	high _dbuf
  4501  0019F8  21D9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4502  0019FA  6EDA               	movwf	fsr2h,c
  4503  0019FC  51BE               	movf	efgtoa@d& (0+255),w,b
  4504  0019FE  0F30               	addlw	48
  4505  001A00  6EDF               	movwf	indf2,c
  4506  001A02                     
  4507                           ; BSR set to: 0
  4508  001A02  4BD8               	infsnz	efgtoa@n& (0+255),f,b
  4509  001A04  2BD9               	incf	(efgtoa@n+1)& (0+255),f,b
  4510  001A06                     
  4511                           ; BSR set to: 0
  4512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4513  001A06  07C4               	decf	efgtoa@w& (0+255),f,b
  4514  001A08  A0D8               	btfss	status,0,c
  4515  001A0A  07C5               	decf	(efgtoa@w+1)& (0+255),f,b
  4516  001A0C                     l7270:
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4520  001A0C  C0C8  F092         	movff	efgtoa@h,___flsub@b
  4521  001A10  C0C9  F093         	movff	efgtoa@h+1,___flsub@b+1
  4522  001A14  C0CA  F094         	movff	efgtoa@h+2,___flsub@b+2
  4523  001A18  C0CB  F095         	movff	efgtoa@h+3,___flsub@b+3
  4524  001A1C  C0DA  F071         	movff	efgtoa@u,___flmul@a
  4525  001A20  C0DB  F072         	movff	efgtoa@u+1,___flmul@a+1
  4526  001A24  C0DC  F073         	movff	efgtoa@u+2,___flmul@a+2
  4527  001A28  C0DD  F074         	movff	efgtoa@u+3,___flmul@a+3
  4528  001A2C  C0CC  F06D         	movff	efgtoa@l,___flmul@b
  4529  001A30  C0CD  F06E         	movff	efgtoa@l+1,___flmul@b+1
  4530  001A34  C0CE  F06F         	movff	efgtoa@l+2,___flmul@b+2
  4531  001A38  C0CF  F070         	movff	efgtoa@l+3,___flmul@b+3
  4532  001A3C  EC3E  F01E         	call	___flmul	;wreg free
  4533  001A40  C06D  F096         	movff	?___flmul,___flsub@a
  4534  001A44  C06E  F097         	movff	?___flmul+1,___flsub@a+1
  4535  001A48  C06F  F098         	movff	?___flmul+2,___flsub@a+2
  4536  001A4C  C070  F099         	movff	?___flmul+3,___flsub@a+3
  4537  001A50  EC60  F02D         	call	___flsub	;wreg free
  4538  001A54  C092  F0C8         	movff	?___flsub,efgtoa@h
  4539  001A58  C093  F0C9         	movff	?___flsub+1,efgtoa@h+1
  4540  001A5C  C094  F0CA         	movff	?___flsub+2,efgtoa@h+2
  4541  001A60  C095  F0CB         	movff	?___flsub+3,efgtoa@h+3
  4542  001A64                     
  4543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4544  001A64  C0DA  F022         	movff	efgtoa@u,___fldiv@b
  4545  001A68  C0DB  F023         	movff	efgtoa@u+1,___fldiv@b+1
  4546  001A6C  C0DC  F024         	movff	efgtoa@u+2,___fldiv@b+2
  4547  001A70  C0DD  F025         	movff	efgtoa@u+3,___fldiv@b+3
  4548  001A74  0E00               	movlw	0
  4549  001A76  6E26               	movwf	___fldiv@a^0,c
  4550  001A78  0E00               	movlw	0
  4551  001A7A  6E27               	movwf	(___fldiv@a+1)^0,c
  4552  001A7C  0E20               	movlw	32
  4553  001A7E  6E28               	movwf	(___fldiv@a+2)^0,c
  4554  001A80  0E41               	movlw	65
  4555  001A82  6E29               	movwf	(___fldiv@a+3)^0,c
  4556  001A84  EC54  F020         	call	___fldiv	;wreg free
  4557  001A88  C022  F0DA         	movff	?___fldiv,efgtoa@u
  4558  001A8C  C023  F0DB         	movff	?___fldiv+1,efgtoa@u+1
  4559  001A90  C024  F0DC         	movff	?___fldiv+2,efgtoa@u+2
  4560  001A94  C025  F0DD         	movff	?___fldiv+3,efgtoa@u+3
  4561  001A98                     
  4562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4563  001A98  0100               	movlb	0	; () banked
  4564  001A9A  07B6               	decf	efgtoa@ne& (0+255),f,b
  4565  001A9C  A0D8               	btfss	status,0,c
  4566  001A9E  07B7               	decf	(efgtoa@ne+1)& (0+255),f,b
  4567  001AA0                     
  4568                           ; BSR set to: 0
  4569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4570  001AA0  4BD0               	infsnz	efgtoa@i& (0+255),f,b
  4571  001AA2  2BD1               	incf	(efgtoa@i+1)& (0+255),f,b
  4572  001AA4                     l7278:
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4576  001AA4  51B8               	movf	efgtoa@m& (0+255),w,b
  4577  001AA6  5DD0               	subwf	efgtoa@i& (0+255),w,b
  4578  001AA8  51D1               	movf	(efgtoa@i+1)& (0+255),w,b
  4579  001AAA  0A80               	xorlw	128
  4580  001AAC  6FA1               	movwf	??_efgtoa& (0+255),b
  4581  001AAE  51B9               	movf	(efgtoa@m+1)& (0+255),w,b
  4582  001AB0  0A80               	xorlw	128
  4583  001AB2  59A1               	subwfb	??_efgtoa& (0+255),w,b
  4584  001AB4  B0D8               	btfsc	status,0,c
  4585  001AB6  EF5F  F00D         	goto	u7921
  4586  001ABA  EF61  F00D         	goto	u7920
  4587  001ABE                     u7921:
  4588  001ABE  EF6F  F00D         	goto	l7282
  4589  001AC2                     u7920:
  4590  001AC2                     
  4591                           ; BSR set to: 0
  4592  001AC2  BFD9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4593  001AC4  EF6D  F00D         	goto	u7931
  4594  001AC8  51D9               	movf	(efgtoa@n+1)& (0+255),w,b
  4595  001ACA  E109               	bnz	u7930
  4596  001ACC  0E4B               	movlw	75
  4597  001ACE  5DD8               	subwf	efgtoa@n& (0+255),w,b
  4598  001AD0  A0D8               	btfss	status,0,c
  4599  001AD2  EF6D  F00D         	goto	u7931
  4600  001AD6  EF6F  F00D         	goto	u7930
  4601  001ADA                     u7931:
  4602  001ADA  EF64  F00C         	goto	l7230
  4603  001ADE                     u7930:
  4604  001ADE                     l7282:
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4608  001ADE  51B4               	movf	efgtoa@pp& (0+255),w,b
  4609  001AE0  11B5               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4610  001AE2  A4D8               	btfss	status,2,c
  4611  001AE4  EF76  F00D         	goto	u7941
  4612  001AE8  EF78  F00D         	goto	u7940
  4613  001AEC                     u7941:
  4614  001AEC  EF89  F00D         	goto	l7290
  4615  001AF0                     u7940:
  4616  001AF0                     
  4617                           ; BSR set to: 0
  4618  001AF0  A83C               	btfss	_flags^0,4,c
  4619  001AF2  EF7D  F00D         	goto	u7951
  4620  001AF6  EF7F  F00D         	goto	u7950
  4621  001AFA                     u7951:
  4622  001AFA  EF89  F00D         	goto	l7290
  4623  001AFE                     u7950:
  4624  001AFE                     
  4625                           ; BSR set to: 0
  4626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4627  001AFE  0EA6               	movlw	low _dbuf
  4628  001B00  25D8               	addwf	efgtoa@n& (0+255),w,b
  4629  001B02  6ED9               	movwf	fsr2l,c
  4630  001B04  0E01               	movlw	high _dbuf
  4631  001B06  21D9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4632  001B08  6EDA               	movwf	fsr2h,c
  4633  001B0A  0E2E               	movlw	46
  4634  001B0C  6EDF               	movwf	indf2,c
  4635  001B0E                     
  4636                           ; BSR set to: 0
  4637  001B0E  4BD8               	infsnz	efgtoa@n& (0+255),f,b
  4638  001B10  2BD9               	incf	(efgtoa@n+1)& (0+255),f,b
  4639  001B12                     l7290:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4643  001B12  0EA6               	movlw	low _dbuf
  4644  001B14  25D8               	addwf	efgtoa@n& (0+255),w,b
  4645  001B16  6ED9               	movwf	fsr2l,c
  4646  001B18  0E01               	movlw	high _dbuf
  4647  001B1A  21D9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4648  001B1C  6EDA               	movwf	fsr2h,c
  4649  001B1E  0E00               	movlw	0
  4650  001B20  6EDF               	movwf	indf2,c
  4651  001B22                     
  4652                           ; BSR set to: 0
  4653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4654  001B22  0E65               	movlw	101
  4655  001B24  19C6               	xorwf	efgtoa@nmode& (0+255),w,b
  4656  001B26  A4D8               	btfss	status,2,c
  4657  001B28  EF98  F00D         	goto	u7961
  4658  001B2C  EF9A  F00D         	goto	u7960
  4659  001B30                     u7961:
  4660  001B30  EFF0  F008         	goto	l7092
  4661  001B34                     u7960:
  4662  001B34                     
  4663                           ; BSR set to: 0
  4664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4665  001B34  0E00               	movlw	0
  4666  001B36  6FD1               	movwf	(efgtoa@i+1)& (0+255),b
  4667  001B38  0E4F               	movlw	79
  4668  001B3A  6FD0               	movwf	efgtoa@i& (0+255),b
  4669  001B3C                     
  4670                           ; BSR set to: 0
  4671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4672  001B3C  0EA6               	movlw	low _dbuf
  4673  001B3E  25D0               	addwf	efgtoa@i& (0+255),w,b
  4674  001B40  6ED9               	movwf	fsr2l,c
  4675  001B42  0E01               	movlw	high _dbuf
  4676  001B44  21D1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4677  001B46  6EDA               	movwf	fsr2h,c
  4678  001B48  0E00               	movlw	0
  4679  001B4A  6EDF               	movwf	indf2,c
  4680  001B4C                     
  4681                           ; BSR set to: 0
  4682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4683  001B4C  0E00               	movlw	0
  4684  001B4E  6FC1               	movwf	(efgtoa@sign+1)& (0+255),b
  4685  001B50  0E00               	movlw	0
  4686  001B52  6FC0               	movwf	efgtoa@sign& (0+255),b
  4687  001B54                     
  4688                           ; BSR set to: 0
  4689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4690  001B54  BFD7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4691  001B56  EFB1  F00D         	goto	u7970
  4692  001B5A  EFAF  F00D         	goto	u7971
  4693  001B5E                     u7971:
  4694  001B5E  EFB9  F00D         	goto	l7306
  4695  001B62                     u7970:
  4696  001B62                     
  4697                           ; BSR set to: 0
  4698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4699  001B62  0E00               	movlw	0
  4700  001B64  6FC1               	movwf	(efgtoa@sign+1)& (0+255),b
  4701  001B66  0E01               	movlw	1
  4702  001B68  6FC0               	movwf	efgtoa@sign& (0+255),b
  4703  001B6A                     
  4704                           ; BSR set to: 0
  4705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4706  001B6A  6DD6               	negf	efgtoa@e& (0+255),b
  4707  001B6C  1FD7               	comf	(efgtoa@e+1)& (0+255),f,b
  4708  001B6E  B0D8               	btfsc	status,0,c
  4709  001B70  2BD7               	incf	(efgtoa@e+1)& (0+255),f,b
  4710  001B72                     l7306:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4714  001B72  0E00               	movlw	0
  4715  001B74  6FC3               	movwf	(efgtoa@p+1)& (0+255),b
  4716  001B76  0E02               	movlw	2
  4717  001B78  6FC2               	movwf	efgtoa@p& (0+255),b
  4718                           
  4719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4720  001B7A  EFEA  F00D         	goto	l7318
  4721  001B7E                     l7308:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4725  001B7E  07D0               	decf	efgtoa@i& (0+255),f,b
  4726  001B80  A0D8               	btfss	status,0,c
  4727  001B82  07D1               	decf	(efgtoa@i+1)& (0+255),f,b
  4728  001B84                     
  4729                           ; BSR set to: 0
  4730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4731  001B84  0EA6               	movlw	low _dbuf
  4732  001B86  25D0               	addwf	efgtoa@i& (0+255),w,b
  4733  001B88  6ED9               	movwf	fsr2l,c
  4734  001B8A  0E01               	movlw	high _dbuf
  4735  001B8C  21D1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4736  001B8E  6EDA               	movwf	fsr2h,c
  4737  001B90  C0D6  F014         	movff	efgtoa@e,___awmod@dividend
  4738  001B94  C0D7  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  4739  001B98  0E00               	movlw	0
  4740  001B9A  6E17               	movwf	(___awmod@divisor+1)^0,c
  4741  001B9C  0E0A               	movlw	10
  4742  001B9E  6E16               	movwf	___awmod@divisor^0,c
  4743  001BA0  ECFB  F029         	call	___awmod	;wreg free
  4744  001BA4  5014               	movf	?___awmod^0,w,c
  4745  001BA6  0F30               	addlw	48
  4746  001BA8  6EDF               	movwf	indf2,c
  4747  001BAA                     
  4748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4749  001BAA  C0D6  F014         	movff	efgtoa@e,___awdiv@dividend
  4750  001BAE  C0D7  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  4751  001BB2  0E00               	movlw	0
  4752  001BB4  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4753  001BB6  0E0A               	movlw	10
  4754  001BB8  6E16               	movwf	___awdiv@divisor^0,c
  4755  001BBA  EC38  F029         	call	___awdiv	;wreg free
  4756  001BBE  C014  F0D6         	movff	?___awdiv,efgtoa@e
  4757  001BC2  C015  F0D7         	movff	?___awdiv+1,efgtoa@e+1
  4758  001BC6                     
  4759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4760  001BC6  0100               	movlb	0	; () banked
  4761  001BC8  07C2               	decf	efgtoa@p& (0+255),f,b
  4762  001BCA  A0D8               	btfss	status,0,c
  4763  001BCC  07C3               	decf	(efgtoa@p+1)& (0+255),f,b
  4764  001BCE                     
  4765                           ; BSR set to: 0
  4766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4767  001BCE  07C4               	decf	efgtoa@w& (0+255),f,b
  4768  001BD0  A0D8               	btfss	status,0,c
  4769  001BD2  07C5               	decf	(efgtoa@w+1)& (0+255),f,b
  4770  001BD4                     l7318:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4774  001BD4  51D6               	movf	efgtoa@e& (0+255),w,b
  4775  001BD6  11D7               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4776  001BD8  A4D8               	btfss	status,2,c
  4777  001BDA  EFF1  F00D         	goto	u7981
  4778  001BDE  EFF3  F00D         	goto	u7980
  4779  001BE2                     u7981:
  4780  001BE2  EFBF  F00D         	goto	l7308
  4781  001BE6                     u7980:
  4782  001BE6                     
  4783                           ; BSR set to: 0
  4784  001BE6  BFC3               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4785  001BE8  EF00  F00E         	goto	u7990
  4786  001BEC  51C3               	movf	(efgtoa@p+1)& (0+255),w,b
  4787  001BEE  E106               	bnz	u7991
  4788  001BF0  05C2               	decf	efgtoa@p& (0+255),w,b
  4789  001BF2  B0D8               	btfsc	status,0,c
  4790  001BF4  EFFE  F00D         	goto	u7991
  4791  001BF8  EF00  F00E         	goto	u7990
  4792  001BFC                     u7991:
  4793  001BFC  EFBF  F00D         	goto	l7308
  4794  001C00                     u7990:
  4795  001C00                     
  4796                           ; BSR set to: 0
  4797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4798  001C00  07D0               	decf	efgtoa@i& (0+255),f,b
  4799  001C02  A0D8               	btfss	status,0,c
  4800  001C04  07D1               	decf	(efgtoa@i+1)& (0+255),f,b
  4801  001C06                     
  4802                           ; BSR set to: 0
  4803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4804  001C06  51C0               	movf	efgtoa@sign& (0+255),w,b
  4805  001C08  11C1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4806  001C0A  A4D8               	btfss	status,2,c
  4807  001C0C  EF0A  F00E         	goto	u8001
  4808  001C10  EF0C  F00E         	goto	u8000
  4809  001C14                     u8001:
  4810  001C14  EF12  F00E         	goto	l7328
  4811  001C18                     u8000:
  4812  001C18                     
  4813                           ; BSR set to: 0
  4814  001C18  0E00               	movlw	0
  4815  001C1A  6FAD               	movwf	(_efgtoa$2245+1)& (0+255),b
  4816  001C1C  0E2B               	movlw	43
  4817  001C1E  6FAC               	movwf	_efgtoa$2245& (0+255),b
  4818  001C20  EF16  F00E         	goto	l7330
  4819  001C24                     l7328:
  4820                           
  4821                           ; BSR set to: 0
  4822  001C24  0E00               	movlw	0
  4823  001C26  6FAD               	movwf	(_efgtoa$2245+1)& (0+255),b
  4824  001C28  0E2D               	movlw	45
  4825  001C2A  6FAC               	movwf	_efgtoa$2245& (0+255),b
  4826  001C2C                     l7330:
  4827                           
  4828                           ; BSR set to: 0
  4829  001C2C  0EA6               	movlw	low _dbuf
  4830  001C2E  25D0               	addwf	efgtoa@i& (0+255),w,b
  4831  001C30  6ED9               	movwf	fsr2l,c
  4832  001C32  0E01               	movlw	high _dbuf
  4833  001C34  21D1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4834  001C36  6EDA               	movwf	fsr2h,c
  4835  001C38  C0AC  FFDF         	movff	_efgtoa$2245,indf2
  4836  001C3C                     
  4837                           ; BSR set to: 0
  4838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4839  001C3C  07C4               	decf	efgtoa@w& (0+255),f,b
  4840  001C3E  A0D8               	btfss	status,0,c
  4841  001C40  07C5               	decf	(efgtoa@w+1)& (0+255),f,b
  4842  001C42                     
  4843                           ; BSR set to: 0
  4844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4845  001C42  07D0               	decf	efgtoa@i& (0+255),f,b
  4846  001C44  A0D8               	btfss	status,0,c
  4847  001C46  07D1               	decf	(efgtoa@i+1)& (0+255),f,b
  4848  001C48                     
  4849                           ; BSR set to: 0
  4850  001C48  0EBF               	movlw	191
  4851  001C4A  6FA1               	movwf	??_efgtoa& (0+255),b
  4852  001C4C  0EFF               	movlw	255
  4853  001C4E  6FA2               	movwf	(??_efgtoa+1)& (0+255),b
  4854  001C50  51A0               	movf	efgtoa@c& (0+255),w,b
  4855  001C52  6FA3               	movwf	(??_efgtoa+2)& (0+255),b
  4856  001C54  6BA4               	clrf	(??_efgtoa+3)& (0+255),b
  4857  001C56  51A1               	movf	??_efgtoa& (0+255),w,b
  4858  001C58  27A3               	addwf	(??_efgtoa+2)& (0+255),f,b
  4859  001C5A  51A2               	movf	(??_efgtoa+1)& (0+255),w,b
  4860  001C5C  23A4               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4861  001C5E  51A4               	movf	(??_efgtoa+3)& (0+255),w,b
  4862  001C60  E10A               	bnz	u8010
  4863  001C62  0E1A               	movlw	26
  4864  001C64  5DA3               	subwf	(??_efgtoa+2)& (0+255),w,b
  4865  001C66  A0D8               	btfss	status,0,c
  4866  001C68  EF38  F00E         	goto	u8011
  4867  001C6C  EF3B  F00E         	goto	u8010
  4868  001C70                     u8011:
  4869  001C70  0E01               	movlw	1
  4870  001C72  EF3C  F00E         	goto	u8020
  4871  001C76                     u8010:
  4872  001C76  0E00               	movlw	0
  4873  001C78                     u8020:
  4874  001C78  6FB0               	movwf	_efgtoa$2247& (0+255),b
  4875  001C7A  6BB1               	clrf	(_efgtoa$2247+1)& (0+255),b
  4876  001C7C                     
  4877                           ; BSR set to: 0
  4878  001C7C  51B0               	movf	_efgtoa$2247& (0+255),w,b
  4879  001C7E  11B1               	iorwf	(_efgtoa$2247+1)& (0+255),w,b
  4880  001C80  A4D8               	btfss	status,2,c
  4881  001C82  EF45  F00E         	goto	u8031
  4882  001C86  EF47  F00E         	goto	u8030
  4883  001C8A                     u8031:
  4884  001C8A  EF4D  F00E         	goto	l7344
  4885  001C8E                     u8030:
  4886  001C8E                     
  4887                           ; BSR set to: 0
  4888  001C8E  0E00               	movlw	0
  4889  001C90  6FAF               	movwf	(_efgtoa$2246+1)& (0+255),b
  4890  001C92  0E65               	movlw	101
  4891  001C94  6FAE               	movwf	_efgtoa$2246& (0+255),b
  4892  001C96  EF51  F00E         	goto	l7346
  4893  001C9A                     l7344:
  4894                           
  4895                           ; BSR set to: 0
  4896  001C9A  0E00               	movlw	0
  4897  001C9C  6FAF               	movwf	(_efgtoa$2246+1)& (0+255),b
  4898  001C9E  0E45               	movlw	69
  4899  001CA0  6FAE               	movwf	_efgtoa$2246& (0+255),b
  4900  001CA2                     l7346:
  4901                           
  4902                           ; BSR set to: 0
  4903  001CA2  0EA6               	movlw	low _dbuf
  4904  001CA4  25D0               	addwf	efgtoa@i& (0+255),w,b
  4905  001CA6  6ED9               	movwf	fsr2l,c
  4906  001CA8  0E01               	movlw	high _dbuf
  4907  001CAA  21D1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4908  001CAC  6EDA               	movwf	fsr2h,c
  4909  001CAE  C0AE  FFDF         	movff	_efgtoa$2246,indf2
  4910  001CB2                     
  4911                           ; BSR set to: 0
  4912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4913  001CB2  07C4               	decf	efgtoa@w& (0+255),f,b
  4914  001CB4  A0D8               	btfss	status,0,c
  4915  001CB6  07C5               	decf	(efgtoa@w+1)& (0+255),f,b
  4916  001CB8                     
  4917                           ; BSR set to: 0
  4918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4919  001CB8  0EA6               	movlw	low _dbuf
  4920  001CBA  25D8               	addwf	efgtoa@n& (0+255),w,b
  4921  001CBC  6E14               	movwf	strcpy@dest^0,c
  4922  001CBE  0E01               	movlw	high _dbuf
  4923  001CC0  21D9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4924  001CC2  6E15               	movwf	(strcpy@dest+1)^0,c
  4925  001CC4  0EA6               	movlw	low _dbuf
  4926  001CC6  25D0               	addwf	efgtoa@i& (0+255),w,b
  4927  001CC8  6E16               	movwf	strcpy@src^0,c
  4928  001CCA  0E01               	movlw	high _dbuf
  4929  001CCC  21D1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4930  001CCE  6E17               	movwf	(strcpy@src+1)^0,c
  4931  001CD0  ECDE  F02C         	call	_strcpy	;wreg free
  4932  001CD4  EFF0  F008         	goto	l7092
  4933  001CD8                     l1169:
  4934  001CD8  0012               	return		;funcret
  4935  001CDA                     __end_of_efgtoa:
  4936                           	callstack 0
  4937                           
  4938 ;; *************** function _tolower *****************
  4939 ;; Defined at:
  4940 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  c               2   25[COMRAM] int 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  2   25[COMRAM] int 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;Total ram usage:        8 bytes
  4959 ;; Hardware stack levels used: 1
  4960 ;; Hardware stack levels required when called: 4
  4961 ;; This function calls:
  4962 ;;		_isupper
  4963 ;; This function is called by:
  4964 ;;		_efgtoa
  4965 ;;		_vfpfcnvrt
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text7
  4970  00595C                     __ptext7:
  4971                           	callstack 0
  4972  00595C                     _tolower:
  4973                           	callstack 22
  4974  00595C  0EBF               	movlw	191
  4975  00595E  6E1C               	movwf	??_tolower^0,c
  4976  005960  0EFF               	movlw	255
  4977  005962  6E1D               	movwf	(??_tolower+1)^0,c
  4978  005964  C01A  F01E         	movff	tolower@c,??_tolower+2
  4979  005968  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  4980  00596C  501C               	movf	??_tolower^0,w,c
  4981  00596E  261E               	addwf	(??_tolower+2)^0,f,c
  4982  005970  501D               	movf	(??_tolower+1)^0,w,c
  4983  005972  221F               	addwfc	(??_tolower+3)^0,f,c
  4984  005974  501F               	movf	(??_tolower+3)^0,w,c
  4985  005976  E10A               	bnz	u7330
  4986  005978  0E1A               	movlw	26
  4987  00597A  5C1E               	subwf	(??_tolower+2)^0,w,c
  4988  00597C  A0D8               	btfss	status,0,c
  4989  00597E  EFC3  F02C         	goto	u7331
  4990  005982  EFC6  F02C         	goto	u7330
  4991  005986                     u7331:
  4992  005986  0E01               	movlw	1
  4993  005988  EFC7  F02C         	goto	u7340
  4994  00598C                     u7330:
  4995  00598C  0E00               	movlw	0
  4996  00598E                     u7340:
  4997  00598E  6E20               	movwf	_tolower$2382^0,c
  4998  005990  6A21               	clrf	(_tolower$2382+1)^0,c
  4999  005992  5020               	movf	_tolower$2382^0,w,c
  5000  005994  1021               	iorwf	(_tolower$2382+1)^0,w,c
  5001  005996  B4D8               	btfsc	status,2,c
  5002  005998  EFD0  F02C         	goto	u7351
  5003  00599C  EFD2  F02C         	goto	u7350
  5004  0059A0                     u7351:
  5005  0059A0  EFD9  F02C         	goto	l1388
  5006  0059A4                     u7350:
  5007  0059A4  0E20               	movlw	32
  5008  0059A6  101A               	iorwf	tolower@c^0,w,c
  5009  0059A8  6E1A               	movwf	?_tolower^0,c
  5010  0059AA  501B               	movf	(tolower@c+1)^0,w,c
  5011  0059AC  6E1B               	movwf	(?_tolower+1)^0,c
  5012  0059AE  EFDD  F02C         	goto	l1393
  5013  0059B2                     l1388:
  5014  0059B2  C01A  F01A         	movff	tolower@c,?_tolower
  5015  0059B6  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  5016  0059BA                     l1393:
  5017  0059BA  0012               	return		;funcret
  5018  0059BC                     __end_of_tolower:
  5019                           	callstack 0
  5020                           
  5021 ;; *************** function _isupper *****************
  5022 ;; Defined at:
  5023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  c               2   19[COMRAM] int 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;		None
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  2   19[COMRAM] int 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;Total ram usage:        6 bytes
  5042 ;; Hardware stack levels used: 1
  5043 ;; Hardware stack levels required when called: 3
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_efgtoa
  5048 ;;		_vfpfcnvrt
  5049 ;;		_tolower
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text8
  5054  005BD2                     __ptext8:
  5055                           	callstack 0
  5056  005BD2                     _isupper:
  5057                           	callstack 22
  5058  005BD2  0EBF               	movlw	191
  5059  005BD4  6E16               	movwf	??_isupper^0,c
  5060  005BD6  0EFF               	movlw	255
  5061  005BD8  6E17               	movwf	(??_isupper+1)^0,c
  5062  005BDA  C014  F018         	movff	isupper@c,??_isupper+2
  5063  005BDE  C015  F019         	movff	isupper@c+1,??_isupper+3
  5064  005BE2  5016               	movf	??_isupper^0,w,c
  5065  005BE4  2618               	addwf	(??_isupper+2)^0,f,c
  5066  005BE6  5017               	movf	(??_isupper+1)^0,w,c
  5067  005BE8  2219               	addwfc	(??_isupper+3)^0,f,c
  5068  005BEA  5019               	movf	(??_isupper+3)^0,w,c
  5069  005BEC  E10A               	bnz	u6480
  5070  005BEE  0E1A               	movlw	26
  5071  005BF0  5C18               	subwf	(??_isupper+2)^0,w,c
  5072  005BF2  A0D8               	btfss	status,0,c
  5073  005BF4  EFFE  F02D         	goto	u6481
  5074  005BF8  EF01  F02E         	goto	u6480
  5075  005BFC                     u6481:
  5076  005BFC  0E01               	movlw	1
  5077  005BFE  EF02  F02E         	goto	u6490
  5078  005C02                     u6480:
  5079  005C02  0E00               	movlw	0
  5080  005C04                     u6490:
  5081  005C04  6E14               	movwf	?_isupper^0,c
  5082  005C06  6A15               	clrf	(?_isupper+1)^0,c
  5083  005C08  0012               	return		;funcret
  5084  005C0A                     __end_of_isupper:
  5085                           	callstack 0
  5086                           
  5087 ;; *************** function _strcpy *****************
  5088 ;; Defined at:
  5089 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  dest            2   19[COMRAM] PTR unsigned char 
  5092 ;;		 -> dbuf(80), 
  5093 ;;  src             2   21[COMRAM] PTR const unsigned char 
  5094 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5095 ;;		 -> dbuf(80), 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  d               2   27[COMRAM] PTR unsigned char 
  5098 ;;		 -> dbuf(80), 
  5099 ;;  s               2   25[COMRAM] PTR const unsigned char 
  5100 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5101 ;;		 -> dbuf(80), 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  2   19[COMRAM] PTR unsigned char 
  5104 ;; Registers used:
  5105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;Total ram usage:       10 bytes
  5116 ;; Hardware stack levels used: 1
  5117 ;; Hardware stack levels required when called: 3
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_efgtoa
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text9
  5126  0059BC                     __ptext9:
  5127                           	callstack 0
  5128  0059BC                     _strcpy:
  5129                           	callstack 22
  5130  0059BC  C016  F01A         	movff	strcpy@src,strcpy@s
  5131  0059C0  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  5132  0059C4  C014  F01C         	movff	strcpy@dest,strcpy@d
  5133  0059C8  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  5134  0059CC                     l6992:
  5135  0059CC  501A               	movf	strcpy@s^0,w,c
  5136  0059CE  6E18               	movwf	??_strcpy^0,c
  5137  0059D0  501B               	movf	(strcpy@s+1)^0,w,c
  5138  0059D2  6E19               	movwf	(??_strcpy+1)^0,c
  5139  0059D4  4A1A               	infsnz	strcpy@s^0,f,c
  5140  0059D6  2A1B               	incf	(strcpy@s+1)^0,f,c
  5141  0059D8  C018  FFF6         	movff	??_strcpy,tblptrl
  5142  0059DC  C019  FFF7         	movff	??_strcpy+1,tblptrh
  5143  0059E0  0E00               	movlw	low (__smallconst shr (0+16))
  5144  0059E2  6EF8               	movwf	tblptru,c
  5145  0059E4  C01C  FFD9         	movff	strcpy@d,fsr2l
  5146  0059E8  C01D  FFDA         	movff	strcpy@d+1,fsr2h
  5147  0059EC  4A1C               	infsnz	strcpy@d^0,f,c
  5148  0059EE  2A1D               	incf	(strcpy@d+1)^0,f,c
  5149  0059F0  0E0F               	movlw	(high __ramtop+-1)
  5150  0059F2  64F7               	cpfsgt	tblptrh,c
  5151  0059F4  D003               	bra	u7317
  5152  0059F6  0008               	tblrd		*
  5153  0059F8  50F5               	movf	tablat,w,c
  5154  0059FA  D005               	bra	u7310
  5155  0059FC                     u7317:
  5156  0059FC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5157  005A00  CFF7 FFE2          	movff	tblptrh,fsr1h
  5158  005A04  50E7               	movf	indf1,w,c
  5159  005A06                     u7310:
  5160  005A06  6EDF               	movwf	indf2,c
  5161  005A08  50DF               	movf	indf2,w,c
  5162  005A0A  A4D8               	btfss	status,2,c
  5163  005A0C  EF0A  F02D         	goto	u7321
  5164  005A10  EF0C  F02D         	goto	u7320
  5165  005A14                     u7321:
  5166  005A14  EFE6  F02C         	goto	l6992
  5167  005A18                     u7320:
  5168  005A18  0012               	return		;funcret
  5169  005A1A                     __end_of_strcpy:
  5170                           	callstack 0
  5171                           
  5172 ;; *************** function _pad *****************
  5173 ;; Defined at:
  5174 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  5177 ;;		 -> sprintf@f(6), 
  5178 ;;  buf             2   37[COMRAM] PTR unsigned char 
  5179 ;;		 -> dbuf(80), 
  5180 ;;  p               2   39[COMRAM] int 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  w               2   44[COMRAM] int 
  5183 ;;  i               2   42[COMRAM] int 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  2   35[COMRAM] int 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5193 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;Total ram usage:       11 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; Hardware stack levels required when called: 6
  5200 ;; This function calls:
  5201 ;;		_fputc
  5202 ;;		_fputs
  5203 ;;		_strlen
  5204 ;; This function is called by:
  5205 ;;		_efgtoa
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text10
  5210  005334                     __ptext10:
  5211                           	callstack 0
  5212  005334                     _pad:
  5213                           	callstack 19
  5214  005334                     
  5215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5216  005334  A03C               	btfss	_flags^0,0,c
  5217  005336  EF9F  F029         	goto	u7271
  5218  00533A  EFA1  F029         	goto	u7270
  5219  00533E                     u7271:
  5220  00533E  EFAB  F029         	goto	l6972
  5221  005342                     u7270:
  5222  005342                     
  5223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5224  005342  C026  F01D         	movff	pad@buf,fputs@s
  5225  005346  C027  F01E         	movff	pad@buf+1,fputs@s+1
  5226  00534A  C024  F01F         	movff	pad@fp,fputs@fp
  5227  00534E  C025  F020         	movff	pad@fp+1,fputs@fp+1
  5228  005352  ECA7  F02D         	call	_fputs	;wreg free
  5229  005356                     l6972:
  5230                           
  5231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5232  005356  BE29               	btfsc	(pad@p+1)^0,7,c
  5233  005358  EFB0  F029         	goto	u7281
  5234  00535C  EFB2  F029         	goto	u7280
  5235  005360                     u7281:
  5236  005360  EFB8  F029         	goto	l6976
  5237  005364                     u7280:
  5238  005364  C028  F02D         	movff	pad@p,pad@w
  5239  005368  C029  F02E         	movff	pad@p+1,pad@w+1
  5240  00536C  EFBC  F029         	goto	l1146
  5241  005370                     l6976:
  5242  005370  0E00               	movlw	0
  5243  005372  6E2E               	movwf	(pad@w+1)^0,c
  5244  005374  0E00               	movlw	0
  5245  005376  6E2D               	movwf	pad@w^0,c
  5246  005378                     l1146:
  5247                           
  5248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5249  005378  0E00               	movlw	0
  5250  00537A  6E2C               	movwf	(pad@i+1)^0,c
  5251  00537C  0E00               	movlw	0
  5252  00537E  6E2B               	movwf	pad@i^0,c
  5253                           
  5254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5255  005380  EFCE  F029         	goto	l6982
  5256  005384                     l6978:
  5257                           
  5258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5259  005384  0E00               	movlw	0
  5260  005386  6E15               	movwf	(fputc@c+1)^0,c
  5261  005388  0E20               	movlw	32
  5262  00538A  6E14               	movwf	fputc@c^0,c
  5263  00538C  C024  F016         	movff	pad@fp,fputc@fp
  5264  005390  C025  F017         	movff	pad@fp+1,fputc@fp+1
  5265  005394  ECD3  F028         	call	_fputc	;wreg free
  5266  005398                     
  5267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5268  005398  4A2B               	infsnz	pad@i^0,f,c
  5269  00539A  2A2C               	incf	(pad@i+1)^0,f,c
  5270  00539C                     l6982:
  5271                           
  5272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5273  00539C  502D               	movf	pad@w^0,w,c
  5274  00539E  5C2B               	subwf	pad@i^0,w,c
  5275  0053A0  502C               	movf	(pad@i+1)^0,w,c
  5276  0053A2  0A80               	xorlw	128
  5277  0053A4  6E2A               	movwf	??_pad^0,c
  5278  0053A6  502E               	movf	(pad@w+1)^0,w,c
  5279  0053A8  0A80               	xorlw	128
  5280  0053AA  582A               	subwfb	??_pad^0,w,c
  5281  0053AC  A0D8               	btfss	status,0,c
  5282  0053AE  EFDB  F029         	goto	u7291
  5283  0053B2  EFDD  F029         	goto	u7290
  5284  0053B6                     u7291:
  5285  0053B6  EFC2  F029         	goto	l6978
  5286  0053BA                     u7290:
  5287  0053BA                     
  5288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5289  0053BA  B03C               	btfsc	_flags^0,0,c
  5290  0053BC  EFE2  F029         	goto	u7301
  5291  0053C0  EFE4  F029         	goto	u7300
  5292  0053C4                     u7301:
  5293  0053C4  EFEE  F029         	goto	l6986
  5294  0053C8                     u7300:
  5295  0053C8                     
  5296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5297  0053C8  C026  F01D         	movff	pad@buf,fputs@s
  5298  0053CC  C027  F01E         	movff	pad@buf+1,fputs@s+1
  5299  0053D0  C024  F01F         	movff	pad@fp,fputs@fp
  5300  0053D4  C025  F020         	movff	pad@fp+1,fputs@fp+1
  5301  0053D8  ECA7  F02D         	call	_fputs	;wreg free
  5302  0053DC                     l6986:
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5305  0053DC  C026  F014         	movff	pad@buf,strlen@s
  5306  0053E0  C027  F015         	movff	pad@buf+1,strlen@s+1
  5307  0053E4  EC3D  F02E         	call	_strlen	;wreg free
  5308  0053E8  502D               	movf	pad@w^0,w,c
  5309  0053EA  2414               	addwf	?_strlen^0,w,c
  5310  0053EC  6E24               	movwf	?_pad^0,c
  5311  0053EE  502E               	movf	(pad@w+1)^0,w,c
  5312  0053F0  2015               	addwfc	(?_strlen+1)^0,w,c
  5313  0053F2  6E25               	movwf	(?_pad+1)^0,c
  5314  0053F4  0012               	return		;funcret
  5315  0053F6                     __end_of_pad:
  5316                           	callstack 0
  5317                           
  5318 ;; *************** function _strlen *****************
  5319 ;; Defined at:
  5320 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  s               2   19[COMRAM] PTR const unsigned char 
  5323 ;;		 -> dbuf(80), 
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  a               2   21[COMRAM] PTR const unsigned char 
  5326 ;;		 -> dbuf(80), 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  2   19[COMRAM] unsigned int 
  5329 ;; Registers used:
  5330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;Total ram usage:        4 bytes
  5341 ;; Hardware stack levels used: 1
  5342 ;; Hardware stack levels required when called: 3
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_pad
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text11
  5351  005C7A                     __ptext11:
  5352                           	callstack 0
  5353  005C7A                     _strlen:
  5354                           	callstack 21
  5355  005C7A  C014  F016         	movff	strlen@s,strlen@a
  5356  005C7E  C015  F017         	movff	strlen@s+1,strlen@a+1
  5357  005C82  EF45  F02E         	goto	l6486
  5358  005C86                     l6484:
  5359  005C86  4A14               	infsnz	strlen@s^0,f,c
  5360  005C88  2A15               	incf	(strlen@s+1)^0,f,c
  5361  005C8A                     l6486:
  5362  005C8A  C014  FFD9         	movff	strlen@s,fsr2l
  5363  005C8E  C015  FFDA         	movff	strlen@s+1,fsr2h
  5364  005C92  50DF               	movf	indf2,w,c
  5365  005C94  A4D8               	btfss	status,2,c
  5366  005C96  EF4F  F02E         	goto	u6471
  5367  005C9A  EF51  F02E         	goto	u6470
  5368  005C9E                     u6471:
  5369  005C9E  EF43  F02E         	goto	l6484
  5370  005CA2                     u6470:
  5371  005CA2  5016               	movf	strlen@a^0,w,c
  5372  005CA4  5C14               	subwf	strlen@s^0,w,c
  5373  005CA6  6E14               	movwf	?_strlen^0,c
  5374  005CA8  5017               	movf	(strlen@a+1)^0,w,c
  5375  005CAA  5815               	subwfb	(strlen@s+1)^0,w,c
  5376  005CAC  6E15               	movwf	(?_strlen+1)^0,c
  5377  005CAE  0012               	return		;funcret
  5378  005CB0                     __end_of_strlen:
  5379                           	callstack 0
  5380                           
  5381 ;; *************** function _fputs *****************
  5382 ;; Defined at:
  5383 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;  s               2   28[COMRAM] PTR const unsigned char 
  5386 ;;		 -> dbuf(80), 
  5387 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  5388 ;;		 -> sprintf@f(6), 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  i               2   33[COMRAM] int 
  5391 ;;  c               1   32[COMRAM] unsigned char 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  2   28[COMRAM] int 
  5394 ;; Registers used:
  5395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5404 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;Total ram usage:        7 bytes
  5406 ;; Hardware stack levels used: 1
  5407 ;; Hardware stack levels required when called: 5
  5408 ;; This function calls:
  5409 ;;		_fputc
  5410 ;; This function is called by:
  5411 ;;		_pad
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           	psect	text12
  5416  005B4E                     __ptext12:
  5417                           	callstack 0
  5418  005B4E                     _fputs:
  5419                           	callstack 19
  5420  005B4E  0E00               	movlw	0
  5421  005B50  6E23               	movwf	(fputs@i+1)^0,c
  5422  005B52  0E00               	movlw	0
  5423  005B54  6E22               	movwf	fputs@i^0,c
  5424  005B56  EFB8  F02D         	goto	l6480
  5425  005B5A                     l6476:
  5426  005B5A  C021  F014         	movff	fputs@c,fputc@c
  5427  005B5E  6A15               	clrf	(fputc@c+1)^0,c
  5428  005B60  C01F  F016         	movff	fputs@fp,fputc@fp
  5429  005B64  C020  F017         	movff	fputs@fp+1,fputc@fp+1
  5430  005B68  ECD3  F028         	call	_fputc	;wreg free
  5431  005B6C  4A22               	infsnz	fputs@i^0,f,c
  5432  005B6E  2A23               	incf	(fputs@i+1)^0,f,c
  5433  005B70                     l6480:
  5434  005B70  5022               	movf	fputs@i^0,w,c
  5435  005B72  241D               	addwf	fputs@s^0,w,c
  5436  005B74  6ED9               	movwf	fsr2l,c
  5437  005B76  5023               	movf	(fputs@i+1)^0,w,c
  5438  005B78  201E               	addwfc	(fputs@s+1)^0,w,c
  5439  005B7A  6EDA               	movwf	fsr2h,c
  5440  005B7C  50DF               	movf	indf2,w,c
  5441  005B7E  6E21               	movwf	fputs@c^0,c
  5442  005B80  5021               	movf	fputs@c^0,w,c
  5443  005B82  A4D8               	btfss	status,2,c
  5444  005B84  EFC6  F02D         	goto	u6461
  5445  005B88  EFC8  F02D         	goto	u6460
  5446  005B8C                     u6461:
  5447  005B8C  EFAD  F02D         	goto	l6476
  5448  005B90                     u6460:
  5449  005B90  0012               	return		;funcret
  5450  005B92                     __end_of_fputs:
  5451                           	callstack 0
  5452                           
  5453 ;; *************** function _fputc *****************
  5454 ;; Defined at:
  5455 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  c               2   19[COMRAM] int 
  5458 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  5459 ;;		 -> sprintf@f(6), 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  2   19[COMRAM] int 
  5464 ;; Registers used:
  5465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;Total ram usage:        9 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 4
  5478 ;; This function calls:
  5479 ;;		_putch
  5480 ;; This function is called by:
  5481 ;;		_pad
  5482 ;;		_vfpfcnvrt
  5483 ;;		_fputs
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text13
  5488  0051A6                     __ptext13:
  5489                           	callstack 0
  5490  0051A6                     _fputc:
  5491                           	callstack 22
  5492  0051A6  5016               	movf	fputc@fp^0,w,c
  5493  0051A8  1017               	iorwf	(fputc@fp+1)^0,w,c
  5494  0051AA  B4D8               	btfsc	status,2,c
  5495  0051AC  EFDA  F028         	goto	u6031
  5496  0051B0  EFDC  F028         	goto	u6030
  5497  0051B4                     u6031:
  5498  0051B4  EFE5  F028         	goto	l6262
  5499  0051B8                     u6030:
  5500  0051B8  5016               	movf	fputc@fp^0,w,c
  5501  0051BA  1017               	iorwf	(fputc@fp+1)^0,w,c
  5502  0051BC  A4D8               	btfss	status,2,c
  5503  0051BE  EFE3  F028         	goto	u6041
  5504  0051C2  EFE5  F028         	goto	u6040
  5505  0051C6                     u6041:
  5506  0051C6  EFEA  F028         	goto	l6264
  5507  0051CA                     u6040:
  5508  0051CA                     l6262:
  5509  0051CA  5014               	movf	fputc@c^0,w,c
  5510  0051CC  ECE2  F02E         	call	_putch
  5511  0051D0  EF37  F029         	goto	l1351
  5512  0051D4                     l6264:
  5513  0051D4  EE20 F004          	lfsr	2,4
  5514  0051D8  5016               	movf	fputc@fp^0,w,c
  5515  0051DA  26D9               	addwf	fsr2l,f,c
  5516  0051DC  5017               	movf	(fputc@fp+1)^0,w,c
  5517  0051DE  22DA               	addwfc	fsr2h,f,c
  5518  0051E0  50DE               	movf	postinc2,w,c
  5519  0051E2  10DE               	iorwf	postinc2,w,c
  5520  0051E4  B4D8               	btfsc	status,2,c
  5521  0051E6  EFF7  F028         	goto	u6051
  5522  0051EA  EFF9  F028         	goto	u6050
  5523  0051EE                     u6051:
  5524  0051EE  EF14  F029         	goto	l6268
  5525  0051F2                     u6050:
  5526  0051F2  EE20 F004          	lfsr	2,4
  5527  0051F6  5016               	movf	fputc@fp^0,w,c
  5528  0051F8  26D9               	addwf	fsr2l,f,c
  5529  0051FA  5017               	movf	(fputc@fp+1)^0,w,c
  5530  0051FC  22DA               	addwfc	fsr2h,f,c
  5531  0051FE  EE10 F002          	lfsr	1,2
  5532  005202  5016               	movf	fputc@fp^0,w,c
  5533  005204  26E1               	addwf	fsr1l,f,c
  5534  005206  5017               	movf	(fputc@fp+1)^0,w,c
  5535  005208  22E2               	addwfc	fsr1h,f,c
  5536  00520A  50DE               	movf	postinc2,w,c
  5537  00520C  5CE6               	subwf	postinc1,w,c
  5538  00520E  50E6               	movf	postinc1,w,c
  5539  005210  0A80               	xorlw	128
  5540  005212  6E1C               	movwf	(??_fputc+4)^0,c
  5541  005214  50DE               	movf	postinc2,w,c
  5542  005216  0A80               	xorlw	128
  5543  005218  581C               	subwfb	(??_fputc+4)^0,w,c
  5544  00521A  B0D8               	btfsc	status,0,c
  5545  00521C  EF12  F029         	goto	u6061
  5546  005220  EF14  F029         	goto	u6060
  5547  005224                     u6061:
  5548  005224  EF37  F029         	goto	l1351
  5549  005228                     u6060:
  5550  005228                     l6268:
  5551  005228  EE20 F002          	lfsr	2,2
  5552  00522C  5016               	movf	fputc@fp^0,w,c
  5553  00522E  26D9               	addwf	fsr2l,f,c
  5554  005230  5017               	movf	(fputc@fp+1)^0,w,c
  5555  005232  22DA               	addwfc	fsr2h,f,c
  5556  005234  CFDE F018          	movff	postinc2,??_fputc
  5557  005238  CFDD F019          	movff	postdec2,??_fputc+1
  5558  00523C  C016  FFD9         	movff	fputc@fp,fsr2l
  5559  005240  C017  FFDA         	movff	fputc@fp+1,fsr2h
  5560  005244  CFDE F01A          	movff	postinc2,??_fputc+2
  5561  005248  CFDD F01B          	movff	postdec2,??_fputc+3
  5562  00524C  5018               	movf	??_fputc^0,w,c
  5563  00524E  241A               	addwf	(??_fputc+2)^0,w,c
  5564  005250  6ED9               	movwf	fsr2l,c
  5565  005252  5019               	movf	(??_fputc+1)^0,w,c
  5566  005254  201B               	addwfc	(??_fputc+3)^0,w,c
  5567  005256  6EDA               	movwf	fsr2h,c
  5568  005258  C014  FFDF         	movff	fputc@c,indf2
  5569  00525C  EE20 F002          	lfsr	2,2
  5570  005260  5016               	movf	fputc@fp^0,w,c
  5571  005262  26D9               	addwf	fsr2l,f,c
  5572  005264  5017               	movf	(fputc@fp+1)^0,w,c
  5573  005266  22DA               	addwfc	fsr2h,f,c
  5574  005268  2ADE               	incf	postinc2,f,c
  5575  00526A  0E00               	movlw	0
  5576  00526C  22DD               	addwfc	postdec2,f,c
  5577  00526E                     l1351:
  5578  00526E  0012               	return		;funcret
  5579  005270                     __end_of_fputc:
  5580                           	callstack 0
  5581                           
  5582 ;; *************** function _putch *****************
  5583 ;; Defined at:
  5584 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  c               1    wreg     unsigned char 
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;  c               1    0[COMRAM] unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      void 
  5591 ;; Registers used:
  5592 ;;		wreg
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5602 ;;Total ram usage:        0 bytes
  5603 ;; Hardware stack levels used: 1
  5604 ;; Hardware stack levels required when called: 3
  5605 ;; This function calls:
  5606 ;;		Nothing
  5607 ;; This function is called by:
  5608 ;;		_fputc
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text14
  5613  005DC4                     __ptext14:
  5614                           	callstack 0
  5615  005DC4                     _putch:
  5616                           	callstack 22
  5617  005DC4  0012               	return		;funcret
  5618  005DC6                     __end_of_putch:
  5619                           	callstack 0
  5620                           
  5621 ;; *************** function _floorf *****************
  5622 ;; Defined at:
  5623 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  x               4   45[COMRAM] float 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  u               4   19[BANK0 ] struct .
  5628 ;;  m               4   13[BANK0 ] unsigned long 
  5629 ;;  e               2   17[BANK0 ] int 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  4   45[COMRAM] float 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;Total ram usage:       20 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; Hardware stack levels required when called: 3
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_efgtoa
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text15
  5654  004444                     __ptext15:
  5655                           	callstack 0
  5656  004444                     _floorf:
  5657                           	callstack 22
  5658  004444  C180  F073         	movff	floorf@F527,floorf@u
  5659  004448  C181  F074         	movff	floorf@F527+1,floorf@u+1
  5660  00444C  C182  F075         	movff	floorf@F527+2,floorf@u+2
  5661  004450  C183  F076         	movff	floorf@F527+3,floorf@u+3
  5662  004454  C02E  F073         	movff	floorf@x,floorf@u
  5663  004458  C02F  F074         	movff	floorf@x+1,floorf@u+1
  5664  00445C  C030  F075         	movff	floorf@x+2,floorf@u+2
  5665  004460  C031  F076         	movff	floorf@x+3,floorf@u+3
  5666  004464  0E81               	movlw	129
  5667  004466  6E32               	movwf	??_floorf^0,c
  5668  004468  0EFF               	movlw	255
  5669  00446A  6E33               	movwf	(??_floorf+1)^0,c
  5670  00446C  C073  F034         	movff	floorf@u,??_floorf+2
  5671  004470  C074  F035         	movff	floorf@u+1,??_floorf+3
  5672  004474  C075  F036         	movff	floorf@u+2,??_floorf+4
  5673  004478  C076  F037         	movff	floorf@u+3,??_floorf+5
  5674  00447C  0E18               	movlw	24
  5675  00447E  EF46  F022         	goto	u7360
  5676  004482                     u7365:
  5677  004482  90D8               	bcf	status,0,c
  5678  004484  3237               	rrcf	(??_floorf+5)^0,f,c
  5679  004486  3236               	rrcf	(??_floorf+4)^0,f,c
  5680  004488  3235               	rrcf	(??_floorf+3)^0,f,c
  5681  00448A  3234               	rrcf	(??_floorf+2)^0,f,c
  5682  00448C                     u7360:
  5683  00448C  2EE8               	decfsz	wreg,f,c
  5684  00448E  EF41  F022         	goto	u7365
  5685  004492  5034               	movf	(??_floorf+2)^0,w,c
  5686  004494  2432               	addwf	??_floorf^0,w,c
  5687  004496  0100               	movlb	0	; () banked
  5688  004498  6F71               	movwf	floorf@e& (0+255),b
  5689  00449A  0E00               	movlw	0
  5690  00449C  2033               	addwfc	(??_floorf+1)^0,w,c
  5691  00449E  6F72               	movwf	(floorf@e+1)& (0+255),b
  5692  0044A0  BF72               	btfsc	(floorf@e+1)& (0+255),7,b
  5693  0044A2  EF5C  F022         	goto	u7371
  5694  0044A6  5172               	movf	(floorf@e+1)& (0+255),w,b
  5695  0044A8  E109               	bnz	u7370
  5696  0044AA  0E17               	movlw	23
  5697  0044AC  5D71               	subwf	floorf@e& (0+255),w,b
  5698  0044AE  A0D8               	btfss	status,0,c
  5699  0044B0  EF5C  F022         	goto	u7371
  5700  0044B4  EF5E  F022         	goto	u7370
  5701  0044B8                     u7371:
  5702  0044B8  EF68  F022         	goto	l7010
  5703  0044BC                     u7370:
  5704  0044BC                     l7008:
  5705                           
  5706                           ; BSR set to: 0
  5707  0044BC  C02E  F02E         	movff	floorf@x,?_floorf
  5708  0044C0  C02F  F02F         	movff	floorf@x+1,?_floorf+1
  5709  0044C4  C030  F030         	movff	floorf@x+2,?_floorf+2
  5710  0044C8  C031  F031         	movff	floorf@x+3,?_floorf+3
  5711  0044CC  EF2C  F023         	goto	l1312
  5712  0044D0                     l7010:
  5713                           
  5714                           ; BSR set to: 0
  5715  0044D0  BF72               	btfsc	(floorf@e+1)& (0+255),7,b
  5716  0044D2  EF6D  F022         	goto	u7381
  5717  0044D6  EF6F  F022         	goto	u7380
  5718  0044DA                     u7381:
  5719  0044DA  EFE0  F022         	goto	l7020
  5720  0044DE                     u7380:
  5721  0044DE                     
  5722                           ; BSR set to: 0
  5723  0044DE  C071  F032         	movff	floorf@e,??_floorf
  5724  0044E2  0EFF               	movlw	255
  5725  0044E4  6E33               	movwf	(??_floorf+1)^0,c
  5726  0044E6  0EFF               	movlw	255
  5727  0044E8  6E34               	movwf	(??_floorf+2)^0,c
  5728  0044EA  0E7F               	movlw	127
  5729  0044EC  6E35               	movwf	(??_floorf+3)^0,c
  5730  0044EE  0E00               	movlw	0
  5731  0044F0  6E36               	movwf	(??_floorf+4)^0,c
  5732  0044F2                     u7395:
  5733  0044F2  6632               	tstfsz	??_floorf^0,c
  5734  0044F4  EF7E  F022         	goto	u7396
  5735  0044F8  EF86  F022         	goto	u7397
  5736  0044FC                     u7396:
  5737  0044FC  3436               	rlcf	(??_floorf+4)^0,w,c
  5738  0044FE  3236               	rrcf	(??_floorf+4)^0,f,c
  5739  004500  3235               	rrcf	(??_floorf+3)^0,f,c
  5740  004502  3234               	rrcf	(??_floorf+2)^0,f,c
  5741  004504  3233               	rrcf	(??_floorf+1)^0,f,c
  5742  004506  2E32               	decfsz	??_floorf^0,f,c
  5743  004508  EF79  F022         	goto	u7395
  5744  00450C                     u7397:
  5745  00450C  C033  F06D         	movff	??_floorf+1,floorf@m
  5746  004510  C034  F06E         	movff	??_floorf+2,floorf@m+1
  5747  004514  C035  F06F         	movff	??_floorf+3,floorf@m+2
  5748  004518  C036  F070         	movff	??_floorf+4,floorf@m+3
  5749  00451C  0100               	movlb	0	; () banked
  5750  00451E  516D               	movf	floorf@m& (0+255),w,b
  5751  004520  1573               	andwf	floorf@u& (0+255),w,b
  5752  004522  6E32               	movwf	??_floorf^0,c
  5753  004524  516E               	movf	(floorf@m+1)& (0+255),w,b
  5754  004526  1574               	andwf	(floorf@u+1)& (0+255),w,b
  5755  004528  6E33               	movwf	(??_floorf+1)^0,c
  5756  00452A  516F               	movf	(floorf@m+2)& (0+255),w,b
  5757  00452C  1575               	andwf	(floorf@u+2)& (0+255),w,b
  5758  00452E  6E34               	movwf	(??_floorf+2)^0,c
  5759  004530  5170               	movf	(floorf@m+3)& (0+255),w,b
  5760  004532  1576               	andwf	(floorf@u+3)& (0+255),w,b
  5761  004534  6E35               	movwf	(??_floorf+3)^0,c
  5762  004536  5032               	movf	??_floorf^0,w,c
  5763  004538  1033               	iorwf	(??_floorf+1)^0,w,c
  5764  00453A  1034               	iorwf	(??_floorf+2)^0,w,c
  5765  00453C  1035               	iorwf	(??_floorf+3)^0,w,c
  5766  00453E  A4D8               	btfss	status,2,c
  5767  004540  EFA4  F022         	goto	u7401
  5768  004544  EFA6  F022         	goto	u7400
  5769  004548                     u7401:
  5770  004548  EFA8  F022         	goto	l7016
  5771  00454C                     u7400:
  5772  00454C  EF5E  F022         	goto	l7008
  5773  004550                     l7016:
  5774                           
  5775                           ; BSR set to: 0
  5776  004550  C073  F032         	movff	floorf@u,??_floorf
  5777  004554  C074  F033         	movff	floorf@u+1,??_floorf+1
  5778  004558  C075  F034         	movff	floorf@u+2,??_floorf+2
  5779  00455C  C076  F035         	movff	floorf@u+3,??_floorf+3
  5780  004560  0E20               	movlw	32
  5781  004562  EFB8  F022         	goto	u7410
  5782  004566                     u7415:
  5783  004566  90D8               	bcf	status,0,c
  5784  004568  3235               	rrcf	(??_floorf+3)^0,f,c
  5785  00456A  3234               	rrcf	(??_floorf+2)^0,f,c
  5786  00456C  3233               	rrcf	(??_floorf+1)^0,f,c
  5787  00456E  3232               	rrcf	??_floorf^0,f,c
  5788  004570                     u7410:
  5789  004570  2EE8               	decfsz	wreg,f,c
  5790  004572  EFB3  F022         	goto	u7415
  5791  004576  5032               	movf	??_floorf^0,w,c
  5792  004578  1033               	iorwf	(??_floorf+1)^0,w,c
  5793  00457A  1034               	iorwf	(??_floorf+2)^0,w,c
  5794  00457C  1035               	iorwf	(??_floorf+3)^0,w,c
  5795  00457E  B4D8               	btfsc	status,2,c
  5796  004580  EFC4  F022         	goto	u7421
  5797  004584  EFC6  F022         	goto	u7420
  5798  004588                     u7421:
  5799  004588  EFCE  F022         	goto	l1315
  5800  00458C                     u7420:
  5801  00458C                     
  5802                           ; BSR set to: 0
  5803  00458C  516D               	movf	floorf@m& (0+255),w,b
  5804  00458E  2773               	addwf	floorf@u& (0+255),f,b
  5805  004590  516E               	movf	(floorf@m+1)& (0+255),w,b
  5806  004592  2374               	addwfc	(floorf@u+1)& (0+255),f,b
  5807  004594  516F               	movf	(floorf@m+2)& (0+255),w,b
  5808  004596  2375               	addwfc	(floorf@u+2)& (0+255),f,b
  5809  004598  5170               	movf	(floorf@m+3)& (0+255),w,b
  5810  00459A  2376               	addwfc	(floorf@u+3)& (0+255),f,b
  5811  00459C                     l1315:
  5812                           
  5813                           ; BSR set to: 0
  5814  00459C  1D6D               	comf	floorf@m& (0+255),w,b
  5815  00459E  6E32               	movwf	??_floorf^0,c
  5816  0045A0  1D6E               	comf	(floorf@m+1)& (0+255),w,b
  5817  0045A2  6E33               	movwf	(??_floorf+1)^0,c
  5818  0045A4  1D6F               	comf	(floorf@m+2)& (0+255),w,b
  5819  0045A6  6E34               	movwf	(??_floorf+2)^0,c
  5820  0045A8  1D70               	comf	(floorf@m+3)& (0+255),w,b
  5821  0045AA  6E35               	movwf	(??_floorf+3)^0,c
  5822  0045AC  5032               	movf	??_floorf^0,w,c
  5823  0045AE  1773               	andwf	floorf@u& (0+255),f,b
  5824  0045B0  5033               	movf	(??_floorf+1)^0,w,c
  5825  0045B2  1774               	andwf	(floorf@u+1)& (0+255),f,b
  5826  0045B4  5034               	movf	(??_floorf+2)^0,w,c
  5827  0045B6  1775               	andwf	(floorf@u+2)& (0+255),f,b
  5828  0045B8  5035               	movf	(??_floorf+3)^0,w,c
  5829  0045BA  1776               	andwf	(floorf@u+3)& (0+255),f,b
  5830  0045BC  EF24  F023         	goto	l7028
  5831  0045C0                     l7020:
  5832                           
  5833                           ; BSR set to: 0
  5834  0045C0  C073  F032         	movff	floorf@u,??_floorf
  5835  0045C4  C074  F033         	movff	floorf@u+1,??_floorf+1
  5836  0045C8  C075  F034         	movff	floorf@u+2,??_floorf+2
  5837  0045CC  C076  F035         	movff	floorf@u+3,??_floorf+3
  5838  0045D0  0E20               	movlw	32
  5839  0045D2  EFF0  F022         	goto	u7430
  5840  0045D6                     u7435:
  5841  0045D6  90D8               	bcf	status,0,c
  5842  0045D8  3235               	rrcf	(??_floorf+3)^0,f,c
  5843  0045DA  3234               	rrcf	(??_floorf+2)^0,f,c
  5844  0045DC  3233               	rrcf	(??_floorf+1)^0,f,c
  5845  0045DE  3232               	rrcf	??_floorf^0,f,c
  5846  0045E0                     u7430:
  5847  0045E0  2EE8               	decfsz	wreg,f,c
  5848  0045E2  EFEB  F022         	goto	u7435
  5849  0045E6  5032               	movf	??_floorf^0,w,c
  5850  0045E8  1033               	iorwf	(??_floorf+1)^0,w,c
  5851  0045EA  1034               	iorwf	(??_floorf+2)^0,w,c
  5852  0045EC  1035               	iorwf	(??_floorf+3)^0,w,c
  5853  0045EE  A4D8               	btfss	status,2,c
  5854  0045F0  EFFC  F022         	goto	u7441
  5855  0045F4  EFFE  F022         	goto	u7440
  5856  0045F8                     u7441:
  5857  0045F8  EF08  F023         	goto	l7024
  5858  0045FC                     u7440:
  5859  0045FC                     
  5860                           ; BSR set to: 0
  5861  0045FC  0E00               	movlw	0
  5862  0045FE  6F73               	movwf	floorf@u& (0+255),b
  5863  004600  0E00               	movlw	0
  5864  004602  6F74               	movwf	(floorf@u+1)& (0+255),b
  5865  004604  0E00               	movlw	0
  5866  004606  6F75               	movwf	(floorf@u+2)& (0+255),b
  5867  004608  0E00               	movlw	0
  5868  00460A  6F76               	movwf	(floorf@u+3)& (0+255),b
  5869  00460C  EF24  F023         	goto	l7028
  5870  004610                     l7024:
  5871                           
  5872                           ; BSR set to: 0
  5873  004610  90D8               	bcf	status,0,c
  5874  004612  3573               	rlcf	floorf@u& (0+255),w,b
  5875  004614  6E32               	movwf	??_floorf^0,c
  5876  004616  3574               	rlcf	(floorf@u+1)& (0+255),w,b
  5877  004618  6E33               	movwf	(??_floorf+1)^0,c
  5878  00461A  3575               	rlcf	(floorf@u+2)& (0+255),w,b
  5879  00461C  6E34               	movwf	(??_floorf+2)^0,c
  5880  00461E  3576               	rlcf	(floorf@u+3)& (0+255),w,b
  5881  004620  6E35               	movwf	(??_floorf+3)^0,c
  5882  004622  5032               	movf	??_floorf^0,w,c
  5883  004624  1033               	iorwf	(??_floorf+1)^0,w,c
  5884  004626  1034               	iorwf	(??_floorf+2)^0,w,c
  5885  004628  1035               	iorwf	(??_floorf+3)^0,w,c
  5886  00462A  B4D8               	btfsc	status,2,c
  5887  00462C  EF1A  F023         	goto	u7451
  5888  004630  EF1C  F023         	goto	u7450
  5889  004634                     u7451:
  5890  004634  EF24  F023         	goto	l7028
  5891  004638                     u7450:
  5892  004638                     
  5893                           ; BSR set to: 0
  5894  004638  0E00               	movlw	0
  5895  00463A  6F73               	movwf	floorf@u& (0+255),b
  5896  00463C  0E00               	movlw	0
  5897  00463E  6F74               	movwf	(floorf@u+1)& (0+255),b
  5898  004640  0E80               	movlw	128
  5899  004642  6F75               	movwf	(floorf@u+2)& (0+255),b
  5900  004644  0EBF               	movlw	191
  5901  004646  6F76               	movwf	(floorf@u+3)& (0+255),b
  5902  004648                     l7028:
  5903                           
  5904                           ; BSR set to: 0
  5905  004648  C073  F02E         	movff	floorf@u,?_floorf
  5906  00464C  C074  F02F         	movff	floorf@u+1,?_floorf+1
  5907  004650  C075  F030         	movff	floorf@u+2,?_floorf+2
  5908  004654  C076  F031         	movff	floorf@u+3,?_floorf+3
  5909  004658                     l1312:
  5910                           
  5911                           ; BSR set to: 0
  5912  004658  0012               	return		;funcret
  5913  00465A                     __end_of_floorf:
  5914                           	callstack 0
  5915                           
  5916 ;; *************** function ___fltol *****************
  5917 ;; Defined at:
  5918 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  f1              4   19[COMRAM] float 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  exp1            1   28[COMRAM] unsigned char 
  5923 ;;  sign1           1   27[COMRAM] unsigned char 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  4   19[COMRAM] long 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;Total ram usage:       10 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; Hardware stack levels required when called: 3
  5940 ;; This function calls:
  5941 ;;		Nothing
  5942 ;; This function is called by:
  5943 ;;		_MPU6050_Read
  5944 ;;		_efgtoa
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text16
  5949  004DBA                     __ptext16:
  5950                           	callstack 0
  5951  004DBA                     ___fltol:
  5952                           	callstack 22
  5953  004DBA  3416               	rlcf	(___fltol@f1+2)^0,w,c
  5954  004DBC  3417               	rlcf	(___fltol@f1+3)^0,w,c
  5955  004DBE  6E1D               	movwf	___fltol@exp1^0,c
  5956  004DC0  501D               	movf	___fltol@exp1^0,w,c
  5957  004DC2  A4D8               	btfss	status,2,c
  5958  004DC4  EFE6  F026         	goto	u7131
  5959  004DC8  EFE8  F026         	goto	u7130
  5960  004DCC                     u7131:
  5961  004DCC  EFF2  F026         	goto	l6908
  5962  004DD0                     u7130:
  5963  004DD0                     l6904:
  5964  004DD0  0E00               	movlw	0
  5965  004DD2  6E14               	movwf	?___fltol^0,c
  5966  004DD4  0E00               	movlw	0
  5967  004DD6  6E15               	movwf	(?___fltol+1)^0,c
  5968  004DD8  0E00               	movlw	0
  5969  004DDA  6E16               	movwf	(?___fltol+2)^0,c
  5970  004DDC  0E00               	movlw	0
  5971  004DDE  6E17               	movwf	(?___fltol+3)^0,c
  5972  004DE0  EF5F  F027         	goto	l609
  5973  004DE4                     l6908:
  5974  004DE4  C014  F018         	movff	___fltol@f1,??___fltol
  5975  004DE8  C015  F019         	movff	___fltol@f1+1,??___fltol+1
  5976  004DEC  C016  F01A         	movff	___fltol@f1+2,??___fltol+2
  5977  004DF0  C017  F01B         	movff	___fltol@f1+3,??___fltol+3
  5978  004DF4  0E20               	movlw	32
  5979  004DF6  EF02  F027         	goto	u7140
  5980  004DFA                     u7145:
  5981  004DFA  90D8               	bcf	status,0,c
  5982  004DFC  321B               	rrcf	(??___fltol+3)^0,f,c
  5983  004DFE  321A               	rrcf	(??___fltol+2)^0,f,c
  5984  004E00  3219               	rrcf	(??___fltol+1)^0,f,c
  5985  004E02  3218               	rrcf	??___fltol^0,f,c
  5986  004E04                     u7140:
  5987  004E04  2EE8               	decfsz	wreg,f,c
  5988  004E06  EFFD  F026         	goto	u7145
  5989  004E0A  5018               	movf	??___fltol^0,w,c
  5990  004E0C  6E1C               	movwf	___fltol@sign1^0,c
  5991  004E0E  8E16               	bsf	(___fltol@f1+2)^0,7,c
  5992  004E10  0EFF               	movlw	255
  5993  004E12  1614               	andwf	___fltol@f1^0,f,c
  5994  004E14  0EFF               	movlw	255
  5995  004E16  1615               	andwf	(___fltol@f1+1)^0,f,c
  5996  004E18  0EFF               	movlw	255
  5997  004E1A  1616               	andwf	(___fltol@f1+2)^0,f,c
  5998  004E1C  0E00               	movlw	0
  5999  004E1E  1617               	andwf	(___fltol@f1+3)^0,f,c
  6000  004E20  0E96               	movlw	150
  6001  004E22  5E1D               	subwf	___fltol@exp1^0,f,c
  6002  004E24  BE1D               	btfsc	___fltol@exp1^0,7,c
  6003  004E26  EF19  F027         	goto	u7150
  6004  004E2A  EF17  F027         	goto	u7151
  6005  004E2E                     u7151:
  6006  004E2E  EF2F  F027         	goto	l6928
  6007  004E32                     u7150:
  6008  004E32  501D               	movf	___fltol@exp1^0,w,c
  6009  004E34  0A80               	xorlw	128
  6010  004E36  0F97               	addlw	151
  6011  004E38  B0D8               	btfsc	status,0,c
  6012  004E3A  EF21  F027         	goto	u7161
  6013  004E3E  EF23  F027         	goto	u7160
  6014  004E42                     u7161:
  6015  004E42  EF25  F027         	goto	l6924
  6016  004E46                     u7160:
  6017  004E46  EFE8  F026         	goto	l6904
  6018  004E4A                     l6924:
  6019  004E4A  90D8               	bcf	status,0,c
  6020  004E4C  3217               	rrcf	(___fltol@f1+3)^0,f,c
  6021  004E4E  3216               	rrcf	(___fltol@f1+2)^0,f,c
  6022  004E50  3215               	rrcf	(___fltol@f1+1)^0,f,c
  6023  004E52  3214               	rrcf	___fltol@f1^0,f,c
  6024  004E54  3E1D               	incfsz	___fltol@exp1^0,f,c
  6025  004E56  EF25  F027         	goto	l6924
  6026  004E5A  EF47  F027         	goto	l6938
  6027  004E5E                     l6928:
  6028  004E5E  0E1F               	movlw	31
  6029  004E60  641D               	cpfsgt	___fltol@exp1^0,c
  6030  004E62  EF35  F027         	goto	u7171
  6031  004E66  EF37  F027         	goto	u7170
  6032  004E6A                     u7171:
  6033  004E6A  EF3F  F027         	goto	l6936
  6034  004E6E                     u7170:
  6035  004E6E  EFE8  F026         	goto	l6904
  6036  004E72                     l6934:
  6037  004E72  90D8               	bcf	status,0,c
  6038  004E74  3614               	rlcf	___fltol@f1^0,f,c
  6039  004E76  3615               	rlcf	(___fltol@f1+1)^0,f,c
  6040  004E78  3616               	rlcf	(___fltol@f1+2)^0,f,c
  6041  004E7A  3617               	rlcf	(___fltol@f1+3)^0,f,c
  6042  004E7C  061D               	decf	___fltol@exp1^0,f,c
  6043  004E7E                     l6936:
  6044  004E7E  501D               	movf	___fltol@exp1^0,w,c
  6045  004E80  A4D8               	btfss	status,2,c
  6046  004E82  EF45  F027         	goto	u7181
  6047  004E86  EF47  F027         	goto	u7180
  6048  004E8A                     u7181:
  6049  004E8A  EF39  F027         	goto	l6934
  6050  004E8E                     u7180:
  6051  004E8E                     l6938:
  6052  004E8E  501C               	movf	___fltol@sign1^0,w,c
  6053  004E90  B4D8               	btfsc	status,2,c
  6054  004E92  EF4D  F027         	goto	u7191
  6055  004E96  EF4F  F027         	goto	u7190
  6056  004E9A                     u7191:
  6057  004E9A  EF57  F027         	goto	l6942
  6058  004E9E                     u7190:
  6059  004E9E  1E17               	comf	(___fltol@f1+3)^0,f,c
  6060  004EA0  1E16               	comf	(___fltol@f1+2)^0,f,c
  6061  004EA2  1E15               	comf	(___fltol@f1+1)^0,f,c
  6062  004EA4  6C14               	negf	___fltol@f1^0,c
  6063  004EA6  0E00               	movlw	0
  6064  004EA8  2215               	addwfc	(___fltol@f1+1)^0,f,c
  6065  004EAA  2216               	addwfc	(___fltol@f1+2)^0,f,c
  6066  004EAC  2217               	addwfc	(___fltol@f1+3)^0,f,c
  6067  004EAE                     l6942:
  6068  004EAE  C014  F014         	movff	___fltol@f1,?___fltol
  6069  004EB2  C015  F015         	movff	___fltol@f1+1,?___fltol+1
  6070  004EB6  C016  F016         	movff	___fltol@f1+2,?___fltol+2
  6071  004EBA  C017  F017         	movff	___fltol@f1+3,?___fltol+3
  6072  004EBE                     l609:
  6073  004EBE  0012               	return		;funcret
  6074  004EC0                     __end_of___fltol:
  6075                           	callstack 0
  6076                           
  6077 ;; *************** function ___flge *****************
  6078 ;; Defined at:
  6079 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  ff1             4   34[BANK0 ] long 
  6082 ;;  ff2             4   38[BANK0 ] long 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;		None
  6085 ;; Return value:  Size  Location     Type
  6086 ;;		None               void
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6094 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6097 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;Total ram usage:       12 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; Hardware stack levels required when called: 3
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_efgtoa
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text17
  6109  004EC0                     __ptext17:
  6110                           	callstack 0
  6111  004EC0                     ___flge:
  6112                           	callstack 22
  6113  004EC0  0E00               	movlw	0
  6114  004EC2  0100               	movlb	0	; () banked
  6115  004EC4  1582               	andwf	___flge@ff1& (0+255),w,b
  6116  004EC6  6F8A               	movwf	??___flge& (0+255),b
  6117  004EC8  0E00               	movlw	0
  6118  004ECA  1583               	andwf	(___flge@ff1+1)& (0+255),w,b
  6119  004ECC  6F8B               	movwf	(??___flge+1)& (0+255),b
  6120  004ECE  0E80               	movlw	128
  6121  004ED0  1584               	andwf	(___flge@ff1+2)& (0+255),w,b
  6122  004ED2  6F8C               	movwf	(??___flge+2)& (0+255),b
  6123  004ED4  0E7F               	movlw	127
  6124  004ED6  1585               	andwf	(___flge@ff1+3)& (0+255),w,b
  6125  004ED8  6F8D               	movwf	(??___flge+3)& (0+255),b
  6126  004EDA  518A               	movf	??___flge& (0+255),w,b
  6127  004EDC  118B               	iorwf	(??___flge+1)& (0+255),w,b
  6128  004EDE  118C               	iorwf	(??___flge+2)& (0+255),w,b
  6129  004EE0  118D               	iorwf	(??___flge+3)& (0+255),w,b
  6130  004EE2  A4D8               	btfss	status,2,c
  6131  004EE4  EF76  F027         	goto	u7071
  6132  004EE8  EF78  F027         	goto	u7070
  6133  004EEC                     u7071:
  6134  004EEC  EF80  F027         	goto	l6876
  6135  004EF0                     u7070:
  6136  004EF0                     
  6137                           ; BSR set to: 0
  6138  004EF0  0E00               	movlw	0
  6139  004EF2  6F82               	movwf	___flge@ff1& (0+255),b
  6140  004EF4  0E00               	movlw	0
  6141  004EF6  6F83               	movwf	(___flge@ff1+1)& (0+255),b
  6142  004EF8  0E00               	movlw	0
  6143  004EFA  6F84               	movwf	(___flge@ff1+2)& (0+255),b
  6144  004EFC  0E00               	movlw	0
  6145  004EFE  6F85               	movwf	(___flge@ff1+3)& (0+255),b
  6146  004F00                     l6876:
  6147                           
  6148                           ; BSR set to: 0
  6149  004F00  0E00               	movlw	0
  6150  004F02  1586               	andwf	___flge@ff2& (0+255),w,b
  6151  004F04  6F8A               	movwf	??___flge& (0+255),b
  6152  004F06  0E00               	movlw	0
  6153  004F08  1587               	andwf	(___flge@ff2+1)& (0+255),w,b
  6154  004F0A  6F8B               	movwf	(??___flge+1)& (0+255),b
  6155  004F0C  0E80               	movlw	128
  6156  004F0E  1588               	andwf	(___flge@ff2+2)& (0+255),w,b
  6157  004F10  6F8C               	movwf	(??___flge+2)& (0+255),b
  6158  004F12  0E7F               	movlw	127
  6159  004F14  1589               	andwf	(___flge@ff2+3)& (0+255),w,b
  6160  004F16  6F8D               	movwf	(??___flge+3)& (0+255),b
  6161  004F18  518A               	movf	??___flge& (0+255),w,b
  6162  004F1A  118B               	iorwf	(??___flge+1)& (0+255),w,b
  6163  004F1C  118C               	iorwf	(??___flge+2)& (0+255),w,b
  6164  004F1E  118D               	iorwf	(??___flge+3)& (0+255),w,b
  6165  004F20  A4D8               	btfss	status,2,c
  6166  004F22  EF95  F027         	goto	u7081
  6167  004F26  EF97  F027         	goto	u7080
  6168  004F2A                     u7081:
  6169  004F2A  EF9F  F027         	goto	l6880
  6170  004F2E                     u7080:
  6171  004F2E                     
  6172                           ; BSR set to: 0
  6173  004F2E  0E00               	movlw	0
  6174  004F30  6F86               	movwf	___flge@ff2& (0+255),b
  6175  004F32  0E00               	movlw	0
  6176  004F34  6F87               	movwf	(___flge@ff2+1)& (0+255),b
  6177  004F36  0E00               	movlw	0
  6178  004F38  6F88               	movwf	(___flge@ff2+2)& (0+255),b
  6179  004F3A  0E00               	movlw	0
  6180  004F3C  6F89               	movwf	(___flge@ff2+3)& (0+255),b
  6181  004F3E                     l6880:
  6182                           
  6183                           ; BSR set to: 0
  6184  004F3E  AF85               	btfss	(___flge@ff1+3)& (0+255),7,b
  6185  004F40  EFA4  F027         	goto	u7091
  6186  004F44  EFA6  F027         	goto	u7090
  6187  004F48                     u7091:
  6188  004F48  EFAF  F027         	goto	l6884
  6189  004F4C                     u7090:
  6190  004F4C                     
  6191                           ; BSR set to: 0
  6192  004F4C  6D82               	negf	___flge@ff1& (0+255),b
  6193  004F4E  1F83               	comf	(___flge@ff1+1)& (0+255),f,b
  6194  004F50  B0D8               	btfsc	status,0,c
  6195  004F52  2B83               	incf	(___flge@ff1+1)& (0+255),f,b
  6196  004F54  1F84               	comf	(___flge@ff1+2)& (0+255),f,b
  6197  004F56  B0D8               	btfsc	status,0,c
  6198  004F58  2B84               	incf	(___flge@ff1+2)& (0+255),f,b
  6199  004F5A  0E80               	movlw	128
  6200  004F5C  5785               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6201  004F5E                     l6884:
  6202                           
  6203                           ; BSR set to: 0
  6204  004F5E  AF89               	btfss	(___flge@ff2+3)& (0+255),7,b
  6205  004F60  EFB4  F027         	goto	u7101
  6206  004F64  EFB6  F027         	goto	u7100
  6207  004F68                     u7101:
  6208  004F68  EFBF  F027         	goto	l577
  6209  004F6C                     u7100:
  6210  004F6C                     
  6211                           ; BSR set to: 0
  6212  004F6C  6D86               	negf	___flge@ff2& (0+255),b
  6213  004F6E  1F87               	comf	(___flge@ff2+1)& (0+255),f,b
  6214  004F70  B0D8               	btfsc	status,0,c
  6215  004F72  2B87               	incf	(___flge@ff2+1)& (0+255),f,b
  6216  004F74  1F88               	comf	(___flge@ff2+2)& (0+255),f,b
  6217  004F76  B0D8               	btfsc	status,0,c
  6218  004F78  2B88               	incf	(___flge@ff2+2)& (0+255),f,b
  6219  004F7A  0E80               	movlw	128
  6220  004F7C  5789               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6221  004F7E                     l577:
  6222                           
  6223                           ; BSR set to: 0
  6224  004F7E  0E00               	movlw	0
  6225  004F80  1B82               	xorwf	___flge@ff1& (0+255),f,b
  6226  004F82  0E00               	movlw	0
  6227  004F84  1B83               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6228  004F86  0E00               	movlw	0
  6229  004F88  1B84               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6230  004F8A  0E80               	movlw	128
  6231  004F8C  1B85               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6232  004F8E  0E00               	movlw	0
  6233  004F90  1B86               	xorwf	___flge@ff2& (0+255),f,b
  6234  004F92  0E00               	movlw	0
  6235  004F94  1B87               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6236  004F96  0E00               	movlw	0
  6237  004F98  1B88               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6238  004F9A  0E80               	movlw	128
  6239  004F9C  1B89               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6240  004F9E  5186               	movf	___flge@ff2& (0+255),w,b
  6241  004FA0  5D82               	subwf	___flge@ff1& (0+255),w,b
  6242  004FA2  5187               	movf	(___flge@ff2+1)& (0+255),w,b
  6243  004FA4  5983               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6244  004FA6  5188               	movf	(___flge@ff2+2)& (0+255),w,b
  6245  004FA8  5984               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6246  004FAA  5189               	movf	(___flge@ff2+3)& (0+255),w,b
  6247  004FAC  5985               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6248  004FAE  B0D8               	btfsc	status,0,c
  6249  004FB0  EFDC  F027         	goto	u7111
  6250  004FB4  EFDE  F027         	goto	u7110
  6251  004FB8                     u7111:
  6252  004FB8  EFE1  F027         	goto	l6890
  6253  004FBC                     u7110:
  6254  004FBC                     
  6255                           ; BSR set to: 0
  6256  004FBC  90D8               	bcf	status,0,c
  6257  004FBE  EFE2  F027         	goto	l582
  6258  004FC2                     l6890:
  6259                           
  6260                           ; BSR set to: 0
  6261  004FC2  80D8               	bsf	status,0,c
  6262  004FC4                     l582:
  6263                           
  6264                           ; BSR set to: 0
  6265  004FC4  0012               	return		;funcret
  6266  004FC6                     __end_of___flge:
  6267                           	callstack 0
  6268                           
  6269 ;; *************** function ___fleq *****************
  6270 ;; Defined at:
  6271 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  ff1             4   19[COMRAM] long 
  6274 ;;  ff2             4   23[COMRAM] long 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;		None               void
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6286 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;Total ram usage:       12 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 3
  6293 ;; This function calls:
  6294 ;;		Nothing
  6295 ;; This function is called by:
  6296 ;;		_efgtoa
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text18
  6301  0054A6                     __ptext18:
  6302                           	callstack 0
  6303  0054A6                     ___fleq:
  6304                           	callstack 22
  6305  0054A6  0E00               	movlw	0
  6306  0054A8  1414               	andwf	___fleq@ff1^0,w,c
  6307  0054AA  6E1C               	movwf	??___fleq^0,c
  6308  0054AC  0E00               	movlw	0
  6309  0054AE  1415               	andwf	(___fleq@ff1+1)^0,w,c
  6310  0054B0  6E1D               	movwf	(??___fleq+1)^0,c
  6311  0054B2  0E80               	movlw	128
  6312  0054B4  1416               	andwf	(___fleq@ff1+2)^0,w,c
  6313  0054B6  6E1E               	movwf	(??___fleq+2)^0,c
  6314  0054B8  0E7F               	movlw	127
  6315  0054BA  1417               	andwf	(___fleq@ff1+3)^0,w,c
  6316  0054BC  6E1F               	movwf	(??___fleq+3)^0,c
  6317  0054BE  501C               	movf	??___fleq^0,w,c
  6318  0054C0  101D               	iorwf	(??___fleq+1)^0,w,c
  6319  0054C2  101E               	iorwf	(??___fleq+2)^0,w,c
  6320  0054C4  101F               	iorwf	(??___fleq+3)^0,w,c
  6321  0054C6  A4D8               	btfss	status,2,c
  6322  0054C8  EF68  F02A         	goto	u7041
  6323  0054CC  EF6A  F02A         	goto	u7040
  6324  0054D0                     u7041:
  6325  0054D0  EF72  F02A         	goto	l6860
  6326  0054D4                     u7040:
  6327  0054D4  0E00               	movlw	0
  6328  0054D6  6E14               	movwf	___fleq@ff1^0,c
  6329  0054D8  0E00               	movlw	0
  6330  0054DA  6E15               	movwf	(___fleq@ff1+1)^0,c
  6331  0054DC  0E00               	movlw	0
  6332  0054DE  6E16               	movwf	(___fleq@ff1+2)^0,c
  6333  0054E0  0E00               	movlw	0
  6334  0054E2  6E17               	movwf	(___fleq@ff1+3)^0,c
  6335  0054E4                     l6860:
  6336  0054E4  0E00               	movlw	0
  6337  0054E6  1418               	andwf	___fleq@ff2^0,w,c
  6338  0054E8  6E1C               	movwf	??___fleq^0,c
  6339  0054EA  0E00               	movlw	0
  6340  0054EC  1419               	andwf	(___fleq@ff2+1)^0,w,c
  6341  0054EE  6E1D               	movwf	(??___fleq+1)^0,c
  6342  0054F0  0E80               	movlw	128
  6343  0054F2  141A               	andwf	(___fleq@ff2+2)^0,w,c
  6344  0054F4  6E1E               	movwf	(??___fleq+2)^0,c
  6345  0054F6  0E7F               	movlw	127
  6346  0054F8  141B               	andwf	(___fleq@ff2+3)^0,w,c
  6347  0054FA  6E1F               	movwf	(??___fleq+3)^0,c
  6348  0054FC  501C               	movf	??___fleq^0,w,c
  6349  0054FE  101D               	iorwf	(??___fleq+1)^0,w,c
  6350  005500  101E               	iorwf	(??___fleq+2)^0,w,c
  6351  005502  101F               	iorwf	(??___fleq+3)^0,w,c
  6352  005504  A4D8               	btfss	status,2,c
  6353  005506  EF87  F02A         	goto	u7051
  6354  00550A  EF89  F02A         	goto	u7050
  6355  00550E                     u7051:
  6356  00550E  EF91  F02A         	goto	l6864
  6357  005512                     u7050:
  6358  005512  0E00               	movlw	0
  6359  005514  6E18               	movwf	___fleq@ff2^0,c
  6360  005516  0E00               	movlw	0
  6361  005518  6E19               	movwf	(___fleq@ff2+1)^0,c
  6362  00551A  0E00               	movlw	0
  6363  00551C  6E1A               	movwf	(___fleq@ff2+2)^0,c
  6364  00551E  0E00               	movlw	0
  6365  005520  6E1B               	movwf	(___fleq@ff2+3)^0,c
  6366  005522                     l6864:
  6367  005522  5018               	movf	___fleq@ff2^0,w,c
  6368  005524  1814               	xorwf	___fleq@ff1^0,w,c
  6369  005526  E10F               	bnz	u7060
  6370  005528  5019               	movf	(___fleq@ff2+1)^0,w,c
  6371  00552A  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  6372  00552C  E10C               	bnz	u7060
  6373  00552E  501A               	movf	(___fleq@ff2+2)^0,w,c
  6374  005530  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  6375  005532  E109               	bnz	u7060
  6376  005534  501B               	movf	(___fleq@ff2+3)^0,w,c
  6377  005536  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  6378  005538  B4D8               	btfsc	status,2,c
  6379  00553A  EFA1  F02A         	goto	u7061
  6380  00553E  EFA3  F02A         	goto	u7060
  6381  005542                     u7061:
  6382  005542  EFA6  F02A         	goto	l6868
  6383  005546                     u7060:
  6384  005546  90D8               	bcf	status,0,c
  6385  005548  EFA7  F02A         	goto	l571
  6386  00554C                     l6868:
  6387  00554C  80D8               	bsf	status,0,c
  6388  00554E                     l571:
  6389  00554E  0012               	return		;funcret
  6390  005550                     __end_of___fleq:
  6391                           	callstack 0
  6392                           
  6393 ;; *************** function ___awmod *****************
  6394 ;; Defined at:
  6395 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;  dividend        2   19[COMRAM] int 
  6398 ;;  divisor         2   21[COMRAM] int 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  sign            1   24[COMRAM] unsigned char 
  6401 ;;  counter         1   23[COMRAM] unsigned char 
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  2   19[COMRAM] int 
  6404 ;; Registers used:
  6405 ;;		wreg, status,2, status,0
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;Total ram usage:        6 bytes
  6416 ;; Hardware stack levels used: 1
  6417 ;; Hardware stack levels required when called: 3
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		_efgtoa
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text19
  6426  0053F6                     __ptext19:
  6427                           	callstack 0
  6428  0053F6                     ___awmod:
  6429                           	callstack 22
  6430  0053F6  0E00               	movlw	0
  6431  0053F8  6E19               	movwf	___awmod@sign^0,c
  6432  0053FA  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  6433  0053FC  EF04  F02A         	goto	u6980
  6434  005400  EF02  F02A         	goto	u6981
  6435  005404                     u6981:
  6436  005404  EF0A  F02A         	goto	l6828
  6437  005408                     u6980:
  6438  005408  6C14               	negf	___awmod@dividend^0,c
  6439  00540A  1E15               	comf	(___awmod@dividend+1)^0,f,c
  6440  00540C  B0D8               	btfsc	status,0,c
  6441  00540E  2A15               	incf	(___awmod@dividend+1)^0,f,c
  6442  005410  0E01               	movlw	1
  6443  005412  6E19               	movwf	___awmod@sign^0,c
  6444  005414                     l6828:
  6445  005414  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  6446  005416  EF11  F02A         	goto	u6990
  6447  00541A  EF0F  F02A         	goto	u6991
  6448  00541E                     u6991:
  6449  00541E  EF15  F02A         	goto	l6832
  6450  005422                     u6990:
  6451  005422  6C16               	negf	___awmod@divisor^0,c
  6452  005424  1E17               	comf	(___awmod@divisor+1)^0,f,c
  6453  005426  B0D8               	btfsc	status,0,c
  6454  005428  2A17               	incf	(___awmod@divisor+1)^0,f,c
  6455  00542A                     l6832:
  6456  00542A  5016               	movf	___awmod@divisor^0,w,c
  6457  00542C  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  6458  00542E  B4D8               	btfsc	status,2,c
  6459  005430  EF1C  F02A         	goto	u7001
  6460  005434  EF1E  F02A         	goto	u7000
  6461  005438                     u7001:
  6462  005438  EF42  F02A         	goto	l6848
  6463  00543C                     u7000:
  6464  00543C  0E01               	movlw	1
  6465  00543E  6E18               	movwf	___awmod@counter^0,c
  6466  005440  EF26  F02A         	goto	l6838
  6467  005444                     l6836:
  6468  005444  90D8               	bcf	status,0,c
  6469  005446  3616               	rlcf	___awmod@divisor^0,f,c
  6470  005448  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  6471  00544A  2A18               	incf	___awmod@counter^0,f,c
  6472  00544C                     l6838:
  6473  00544C  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  6474  00544E  EF2B  F02A         	goto	u7011
  6475  005452  EF2D  F02A         	goto	u7010
  6476  005456                     u7011:
  6477  005456  EF22  F02A         	goto	l6836
  6478  00545A                     u7010:
  6479  00545A                     l6840:
  6480  00545A  5016               	movf	___awmod@divisor^0,w,c
  6481  00545C  5C14               	subwf	___awmod@dividend^0,w,c
  6482  00545E  5017               	movf	(___awmod@divisor+1)^0,w,c
  6483  005460  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  6484  005462  A0D8               	btfss	status,0,c
  6485  005464  EF36  F02A         	goto	u7021
  6486  005468  EF38  F02A         	goto	u7020
  6487  00546C                     u7021:
  6488  00546C  EF3C  F02A         	goto	l6844
  6489  005470                     u7020:
  6490  005470  5016               	movf	___awmod@divisor^0,w,c
  6491  005472  5E14               	subwf	___awmod@dividend^0,f,c
  6492  005474  5017               	movf	(___awmod@divisor+1)^0,w,c
  6493  005476  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  6494  005478                     l6844:
  6495  005478  90D8               	bcf	status,0,c
  6496  00547A  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  6497  00547C  3216               	rrcf	___awmod@divisor^0,f,c
  6498  00547E  2E18               	decfsz	___awmod@counter^0,f,c
  6499  005480  EF2D  F02A         	goto	l6840
  6500  005484                     l6848:
  6501  005484  5019               	movf	___awmod@sign^0,w,c
  6502  005486  B4D8               	btfsc	status,2,c
  6503  005488  EF48  F02A         	goto	u7031
  6504  00548C  EF4A  F02A         	goto	u7030
  6505  005490                     u7031:
  6506  005490  EF4E  F02A         	goto	l6852
  6507  005494                     u7030:
  6508  005494  6C14               	negf	___awmod@dividend^0,c
  6509  005496  1E15               	comf	(___awmod@dividend+1)^0,f,c
  6510  005498  B0D8               	btfsc	status,0,c
  6511  00549A  2A15               	incf	(___awmod@dividend+1)^0,f,c
  6512  00549C                     l6852:
  6513  00549C  C014  F014         	movff	___awmod@dividend,?___awmod
  6514  0054A0  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  6515  0054A4  0012               	return		;funcret
  6516  0054A6                     __end_of___awmod:
  6517                           	callstack 0
  6518                           
  6519 ;; *************** function ___awdiv *****************
  6520 ;; Defined at:
  6521 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  dividend        2   19[COMRAM] int 
  6524 ;;  divisor         2   21[COMRAM] int 
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;  quotient        2   25[COMRAM] int 
  6527 ;;  sign            1   24[COMRAM] unsigned char 
  6528 ;;  counter         1   23[COMRAM] unsigned char 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  2   19[COMRAM] int 
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;Total ram usage:        8 bytes
  6543 ;; Hardware stack levels used: 1
  6544 ;; Hardware stack levels required when called: 3
  6545 ;; This function calls:
  6546 ;;		Nothing
  6547 ;; This function is called by:
  6548 ;;		_efgtoa
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text20
  6553  005270                     __ptext20:
  6554                           	callstack 0
  6555  005270                     ___awdiv:
  6556                           	callstack 22
  6557  005270  0E00               	movlw	0
  6558  005272  6E19               	movwf	___awdiv@sign^0,c
  6559  005274  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  6560  005276  EF41  F029         	goto	u6920
  6561  00527A  EF3F  F029         	goto	u6921
  6562  00527E                     u6921:
  6563  00527E  EF47  F029         	goto	l6784
  6564  005282                     u6920:
  6565  005282  6C16               	negf	___awdiv@divisor^0,c
  6566  005284  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  6567  005286  B0D8               	btfsc	status,0,c
  6568  005288  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  6569  00528A  0E01               	movlw	1
  6570  00528C  6E19               	movwf	___awdiv@sign^0,c
  6571  00528E                     l6784:
  6572  00528E  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  6573  005290  EF4E  F029         	goto	u6930
  6574  005294  EF4C  F029         	goto	u6931
  6575  005298                     u6931:
  6576  005298  EF54  F029         	goto	l6790
  6577  00529C                     u6930:
  6578  00529C  6C14               	negf	___awdiv@dividend^0,c
  6579  00529E  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  6580  0052A0  B0D8               	btfsc	status,0,c
  6581  0052A2  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  6582  0052A4  0E01               	movlw	1
  6583  0052A6  1A19               	xorwf	___awdiv@sign^0,f,c
  6584  0052A8                     l6790:
  6585  0052A8  0E00               	movlw	0
  6586  0052AA  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  6587  0052AC  0E00               	movlw	0
  6588  0052AE  6E1A               	movwf	___awdiv@quotient^0,c
  6589  0052B0  5016               	movf	___awdiv@divisor^0,w,c
  6590  0052B2  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  6591  0052B4  B4D8               	btfsc	status,2,c
  6592  0052B6  EF5F  F029         	goto	u6941
  6593  0052BA  EF61  F029         	goto	u6940
  6594  0052BE                     u6941:
  6595  0052BE  EF89  F029         	goto	l6812
  6596  0052C2                     u6940:
  6597  0052C2  0E01               	movlw	1
  6598  0052C4  6E18               	movwf	___awdiv@counter^0,c
  6599  0052C6  EF69  F029         	goto	l6798
  6600  0052CA                     l6796:
  6601  0052CA  90D8               	bcf	status,0,c
  6602  0052CC  3616               	rlcf	___awdiv@divisor^0,f,c
  6603  0052CE  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  6604  0052D0  2A18               	incf	___awdiv@counter^0,f,c
  6605  0052D2                     l6798:
  6606  0052D2  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  6607  0052D4  EF6E  F029         	goto	u6951
  6608  0052D8  EF70  F029         	goto	u6950
  6609  0052DC                     u6951:
  6610  0052DC  EF65  F029         	goto	l6796
  6611  0052E0                     u6950:
  6612  0052E0                     l6800:
  6613  0052E0  90D8               	bcf	status,0,c
  6614  0052E2  361A               	rlcf	___awdiv@quotient^0,f,c
  6615  0052E4  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  6616  0052E6  5016               	movf	___awdiv@divisor^0,w,c
  6617  0052E8  5C14               	subwf	___awdiv@dividend^0,w,c
  6618  0052EA  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6619  0052EC  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  6620  0052EE  A0D8               	btfss	status,0,c
  6621  0052F0  EF7C  F029         	goto	u6961
  6622  0052F4  EF7E  F029         	goto	u6960
  6623  0052F8                     u6961:
  6624  0052F8  EF83  F029         	goto	l6808
  6625  0052FC                     u6960:
  6626  0052FC  5016               	movf	___awdiv@divisor^0,w,c
  6627  0052FE  5E14               	subwf	___awdiv@dividend^0,f,c
  6628  005300  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6629  005302  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  6630  005304  801A               	bsf	___awdiv@quotient^0,0,c
  6631  005306                     l6808:
  6632  005306  90D8               	bcf	status,0,c
  6633  005308  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  6634  00530A  3216               	rrcf	___awdiv@divisor^0,f,c
  6635  00530C  2E18               	decfsz	___awdiv@counter^0,f,c
  6636  00530E  EF70  F029         	goto	l6800
  6637  005312                     l6812:
  6638  005312  5019               	movf	___awdiv@sign^0,w,c
  6639  005314  B4D8               	btfsc	status,2,c
  6640  005316  EF8F  F029         	goto	u6971
  6641  00531A  EF91  F029         	goto	u6970
  6642  00531E                     u6971:
  6643  00531E  EF95  F029         	goto	l6816
  6644  005322                     u6970:
  6645  005322  6C1A               	negf	___awdiv@quotient^0,c
  6646  005324  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  6647  005326  B0D8               	btfsc	status,0,c
  6648  005328  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  6649  00532A                     l6816:
  6650  00532A  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  6651  00532E  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  6652  005332  0012               	return		;funcret
  6653  005334                     __end_of___awdiv:
  6654                           	callstack 0
  6655                           
  6656 ;; *************** function _atoi *****************
  6657 ;; Defined at:
  6658 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;  s               2   26[COMRAM] PTR const unsigned char 
  6661 ;;		 -> STR_2(21), STR_1(20), 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  n               2   39[COMRAM] int 
  6664 ;;  neg             2   32[COMRAM] int 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  2   26[COMRAM] int 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;Total ram usage:       15 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; Hardware stack levels required when called: 4
  6681 ;; This function calls:
  6682 ;;		___wmul
  6683 ;;		_isdigit
  6684 ;;		_isspace
  6685 ;; This function is called by:
  6686 ;;		_vfpfcnvrt
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           	psect	text21
  6691  00480E                     __ptext21:
  6692                           	callstack 0
  6693  00480E                     _atoi:
  6694                           	callstack 22
  6695  00480E  0E00               	movlw	0
  6696  004810  6E29               	movwf	(atoi@n+1)^0,c
  6697  004812  0E00               	movlw	0
  6698  004814  6E28               	movwf	atoi@n^0,c
  6699  004816  0E00               	movlw	0
  6700  004818  6E22               	movwf	(atoi@neg+1)^0,c
  6701  00481A  0E00               	movlw	0
  6702  00481C  6E21               	movwf	atoi@neg^0,c
  6703  00481E  EF13  F024         	goto	l7360
  6704  004822                     l7358:
  6705  004822  4A1B               	infsnz	atoi@s^0,f,c
  6706  004824  2A1C               	incf	(atoi@s+1)^0,f,c
  6707  004826                     l7360:
  6708  004826  0E01               	movlw	1
  6709  004828  6E27               	movwf	_atoi$2288^0,c
  6710  00482A  C01B  FFF6         	movff	atoi@s,tblptrl
  6711  00482E  C01C  FFF7         	movff	atoi@s+1,tblptrh
  6712  004832                     	if	0	;tblptru may be non-zero
  6713  004832                     	endif
  6714  004832                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6715  004832  0E00               	movlw	low (__mediumconst shr (0+16))
  6716  004834  6EF8               	movwf	tblptru,c
  6717  004836                     	endif
  6718  004836  0008               	tblrd		*
  6719  004838  50F5               	movf	tablat,w,c
  6720  00483A  0A20               	xorlw	32
  6721  00483C  B4D8               	btfsc	status,2,c
  6722  00483E  EF23  F024         	goto	u8041
  6723  004842  EF25  F024         	goto	u8040
  6724  004846                     u8041:
  6725  004846  EF44  F024         	goto	l7368
  6726  00484A                     u8040:
  6727  00484A  0EF7               	movlw	247
  6728  00484C  6E1D               	movwf	??_atoi^0,c
  6729  00484E  0EFF               	movlw	255
  6730  004850  6E1E               	movwf	(??_atoi+1)^0,c
  6731  004852  C01B  FFF6         	movff	atoi@s,tblptrl
  6732  004856  C01C  FFF7         	movff	atoi@s+1,tblptrh
  6733  00485A                     	if	0	;tblptru may be non-zero
  6734  00485A                     	endif
  6735  00485A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6736  00485A  0E00               	movlw	low (__mediumconst shr (0+16))
  6737  00485C  6EF8               	movwf	tblptru,c
  6738  00485E                     	endif
  6739  00485E  0008               	tblrd		*
  6740  004860  50F5               	movf	tablat,w,c
  6741  004862  6E1F               	movwf	(??_atoi+2)^0,c
  6742  004864  6A20               	clrf	(??_atoi+3)^0,c
  6743  004866  501D               	movf	??_atoi^0,w,c
  6744  004868  261F               	addwf	(??_atoi+2)^0,f,c
  6745  00486A  501E               	movf	(??_atoi+1)^0,w,c
  6746  00486C  2220               	addwfc	(??_atoi+3)^0,f,c
  6747  00486E  5020               	movf	(??_atoi+3)^0,w,c
  6748  004870  E109               	bnz	u8050
  6749  004872  0E05               	movlw	5
  6750  004874  5C1F               	subwf	(??_atoi+2)^0,w,c
  6751  004876  A0D8               	btfss	status,0,c
  6752  004878  EF40  F024         	goto	u8051
  6753  00487C  EF42  F024         	goto	u8050
  6754  004880                     u8051:
  6755  004880  EF44  F024         	goto	l7368
  6756  004884                     u8050:
  6757  004884  0E00               	movlw	0
  6758  004886  6E27               	movwf	_atoi$2288^0,c
  6759  004888                     l7368:
  6760  004888  C027  F023         	movff	_atoi$2288,_atoi$2287
  6761  00488C  6A24               	clrf	(_atoi$2287+1)^0,c
  6762  00488E  5023               	movf	_atoi$2287^0,w,c
  6763  004890  1024               	iorwf	(_atoi$2287+1)^0,w,c
  6764  004892  A4D8               	btfss	status,2,c
  6765  004894  EF4E  F024         	goto	u8061
  6766  004898  EF50  F024         	goto	u8060
  6767  00489C                     u8061:
  6768  00489C  EF11  F024         	goto	l7358
  6769  0048A0                     u8060:
  6770  0048A0  EF5A  F024         	goto	l7378
  6771  0048A4                     l7374:
  6772  0048A4  0E00               	movlw	0
  6773  0048A6  6E22               	movwf	(atoi@neg+1)^0,c
  6774  0048A8  0E01               	movlw	1
  6775  0048AA  6E21               	movwf	atoi@neg^0,c
  6776  0048AC                     l7376:
  6777  0048AC  4A1B               	infsnz	atoi@s^0,f,c
  6778  0048AE  2A1C               	incf	(atoi@s+1)^0,f,c
  6779  0048B0  EF93  F024         	goto	l7384
  6780  0048B4                     l7378:
  6781  0048B4  C01B  FFF6         	movff	atoi@s,tblptrl
  6782  0048B8  C01C  FFF7         	movff	atoi@s+1,tblptrh
  6783  0048BC                     	if	0	;tblptru may be non-zero
  6784  0048BC                     	endif
  6785  0048BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6786  0048BC  0E00               	movlw	low (__mediumconst shr (0+16))
  6787  0048BE  6EF8               	movwf	tblptru,c
  6788  0048C0                     	endif
  6789  0048C0  0008               	tblrd		*
  6790  0048C2  50F5               	movf	tablat,w,c
  6791  0048C4  6E1D               	movwf	??_atoi^0,c
  6792  0048C6  6A1E               	clrf	(??_atoi+1)^0,c
  6793                           
  6794                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6795                           ; Switch size 1, requested type "simple"
  6796                           ; Number of cases is 1, Range of values is 0 to 0
  6797                           ; switch strategies available:
  6798                           ; Name         Instructions Cycles
  6799                           ; simple_byte            4     3 (average)
  6800                           ;	Chosen strategy is simple_byte
  6801  0048C8  501E               	movf	(??_atoi+1)^0,w,c
  6802  0048CA  0A00               	xorlw	0	; case 0
  6803  0048CC  B4D8               	btfsc	status,2,c
  6804  0048CE  EF6B  F024         	goto	l8586
  6805  0048D2  EF93  F024         	goto	l7384
  6806  0048D6                     l8586:
  6807                           
  6808                           ; Switch size 1, requested type "simple"
  6809                           ; Number of cases is 2, Range of values is 43 to 45
  6810                           ; switch strategies available:
  6811                           ; Name         Instructions Cycles
  6812                           ; simple_byte            7     4 (average)
  6813                           ;	Chosen strategy is simple_byte
  6814  0048D6  501D               	movf	??_atoi^0,w,c
  6815  0048D8  0A2B               	xorlw	43	; case 43
  6816  0048DA  B4D8               	btfsc	status,2,c
  6817  0048DC  EF56  F024         	goto	l7376
  6818  0048E0  0A06               	xorlw	6	; case 45
  6819  0048E2  B4D8               	btfsc	status,2,c
  6820  0048E4  EF52  F024         	goto	l7374
  6821  0048E8  EF93  F024         	goto	l7384
  6822  0048EC                     l7380:
  6823  0048EC  C028  F014         	movff	atoi@n,___wmul@multiplier
  6824  0048F0  C029  F015         	movff	atoi@n+1,___wmul@multiplier+1
  6825  0048F4  0E00               	movlw	0
  6826  0048F6  6E17               	movwf	(___wmul@multiplicand+1)^0,c
  6827  0048F8  0E0A               	movlw	10
  6828  0048FA  6E16               	movwf	___wmul@multiplicand^0,c
  6829  0048FC  EC72  F02E         	call	___wmul	;wreg free
  6830  004900  C01B  FFF6         	movff	atoi@s,tblptrl
  6831  004904  C01C  FFF7         	movff	atoi@s+1,tblptrh
  6832  004908                     	if	0	;tblptru may be non-zero
  6833  004908                     	endif
  6834  004908                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6835  004908  0E00               	movlw	low (__mediumconst shr (0+16))
  6836  00490A  6EF8               	movwf	tblptru,c
  6837  00490C                     	endif
  6838  00490C  0008               	tblrd		*
  6839  00490E  50F5               	movf	tablat,w,c
  6840  004910  5E14               	subwf	?___wmul^0,f,c
  6841  004912  0E00               	movlw	0
  6842  004914  5A15               	subwfb	(?___wmul+1)^0,f,c
  6843  004916  0E30               	movlw	48
  6844  004918  2414               	addwf	?___wmul^0,w,c
  6845  00491A  6E28               	movwf	atoi@n^0,c
  6846  00491C  0E00               	movlw	0
  6847  00491E  2015               	addwfc	(?___wmul+1)^0,w,c
  6848  004920  6E29               	movwf	(atoi@n+1)^0,c
  6849  004922  EF56  F024         	goto	l7376
  6850  004926                     l7384:
  6851  004926  0ED0               	movlw	208
  6852  004928  6E1D               	movwf	??_atoi^0,c
  6853  00492A  0EFF               	movlw	255
  6854  00492C  6E1E               	movwf	(??_atoi+1)^0,c
  6855  00492E  C01B  FFF6         	movff	atoi@s,tblptrl
  6856  004932  C01C  FFF7         	movff	atoi@s+1,tblptrh
  6857  004936                     	if	0	;tblptru may be non-zero
  6858  004936                     	endif
  6859  004936                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6860  004936  0E00               	movlw	low (__mediumconst shr (0+16))
  6861  004938  6EF8               	movwf	tblptru,c
  6862  00493A                     	endif
  6863  00493A  0008               	tblrd		*
  6864  00493C  50F5               	movf	tablat,w,c
  6865  00493E  6E1F               	movwf	(??_atoi+2)^0,c
  6866  004940  6A20               	clrf	(??_atoi+3)^0,c
  6867  004942  501D               	movf	??_atoi^0,w,c
  6868  004944  261F               	addwf	(??_atoi+2)^0,f,c
  6869  004946  501E               	movf	(??_atoi+1)^0,w,c
  6870  004948  2220               	addwfc	(??_atoi+3)^0,f,c
  6871  00494A  5020               	movf	(??_atoi+3)^0,w,c
  6872  00494C  E10A               	bnz	u8070
  6873  00494E  0E0A               	movlw	10
  6874  004950  5C1F               	subwf	(??_atoi+2)^0,w,c
  6875  004952  A0D8               	btfss	status,0,c
  6876  004954  EFAE  F024         	goto	u8071
  6877  004958  EFB1  F024         	goto	u8070
  6878  00495C                     u8071:
  6879  00495C  0E01               	movlw	1
  6880  00495E  EFB2  F024         	goto	u8080
  6881  004962                     u8070:
  6882  004962  0E00               	movlw	0
  6883  004964                     u8080:
  6884  004964  6E25               	movwf	_atoi$2289^0,c
  6885  004966  6A26               	clrf	(_atoi$2289+1)^0,c
  6886  004968  5025               	movf	_atoi$2289^0,w,c
  6887  00496A  1026               	iorwf	(_atoi$2289+1)^0,w,c
  6888  00496C  A4D8               	btfss	status,2,c
  6889  00496E  EFBB  F024         	goto	u8091
  6890  004972  EFBD  F024         	goto	u8090
  6891  004976                     u8091:
  6892  004976  EF76  F024         	goto	l7380
  6893  00497A                     u8090:
  6894  00497A  5021               	movf	atoi@neg^0,w,c
  6895  00497C  1022               	iorwf	(atoi@neg+1)^0,w,c
  6896  00497E  A4D8               	btfss	status,2,c
  6897  004980  EFC4  F024         	goto	u8101
  6898  004984  EFC6  F024         	goto	u8100
  6899  004988                     u8101:
  6900  004988  EFD4  F024         	goto	l1303
  6901  00498C                     u8100:
  6902  00498C  C028  F01D         	movff	atoi@n,??_atoi
  6903  004990  C029  F01E         	movff	atoi@n+1,??_atoi+1
  6904  004994  1E1D               	comf	??_atoi^0,f,c
  6905  004996  1E1E               	comf	(??_atoi+1)^0,f,c
  6906  004998  4A1D               	infsnz	??_atoi^0,f,c
  6907  00499A  2A1E               	incf	(??_atoi+1)^0,f,c
  6908  00499C  C01D  F01B         	movff	??_atoi,?_atoi
  6909  0049A0  C01E  F01C         	movff	??_atoi+1,?_atoi+1
  6910  0049A4  EFD8  F024         	goto	l1306
  6911  0049A8                     l1303:
  6912  0049A8  C028  F01B         	movff	atoi@n,?_atoi
  6913  0049AC  C029  F01C         	movff	atoi@n+1,?_atoi+1
  6914  0049B0                     l1306:
  6915  0049B0  0012               	return		;funcret
  6916  0049B2                     __end_of_atoi:
  6917                           	callstack 0
  6918                           
  6919 ;; *************** function _isspace *****************
  6920 ;; Defined at:
  6921 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  c               2   19[COMRAM] int 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  2   19[COMRAM] int 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6938 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6939 ;;Total ram usage:        7 bytes
  6940 ;; Hardware stack levels used: 1
  6941 ;; Hardware stack levels required when called: 3
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		_atoi
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text22
  6950  005A6E                     __ptext22:
  6951                           	callstack 0
  6952  005A6E                     _isspace:
  6953                           	callstack 22
  6954  005A6E  0E01               	movlw	1
  6955  005A70  6E1A               	movwf	_isspace$2318^0,c
  6956  005A72  0E20               	movlw	32
  6957  005A74  1814               	xorwf	isspace@c^0,w,c
  6958  005A76  1015               	iorwf	(isspace@c+1)^0,w,c
  6959  005A78  B4D8               	btfsc	status,2,c
  6960  005A7A  EF41  F02D         	goto	u7481
  6961  005A7E  EF43  F02D         	goto	u7480
  6962  005A82                     u7481:
  6963  005A82  EF5C  F02D         	goto	l7044
  6964  005A86                     u7480:
  6965  005A86  0EF7               	movlw	247
  6966  005A88  6E16               	movwf	??_isspace^0,c
  6967  005A8A  0EFF               	movlw	255
  6968  005A8C  6E17               	movwf	(??_isspace+1)^0,c
  6969  005A8E  C014  F018         	movff	isspace@c,??_isspace+2
  6970  005A92  C015  F019         	movff	isspace@c+1,??_isspace+3
  6971  005A96  5016               	movf	??_isspace^0,w,c
  6972  005A98  2618               	addwf	(??_isspace+2)^0,f,c
  6973  005A9A  5017               	movf	(??_isspace+1)^0,w,c
  6974  005A9C  2219               	addwfc	(??_isspace+3)^0,f,c
  6975  005A9E  5019               	movf	(??_isspace+3)^0,w,c
  6976  005AA0  E109               	bnz	u7490
  6977  005AA2  0E05               	movlw	5
  6978  005AA4  5C18               	subwf	(??_isspace+2)^0,w,c
  6979  005AA6  A0D8               	btfss	status,0,c
  6980  005AA8  EF58  F02D         	goto	u7491
  6981  005AAC  EF5A  F02D         	goto	u7490
  6982  005AB0                     u7491:
  6983  005AB0  EF5C  F02D         	goto	l7044
  6984  005AB4                     u7490:
  6985  005AB4  0E00               	movlw	0
  6986  005AB6  6E1A               	movwf	_isspace$2318^0,c
  6987  005AB8                     l7044:
  6988  005AB8  C01A  F014         	movff	_isspace$2318,?_isspace
  6989  005ABC  6A15               	clrf	(?_isspace+1)^0,c
  6990  005ABE  0012               	return		;funcret
  6991  005AC0                     __end_of_isspace:
  6992                           	callstack 0
  6993                           
  6994 ;; *************** function _isdigit *****************
  6995 ;; Defined at:
  6996 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  c               2   19[COMRAM] int 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;		None
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  2   19[COMRAM] int 
  7003 ;; Registers used:
  7004 ;;		wreg, status,2, status,0
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7013 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;Total ram usage:        6 bytes
  7015 ;; Hardware stack levels used: 1
  7016 ;; Hardware stack levels required when called: 3
  7017 ;; This function calls:
  7018 ;;		Nothing
  7019 ;; This function is called by:
  7020 ;;		_vfpfcnvrt
  7021 ;;		_atoi
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text23
  7026  005C0A                     __ptext23:
  7027                           	callstack 0
  7028  005C0A                     _isdigit:
  7029                           	callstack 23
  7030  005C0A  0ED0               	movlw	208
  7031  005C0C  6E16               	movwf	??_isdigit^0,c
  7032  005C0E  0EFF               	movlw	255
  7033  005C10  6E17               	movwf	(??_isdigit+1)^0,c
  7034  005C12  C014  F018         	movff	isdigit@c,??_isdigit+2
  7035  005C16  C015  F019         	movff	isdigit@c+1,??_isdigit+3
  7036  005C1A  5016               	movf	??_isdigit^0,w,c
  7037  005C1C  2618               	addwf	(??_isdigit+2)^0,f,c
  7038  005C1E  5017               	movf	(??_isdigit+1)^0,w,c
  7039  005C20  2219               	addwfc	(??_isdigit+3)^0,f,c
  7040  005C22  5019               	movf	(??_isdigit+3)^0,w,c
  7041  005C24  E10A               	bnz	u7460
  7042  005C26  0E0A               	movlw	10
  7043  005C28  5C18               	subwf	(??_isdigit+2)^0,w,c
  7044  005C2A  A0D8               	btfss	status,0,c
  7045  005C2C  EF1A  F02E         	goto	u7461
  7046  005C30  EF1D  F02E         	goto	u7460
  7047  005C34                     u7461:
  7048  005C34  0E01               	movlw	1
  7049  005C36  EF1E  F02E         	goto	u7470
  7050  005C3A                     u7460:
  7051  005C3A  0E00               	movlw	0
  7052  005C3C                     u7470:
  7053  005C3C  6E14               	movwf	?_isdigit^0,c
  7054  005C3E  6A15               	clrf	(?_isdigit+1)^0,c
  7055  005C40  0012               	return		;funcret
  7056  005C42                     __end_of_isdigit:
  7057                           	callstack 0
  7058                           
  7059 ;; *************** function ___wmul *****************
  7060 ;; Defined at:
  7061 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  multiplier      2   19[COMRAM] unsigned int 
  7064 ;;  multiplicand    2   21[COMRAM] unsigned int 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  product         2   23[COMRAM] unsigned int 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  2   19[COMRAM] unsigned int 
  7069 ;; Registers used:
  7070 ;;		wreg, status,2, status,0, prodl, prodh
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;Total ram usage:        6 bytes
  7081 ;; Hardware stack levels used: 1
  7082 ;; Hardware stack levels required when called: 3
  7083 ;; This function calls:
  7084 ;;		Nothing
  7085 ;; This function is called by:
  7086 ;;		_atoi
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text24
  7091  005CE4                     __ptext24:
  7092                           	callstack 0
  7093  005CE4                     ___wmul:
  7094                           	callstack 22
  7095  005CE4  5014               	movf	___wmul@multiplier^0,w,c
  7096  005CE6  0216               	mulwf	___wmul@multiplicand^0,c
  7097  005CE8  CFF3 F018          	movff	prodl,___wmul@product
  7098  005CEC  CFF4 F019          	movff	prodh,___wmul@product+1
  7099  005CF0  5014               	movf	___wmul@multiplier^0,w,c
  7100  005CF2  0217               	mulwf	(___wmul@multiplicand+1)^0,c
  7101  005CF4  50F3               	movf	243,w,c
  7102  005CF6  2619               	addwf	(___wmul@product+1)^0,f,c
  7103  005CF8  5015               	movf	(___wmul@multiplier+1)^0,w,c
  7104  005CFA  0216               	mulwf	___wmul@multiplicand^0,c
  7105  005CFC  50F3               	movf	243,w,c
  7106  005CFE  2619               	addwf	(___wmul@product+1)^0,f,c
  7107  005D00  C018  F014         	movff	___wmul@product,?___wmul
  7108  005D04  C019  F015         	movff	___wmul@product+1,?___wmul+1
  7109  005D08  0012               	return		;funcret
  7110  005D0A                     __end_of___wmul:
  7111                           	callstack 0
  7112                           
  7113 ;; *************** function _atan2f *****************
  7114 ;; Defined at:
  7115 ;;		line 22 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atan2f.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  y               4  116[BANK0 ] float 
  7118 ;;  x               4  120[BANK0 ] float 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  m               4   28[BANK1 ] unsigned long 
  7121 ;;  iy              4   24[BANK1 ] unsigned long 
  7122 ;;  ix              4   20[BANK1 ] unsigned long 
  7123 ;;  z               4   16[BANK1 ] float 
  7124 ;;  __xc8_float_    4   12[BANK1 ] struct .
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  4  116[BANK0 ] float 
  7127 ;; Registers used:
  7128 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7134 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Totals:         0      24      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;Total ram usage:       56 bytes
  7139 ;; Hardware stack levels used: 1
  7140 ;; Hardware stack levels required when called: 6
  7141 ;; This function calls:
  7142 ;;		___fladd
  7143 ;;		___fldiv
  7144 ;;		___flneg
  7145 ;;		___flsub
  7146 ;;		___fpclassifyf
  7147 ;;		_atanf
  7148 ;;		_fabsf
  7149 ;; This function is called by:
  7150 ;;		_MPU6050_Read
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text25
  7155  002532                     __ptext25:
  7156                           	callstack 0
  7157  002532                     _atan2f:
  7158                           	callstack 23
  7159  002532  C0D8  F014         	movff	atan2f@x,___fpclassifyf@x
  7160  002536  C0D9  F015         	movff	atan2f@x+1,___fpclassifyf@x+1
  7161  00253A  C0DA  F016         	movff	atan2f@x+2,___fpclassifyf@x+2
  7162  00253E  C0DB  F017         	movff	atan2f@x+3,___fpclassifyf@x+3
  7163  002542  ECE3  F027         	call	___fpclassifyf	;wreg free
  7164  002546  5014               	movf	?___fpclassifyf^0,w,c
  7165  002548  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  7166  00254A  B4D8               	btfsc	status,2,c
  7167  00254C  EFAA  F012         	goto	u8581
  7168  002550  EFAC  F012         	goto	u8580
  7169  002554                     u8581:
  7170  002554  EFBF  F012         	goto	l7724
  7171  002558                     u8580:
  7172  002558  C0D4  F014         	movff	atan2f@y,___fpclassifyf@x
  7173  00255C  C0D5  F015         	movff	atan2f@y+1,___fpclassifyf@x+1
  7174  002560  C0D6  F016         	movff	atan2f@y+2,___fpclassifyf@x+2
  7175  002564  C0D7  F017         	movff	atan2f@y+3,___fpclassifyf@x+3
  7176  002568  ECE3  F027         	call	___fpclassifyf	;wreg free
  7177  00256C  5014               	movf	?___fpclassifyf^0,w,c
  7178  00256E  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  7179  002570  A4D8               	btfss	status,2,c
  7180  002572  EFBD  F012         	goto	u8591
  7181  002576  EFBF  F012         	goto	u8590
  7182  00257A                     u8591:
  7183  00257A  EFDB  F012         	goto	l1000
  7184  00257E                     u8590:
  7185  00257E                     l7724:
  7186  00257E  C0D8  F082         	movff	atan2f@x,___fladd@b
  7187  002582  C0D9  F083         	movff	atan2f@x+1,___fladd@b+1
  7188  002586  C0DA  F084         	movff	atan2f@x+2,___fladd@b+2
  7189  00258A  C0DB  F085         	movff	atan2f@x+3,___fladd@b+3
  7190  00258E  C0D4  F086         	movff	atan2f@y,___fladd@a
  7191  002592  C0D5  F087         	movff	atan2f@y+1,___fladd@a+1
  7192  002596  C0D6  F088         	movff	atan2f@y+2,___fladd@a+2
  7193  00259A  C0D7  F089         	movff	atan2f@y+3,___fladd@a+3
  7194  00259E  EC8F  F019         	call	___fladd	;wreg free
  7195  0025A2  C082  F0D4         	movff	?___fladd,?_atan2f
  7196  0025A6  C083  F0D5         	movff	?___fladd+1,?_atan2f+1
  7197  0025AA  C084  F0D6         	movff	?___fladd+2,?_atan2f+2
  7198  0025AE  C085  F0D7         	movff	?___fladd+3,?_atan2f+3
  7199  0025B2  EF4C  F016         	goto	l999
  7200  0025B6                     l1000:
  7201  0025B6  C0D8  F10C         	movff	atan2f@x,atan2f@__xc8_float_word
  7202  0025BA  C0D9  F10D         	movff	atan2f@x+1,atan2f@__xc8_float_word+1
  7203  0025BE  C0DA  F10E         	movff	atan2f@x+2,atan2f@__xc8_float_word+2
  7204  0025C2  C0DB  F10F         	movff	atan2f@x+3,atan2f@__xc8_float_word+3
  7205  0025C6  C10C  F114         	movff	atan2f@__xc8_float_word,atan2f@ix
  7206  0025CA  C10D  F115         	movff	atan2f@__xc8_float_word+1,atan2f@ix+1
  7207  0025CE  C10E  F116         	movff	atan2f@__xc8_float_word+2,atan2f@ix+2
  7208  0025D2  C10F  F117         	movff	atan2f@__xc8_float_word+3,atan2f@ix+3
  7209  0025D6  C0D4  F10C         	movff	atan2f@y,atan2f@__xc8_float_word
  7210  0025DA  C0D5  F10D         	movff	atan2f@y+1,atan2f@__xc8_float_word+1
  7211  0025DE  C0D6  F10E         	movff	atan2f@y+2,atan2f@__xc8_float_word+2
  7212  0025E2  C0D7  F10F         	movff	atan2f@y+3,atan2f@__xc8_float_word+3
  7213  0025E6  C10C  F118         	movff	atan2f@__xc8_float_word,atan2f@iy
  7214  0025EA  C10D  F119         	movff	atan2f@__xc8_float_word+1,atan2f@iy+1
  7215  0025EE  C10E  F11A         	movff	atan2f@__xc8_float_word+2,atan2f@iy+2
  7216  0025F2  C10F  F11B         	movff	atan2f@__xc8_float_word+3,atan2f@iy+3
  7217  0025F6  0E80               	movlw	128
  7218  0025F8  0101               	movlb	1	; () banked
  7219  0025FA  1916               	xorwf	(atan2f@ix+2)& (0+255),w,b
  7220  0025FC  E109               	bnz	u8601
  7221  0025FE  0E3F               	movlw	63
  7222  002600  1917               	xorwf	(atan2f@ix+3)& (0+255),w,b
  7223  002602  1114               	iorwf	atan2f@ix& (0+255),w,b
  7224  002604  1115               	iorwf	(atan2f@ix+1)& (0+255),w,b
  7225  002606  A4D8               	btfss	status,2,c
  7226  002608  EF08  F013         	goto	u8601
  7227  00260C  EF0A  F013         	goto	u8600
  7228  002610                     u8601:
  7229  002610  EF1E  F013         	goto	l7734
  7230  002614                     u8600:
  7231  002614                     
  7232                           ; BSR set to: 1
  7233  002614  C0D4  F09A         	movff	atan2f@y,atanf@x
  7234  002618  C0D5  F09B         	movff	atan2f@y+1,atanf@x+1
  7235  00261C  C0D6  F09C         	movff	atan2f@y+2,atanf@x+2
  7236  002620  C0D7  F09D         	movff	atan2f@y+3,atanf@x+3
  7237  002624  EC6D  F00E         	call	_atanf	;wreg free
  7238  002628  C09A  F0D4         	movff	?_atanf,?_atan2f
  7239  00262C  C09B  F0D5         	movff	?_atanf+1,?_atan2f+1
  7240  002630  C09C  F0D6         	movff	?_atanf+2,?_atan2f+2
  7241  002634  C09D  F0D7         	movff	?_atanf+3,?_atan2f+3
  7242  002638  EF4C  F016         	goto	l999
  7243  00263C                     l7734:
  7244                           
  7245                           ; BSR set to: 1
  7246  00263C  C114  F0DC         	movff	atan2f@ix,??_atan2f
  7247  002640  C115  F0DD         	movff	atan2f@ix+1,??_atan2f+1
  7248  002644  C116  F0DE         	movff	atan2f@ix+2,??_atan2f+2
  7249  002648  C117  F0DF         	movff	atan2f@ix+3,??_atan2f+3
  7250  00264C  0E1F               	movlw	31
  7251  00264E  EF2F  F013         	goto	u8610
  7252  002652                     u8615:
  7253  002652  0100               	movlb	0	; () banked
  7254  002654  90D8               	bcf	status,0,c
  7255  002656  33DF               	rrcf	(??_atan2f+3)& (0+255),f,b
  7256  002658  33DE               	rrcf	(??_atan2f+2)& (0+255),f,b
  7257  00265A  33DD               	rrcf	(??_atan2f+1)& (0+255),f,b
  7258  00265C  33DC               	rrcf	??_atan2f& (0+255),f,b
  7259  00265E                     u8610:
  7260  00265E  2EE8               	decfsz	wreg,f,c
  7261  002660  EF29  F013         	goto	u8615
  7262  002664  0E02               	movlw	2
  7263  002666  15DC               	andwf	??_atan2f& (0+255),w,b
  7264  002668  6FE0               	movwf	(??_atan2f+4)& (0+255),b
  7265  00266A  0E00               	movlw	0
  7266  00266C  15DD               	andwf	(??_atan2f+1)& (0+255),w,b
  7267  00266E  6FE1               	movwf	(??_atan2f+5)& (0+255),b
  7268  002670  0E00               	movlw	0
  7269  002672  15DE               	andwf	(??_atan2f+2)& (0+255),w,b
  7270  002674  6FE2               	movwf	(??_atan2f+6)& (0+255),b
  7271  002676  0E00               	movlw	0
  7272  002678  15DF               	andwf	(??_atan2f+3)& (0+255),w,b
  7273  00267A  6FE3               	movwf	(??_atan2f+7)& (0+255),b
  7274  00267C  C118  F0E4         	movff	atan2f@iy,??_atan2f+8
  7275  002680  C119  F0E5         	movff	atan2f@iy+1,??_atan2f+9
  7276  002684  C11A  F0E6         	movff	atan2f@iy+2,??_atan2f+10
  7277  002688  C11B  F0E7         	movff	atan2f@iy+3,??_atan2f+11
  7278  00268C  0E20               	movlw	32
  7279  00268E  EF4E  F013         	goto	u8620
  7280  002692                     u8625:
  7281  002692  90D8               	bcf	status,0,c
  7282  002694  33E7               	rrcf	(??_atan2f+11)& (0+255),f,b
  7283  002696  33E6               	rrcf	(??_atan2f+10)& (0+255),f,b
  7284  002698  33E5               	rrcf	(??_atan2f+9)& (0+255),f,b
  7285  00269A  33E4               	rrcf	(??_atan2f+8)& (0+255),f,b
  7286  00269C                     u8620:
  7287  00269C  2EE8               	decfsz	wreg,f,c
  7288  00269E  EF49  F013         	goto	u8625
  7289  0026A2  0E01               	movlw	1
  7290  0026A4  15E4               	andwf	(??_atan2f+8)& (0+255),w,b
  7291  0026A6  6FE8               	movwf	(??_atan2f+12)& (0+255),b
  7292  0026A8  0E00               	movlw	0
  7293  0026AA  15E5               	andwf	(??_atan2f+9)& (0+255),w,b
  7294  0026AC  6FE9               	movwf	(??_atan2f+13)& (0+255),b
  7295  0026AE  0E00               	movlw	0
  7296  0026B0  15E6               	andwf	(??_atan2f+10)& (0+255),w,b
  7297  0026B2  6FEA               	movwf	(??_atan2f+14)& (0+255),b
  7298  0026B4  0E00               	movlw	0
  7299  0026B6  15E7               	andwf	(??_atan2f+11)& (0+255),w,b
  7300  0026B8  6FEB               	movwf	(??_atan2f+15)& (0+255),b
  7301  0026BA  51E0               	movf	(??_atan2f+4)& (0+255),w,b
  7302  0026BC  11E8               	iorwf	(??_atan2f+12)& (0+255),w,b
  7303  0026BE  0101               	movlb	1	; () banked
  7304  0026C0  6F1C               	movwf	atan2f@m& (0+255),b
  7305  0026C2  0100               	movlb	0	; () banked
  7306  0026C4  51E1               	movf	(??_atan2f+5)& (0+255),w,b
  7307  0026C6  11E9               	iorwf	(??_atan2f+13)& (0+255),w,b
  7308  0026C8  0101               	movlb	1	; () banked
  7309  0026CA  6F1D               	movwf	(atan2f@m+1)& (0+255),b
  7310  0026CC  0100               	movlb	0	; () banked
  7311  0026CE  51E2               	movf	(??_atan2f+6)& (0+255),w,b
  7312  0026D0  11EA               	iorwf	(??_atan2f+14)& (0+255),w,b
  7313  0026D2  0101               	movlb	1	; () banked
  7314  0026D4  6F1E               	movwf	(atan2f@m+2)& (0+255),b
  7315  0026D6  0100               	movlb	0	; () banked
  7316  0026D8  51E3               	movf	(??_atan2f+7)& (0+255),w,b
  7317  0026DA  11EB               	iorwf	(??_atan2f+15)& (0+255),w,b
  7318  0026DC  0101               	movlb	1	; () banked
  7319  0026DE  6F1F               	movwf	(atan2f@m+3)& (0+255),b
  7320  0026E0                     
  7321                           ; BSR set to: 1
  7322  0026E0  9F17               	bcf	(atan2f@ix+3)& (0+255),7,b
  7323  0026E2                     
  7324                           ; BSR set to: 1
  7325  0026E2  9F1B               	bcf	(atan2f@iy+3)& (0+255),7,b
  7326  0026E4  5118               	movf	atan2f@iy& (0+255),w,b
  7327  0026E6  1119               	iorwf	(atan2f@iy+1)& (0+255),w,b
  7328  0026E8  111A               	iorwf	(atan2f@iy+2)& (0+255),w,b
  7329  0026EA  111B               	iorwf	(atan2f@iy+3)& (0+255),w,b
  7330  0026EC  A4D8               	btfss	status,2,c
  7331  0026EE  EF7B  F013         	goto	u8631
  7332  0026F2  EF7D  F013         	goto	u8630
  7333  0026F6                     u8631:
  7334  0026F6  EFCE  F013         	goto	l7754
  7335  0026FA                     u8630:
  7336  0026FA  EF9D  F013         	goto	l7752
  7337  0026FE                     l1008:
  7338                           
  7339                           ; BSR set to: 0
  7340  0026FE  C0D4  F0D4         	movff	atan2f@y,?_atan2f
  7341  002702  C0D5  F0D5         	movff	atan2f@y+1,?_atan2f+1
  7342  002706  C0D6  F0D6         	movff	atan2f@y+2,?_atan2f+2
  7343  00270A  C0D7  F0D7         	movff	atan2f@y+3,?_atan2f+3
  7344  00270E  EF4C  F016         	goto	l999
  7345  002712                     l7742:
  7346                           
  7347                           ; BSR set to: 0
  7348  002712  0EDB               	movlw	219
  7349  002714  6FD4               	movwf	?_atan2f& (0+255),b
  7350  002716  0E0F               	movlw	15
  7351  002718  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7352  00271A  0E49               	movlw	73
  7353  00271C  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7354  00271E  0E40               	movlw	64
  7355  002720  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7356  002722  EF4C  F016         	goto	l999
  7357  002726                     l7746:
  7358                           
  7359                           ; BSR set to: 0
  7360  002726  0EDB               	movlw	219
  7361  002728  6FD4               	movwf	?_atan2f& (0+255),b
  7362  00272A  0E0F               	movlw	15
  7363  00272C  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7364  00272E  0E49               	movlw	73
  7365  002730  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7366  002732  0EC0               	movlw	192
  7367  002734  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7368  002736  EF4C  F016         	goto	l999
  7369  00273A                     l7752:
  7370                           
  7371                           ; BSR set to: 1
  7372  00273A  C11C  F0DC         	movff	atan2f@m,??_atan2f
  7373  00273E  C11D  F0DD         	movff	atan2f@m+1,??_atan2f+1
  7374  002742  C11E  F0DE         	movff	atan2f@m+2,??_atan2f+2
  7375  002746  C11F  F0DF         	movff	atan2f@m+3,??_atan2f+3
  7376                           
  7377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7378                           ; Switch size 1, requested type "simple"
  7379                           ; Number of cases is 1, Range of values is 0 to 0
  7380                           ; switch strategies available:
  7381                           ; Name         Instructions Cycles
  7382                           ; simple_byte            4     3 (average)
  7383                           ;	Chosen strategy is simple_byte
  7384  00274A  0100               	movlb	0	; () banked
  7385  00274C  51DF               	movf	(??_atan2f+3)& (0+255),w,b
  7386  00274E  0A00               	xorlw	0	; case 0
  7387  002750  B4D8               	btfsc	status,2,c
  7388  002752  EFC7  F013         	goto	l8590
  7389  002756  EFCE  F013         	goto	l7754
  7390  00275A                     l8588:
  7391                           
  7392                           ; BSR set to: 0
  7393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7394                           ; Switch size 1, requested type "simple"
  7395                           ; Number of cases is 1, Range of values is 0 to 0
  7396                           ; switch strategies available:
  7397                           ; Name         Instructions Cycles
  7398                           ; simple_byte            4     3 (average)
  7399                           ;	Chosen strategy is simple_byte
  7400  00275A  51DD               	movf	(??_atan2f+1)& (0+255),w,b
  7401  00275C  0A00               	xorlw	0	; case 0
  7402  00275E  B4D8               	btfsc	status,2,c
  7403  002760  EFB4  F013         	goto	l8592
  7404  002764  EFCE  F013         	goto	l7754
  7405  002768                     l8592:
  7406                           
  7407                           ; BSR set to: 0
  7408                           ; Switch size 1, requested type "simple"
  7409                           ; Number of cases is 4, Range of values is 0 to 3
  7410                           ; switch strategies available:
  7411                           ; Name         Instructions Cycles
  7412                           ; simple_byte           13     7 (average)
  7413                           ;	Chosen strategy is simple_byte
  7414  002768  51DC               	movf	??_atan2f& (0+255),w,b
  7415  00276A  0A00               	xorlw	0	; case 0
  7416  00276C  B4D8               	btfsc	status,2,c
  7417  00276E  EF7F  F013         	goto	l1008
  7418  002772  0A01               	xorlw	1	; case 1
  7419  002774  B4D8               	btfsc	status,2,c
  7420  002776  EF7F  F013         	goto	l1008
  7421  00277A  0A03               	xorlw	3	; case 2
  7422  00277C  B4D8               	btfsc	status,2,c
  7423  00277E  EF89  F013         	goto	l7742
  7424  002782  0A01               	xorlw	1	; case 3
  7425  002784  B4D8               	btfsc	status,2,c
  7426  002786  EF93  F013         	goto	l7746
  7427  00278A  EFCE  F013         	goto	l7754
  7428  00278E                     l8590:
  7429                           
  7430                           ; BSR set to: 0
  7431                           ; Switch size 1, requested type "simple"
  7432                           ; Number of cases is 1, Range of values is 0 to 0
  7433                           ; switch strategies available:
  7434                           ; Name         Instructions Cycles
  7435                           ; simple_byte            4     3 (average)
  7436                           ;	Chosen strategy is simple_byte
  7437  00278E  51DE               	movf	(??_atan2f+2)& (0+255),w,b
  7438  002790  0A00               	xorlw	0	; case 0
  7439  002792  B4D8               	btfsc	status,2,c
  7440  002794  EFAD  F013         	goto	l8588
  7441  002798  EFCE  F013         	goto	l7754
  7442  00279C                     l7754:
  7443  00279C  0101               	movlb	1	; () banked
  7444  00279E  5114               	movf	atan2f@ix& (0+255),w,b
  7445  0027A0  1115               	iorwf	(atan2f@ix+1)& (0+255),w,b
  7446  0027A2  1116               	iorwf	(atan2f@ix+2)& (0+255),w,b
  7447  0027A4  1117               	iorwf	(atan2f@ix+3)& (0+255),w,b
  7448  0027A6  A4D8               	btfss	status,2,c
  7449  0027A8  EFD8  F013         	goto	u8641
  7450  0027AC  EFDA  F013         	goto	u8640
  7451  0027B0                     u8641:
  7452  0027B0  EFF7  F013         	goto	l7764
  7453  0027B4                     u8640:
  7454  0027B4                     
  7455                           ; BSR set to: 1
  7456  0027B4  B11C               	btfsc	atan2f@m& (0+255),0,b
  7457  0027B6  EFDF  F013         	goto	u8651
  7458  0027BA  EFE1  F013         	goto	u8650
  7459  0027BE                     u8651:
  7460  0027BE  EFEC  F013         	goto	l7760
  7461  0027C2                     u8650:
  7462  0027C2                     
  7463                           ; BSR set to: 1
  7464  0027C2  0EDB               	movlw	219
  7465  0027C4  0100               	movlb	0	; () banked
  7466  0027C6  6FD4               	movwf	?_atan2f& (0+255),b
  7467  0027C8  0E0F               	movlw	15
  7468  0027CA  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7469  0027CC  0EC9               	movlw	201
  7470  0027CE  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7471  0027D0  0E3F               	movlw	63
  7472  0027D2  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7473  0027D4  EF4C  F016         	goto	l999
  7474  0027D8                     l7760:
  7475                           
  7476                           ; BSR set to: 1
  7477  0027D8  0EDB               	movlw	219
  7478  0027DA  0100               	movlb	0	; () banked
  7479  0027DC  6FD4               	movwf	?_atan2f& (0+255),b
  7480  0027DE  0E0F               	movlw	15
  7481  0027E0  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7482  0027E2  0EC9               	movlw	201
  7483  0027E4  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7484  0027E6  0EBF               	movlw	191
  7485  0027E8  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7486  0027EA  EF4C  F016         	goto	l999
  7487  0027EE                     l7764:
  7488                           
  7489                           ; BSR set to: 1
  7490  0027EE  0E80               	movlw	128
  7491  0027F0  1916               	xorwf	(atan2f@ix+2)& (0+255),w,b
  7492  0027F2  E109               	bnz	u8661
  7493  0027F4  0E7F               	movlw	127
  7494  0027F6  1917               	xorwf	(atan2f@ix+3)& (0+255),w,b
  7495  0027F8  1114               	iorwf	atan2f@ix& (0+255),w,b
  7496  0027FA  1115               	iorwf	(atan2f@ix+1)& (0+255),w,b
  7497  0027FC  A4D8               	btfss	status,2,c
  7498  0027FE  EF03  F014         	goto	u8661
  7499  002802  EF05  F014         	goto	u8660
  7500  002806                     u8661:
  7501  002806  EFC7  F014         	goto	l7810
  7502  00280A                     u8660:
  7503  00280A                     
  7504                           ; BSR set to: 1
  7505  00280A  0E80               	movlw	128
  7506  00280C  191A               	xorwf	(atan2f@iy+2)& (0+255),w,b
  7507  00280E  E109               	bnz	u8671
  7508  002810  0E7F               	movlw	127
  7509  002812  191B               	xorwf	(atan2f@iy+3)& (0+255),w,b
  7510  002814  1118               	iorwf	atan2f@iy& (0+255),w,b
  7511  002816  1119               	iorwf	(atan2f@iy+1)& (0+255),w,b
  7512  002818  A4D8               	btfss	status,2,c
  7513  00281A  EF11  F014         	goto	u8671
  7514  00281E  EF13  F014         	goto	u8670
  7515  002822                     u8671:
  7516  002822  EF96  F014         	goto	l7808
  7517  002826                     u8670:
  7518  002826  EF3D  F014         	goto	l7788
  7519  00282A                     l7770:
  7520                           
  7521                           ; BSR set to: 0
  7522  00282A  0EDB               	movlw	219
  7523  00282C  6FD4               	movwf	?_atan2f& (0+255),b
  7524  00282E  0E0F               	movlw	15
  7525  002830  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7526  002832  0E49               	movlw	73
  7527  002834  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7528  002836  0E3F               	movlw	63
  7529  002838  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7530  00283A  EF4C  F016         	goto	l999
  7531  00283E                     l7774:
  7532                           
  7533                           ; BSR set to: 0
  7534  00283E  0EDB               	movlw	219
  7535  002840  6FD4               	movwf	?_atan2f& (0+255),b
  7536  002842  0E0F               	movlw	15
  7537  002844  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7538  002846  0E49               	movlw	73
  7539  002848  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7540  00284A  0EBF               	movlw	191
  7541  00284C  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7542  00284E  EF4C  F016         	goto	l999
  7543  002852                     l7778:
  7544                           
  7545                           ; BSR set to: 0
  7546  002852  0EE4               	movlw	228
  7547  002854  6FD4               	movwf	?_atan2f& (0+255),b
  7548  002856  0ECB               	movlw	203
  7549  002858  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7550  00285A  0E16               	movlw	22
  7551  00285C  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7552  00285E  0E40               	movlw	64
  7553  002860  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7554  002862  EF4C  F016         	goto	l999
  7555  002866                     l7782:
  7556                           
  7557                           ; BSR set to: 0
  7558  002866  0EE4               	movlw	228
  7559  002868  6FD4               	movwf	?_atan2f& (0+255),b
  7560  00286A  0ECB               	movlw	203
  7561  00286C  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7562  00286E  0E16               	movlw	22
  7563  002870  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7564  002872  0EC0               	movlw	192
  7565  002874  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7566  002876  EF4C  F016         	goto	l999
  7567  00287A                     l7788:
  7568                           
  7569                           ; BSR set to: 1
  7570  00287A  C11C  F0DC         	movff	atan2f@m,??_atan2f
  7571  00287E  C11D  F0DD         	movff	atan2f@m+1,??_atan2f+1
  7572  002882  C11E  F0DE         	movff	atan2f@m+2,??_atan2f+2
  7573  002886  C11F  F0DF         	movff	atan2f@m+3,??_atan2f+3
  7574                           
  7575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7576                           ; Switch size 1, requested type "simple"
  7577                           ; Number of cases is 1, Range of values is 0 to 0
  7578                           ; switch strategies available:
  7579                           ; Name         Instructions Cycles
  7580                           ; simple_byte            4     3 (average)
  7581                           ;	Chosen strategy is simple_byte
  7582  00288A  0100               	movlb	0	; () banked
  7583  00288C  51DF               	movf	(??_atan2f+3)& (0+255),w,b
  7584  00288E  0A00               	xorlw	0	; case 0
  7585  002890  B4D8               	btfsc	status,2,c
  7586  002892  EF67  F014         	goto	l8596
  7587  002896  EFC7  F014         	goto	l7810
  7588  00289A                     l8594:
  7589                           
  7590                           ; BSR set to: 0
  7591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7592                           ; Switch size 1, requested type "simple"
  7593                           ; Number of cases is 1, Range of values is 0 to 0
  7594                           ; switch strategies available:
  7595                           ; Name         Instructions Cycles
  7596                           ; simple_byte            4     3 (average)
  7597                           ;	Chosen strategy is simple_byte
  7598  00289A  51DD               	movf	(??_atan2f+1)& (0+255),w,b
  7599  00289C  0A00               	xorlw	0	; case 0
  7600  00289E  B4D8               	btfsc	status,2,c
  7601  0028A0  EF54  F014         	goto	l8598
  7602  0028A4  EFC7  F014         	goto	l7810
  7603  0028A8                     l8598:
  7604                           
  7605                           ; BSR set to: 0
  7606                           ; Switch size 1, requested type "simple"
  7607                           ; Number of cases is 4, Range of values is 0 to 3
  7608                           ; switch strategies available:
  7609                           ; Name         Instructions Cycles
  7610                           ; simple_byte           13     7 (average)
  7611                           ;	Chosen strategy is simple_byte
  7612  0028A8  51DC               	movf	??_atan2f& (0+255),w,b
  7613  0028AA  0A00               	xorlw	0	; case 0
  7614  0028AC  B4D8               	btfsc	status,2,c
  7615  0028AE  EF15  F014         	goto	l7770
  7616  0028B2  0A01               	xorlw	1	; case 1
  7617  0028B4  B4D8               	btfsc	status,2,c
  7618  0028B6  EF1F  F014         	goto	l7774
  7619  0028BA  0A03               	xorlw	3	; case 2
  7620  0028BC  B4D8               	btfsc	status,2,c
  7621  0028BE  EF29  F014         	goto	l7778
  7622  0028C2  0A01               	xorlw	1	; case 3
  7623  0028C4  B4D8               	btfsc	status,2,c
  7624  0028C6  EF33  F014         	goto	l7782
  7625  0028CA  EFC7  F014         	goto	l7810
  7626  0028CE                     l8596:
  7627                           
  7628                           ; BSR set to: 0
  7629                           ; Switch size 1, requested type "simple"
  7630                           ; Number of cases is 1, Range of values is 0 to 0
  7631                           ; switch strategies available:
  7632                           ; Name         Instructions Cycles
  7633                           ; simple_byte            4     3 (average)
  7634                           ;	Chosen strategy is simple_byte
  7635  0028CE  51DE               	movf	(??_atan2f+2)& (0+255),w,b
  7636  0028D0  0A00               	xorlw	0	; case 0
  7637  0028D2  B4D8               	btfsc	status,2,c
  7638  0028D4  EF4D  F014         	goto	l8594
  7639  0028D8  EFC7  F014         	goto	l7810
  7640  0028DC                     l7790:
  7641                           
  7642                           ; BSR set to: 0
  7643  0028DC  0E00               	movlw	0
  7644  0028DE  6FD4               	movwf	?_atan2f& (0+255),b
  7645  0028E0  0E00               	movlw	0
  7646  0028E2  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7647  0028E4  0E00               	movlw	0
  7648  0028E6  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7649  0028E8  0E00               	movlw	0
  7650  0028EA  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7651  0028EC  EF4C  F016         	goto	l999
  7652  0028F0                     l7794:
  7653                           
  7654                           ; BSR set to: 0
  7655  0028F0  0E00               	movlw	0
  7656  0028F2  6FD4               	movwf	?_atan2f& (0+255),b
  7657  0028F4  0E00               	movlw	0
  7658  0028F6  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7659  0028F8  0E00               	movlw	0
  7660  0028FA  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7661  0028FC  0E80               	movlw	128
  7662  0028FE  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7663  002900  EF4C  F016         	goto	l999
  7664  002904                     l7798:
  7665                           
  7666                           ; BSR set to: 0
  7667  002904  0EDB               	movlw	219
  7668  002906  6FD4               	movwf	?_atan2f& (0+255),b
  7669  002908  0E0F               	movlw	15
  7670  00290A  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7671  00290C  0E49               	movlw	73
  7672  00290E  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7673  002910  0E40               	movlw	64
  7674  002912  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7675  002914  EF4C  F016         	goto	l999
  7676  002918                     l7802:
  7677                           
  7678                           ; BSR set to: 0
  7679  002918  0EDB               	movlw	219
  7680  00291A  6FD4               	movwf	?_atan2f& (0+255),b
  7681  00291C  0E0F               	movlw	15
  7682  00291E  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7683  002920  0E49               	movlw	73
  7684  002922  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7685  002924  0EC0               	movlw	192
  7686  002926  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7687  002928  EF4C  F016         	goto	l999
  7688  00292C                     l7808:
  7689                           
  7690                           ; BSR set to: 1
  7691  00292C  C11C  F0DC         	movff	atan2f@m,??_atan2f
  7692  002930  C11D  F0DD         	movff	atan2f@m+1,??_atan2f+1
  7693  002934  C11E  F0DE         	movff	atan2f@m+2,??_atan2f+2
  7694  002938  C11F  F0DF         	movff	atan2f@m+3,??_atan2f+3
  7695                           
  7696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7697                           ; Switch size 1, requested type "simple"
  7698                           ; Number of cases is 1, Range of values is 0 to 0
  7699                           ; switch strategies available:
  7700                           ; Name         Instructions Cycles
  7701                           ; simple_byte            4     3 (average)
  7702                           ;	Chosen strategy is simple_byte
  7703  00293C  0100               	movlb	0	; () banked
  7704  00293E  51DF               	movf	(??_atan2f+3)& (0+255),w,b
  7705  002940  0A00               	xorlw	0	; case 0
  7706  002942  B4D8               	btfsc	status,2,c
  7707  002944  EFC0  F014         	goto	l8602
  7708  002948  EFC7  F014         	goto	l7810
  7709  00294C                     l8600:
  7710                           
  7711                           ; BSR set to: 0
  7712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7713                           ; Switch size 1, requested type "simple"
  7714                           ; Number of cases is 1, Range of values is 0 to 0
  7715                           ; switch strategies available:
  7716                           ; Name         Instructions Cycles
  7717                           ; simple_byte            4     3 (average)
  7718                           ;	Chosen strategy is simple_byte
  7719  00294C  51DD               	movf	(??_atan2f+1)& (0+255),w,b
  7720  00294E  0A00               	xorlw	0	; case 0
  7721  002950  B4D8               	btfsc	status,2,c
  7722  002952  EFAD  F014         	goto	l8604
  7723  002956  EFC7  F014         	goto	l7810
  7724  00295A                     l8604:
  7725                           
  7726                           ; BSR set to: 0
  7727                           ; Switch size 1, requested type "simple"
  7728                           ; Number of cases is 4, Range of values is 0 to 3
  7729                           ; switch strategies available:
  7730                           ; Name         Instructions Cycles
  7731                           ; simple_byte           13     7 (average)
  7732                           ;	Chosen strategy is simple_byte
  7733  00295A  51DC               	movf	??_atan2f& (0+255),w,b
  7734  00295C  0A00               	xorlw	0	; case 0
  7735  00295E  B4D8               	btfsc	status,2,c
  7736  002960  EF6E  F014         	goto	l7790
  7737  002964  0A01               	xorlw	1	; case 1
  7738  002966  B4D8               	btfsc	status,2,c
  7739  002968  EF78  F014         	goto	l7794
  7740  00296C  0A03               	xorlw	3	; case 2
  7741  00296E  B4D8               	btfsc	status,2,c
  7742  002970  EF82  F014         	goto	l7798
  7743  002974  0A01               	xorlw	1	; case 3
  7744  002976  B4D8               	btfsc	status,2,c
  7745  002978  EF8C  F014         	goto	l7802
  7746  00297C  EFC7  F014         	goto	l7810
  7747  002980                     l8602:
  7748                           
  7749                           ; BSR set to: 0
  7750                           ; Switch size 1, requested type "simple"
  7751                           ; Number of cases is 1, Range of values is 0 to 0
  7752                           ; switch strategies available:
  7753                           ; Name         Instructions Cycles
  7754                           ; simple_byte            4     3 (average)
  7755                           ;	Chosen strategy is simple_byte
  7756  002980  51DE               	movf	(??_atan2f+2)& (0+255),w,b
  7757  002982  0A00               	xorlw	0	; case 0
  7758  002984  B4D8               	btfsc	status,2,c
  7759  002986  EFA6  F014         	goto	l8600
  7760  00298A  EFC7  F014         	goto	l7810
  7761  00298E                     l7810:
  7762  00298E  0E00               	movlw	0
  7763  002990  0101               	movlb	1	; () banked
  7764  002992  2514               	addwf	atan2f@ix& (0+255),w,b
  7765  002994  0100               	movlb	0	; () banked
  7766  002996  6FDC               	movwf	??_atan2f& (0+255),b
  7767  002998  0E00               	movlw	0
  7768  00299A  0101               	movlb	1	; () banked
  7769  00299C  2115               	addwfc	(atan2f@ix+1)& (0+255),w,b
  7770  00299E  0100               	movlb	0	; () banked
  7771  0029A0  6FDD               	movwf	(??_atan2f+1)& (0+255),b
  7772  0029A2  0E00               	movlw	0
  7773  0029A4  0101               	movlb	1	; () banked
  7774  0029A6  2116               	addwfc	(atan2f@ix+2)& (0+255),w,b
  7775  0029A8  0100               	movlb	0	; () banked
  7776  0029AA  6FDE               	movwf	(??_atan2f+2)& (0+255),b
  7777  0029AC  0E0D               	movlw	13
  7778  0029AE  0101               	movlb	1	; () banked
  7779  0029B0  2117               	addwfc	(atan2f@ix+3)& (0+255),w,b
  7780  0029B2  0100               	movlb	0	; () banked
  7781  0029B4  6FDF               	movwf	(??_atan2f+3)& (0+255),b
  7782  0029B6  0101               	movlb	1	; () banked
  7783  0029B8  5118               	movf	atan2f@iy& (0+255),w,b
  7784  0029BA  0100               	movlb	0	; () banked
  7785  0029BC  5DDC               	subwf	??_atan2f& (0+255),w,b
  7786  0029BE  0101               	movlb	1	; () banked
  7787  0029C0  5119               	movf	(atan2f@iy+1)& (0+255),w,b
  7788  0029C2  0100               	movlb	0	; () banked
  7789  0029C4  59DD               	subwfb	(??_atan2f+1)& (0+255),w,b
  7790  0029C6  0101               	movlb	1	; () banked
  7791  0029C8  511A               	movf	(atan2f@iy+2)& (0+255),w,b
  7792  0029CA  0100               	movlb	0	; () banked
  7793  0029CC  59DE               	subwfb	(??_atan2f+2)& (0+255),w,b
  7794  0029CE  0101               	movlb	1	; () banked
  7795  0029D0  511B               	movf	(atan2f@iy+3)& (0+255),w,b
  7796  0029D2  0100               	movlb	0	; () banked
  7797  0029D4  59DF               	subwfb	(??_atan2f+3)& (0+255),w,b
  7798  0029D6  A0D8               	btfss	status,0,c
  7799  0029D8  EFF0  F014         	goto	u8681
  7800  0029DC  EFF2  F014         	goto	u8680
  7801  0029E0                     u8681:
  7802  0029E0  EF01  F015         	goto	l1034
  7803  0029E4                     u8680:
  7804  0029E4                     
  7805                           ; BSR set to: 0
  7806  0029E4  0E80               	movlw	128
  7807  0029E6  0101               	movlb	1	; () banked
  7808  0029E8  191A               	xorwf	(atan2f@iy+2)& (0+255),w,b
  7809  0029EA  E109               	bnz	u8691
  7810  0029EC  0E7F               	movlw	127
  7811  0029EE  191B               	xorwf	(atan2f@iy+3)& (0+255),w,b
  7812  0029F0  1118               	iorwf	atan2f@iy& (0+255),w,b
  7813  0029F2  1119               	iorwf	(atan2f@iy+1)& (0+255),w,b
  7814  0029F4  A4D8               	btfss	status,2,c
  7815  0029F6  EFFF  F014         	goto	u8691
  7816  0029FA  EF01  F015         	goto	u8690
  7817  0029FE                     u8691:
  7818  0029FE  EF1F  F015         	goto	l1032
  7819  002A02                     u8690:
  7820  002A02                     l1034:
  7821  002A02  0101               	movlb	1	; () banked
  7822  002A04  B11C               	btfsc	atan2f@m& (0+255),0,b
  7823  002A06  EF07  F015         	goto	u8701
  7824  002A0A  EF09  F015         	goto	u8700
  7825  002A0E                     u8701:
  7826  002A0E  EF14  F015         	goto	l7816
  7827  002A12                     u8700:
  7828  002A12                     
  7829                           ; BSR set to: 1
  7830  002A12  0EDB               	movlw	219
  7831  002A14  0100               	movlb	0	; () banked
  7832  002A16  6FD4               	movwf	?_atan2f& (0+255),b
  7833  002A18  0E0F               	movlw	15
  7834  002A1A  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7835  002A1C  0EC9               	movlw	201
  7836  002A1E  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7837  002A20  0E3F               	movlw	63
  7838  002A22  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7839  002A24  EF4C  F016         	goto	l999
  7840  002A28                     l7816:
  7841                           
  7842                           ; BSR set to: 1
  7843  002A28  0EDB               	movlw	219
  7844  002A2A  0100               	movlb	0	; () banked
  7845  002A2C  6FD4               	movwf	?_atan2f& (0+255),b
  7846  002A2E  0E0F               	movlw	15
  7847  002A30  6FD5               	movwf	(?_atan2f+1)& (0+255),b
  7848  002A32  0EC9               	movlw	201
  7849  002A34  6FD6               	movwf	(?_atan2f+2)& (0+255),b
  7850  002A36  0EBF               	movlw	191
  7851  002A38  6FD7               	movwf	(?_atan2f+3)& (0+255),b
  7852  002A3A  EF4C  F016         	goto	l999
  7853  002A3E                     l1032:
  7854                           
  7855                           ; BSR set to: 1
  7856  002A3E  A31C               	btfss	atan2f@m& (0+255),1,b
  7857  002A40  EF24  F015         	goto	u8711
  7858  002A44  EF26  F015         	goto	u8710
  7859  002A48                     u8711:
  7860  002A48  EF5B  F015         	goto	l7824
  7861  002A4C                     u8710:
  7862  002A4C                     
  7863                           ; BSR set to: 1
  7864  002A4C  0E00               	movlw	0
  7865  002A4E  2518               	addwf	atan2f@iy& (0+255),w,b
  7866  002A50  0100               	movlb	0	; () banked
  7867  002A52  6FDC               	movwf	??_atan2f& (0+255),b
  7868  002A54  0E00               	movlw	0
  7869  002A56  0101               	movlb	1	; () banked
  7870  002A58  2119               	addwfc	(atan2f@iy+1)& (0+255),w,b
  7871  002A5A  0100               	movlb	0	; () banked
  7872  002A5C  6FDD               	movwf	(??_atan2f+1)& (0+255),b
  7873  002A5E  0E00               	movlw	0
  7874  002A60  0101               	movlb	1	; () banked
  7875  002A62  211A               	addwfc	(atan2f@iy+2)& (0+255),w,b
  7876  002A64  0100               	movlb	0	; () banked
  7877  002A66  6FDE               	movwf	(??_atan2f+2)& (0+255),b
  7878  002A68  0E0D               	movlw	13
  7879  002A6A  0101               	movlb	1	; () banked
  7880  002A6C  211B               	addwfc	(atan2f@iy+3)& (0+255),w,b
  7881  002A6E  0100               	movlb	0	; () banked
  7882  002A70  6FDF               	movwf	(??_atan2f+3)& (0+255),b
  7883  002A72  0101               	movlb	1	; () banked
  7884  002A74  5114               	movf	atan2f@ix& (0+255),w,b
  7885  002A76  0100               	movlb	0	; () banked
  7886  002A78  5DDC               	subwf	??_atan2f& (0+255),w,b
  7887  002A7A  0101               	movlb	1	; () banked
  7888  002A7C  5115               	movf	(atan2f@ix+1)& (0+255),w,b
  7889  002A7E  0100               	movlb	0	; () banked
  7890  002A80  59DD               	subwfb	(??_atan2f+1)& (0+255),w,b
  7891  002A82  0101               	movlb	1	; () banked
  7892  002A84  5116               	movf	(atan2f@ix+2)& (0+255),w,b
  7893  002A86  0100               	movlb	0	; () banked
  7894  002A88  59DE               	subwfb	(??_atan2f+2)& (0+255),w,b
  7895  002A8A  0101               	movlb	1	; () banked
  7896  002A8C  5117               	movf	(atan2f@ix+3)& (0+255),w,b
  7897  002A8E  0100               	movlb	0	; () banked
  7898  002A90  59DF               	subwfb	(??_atan2f+3)& (0+255),w,b
  7899  002A92  B0D8               	btfsc	status,0,c
  7900  002A94  EF4E  F015         	goto	u8721
  7901  002A98  EF50  F015         	goto	u8720
  7902  002A9C                     u8721:
  7903  002A9C  EF5B  F015         	goto	l7824
  7904  002AA0                     u8720:
  7905  002AA0                     
  7906                           ; BSR set to: 0
  7907  002AA0  0E00               	movlw	0
  7908  002AA2  0101               	movlb	1	; () banked
  7909  002AA4  6F10               	movwf	atan2f@z& (0+255),b
  7910  002AA6  0E00               	movlw	0
  7911  002AA8  6F11               	movwf	(atan2f@z+1)& (0+255),b
  7912  002AAA  0E00               	movlw	0
  7913  002AAC  6F12               	movwf	(atan2f@z+2)& (0+255),b
  7914  002AAE  0E00               	movlw	0
  7915  002AB0  6F13               	movwf	(atan2f@z+3)& (0+255),b
  7916  002AB2  EF1F  F016         	goto	l7842
  7917  002AB6                     l7824:
  7918  002AB6  C0D4  F022         	movff	atan2f@y,___fldiv@b
  7919  002ABA  C0D5  F023         	movff	atan2f@y+1,___fldiv@b+1
  7920  002ABE  C0D6  F024         	movff	atan2f@y+2,___fldiv@b+2
  7921  002AC2  C0D7  F025         	movff	atan2f@y+3,___fldiv@b+3
  7922  002AC6  C0D8  F026         	movff	atan2f@x,___fldiv@a
  7923  002ACA  C0D9  F027         	movff	atan2f@x+1,___fldiv@a+1
  7924  002ACE  C0DA  F028         	movff	atan2f@x+2,___fldiv@a+2
  7925  002AD2  C0DB  F029         	movff	atan2f@x+3,___fldiv@a+3
  7926  002AD6  EC54  F020         	call	___fldiv	;wreg free
  7927  002ADA  C022  F02E         	movff	?___fldiv,fabsf@x
  7928  002ADE  C023  F02F         	movff	?___fldiv+1,fabsf@x+1
  7929  002AE2  C024  F030         	movff	?___fldiv+2,fabsf@x+2
  7930  002AE6  C025  F031         	movff	?___fldiv+3,fabsf@x+3
  7931  002AEA  EC58  F02E         	call	_fabsf	;wreg free
  7932  002AEE  C02E  F100         	movff	?_fabsf,_atan2f$2607
  7933  002AF2  C02F  F101         	movff	?_fabsf+1,_atan2f$2607+1
  7934  002AF6  C030  F102         	movff	?_fabsf+2,_atan2f$2607+2
  7935  002AFA  C031  F103         	movff	?_fabsf+3,_atan2f$2607+3
  7936  002AFE  C100  F09A         	movff	_atan2f$2607,atanf@x
  7937  002B02  C101  F09B         	movff	_atan2f$2607+1,atanf@x+1
  7938  002B06  C102  F09C         	movff	_atan2f$2607+2,atanf@x+2
  7939  002B0A  C103  F09D         	movff	_atan2f$2607+3,atanf@x+3
  7940  002B0E  EC6D  F00E         	call	_atanf	;wreg free
  7941  002B12  C09A  F110         	movff	?_atanf,atan2f@z
  7942  002B16  C09B  F111         	movff	?_atanf+1,atan2f@z+1
  7943  002B1A  C09C  F112         	movff	?_atanf+2,atan2f@z+2
  7944  002B1E  C09D  F113         	movff	?_atanf+3,atan2f@z+3
  7945  002B22  EF1F  F016         	goto	l7842
  7946  002B26                     l1042:
  7947                           
  7948                           ; BSR set to: 0
  7949  002B26  C110  F0D4         	movff	atan2f@z,?_atan2f
  7950  002B2A  C111  F0D5         	movff	atan2f@z+1,?_atan2f+1
  7951  002B2E  C112  F0D6         	movff	atan2f@z+2,?_atan2f+2
  7952  002B32  C113  F0D7         	movff	atan2f@z+3,?_atan2f+3
  7953  002B36  EF4C  F016         	goto	l999
  7954  002B3A                     l7828:
  7955                           
  7956                           ; BSR set to: 0
  7957  002B3A  C110  F02E         	movff	atan2f@z,___flneg@f1
  7958  002B3E  C111  F02F         	movff	atan2f@z+1,___flneg@f1+1
  7959  002B42  C112  F030         	movff	atan2f@z+2,___flneg@f1+2
  7960  002B46  C113  F031         	movff	atan2f@z+3,___flneg@f1+3
  7961  002B4A  EC21  F02E         	call	___flneg	;wreg free
  7962  002B4E  C02E  F0D4         	movff	?___flneg,?_atan2f
  7963  002B52  C02F  F0D5         	movff	?___flneg+1,?_atan2f+1
  7964  002B56  C030  F0D6         	movff	?___flneg+2,?_atan2f+2
  7965  002B5A  C031  F0D7         	movff	?___flneg+3,?_atan2f+3
  7966  002B5E  EF4C  F016         	goto	l999
  7967  002B62                     l7832:
  7968                           
  7969                           ; BSR set to: 0
  7970  002B62  0E2E               	movlw	46
  7971  002B64  6F86               	movwf	___fladd@a& (0+255),b
  7972  002B66  0EBD               	movlw	189
  7973  002B68  6F87               	movwf	(___fladd@a+1)& (0+255),b
  7974  002B6A  0EBB               	movlw	187
  7975  002B6C  6F88               	movwf	(___fladd@a+2)& (0+255),b
  7976  002B6E  0E33               	movlw	51
  7977  002B70  6F89               	movwf	(___fladd@a+3)& (0+255),b
  7978  002B72  C110  F082         	movff	atan2f@z,___fladd@b
  7979  002B76  C111  F083         	movff	atan2f@z+1,___fladd@b+1
  7980  002B7A  C112  F084         	movff	atan2f@z+2,___fladd@b+2
  7981  002B7E  C113  F085         	movff	atan2f@z+3,___fladd@b+3
  7982  002B82  EC8F  F019         	call	___fladd	;wreg free
  7983  002B86  C082  F104         	movff	?___fladd,_atan2f$2608
  7984  002B8A  C083  F105         	movff	?___fladd+1,_atan2f$2608+1
  7985  002B8E  C084  F106         	movff	?___fladd+2,_atan2f$2608+2
  7986  002B92  C085  F107         	movff	?___fladd+3,_atan2f$2608+3
  7987  002B96  0EDB               	movlw	219
  7988  002B98  0100               	movlb	0	; () banked
  7989  002B9A  6F92               	movwf	___flsub@b& (0+255),b
  7990  002B9C  0E0F               	movlw	15
  7991  002B9E  6F93               	movwf	(___flsub@b+1)& (0+255),b
  7992  002BA0  0E49               	movlw	73
  7993  002BA2  6F94               	movwf	(___flsub@b+2)& (0+255),b
  7994  002BA4  0E40               	movlw	64
  7995  002BA6  6F95               	movwf	(___flsub@b+3)& (0+255),b
  7996  002BA8  C104  F096         	movff	_atan2f$2608,___flsub@a
  7997  002BAC  C105  F097         	movff	_atan2f$2608+1,___flsub@a+1
  7998  002BB0  C106  F098         	movff	_atan2f$2608+2,___flsub@a+2
  7999  002BB4  C107  F099         	movff	_atan2f$2608+3,___flsub@a+3
  8000  002BB8  EC60  F02D         	call	___flsub	;wreg free
  8001  002BBC  C092  F0D4         	movff	?___flsub,?_atan2f
  8002  002BC0  C093  F0D5         	movff	?___flsub+1,?_atan2f+1
  8003  002BC4  C094  F0D6         	movff	?___flsub+2,?_atan2f+2
  8004  002BC8  C095  F0D7         	movff	?___flsub+3,?_atan2f+3
  8005  002BCC  EF4C  F016         	goto	l999
  8006  002BD0                     l7836:
  8007                           
  8008                           ; BSR set to: 0
  8009  002BD0  0E2E               	movlw	46
  8010  002BD2  6F86               	movwf	___fladd@a& (0+255),b
  8011  002BD4  0EBD               	movlw	189
  8012  002BD6  6F87               	movwf	(___fladd@a+1)& (0+255),b
  8013  002BD8  0EBB               	movlw	187
  8014  002BDA  6F88               	movwf	(___fladd@a+2)& (0+255),b
  8015  002BDC  0E33               	movlw	51
  8016  002BDE  6F89               	movwf	(___fladd@a+3)& (0+255),b
  8017  002BE0  C110  F082         	movff	atan2f@z,___fladd@b
  8018  002BE4  C111  F083         	movff	atan2f@z+1,___fladd@b+1
  8019  002BE8  C112  F084         	movff	atan2f@z+2,___fladd@b+2
  8020  002BEC  C113  F085         	movff	atan2f@z+3,___fladd@b+3
  8021  002BF0  EC8F  F019         	call	___fladd	;wreg free
  8022  002BF4  C082  F108         	movff	?___fladd,_atan2f$2609
  8023  002BF8  C083  F109         	movff	?___fladd+1,_atan2f$2609+1
  8024  002BFC  C084  F10A         	movff	?___fladd+2,_atan2f$2609+2
  8025  002C00  C085  F10B         	movff	?___fladd+3,_atan2f$2609+3
  8026  002C04  C108  F082         	movff	_atan2f$2609,___fladd@b
  8027  002C08  C109  F083         	movff	_atan2f$2609+1,___fladd@b+1
  8028  002C0C  C10A  F084         	movff	_atan2f$2609+2,___fladd@b+2
  8029  002C10  C10B  F085         	movff	_atan2f$2609+3,___fladd@b+3
  8030  002C14  0EDB               	movlw	219
  8031  002C16  0100               	movlb	0	; () banked
  8032  002C18  6F86               	movwf	___fladd@a& (0+255),b
  8033  002C1A  0E0F               	movlw	15
  8034  002C1C  6F87               	movwf	(___fladd@a+1)& (0+255),b
  8035  002C1E  0E49               	movlw	73
  8036  002C20  6F88               	movwf	(___fladd@a+2)& (0+255),b
  8037  002C22  0EC0               	movlw	192
  8038  002C24  6F89               	movwf	(___fladd@a+3)& (0+255),b
  8039  002C26  EC8F  F019         	call	___fladd	;wreg free
  8040  002C2A  C082  F0D4         	movff	?___fladd,?_atan2f
  8041  002C2E  C083  F0D5         	movff	?___fladd+1,?_atan2f+1
  8042  002C32  C084  F0D6         	movff	?___fladd+2,?_atan2f+2
  8043  002C36  C085  F0D7         	movff	?___fladd+3,?_atan2f+3
  8044  002C3A  EF4C  F016         	goto	l999
  8045  002C3E                     l7842:
  8046  002C3E  C11C  F0DC         	movff	atan2f@m,??_atan2f
  8047  002C42  C11D  F0DD         	movff	atan2f@m+1,??_atan2f+1
  8048  002C46  C11E  F0DE         	movff	atan2f@m+2,??_atan2f+2
  8049  002C4A  C11F  F0DF         	movff	atan2f@m+3,??_atan2f+3
  8050                           
  8051                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8052                           ; Switch size 1, requested type "simple"
  8053                           ; Number of cases is 1, Range of values is 0 to 0
  8054                           ; switch strategies available:
  8055                           ; Name         Instructions Cycles
  8056                           ; simple_byte            4     3 (average)
  8057                           ;	Chosen strategy is simple_byte
  8058  002C4E  0100               	movlb	0	; () banked
  8059  002C50  51DF               	movf	(??_atan2f+3)& (0+255),w,b
  8060  002C52  0A00               	xorlw	0	; case 0
  8061  002C54  B4D8               	btfsc	status,2,c
  8062  002C56  EF45  F016         	goto	l8608
  8063  002C5A  EFE8  F015         	goto	l7836
  8064  002C5E                     l8606:
  8065                           
  8066                           ; BSR set to: 0
  8067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8068                           ; Switch size 1, requested type "simple"
  8069                           ; Number of cases is 1, Range of values is 0 to 0
  8070                           ; switch strategies available:
  8071                           ; Name         Instructions Cycles
  8072                           ; simple_byte            4     3 (average)
  8073                           ;	Chosen strategy is simple_byte
  8074  002C5E  51DD               	movf	(??_atan2f+1)& (0+255),w,b
  8075  002C60  0A00               	xorlw	0	; case 0
  8076  002C62  B4D8               	btfsc	status,2,c
  8077  002C64  EF36  F016         	goto	l8610
  8078  002C68  EFE8  F015         	goto	l7836
  8079  002C6C                     l8610:
  8080                           
  8081                           ; BSR set to: 0
  8082                           ; Switch size 1, requested type "simple"
  8083                           ; Number of cases is 3, Range of values is 0 to 2
  8084                           ; switch strategies available:
  8085                           ; Name         Instructions Cycles
  8086                           ; simple_byte           10     6 (average)
  8087                           ;	Chosen strategy is simple_byte
  8088  002C6C  51DC               	movf	??_atan2f& (0+255),w,b
  8089  002C6E  0A00               	xorlw	0	; case 0
  8090  002C70  B4D8               	btfsc	status,2,c
  8091  002C72  EF93  F015         	goto	l1042
  8092  002C76  0A01               	xorlw	1	; case 1
  8093  002C78  B4D8               	btfsc	status,2,c
  8094  002C7A  EF9D  F015         	goto	l7828
  8095  002C7E  0A03               	xorlw	3	; case 2
  8096  002C80  B4D8               	btfsc	status,2,c
  8097  002C82  EFB1  F015         	goto	l7832
  8098  002C86  EFE8  F015         	goto	l7836
  8099  002C8A                     l8608:
  8100                           
  8101                           ; BSR set to: 0
  8102                           ; Switch size 1, requested type "simple"
  8103                           ; Number of cases is 1, Range of values is 0 to 0
  8104                           ; switch strategies available:
  8105                           ; Name         Instructions Cycles
  8106                           ; simple_byte            4     3 (average)
  8107                           ;	Chosen strategy is simple_byte
  8108  002C8A  51DE               	movf	(??_atan2f+2)& (0+255),w,b
  8109  002C8C  0A00               	xorlw	0	; case 0
  8110  002C8E  B4D8               	btfsc	status,2,c
  8111  002C90  EF2F  F016         	goto	l8606
  8112  002C94  EFE8  F015         	goto	l7836
  8113  002C98                     l999:
  8114  002C98  0012               	return		;funcret
  8115  002C9A                     __end_of_atan2f:
  8116                           	callstack 0
  8117                           
  8118 ;; *************** function _atanf *****************
  8119 ;; Defined at:
  8120 ;;		line 41 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atanf.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  x               4   58[BANK0 ] float 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;  ix              4  112[BANK0 ] unsigned long 
  8125 ;;  z               4  108[BANK0 ] float 
  8126 ;;  w               4  102[BANK0 ] float 
  8127 ;;  sign            4   90[BANK0 ] unsigned long 
  8128 ;;  s2              4   86[BANK0 ] float 
  8129 ;;  s1              4   82[BANK0 ] float 
  8130 ;;  __xc8_float_    4   66[BANK0 ] struct .
  8131 ;;  id              2  106[BANK0 ] int 
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  4   58[BANK0 ] float 
  8134 ;; Registers used:
  8135 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8141 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8142 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8143 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8144 ;;      Totals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8145 ;;Total ram usage:       58 bytes
  8146 ;; Hardware stack levels used: 1
  8147 ;; Hardware stack levels required when called: 5
  8148 ;; This function calls:
  8149 ;;		___fladd
  8150 ;;		___fldiv
  8151 ;;		___flmul
  8152 ;;		___flneg
  8153 ;;		___flsub
  8154 ;;		___fpclassifyf
  8155 ;;		_fabsf
  8156 ;; This function is called by:
  8157 ;;		_atan2f
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text26
  8162  001CDA                     __ptext26:
  8163                           	callstack 0
  8164  001CDA                     _atanf:
  8165                           	callstack 23
  8166  001CDA  C09A  F0A2         	movff	atanf@x,atanf@__xc8_float_word
  8167  001CDE  C09B  F0A3         	movff	atanf@x+1,atanf@__xc8_float_word+1
  8168  001CE2  C09C  F0A4         	movff	atanf@x+2,atanf@__xc8_float_word+2
  8169  001CE6  C09D  F0A5         	movff	atanf@x+3,atanf@__xc8_float_word+3
  8170  001CEA  C0A2  F0D0         	movff	atanf@__xc8_float_word,atanf@ix
  8171  001CEE  C0A3  F0D1         	movff	atanf@__xc8_float_word+1,atanf@ix+1
  8172  001CF2  C0A4  F0D2         	movff	atanf@__xc8_float_word+2,atanf@ix+2
  8173  001CF6  C0A5  F0D3         	movff	atanf@__xc8_float_word+3,atanf@ix+3
  8174  001CFA  C0D0  F09E         	movff	atanf@ix,??_atanf
  8175  001CFE  C0D1  F09F         	movff	atanf@ix+1,??_atanf+1
  8176  001D02  C0D2  F0A0         	movff	atanf@ix+2,??_atanf+2
  8177  001D06  C0D3  F0A1         	movff	atanf@ix+3,??_atanf+3
  8178  001D0A  0E20               	movlw	32
  8179  001D0C  EF8E  F00E         	goto	u8410
  8180  001D10                     u8415:
  8181  001D10  0100               	movlb	0	; () banked
  8182  001D12  90D8               	bcf	status,0,c
  8183  001D14  33A1               	rrcf	(??_atanf+3)& (0+255),f,b
  8184  001D16  33A0               	rrcf	(??_atanf+2)& (0+255),f,b
  8185  001D18  339F               	rrcf	(??_atanf+1)& (0+255),f,b
  8186  001D1A  339E               	rrcf	??_atanf& (0+255),f,b
  8187  001D1C                     u8410:
  8188  001D1C  2EE8               	decfsz	wreg,f,c
  8189  001D1E  EF88  F00E         	goto	u8415
  8190  001D22  C09E  F0BA         	movff	??_atanf,atanf@sign
  8191  001D26  C09F  F0BB         	movff	??_atanf+1,atanf@sign+1
  8192  001D2A  C0A0  F0BC         	movff	??_atanf+2,atanf@sign+2
  8193  001D2E  C0A1  F0BD         	movff	??_atanf+3,atanf@sign+3
  8194  001D32                     
  8195                           ; BSR set to: 0
  8196  001D32  9FD3               	bcf	(atanf@ix+3)& (0+255),7,b
  8197  001D34                     
  8198                           ; BSR set to: 0
  8199  001D34  0E80               	movlw	128
  8200  001D36  5DD2               	subwf	(atanf@ix+2)& (0+255),w,b
  8201  001D38  0E4C               	movlw	76
  8202  001D3A  59D3               	subwfb	(atanf@ix+3)& (0+255),w,b
  8203  001D3C  A0D8               	btfss	status,0,c
  8204  001D3E  EFA3  F00E         	goto	u8421
  8205  001D42  EFA5  F00E         	goto	u8420
  8206  001D46                     u8421:
  8207  001D46  EF11  F00F         	goto	l7596
  8208  001D4A                     u8420:
  8209  001D4A                     
  8210                           ; BSR set to: 0
  8211  001D4A  C09A  F014         	movff	atanf@x,___fpclassifyf@x
  8212  001D4E  C09B  F015         	movff	atanf@x+1,___fpclassifyf@x+1
  8213  001D52  C09C  F016         	movff	atanf@x+2,___fpclassifyf@x+2
  8214  001D56  C09D  F017         	movff	atanf@x+3,___fpclassifyf@x+3
  8215  001D5A  ECE3  F027         	call	___fpclassifyf	;wreg free
  8216  001D5E  5014               	movf	?___fpclassifyf^0,w,c
  8217  001D60  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  8218  001D62  A4D8               	btfss	status,2,c
  8219  001D64  EFB6  F00E         	goto	u8431
  8220  001D68  EFB8  F00E         	goto	u8430
  8221  001D6C                     u8431:
  8222  001D6C  EFC2  F00E         	goto	l7586
  8223  001D70                     u8430:
  8224  001D70                     l7584:
  8225  001D70  C09A  F09A         	movff	atanf@x,?_atanf
  8226  001D74  C09B  F09B         	movff	atanf@x+1,?_atanf+1
  8227  001D78  C09C  F09C         	movff	atanf@x+2,?_atanf+2
  8228  001D7C  C09D  F09D         	movff	atanf@x+3,?_atanf+3
  8229  001D80  EF98  F012         	goto	l1074
  8230  001D84                     l7586:
  8231  001D84  0E31               	movlw	low (_atanhi+12)
  8232  001D86  6EF6               	movwf	tblptrl,c
  8233  001D88  0E10               	movlw	high (_atanhi+12)
  8234  001D8A  6EF7               	movwf	tblptrh,c
  8235  001D8C                     	if	0	;tblptru may be non-zero
  8236  001D8C                     	endif
  8237  001D8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8238  001D8C  0E00               	movlw	low (__mediumconst shr (0+16))
  8239  001D8E  6EF8               	movwf	tblptru,c
  8240  001D90                     	endif
  8241  001D90  0009               	tblrd		*+
  8242  001D92  CFF5 F082          	movff	tablat,___fladd@b
  8243  001D96  0009               	tblrd		*+
  8244  001D98  CFF5 F083          	movff	tablat,___fladd@b+1
  8245  001D9C  0009               	tblrd		*+
  8246  001D9E  CFF5 F084          	movff	tablat,___fladd@b+2
  8247  001DA2  000A               	tblrd		*-
  8248  001DA4  CFF5 F085          	movff	tablat,___fladd@b+3
  8249  001DA8  0E00               	movlw	0
  8250  001DAA  0100               	movlb	0	; () banked
  8251  001DAC  6F86               	movwf	___fladd@a& (0+255),b
  8252  001DAE  0E00               	movlw	0
  8253  001DB0  6F87               	movwf	(___fladd@a+1)& (0+255),b
  8254  001DB2  0E80               	movlw	128
  8255  001DB4  6F88               	movwf	(___fladd@a+2)& (0+255),b
  8256  001DB6  0E03               	movlw	3
  8257  001DB8  6F89               	movwf	(___fladd@a+3)& (0+255),b
  8258  001DBA  EC8F  F019         	call	___fladd	;wreg free
  8259  001DBE  C082  F0CC         	movff	?___fladd,atanf@z
  8260  001DC2  C083  F0CD         	movff	?___fladd+1,atanf@z+1
  8261  001DC6  C084  F0CE         	movff	?___fladd+2,atanf@z+2
  8262  001DCA  C085  F0CF         	movff	?___fladd+3,atanf@z+3
  8263  001DCE  0100               	movlb	0	; () banked
  8264  001DD0  51BA               	movf	atanf@sign& (0+255),w,b
  8265  001DD2  11BB               	iorwf	(atanf@sign+1)& (0+255),w,b
  8266  001DD4  11BC               	iorwf	(atanf@sign+2)& (0+255),w,b
  8267  001DD6  11BD               	iorwf	(atanf@sign+3)& (0+255),w,b
  8268  001DD8  A4D8               	btfss	status,2,c
  8269  001DDA  EFF1  F00E         	goto	u8441
  8270  001DDE  EFF3  F00E         	goto	u8440
  8271  001DE2                     u8441:
  8272  001DE2  EFFD  F00E         	goto	l7592
  8273  001DE6                     u8440:
  8274  001DE6                     l7590:
  8275                           
  8276                           ; BSR set to: 0
  8277  001DE6  C0CC  F09A         	movff	atanf@z,?_atanf
  8278  001DEA  C0CD  F09B         	movff	atanf@z+1,?_atanf+1
  8279  001DEE  C0CE  F09C         	movff	atanf@z+2,?_atanf+2
  8280  001DF2  C0CF  F09D         	movff	atanf@z+3,?_atanf+3
  8281  001DF6  EF98  F012         	goto	l1074
  8282  001DFA                     l7592:
  8283                           
  8284                           ; BSR set to: 0
  8285  001DFA  C0CC  F02E         	movff	atanf@z,___flneg@f1
  8286  001DFE  C0CD  F02F         	movff	atanf@z+1,___flneg@f1+1
  8287  001E02  C0CE  F030         	movff	atanf@z+2,___flneg@f1+2
  8288  001E06  C0CF  F031         	movff	atanf@z+3,___flneg@f1+3
  8289  001E0A  EC21  F02E         	call	___flneg	;wreg free
  8290  001E0E  C02E  F09A         	movff	?___flneg,?_atanf
  8291  001E12  C02F  F09B         	movff	?___flneg+1,?_atanf+1
  8292  001E16  C030  F09C         	movff	?___flneg+2,?_atanf+2
  8293  001E1A  C031  F09D         	movff	?___flneg+3,?_atanf+3
  8294  001E1E  EF98  F012         	goto	l1074
  8295  001E22                     l7596:
  8296                           
  8297                           ; BSR set to: 0
  8298  001E22  0EE0               	movlw	224
  8299  001E24  5DD2               	subwf	(atanf@ix+2)& (0+255),w,b
  8300  001E26  0E3E               	movlw	62
  8301  001E28  59D3               	subwfb	(atanf@ix+3)& (0+255),w,b
  8302  001E2A  B0D8               	btfsc	status,0,c
  8303  001E2C  EF1A  F00F         	goto	u8451
  8304  001E30  EF1C  F00F         	goto	u8450
  8305  001E34                     u8451:
  8306  001E34  EF2D  F00F         	goto	l7602
  8307  001E38                     u8450:
  8308  001E38                     
  8309                           ; BSR set to: 0
  8310  001E38  0E80               	movlw	128
  8311  001E3A  5DD2               	subwf	(atanf@ix+2)& (0+255),w,b
  8312  001E3C  0E39               	movlw	57
  8313  001E3E  59D3               	subwfb	(atanf@ix+3)& (0+255),w,b
  8314  001E40  B0D8               	btfsc	status,0,c
  8315  001E42  EF25  F00F         	goto	u8461
  8316  001E46  EF27  F00F         	goto	u8460
  8317  001E4A                     u8461:
  8318  001E4A  EF29  F00F         	goto	l1080
  8319  001E4E                     u8460:
  8320  001E4E  EFB8  F00E         	goto	l7584
  8321  001E52                     l1080:
  8322                           
  8323                           ; BSR set to: 0
  8324  001E52  69CA               	setf	atanf@id& (0+255),b
  8325  001E54  69CB               	setf	(atanf@id+1)& (0+255),b
  8326  001E56  EF72  F010         	goto	l7626
  8327  001E5A                     l7602:
  8328                           
  8329                           ; BSR set to: 0
  8330  001E5A  C09A  F02E         	movff	atanf@x,fabsf@x
  8331  001E5E  C09B  F02F         	movff	atanf@x+1,fabsf@x+1
  8332  001E62  C09C  F030         	movff	atanf@x+2,fabsf@x+2
  8333  001E66  C09D  F031         	movff	atanf@x+3,fabsf@x+3
  8334  001E6A  EC58  F02E         	call	_fabsf	;wreg free
  8335  001E6E  C02E  F09A         	movff	?_fabsf,atanf@x
  8336  001E72  C02F  F09B         	movff	?_fabsf+1,atanf@x+1
  8337  001E76  C030  F09C         	movff	?_fabsf+2,atanf@x+2
  8338  001E7A  C031  F09D         	movff	?_fabsf+3,atanf@x+3
  8339  001E7E  0E98               	movlw	152
  8340  001E80  0100               	movlb	0	; () banked
  8341  001E82  5DD2               	subwf	(atanf@ix+2)& (0+255),w,b
  8342  001E84  0E3F               	movlw	63
  8343  001E86  59D3               	subwfb	(atanf@ix+3)& (0+255),w,b
  8344  001E88  B0D8               	btfsc	status,0,c
  8345  001E8A  EF49  F00F         	goto	u8471
  8346  001E8E  EF4B  F00F         	goto	u8470
  8347  001E92                     u8471:
  8348  001E92  EFF2  F00F         	goto	l7616
  8349  001E96                     u8470:
  8350  001E96                     
  8351                           ; BSR set to: 0
  8352  001E96  0E30               	movlw	48
  8353  001E98  5DD2               	subwf	(atanf@ix+2)& (0+255),w,b
  8354  001E9A  0E3F               	movlw	63
  8355  001E9C  59D3               	subwfb	(atanf@ix+3)& (0+255),w,b
  8356  001E9E  B0D8               	btfsc	status,0,c
  8357  001EA0  EF54  F00F         	goto	u8481
  8358  001EA4  EF56  F00F         	goto	u8480
  8359  001EA8                     u8481:
  8360  001EA8  EFAD  F00F         	goto	l7612
  8361  001EAC                     u8480:
  8362  001EAC                     
  8363                           ; BSR set to: 0
  8364  001EAC  0E00               	movlw	0
  8365  001EAE  6FCB               	movwf	(atanf@id+1)& (0+255),b
  8366  001EB0  0E00               	movlw	0
  8367  001EB2  6FCA               	movwf	atanf@id& (0+255),b
  8368  001EB4                     
  8369                           ; BSR set to: 0
  8370  001EB4  0E00               	movlw	0
  8371  001EB6  6F86               	movwf	___fladd@a& (0+255),b
  8372  001EB8  0E00               	movlw	0
  8373  001EBA  6F87               	movwf	(___fladd@a+1)& (0+255),b
  8374  001EBC  0E80               	movlw	128
  8375  001EBE  6F88               	movwf	(___fladd@a+2)& (0+255),b
  8376  001EC0  0EBF               	movlw	191
  8377  001EC2  6F89               	movwf	(___fladd@a+3)& (0+255),b
  8378  001EC4  0E00               	movlw	0
  8379  001EC6  6F71               	movwf	___flmul@a& (0+255),b
  8380  001EC8  0E00               	movlw	0
  8381  001ECA  6F72               	movwf	(___flmul@a+1)& (0+255),b
  8382  001ECC  0E00               	movlw	0
  8383  001ECE  6F73               	movwf	(___flmul@a+2)& (0+255),b
  8384  001ED0  0E40               	movlw	64
  8385  001ED2  6F74               	movwf	(___flmul@a+3)& (0+255),b
  8386  001ED4  C09A  F06D         	movff	atanf@x,___flmul@b
  8387  001ED8  C09B  F06E         	movff	atanf@x+1,___flmul@b+1
  8388  001EDC  C09C  F06F         	movff	atanf@x+2,___flmul@b+2
  8389  001EE0  C09D  F070         	movff	atanf@x+3,___flmul@b+3
  8390  001EE4  EC3E  F01E         	call	___flmul	;wreg free
  8391  001EE8  C06D  F082         	movff	?___flmul,___fladd@b
  8392  001EEC  C06E  F083         	movff	?___flmul+1,___fladd@b+1
  8393  001EF0  C06F  F084         	movff	?___flmul+2,___fladd@b+2
  8394  001EF4  C070  F085         	movff	?___flmul+3,___fladd@b+3
  8395  001EF8  EC8F  F019         	call	___fladd	;wreg free
  8396  001EFC  C082  F022         	movff	?___fladd,___fldiv@b
  8397  001F00  C083  F023         	movff	?___fladd+1,___fldiv@b+1
  8398  001F04  C084  F024         	movff	?___fladd+2,___fldiv@b+2
  8399  001F08  C085  F025         	movff	?___fladd+3,___fldiv@b+3
  8400  001F0C  0E00               	movlw	0
  8401  001F0E  0100               	movlb	0	; () banked
  8402  001F10  6F86               	movwf	___fladd@a& (0+255),b
  8403  001F12  0E00               	movlw	0
  8404  001F14  6F87               	movwf	(___fladd@a+1)& (0+255),b
  8405  001F16  0E00               	movlw	0
  8406  001F18  6F88               	movwf	(___fladd@a+2)& (0+255),b
  8407  001F1A  0E40               	movlw	64
  8408  001F1C  6F89               	movwf	(___fladd@a+3)& (0+255),b
  8409  001F1E  C09A  F082         	movff	atanf@x,___fladd@b
  8410  001F22  C09B  F083         	movff	atanf@x+1,___fladd@b+1
  8411  001F26  C09C  F084         	movff	atanf@x+2,___fladd@b+2
  8412  001F2A  C09D  F085         	movff	atanf@x+3,___fladd@b+3
  8413  001F2E  EC8F  F019         	call	___fladd	;wreg free
  8414  001F32  C082  F026         	movff	?___fladd,___fldiv@a
  8415  001F36  C083  F027         	movff	?___fladd+1,___fldiv@a+1
  8416  001F3A  C084  F028         	movff	?___fladd+2,___fldiv@a+2
  8417  001F3E  C085  F029         	movff	?___fladd+3,___fldiv@a+3
  8418  001F42  EC54  F020         	call	___fldiv	;wreg free
  8419  001F46  C022  F09A         	movff	?___fldiv,atanf@x
  8420  001F4A  C023  F09B         	movff	?___fldiv+1,atanf@x+1
  8421  001F4E  C024  F09C         	movff	?___fldiv+2,atanf@x+2
  8422  001F52  C025  F09D         	movff	?___fldiv+3,atanf@x+3
  8423  001F56  EF72  F010         	goto	l7626
  8424  001F5A                     l7612:
  8425                           
  8426                           ; BSR set to: 0
  8427  001F5A  0E00               	movlw	0
  8428  001F5C  6FCB               	movwf	(atanf@id+1)& (0+255),b
  8429  001F5E  0E01               	movlw	1
  8430  001F60  6FCA               	movwf	atanf@id& (0+255),b
  8431  001F62                     
  8432                           ; BSR set to: 0
  8433  001F62  0E00               	movlw	0
  8434  001F64  6F86               	movwf	___fladd@a& (0+255),b
  8435  001F66  0E00               	movlw	0
  8436  001F68  6F87               	movwf	(___fladd@a+1)& (0+255),b
  8437  001F6A  0E80               	movlw	128
  8438  001F6C  6F88               	movwf	(___fladd@a+2)& (0+255),b
  8439  001F6E  0EBF               	movlw	191
  8440  001F70  6F89               	movwf	(___fladd@a+3)& (0+255),b
  8441  001F72  C09A  F082         	movff	atanf@x,___fladd@b
  8442  001F76  C09B  F083         	movff	atanf@x+1,___fladd@b+1
  8443  001F7A  C09C  F084         	movff	atanf@x+2,___fladd@b+2
  8444  001F7E  C09D  F085         	movff	atanf@x+3,___fladd@b+3
  8445  001F82  EC8F  F019         	call	___fladd	;wreg free
  8446  001F86  C082  F022         	movff	?___fladd,___fldiv@b
  8447  001F8A  C083  F023         	movff	?___fladd+1,___fldiv@b+1
  8448  001F8E  C084  F024         	movff	?___fladd+2,___fldiv@b+2
  8449  001F92  C085  F025         	movff	?___fladd+3,___fldiv@b+3
  8450  001F96  0E00               	movlw	0
  8451  001F98  0100               	movlb	0	; () banked
  8452  001F9A  6F86               	movwf	___fladd@a& (0+255),b
  8453  001F9C  0E00               	movlw	0
  8454  001F9E  6F87               	movwf	(___fladd@a+1)& (0+255),b
  8455  001FA0  0E80               	movlw	128
  8456  001FA2  6F88               	movwf	(___fladd@a+2)& (0+255),b
  8457  001FA4  0E3F               	movlw	63
  8458  001FA6  6F89               	movwf	(___fladd@a+3)& (0+255),b
  8459  001FA8  C09A  F082         	movff	atanf@x,___fladd@b
  8460  001FAC  C09B  F083         	movff	atanf@x+1,___fladd@b+1
  8461  001FB0  C09C  F084         	movff	atanf@x+2,___fladd@b+2
  8462  001FB4  C09D  F085         	movff	atanf@x+3,___fladd@b+3
  8463  001FB8  EC8F  F019         	call	___fladd	;wreg free
  8464  001FBC  C082  F026         	movff	?___fladd,___fldiv@a
  8465  001FC0  C083  F027         	movff	?___fladd+1,___fldiv@a+1
  8466  001FC4  C084  F028         	movff	?___fladd+2,___fldiv@a+2
  8467  001FC8  C085  F029         	movff	?___fladd+3,___fldiv@a+3
  8468  001FCC  EC54  F020         	call	___fldiv	;wreg free
  8469  001FD0  C022  F09A         	movff	?___fldiv,atanf@x
  8470  001FD4  C023  F09B         	movff	?___fldiv+1,atanf@x+1
  8471  001FD8  C024  F09C         	movff	?___fldiv+2,atanf@x+2
  8472  001FDC  C025  F09D         	movff	?___fldiv+3,atanf@x+3
  8473  001FE0  EF72  F010         	goto	l7626
  8474  001FE4                     l7616:
  8475                           
  8476                           ; BSR set to: 0
  8477  001FE4  0E1C               	movlw	28
  8478  001FE6  5DD2               	subwf	(atanf@ix+2)& (0+255),w,b
  8479  001FE8  0E40               	movlw	64
  8480  001FEA  59D3               	subwfb	(atanf@ix+3)& (0+255),w,b
  8481  001FEC  B0D8               	btfsc	status,0,c
  8482  001FEE  EFFB  F00F         	goto	u8491
  8483  001FF2  EFFD  F00F         	goto	u8490
  8484  001FF6                     u8491:
  8485  001FF6  EF54  F010         	goto	l7622
  8486  001FFA                     u8490:
  8487  001FFA                     
  8488                           ; BSR set to: 0
  8489  001FFA  0E00               	movlw	0
  8490  001FFC  6FCB               	movwf	(atanf@id+1)& (0+255),b
  8491  001FFE  0E02               	movlw	2
  8492  002000  6FCA               	movwf	atanf@id& (0+255),b
  8493  002002                     
  8494                           ; BSR set to: 0
  8495  002002  0E00               	movlw	0
  8496  002004  6F86               	movwf	___fladd@a& (0+255),b
  8497  002006  0E00               	movlw	0
  8498  002008  6F87               	movwf	(___fladd@a+1)& (0+255),b
  8499  00200A  0EC0               	movlw	192
  8500  00200C  6F88               	movwf	(___fladd@a+2)& (0+255),b
  8501  00200E  0EBF               	movlw	191
  8502  002010  6F89               	movwf	(___fladd@a+3)& (0+255),b
  8503  002012  C09A  F082         	movff	atanf@x,___fladd@b
  8504  002016  C09B  F083         	movff	atanf@x+1,___fladd@b+1
  8505  00201A  C09C  F084         	movff	atanf@x+2,___fladd@b+2
  8506  00201E  C09D  F085         	movff	atanf@x+3,___fladd@b+3
  8507  002022  EC8F  F019         	call	___fladd	;wreg free
  8508  002026  C082  F022         	movff	?___fladd,___fldiv@b
  8509  00202A  C083  F023         	movff	?___fladd+1,___fldiv@b+1
  8510  00202E  C084  F024         	movff	?___fladd+2,___fldiv@b+2
  8511  002032  C085  F025         	movff	?___fladd+3,___fldiv@b+3
  8512  002036  0E00               	movlw	0
  8513  002038  0100               	movlb	0	; () banked
  8514  00203A  6F86               	movwf	___fladd@a& (0+255),b
  8515  00203C  0E00               	movlw	0
  8516  00203E  6F87               	movwf	(___fladd@a+1)& (0+255),b
  8517  002040  0E80               	movlw	128
  8518  002042  6F88               	movwf	(___fladd@a+2)& (0+255),b
  8519  002044  0E3F               	movlw	63
  8520  002046  6F89               	movwf	(___fladd@a+3)& (0+255),b
  8521  002048  0E00               	movlw	0
  8522  00204A  6F71               	movwf	___flmul@a& (0+255),b
  8523  00204C  0E00               	movlw	0
  8524  00204E  6F72               	movwf	(___flmul@a+1)& (0+255),b
  8525  002050  0EC0               	movlw	192
  8526  002052  6F73               	movwf	(___flmul@a+2)& (0+255),b
  8527  002054  0E3F               	movlw	63
  8528  002056  6F74               	movwf	(___flmul@a+3)& (0+255),b
  8529  002058  C09A  F06D         	movff	atanf@x,___flmul@b
  8530  00205C  C09B  F06E         	movff	atanf@x+1,___flmul@b+1
  8531  002060  C09C  F06F         	movff	atanf@x+2,___flmul@b+2
  8532  002064  C09D  F070         	movff	atanf@x+3,___flmul@b+3
  8533  002068  EC3E  F01E         	call	___flmul	;wreg free
  8534  00206C  C06D  F082         	movff	?___flmul,___fladd@b
  8535  002070  C06E  F083         	movff	?___flmul+1,___fladd@b+1
  8536  002074  C06F  F084         	movff	?___flmul+2,___fladd@b+2
  8537  002078  C070  F085         	movff	?___flmul+3,___fladd@b+3
  8538  00207C  EC8F  F019         	call	___fladd	;wreg free
  8539  002080  C082  F026         	movff	?___fladd,___fldiv@a
  8540  002084  C083  F027         	movff	?___fladd+1,___fldiv@a+1
  8541  002088  C084  F028         	movff	?___fladd+2,___fldiv@a+2
  8542  00208C  C085  F029         	movff	?___fladd+3,___fldiv@a+3
  8543  002090  EC54  F020         	call	___fldiv	;wreg free
  8544  002094  C022  F09A         	movff	?___fldiv,atanf@x
  8545  002098  C023  F09B         	movff	?___fldiv+1,atanf@x+1
  8546  00209C  C024  F09C         	movff	?___fldiv+2,atanf@x+2
  8547  0020A0  C025  F09D         	movff	?___fldiv+3,atanf@x+3
  8548  0020A4  EF72  F010         	goto	l7626
  8549  0020A8                     l7622:
  8550                           
  8551                           ; BSR set to: 0
  8552  0020A8  0E00               	movlw	0
  8553  0020AA  6FCB               	movwf	(atanf@id+1)& (0+255),b
  8554  0020AC  0E03               	movlw	3
  8555  0020AE  6FCA               	movwf	atanf@id& (0+255),b
  8556  0020B0                     
  8557                           ; BSR set to: 0
  8558  0020B0  0E00               	movlw	0
  8559  0020B2  6E22               	movwf	___fldiv@b^0,c
  8560  0020B4  0E00               	movlw	0
  8561  0020B6  6E23               	movwf	(___fldiv@b+1)^0,c
  8562  0020B8  0E80               	movlw	128
  8563  0020BA  6E24               	movwf	(___fldiv@b+2)^0,c
  8564  0020BC  0EBF               	movlw	191
  8565  0020BE  6E25               	movwf	(___fldiv@b+3)^0,c
  8566  0020C0  C09A  F026         	movff	atanf@x,___fldiv@a
  8567  0020C4  C09B  F027         	movff	atanf@x+1,___fldiv@a+1
  8568  0020C8  C09C  F028         	movff	atanf@x+2,___fldiv@a+2
  8569  0020CC  C09D  F029         	movff	atanf@x+3,___fldiv@a+3
  8570  0020D0  EC54  F020         	call	___fldiv	;wreg free
  8571  0020D4  C022  F09A         	movff	?___fldiv,atanf@x
  8572  0020D8  C023  F09B         	movff	?___fldiv+1,atanf@x+1
  8573  0020DC  C024  F09C         	movff	?___fldiv+2,atanf@x+2
  8574  0020E0  C025  F09D         	movff	?___fldiv+3,atanf@x+3
  8575  0020E4                     l7626:
  8576  0020E4  C09A  F06D         	movff	atanf@x,___flmul@b
  8577  0020E8  C09B  F06E         	movff	atanf@x+1,___flmul@b+1
  8578  0020EC  C09C  F06F         	movff	atanf@x+2,___flmul@b+2
  8579  0020F0  C09D  F070         	movff	atanf@x+3,___flmul@b+3
  8580  0020F4  C09A  F071         	movff	atanf@x,___flmul@a
  8581  0020F8  C09B  F072         	movff	atanf@x+1,___flmul@a+1
  8582  0020FC  C09C  F073         	movff	atanf@x+2,___flmul@a+2
  8583  002100  C09D  F074         	movff	atanf@x+3,___flmul@a+3
  8584  002104  EC3E  F01E         	call	___flmul	;wreg free
  8585  002108  C06D  F0CC         	movff	?___flmul,atanf@z
  8586  00210C  C06E  F0CD         	movff	?___flmul+1,atanf@z+1
  8587  002110  C06F  F0CE         	movff	?___flmul+2,atanf@z+2
  8588  002114  C070  F0CF         	movff	?___flmul+3,atanf@z+3
  8589  002118  C0CC  F06D         	movff	atanf@z,___flmul@b
  8590  00211C  C0CD  F06E         	movff	atanf@z+1,___flmul@b+1
  8591  002120  C0CE  F06F         	movff	atanf@z+2,___flmul@b+2
  8592  002124  C0CF  F070         	movff	atanf@z+3,___flmul@b+3
  8593  002128  C0CC  F071         	movff	atanf@z,___flmul@a
  8594  00212C  C0CD  F072         	movff	atanf@z+1,___flmul@a+1
  8595  002130  C0CE  F073         	movff	atanf@z+2,___flmul@a+2
  8596  002134  C0CF  F074         	movff	atanf@z+3,___flmul@a+3
  8597  002138  EC3E  F01E         	call	___flmul	;wreg free
  8598  00213C  C06D  F0C6         	movff	?___flmul,atanf@w
  8599  002140  C06E  F0C7         	movff	?___flmul+1,atanf@w+1
  8600  002144  C06F  F0C8         	movff	?___flmul+2,atanf@w+2
  8601  002148  C070  F0C9         	movff	?___flmul+3,atanf@w+3
  8602  00214C  0E09               	movlw	low (_aT+8)
  8603  00214E  6EF6               	movwf	tblptrl,c
  8604  002150  0E10               	movlw	high (_aT+8)
  8605  002152  6EF7               	movwf	tblptrh,c
  8606  002154                     	if	0	;tblptru may be non-zero
  8607  002154                     	endif
  8608  002154                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8609  002154  0E00               	movlw	low (__mediumconst shr (0+16))
  8610  002156  6EF8               	movwf	tblptru,c
  8611  002158                     	endif
  8612  002158  0009               	tblrd		*+
  8613  00215A  CFF5 F086          	movff	tablat,___fladd@a
  8614  00215E  0009               	tblrd		*+
  8615  002160  CFF5 F087          	movff	tablat,___fladd@a+1
  8616  002164  0009               	tblrd		*+
  8617  002166  CFF5 F088          	movff	tablat,___fladd@a+2
  8618  00216A  000A               	tblrd		*-
  8619  00216C  CFF5 F089          	movff	tablat,___fladd@a+3
  8620  002170  C0C6  F071         	movff	atanf@w,___flmul@a
  8621  002174  C0C7  F072         	movff	atanf@w+1,___flmul@a+1
  8622  002178  C0C8  F073         	movff	atanf@w+2,___flmul@a+2
  8623  00217C  C0C9  F074         	movff	atanf@w+3,___flmul@a+3
  8624  002180  0E11               	movlw	low (_aT+16)
  8625  002182  6EF6               	movwf	tblptrl,c
  8626  002184  0E10               	movlw	high (_aT+16)
  8627  002186  6EF7               	movwf	tblptrh,c
  8628  002188                     	if	0	;tblptru may be non-zero
  8629  002188                     	endif
  8630  002188                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8631  002188  0E00               	movlw	low (__mediumconst shr (0+16))
  8632  00218A  6EF8               	movwf	tblptru,c
  8633  00218C                     	endif
  8634  00218C  0009               	tblrd		*+
  8635  00218E  CFF5 F06D          	movff	tablat,___flmul@b
  8636  002192  0009               	tblrd		*+
  8637  002194  CFF5 F06E          	movff	tablat,___flmul@b+1
  8638  002198  0009               	tblrd		*+
  8639  00219A  CFF5 F06F          	movff	tablat,___flmul@b+2
  8640  00219E  000A               	tblrd		*-
  8641  0021A0  CFF5 F070          	movff	tablat,___flmul@b+3
  8642  0021A4  EC3E  F01E         	call	___flmul	;wreg free
  8643  0021A8  C06D  F082         	movff	?___flmul,___fladd@b
  8644  0021AC  C06E  F083         	movff	?___flmul+1,___fladd@b+1
  8645  0021B0  C06F  F084         	movff	?___flmul+2,___fladd@b+2
  8646  0021B4  C070  F085         	movff	?___flmul+3,___fladd@b+3
  8647  0021B8  EC8F  F019         	call	___fladd	;wreg free
  8648  0021BC  C082  F0BE         	movff	?___fladd,_atanf$2610
  8649  0021C0  C083  F0BF         	movff	?___fladd+1,_atanf$2610+1
  8650  0021C4  C084  F0C0         	movff	?___fladd+2,_atanf$2610+2
  8651  0021C8  C085  F0C1         	movff	?___fladd+3,_atanf$2610+3
  8652  0021CC  0E01               	movlw	low _aT
  8653  0021CE  6EF6               	movwf	tblptrl,c
  8654  0021D0                     	if	1	;There is more than 1 active tblptr byte
  8655  0021D0  0E10               	movlw	high _aT
  8656  0021D2  6EF7               	movwf	tblptrh,c
  8657  0021D4                     	endif
  8658  0021D4                     	if	1	;There are 3 active tblptr bytes
  8659  0021D4  0E00               	movlw	low (_aT shr (0+16))
  8660  0021D6  6EF8               	movwf	tblptru,c
  8661  0021D8                     	endif
  8662  0021D8  0009               	tblrd		*+
  8663  0021DA  CFF5 F086          	movff	tablat,___fladd@a
  8664  0021DE  0009               	tblrd		*+
  8665  0021E0  CFF5 F087          	movff	tablat,___fladd@a+1
  8666  0021E4  0009               	tblrd		*+
  8667  0021E6  CFF5 F088          	movff	tablat,___fladd@a+2
  8668  0021EA  000A               	tblrd		*-
  8669  0021EC  CFF5 F089          	movff	tablat,___fladd@a+3
  8670  0021F0  C0C6  F071         	movff	atanf@w,___flmul@a
  8671  0021F4  C0C7  F072         	movff	atanf@w+1,___flmul@a+1
  8672  0021F8  C0C8  F073         	movff	atanf@w+2,___flmul@a+2
  8673  0021FC  C0C9  F074         	movff	atanf@w+3,___flmul@a+3
  8674  002200  C0BE  F06D         	movff	_atanf$2610,___flmul@b
  8675  002204  C0BF  F06E         	movff	_atanf$2610+1,___flmul@b+1
  8676  002208  C0C0  F06F         	movff	_atanf$2610+2,___flmul@b+2
  8677  00220C  C0C1  F070         	movff	_atanf$2610+3,___flmul@b+3
  8678  002210  EC3E  F01E         	call	___flmul	;wreg free
  8679  002214  C06D  F082         	movff	?___flmul,___fladd@b
  8680  002218  C06E  F083         	movff	?___flmul+1,___fladd@b+1
  8681  00221C  C06F  F084         	movff	?___flmul+2,___fladd@b+2
  8682  002220  C070  F085         	movff	?___flmul+3,___fladd@b+3
  8683  002224  EC8F  F019         	call	___fladd	;wreg free
  8684  002228  C082  F0A6         	movff	?___fladd,_atanf$2611
  8685  00222C  C083  F0A7         	movff	?___fladd+1,_atanf$2611+1
  8686  002230  C084  F0A8         	movff	?___fladd+2,_atanf$2611+2
  8687  002234  C085  F0A9         	movff	?___fladd+3,_atanf$2611+3
  8688  002238  C0A6  F06D         	movff	_atanf$2611,___flmul@b
  8689  00223C  C0A7  F06E         	movff	_atanf$2611+1,___flmul@b+1
  8690  002240  C0A8  F06F         	movff	_atanf$2611+2,___flmul@b+2
  8691  002244  C0A9  F070         	movff	_atanf$2611+3,___flmul@b+3
  8692  002248  C0CC  F071         	movff	atanf@z,___flmul@a
  8693  00224C  C0CD  F072         	movff	atanf@z+1,___flmul@a+1
  8694  002250  C0CE  F073         	movff	atanf@z+2,___flmul@a+2
  8695  002254  C0CF  F074         	movff	atanf@z+3,___flmul@a+3
  8696  002258  EC3E  F01E         	call	___flmul	;wreg free
  8697  00225C  C06D  F0B2         	movff	?___flmul,atanf@s1
  8698  002260  C06E  F0B3         	movff	?___flmul+1,atanf@s1+1
  8699  002264  C06F  F0B4         	movff	?___flmul+2,atanf@s1+2
  8700  002268  C070  F0B5         	movff	?___flmul+3,atanf@s1+3
  8701  00226C  0E05               	movlw	low (_aT+4)
  8702  00226E  6EF6               	movwf	tblptrl,c
  8703  002270  0E10               	movlw	high (_aT+4)
  8704  002272  6EF7               	movwf	tblptrh,c
  8705  002274                     	if	0	;tblptru may be non-zero
  8706  002274                     	endif
  8707  002274                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8708  002274  0E00               	movlw	low (__mediumconst shr (0+16))
  8709  002276  6EF8               	movwf	tblptru,c
  8710  002278                     	endif
  8711  002278  0009               	tblrd		*+
  8712  00227A  CFF5 F086          	movff	tablat,___fladd@a
  8713  00227E  0009               	tblrd		*+
  8714  002280  CFF5 F087          	movff	tablat,___fladd@a+1
  8715  002284  0009               	tblrd		*+
  8716  002286  CFF5 F088          	movff	tablat,___fladd@a+2
  8717  00228A  000A               	tblrd		*-
  8718  00228C  CFF5 F089          	movff	tablat,___fladd@a+3
  8719  002290  C0C6  F071         	movff	atanf@w,___flmul@a
  8720  002294  C0C7  F072         	movff	atanf@w+1,___flmul@a+1
  8721  002298  C0C8  F073         	movff	atanf@w+2,___flmul@a+2
  8722  00229C  C0C9  F074         	movff	atanf@w+3,___flmul@a+3
  8723  0022A0  0E0D               	movlw	low (_aT+12)
  8724  0022A2  6EF6               	movwf	tblptrl,c
  8725  0022A4  0E10               	movlw	high (_aT+12)
  8726  0022A6  6EF7               	movwf	tblptrh,c
  8727  0022A8                     	if	0	;tblptru may be non-zero
  8728  0022A8                     	endif
  8729  0022A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8730  0022A8  0E00               	movlw	low (__mediumconst shr (0+16))
  8731  0022AA  6EF8               	movwf	tblptru,c
  8732  0022AC                     	endif
  8733  0022AC  0009               	tblrd		*+
  8734  0022AE  CFF5 F06D          	movff	tablat,___flmul@b
  8735  0022B2  0009               	tblrd		*+
  8736  0022B4  CFF5 F06E          	movff	tablat,___flmul@b+1
  8737  0022B8  0009               	tblrd		*+
  8738  0022BA  CFF5 F06F          	movff	tablat,___flmul@b+2
  8739  0022BE  000A               	tblrd		*-
  8740  0022C0  CFF5 F070          	movff	tablat,___flmul@b+3
  8741  0022C4  EC3E  F01E         	call	___flmul	;wreg free
  8742  0022C8  C06D  F082         	movff	?___flmul,___fladd@b
  8743  0022CC  C06E  F083         	movff	?___flmul+1,___fladd@b+1
  8744  0022D0  C06F  F084         	movff	?___flmul+2,___fladd@b+2
  8745  0022D4  C070  F085         	movff	?___flmul+3,___fladd@b+3
  8746  0022D8  EC8F  F019         	call	___fladd	;wreg free
  8747  0022DC  C082  F0BE         	movff	?___fladd,_atanf$2610
  8748  0022E0  C083  F0BF         	movff	?___fladd+1,_atanf$2610+1
  8749  0022E4  C084  F0C0         	movff	?___fladd+2,_atanf$2610+2
  8750  0022E8  C085  F0C1         	movff	?___fladd+3,_atanf$2610+3
  8751  0022EC  C0BE  F06D         	movff	_atanf$2610,___flmul@b
  8752  0022F0  C0BF  F06E         	movff	_atanf$2610+1,___flmul@b+1
  8753  0022F4  C0C0  F06F         	movff	_atanf$2610+2,___flmul@b+2
  8754  0022F8  C0C1  F070         	movff	_atanf$2610+3,___flmul@b+3
  8755  0022FC  C0C6  F071         	movff	atanf@w,___flmul@a
  8756  002300  C0C7  F072         	movff	atanf@w+1,___flmul@a+1
  8757  002304  C0C8  F073         	movff	atanf@w+2,___flmul@a+2
  8758  002308  C0C9  F074         	movff	atanf@w+3,___flmul@a+3
  8759  00230C  EC3E  F01E         	call	___flmul	;wreg free
  8760  002310  C06D  F0B6         	movff	?___flmul,atanf@s2
  8761  002314  C06E  F0B7         	movff	?___flmul+1,atanf@s2+1
  8762  002318  C06F  F0B8         	movff	?___flmul+2,atanf@s2+2
  8763  00231C  C070  F0B9         	movff	?___flmul+3,atanf@s2+3
  8764  002320  0100               	movlb	0	; () banked
  8765  002322  BFCB               	btfsc	(atanf@id+1)& (0+255),7,b
  8766  002324  EF98  F011         	goto	u8500
  8767  002328  EF96  F011         	goto	u8501
  8768  00232C                     u8501:
  8769  00232C  EFE0  F011         	goto	l7648
  8770  002330                     u8500:
  8771  002330                     
  8772                           ; BSR set to: 0
  8773  002330  C09A  F071         	movff	atanf@x,___flmul@a
  8774  002334  C09B  F072         	movff	atanf@x+1,___flmul@a+1
  8775  002338  C09C  F073         	movff	atanf@x+2,___flmul@a+2
  8776  00233C  C09D  F074         	movff	atanf@x+3,___flmul@a+3
  8777  002340  C0B6  F086         	movff	atanf@s2,___fladd@a
  8778  002344  C0B7  F087         	movff	atanf@s2+1,___fladd@a+1
  8779  002348  C0B8  F088         	movff	atanf@s2+2,___fladd@a+2
  8780  00234C  C0B9  F089         	movff	atanf@s2+3,___fladd@a+3
  8781  002350  C0B2  F082         	movff	atanf@s1,___fladd@b
  8782  002354  C0B3  F083         	movff	atanf@s1+1,___fladd@b+1
  8783  002358  C0B4  F084         	movff	atanf@s1+2,___fladd@b+2
  8784  00235C  C0B5  F085         	movff	atanf@s1+3,___fladd@b+3
  8785  002360  EC8F  F019         	call	___fladd	;wreg free
  8786  002364  C082  F06D         	movff	?___fladd,___flmul@b
  8787  002368  C083  F06E         	movff	?___fladd+1,___flmul@b+1
  8788  00236C  C084  F06F         	movff	?___fladd+2,___flmul@b+2
  8789  002370  C085  F070         	movff	?___fladd+3,___flmul@b+3
  8790  002374  EC3E  F01E         	call	___flmul	;wreg free
  8791  002378  C06D  F0C2         	movff	?___flmul,_atanf$2612
  8792  00237C  C06E  F0C3         	movff	?___flmul+1,_atanf$2612+1
  8793  002380  C06F  F0C4         	movff	?___flmul+2,_atanf$2612+2
  8794  002384  C070  F0C5         	movff	?___flmul+3,_atanf$2612+3
  8795  002388  C09A  F092         	movff	atanf@x,___flsub@b
  8796  00238C  C09B  F093         	movff	atanf@x+1,___flsub@b+1
  8797  002390  C09C  F094         	movff	atanf@x+2,___flsub@b+2
  8798  002394  C09D  F095         	movff	atanf@x+3,___flsub@b+3
  8799  002398  C0C2  F096         	movff	_atanf$2612,___flsub@a
  8800  00239C  C0C3  F097         	movff	_atanf$2612+1,___flsub@a+1
  8801  0023A0  C0C4  F098         	movff	_atanf$2612+2,___flsub@a+2
  8802  0023A4  C0C5  F099         	movff	_atanf$2612+3,___flsub@a+3
  8803  0023A8  EC60  F02D         	call	___flsub	;wreg free
  8804  0023AC  C092  F09A         	movff	?___flsub,?_atanf
  8805  0023B0  C093  F09B         	movff	?___flsub+1,?_atanf+1
  8806  0023B4  C094  F09C         	movff	?___flsub+2,?_atanf+2
  8807  0023B8  C095  F09D         	movff	?___flsub+3,?_atanf+3
  8808  0023BC  EF98  F012         	goto	l1074
  8809  0023C0                     l7648:
  8810                           
  8811                           ; BSR set to: 0
  8812  0023C0  C09A  F071         	movff	atanf@x,___flmul@a
  8813  0023C4  C09B  F072         	movff	atanf@x+1,___flmul@a+1
  8814  0023C8  C09C  F073         	movff	atanf@x+2,___flmul@a+2
  8815  0023CC  C09D  F074         	movff	atanf@x+3,___flmul@a+3
  8816  0023D0  C0B6  F086         	movff	atanf@s2,___fladd@a
  8817  0023D4  C0B7  F087         	movff	atanf@s2+1,___fladd@a+1
  8818  0023D8  C0B8  F088         	movff	atanf@s2+2,___fladd@a+2
  8819  0023DC  C0B9  F089         	movff	atanf@s2+3,___fladd@a+3
  8820  0023E0  C0B2  F082         	movff	atanf@s1,___fladd@b
  8821  0023E4  C0B3  F083         	movff	atanf@s1+1,___fladd@b+1
  8822  0023E8  C0B4  F084         	movff	atanf@s1+2,___fladd@b+2
  8823  0023EC  C0B5  F085         	movff	atanf@s1+3,___fladd@b+3
  8824  0023F0  EC8F  F019         	call	___fladd	;wreg free
  8825  0023F4  C082  F06D         	movff	?___fladd,___flmul@b
  8826  0023F8  C083  F06E         	movff	?___fladd+1,___flmul@b+1
  8827  0023FC  C084  F06F         	movff	?___fladd+2,___flmul@b+2
  8828  002400  C085  F070         	movff	?___fladd+3,___flmul@b+3
  8829  002404  EC3E  F01E         	call	___flmul	;wreg free
  8830  002408  C06D  F0C2         	movff	?___flmul,_atanf$2612
  8831  00240C  C06E  F0C3         	movff	?___flmul+1,_atanf$2612+1
  8832  002410  C06F  F0C4         	movff	?___flmul+2,_atanf$2612+2
  8833  002414  C070  F0C5         	movff	?___flmul+3,_atanf$2612+3
  8834  002418  C0CA  F09E         	movff	atanf@id,??_atanf
  8835  00241C  C0CB  F09F         	movff	atanf@id+1,??_atanf+1
  8836  002420  0100               	movlb	0	; () banked
  8837  002422  90D8               	bcf	status,0,c
  8838  002424  379E               	rlcf	??_atanf& (0+255),f,b
  8839  002426  379F               	rlcf	(??_atanf+1)& (0+255),f,b
  8840  002428  90D8               	bcf	status,0,c
  8841  00242A  379E               	rlcf	??_atanf& (0+255),f,b
  8842  00242C  379F               	rlcf	(??_atanf+1)& (0+255),f,b
  8843  00242E  0E15               	movlw	low _atanlo
  8844  002430  259E               	addwf	??_atanf& (0+255),w,b
  8845  002432  6EF6               	movwf	tblptrl,c
  8846  002434  0E10               	movlw	high _atanlo
  8847  002436  219F               	addwfc	(??_atanf+1)& (0+255),w,b
  8848  002438  6EF7               	movwf	tblptrh,c
  8849  00243A                     	if	1	;There are 3 active tblptr bytes
  8850  00243A  6AF8               	clrf	tblptru,c
  8851  00243C  0E00               	movlw	low (__mediumconst shr (0+16))
  8852  00243E  22F8               	addwfc	tblptru,f,c
  8853  002440                     	endif
  8854  002440  0009               	tblrd		*+
  8855  002442  CFF5 F096          	movff	tablat,___flsub@a
  8856  002446  0009               	tblrd		*+
  8857  002448  CFF5 F097          	movff	tablat,___flsub@a+1
  8858  00244C  0009               	tblrd		*+
  8859  00244E  CFF5 F098          	movff	tablat,___flsub@a+2
  8860  002452  000A               	tblrd		*-
  8861  002454  CFF5 F099          	movff	tablat,___flsub@a+3
  8862  002458  C0C2  F092         	movff	_atanf$2612,___flsub@b
  8863  00245C  C0C3  F093         	movff	_atanf$2612+1,___flsub@b+1
  8864  002460  C0C4  F094         	movff	_atanf$2612+2,___flsub@b+2
  8865  002464  C0C5  F095         	movff	_atanf$2612+3,___flsub@b+3
  8866  002468  EC60  F02D         	call	___flsub	;wreg free
  8867  00246C  C092  F0AA         	movff	?___flsub,_atanf$2613
  8868  002470  C093  F0AB         	movff	?___flsub+1,_atanf$2613+1
  8869  002474  C094  F0AC         	movff	?___flsub+2,_atanf$2613+2
  8870  002478  C095  F0AD         	movff	?___flsub+3,_atanf$2613+3
  8871  00247C  C09A  F096         	movff	atanf@x,___flsub@a
  8872  002480  C09B  F097         	movff	atanf@x+1,___flsub@a+1
  8873  002484  C09C  F098         	movff	atanf@x+2,___flsub@a+2
  8874  002488  C09D  F099         	movff	atanf@x+3,___flsub@a+3
  8875  00248C  C0AA  F092         	movff	_atanf$2613,___flsub@b
  8876  002490  C0AB  F093         	movff	_atanf$2613+1,___flsub@b+1
  8877  002494  C0AC  F094         	movff	_atanf$2613+2,___flsub@b+2
  8878  002498  C0AD  F095         	movff	_atanf$2613+3,___flsub@b+3
  8879  00249C  EC60  F02D         	call	___flsub	;wreg free
  8880  0024A0  C092  F0AE         	movff	?___flsub,_atanf$2614
  8881  0024A4  C093  F0AF         	movff	?___flsub+1,_atanf$2614+1
  8882  0024A8  C094  F0B0         	movff	?___flsub+2,_atanf$2614+2
  8883  0024AC  C095  F0B1         	movff	?___flsub+3,_atanf$2614+3
  8884  0024B0  C0CA  F09E         	movff	atanf@id,??_atanf
  8885  0024B4  C0CB  F09F         	movff	atanf@id+1,??_atanf+1
  8886  0024B8  0100               	movlb	0	; () banked
  8887  0024BA  90D8               	bcf	status,0,c
  8888  0024BC  379E               	rlcf	??_atanf& (0+255),f,b
  8889  0024BE  379F               	rlcf	(??_atanf+1)& (0+255),f,b
  8890  0024C0  90D8               	bcf	status,0,c
  8891  0024C2  379E               	rlcf	??_atanf& (0+255),f,b
  8892  0024C4  379F               	rlcf	(??_atanf+1)& (0+255),f,b
  8893  0024C6  0E25               	movlw	low _atanhi
  8894  0024C8  259E               	addwf	??_atanf& (0+255),w,b
  8895  0024CA  6EF6               	movwf	tblptrl,c
  8896  0024CC  0E10               	movlw	high _atanhi
  8897  0024CE  219F               	addwfc	(??_atanf+1)& (0+255),w,b
  8898  0024D0  6EF7               	movwf	tblptrh,c
  8899  0024D2                     	if	1	;There are 3 active tblptr bytes
  8900  0024D2  6AF8               	clrf	tblptru,c
  8901  0024D4  0E00               	movlw	low (__mediumconst shr (0+16))
  8902  0024D6  22F8               	addwfc	tblptru,f,c
  8903  0024D8                     	endif
  8904  0024D8  0009               	tblrd		*+
  8905  0024DA  CFF5 F092          	movff	tablat,___flsub@b
  8906  0024DE  0009               	tblrd		*+
  8907  0024E0  CFF5 F093          	movff	tablat,___flsub@b+1
  8908  0024E4  0009               	tblrd		*+
  8909  0024E6  CFF5 F094          	movff	tablat,___flsub@b+2
  8910  0024EA  000A               	tblrd		*-
  8911  0024EC  CFF5 F095          	movff	tablat,___flsub@b+3
  8912  0024F0  C0AE  F096         	movff	_atanf$2614,___flsub@a
  8913  0024F4  C0AF  F097         	movff	_atanf$2614+1,___flsub@a+1
  8914  0024F8  C0B0  F098         	movff	_atanf$2614+2,___flsub@a+2
  8915  0024FC  C0B1  F099         	movff	_atanf$2614+3,___flsub@a+3
  8916  002500  EC60  F02D         	call	___flsub	;wreg free
  8917  002504  C092  F0CC         	movff	?___flsub,atanf@z
  8918  002508  C093  F0CD         	movff	?___flsub+1,atanf@z+1
  8919  00250C  C094  F0CE         	movff	?___flsub+2,atanf@z+2
  8920  002510  C095  F0CF         	movff	?___flsub+3,atanf@z+3
  8921  002514  0100               	movlb	0	; () banked
  8922  002516  51BA               	movf	atanf@sign& (0+255),w,b
  8923  002518  11BB               	iorwf	(atanf@sign+1)& (0+255),w,b
  8924  00251A  11BC               	iorwf	(atanf@sign+2)& (0+255),w,b
  8925  00251C  11BD               	iorwf	(atanf@sign+3)& (0+255),w,b
  8926  00251E  A4D8               	btfss	status,2,c
  8927  002520  EF94  F012         	goto	u8511
  8928  002524  EF96  F012         	goto	u8510
  8929  002528                     u8511:
  8930  002528  EFFD  F00E         	goto	l7592
  8931  00252C                     u8510:
  8932  00252C  EFF3  F00E         	goto	l7590
  8933  002530                     l1074:
  8934  002530  0012               	return		;funcret
  8935  002532                     __end_of_atanf:
  8936                           	callstack 0
  8937                           
  8938 ;; *************** function _fabsf *****************
  8939 ;; Defined at:
  8940 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fabsf.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;  x               4   45[COMRAM] float 
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;  u               4   49[COMRAM] struct .
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  4   45[COMRAM] float 
  8947 ;; Registers used:
  8948 ;;		status,2, status,0
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8955 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8957 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;Total ram usage:        8 bytes
  8959 ;; Hardware stack levels used: 1
  8960 ;; Hardware stack levels required when called: 3
  8961 ;; This function calls:
  8962 ;;		Nothing
  8963 ;; This function is called by:
  8964 ;;		_atan2f
  8965 ;;		_atanf
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text27
  8970  005CB0                     __ptext27:
  8971                           	callstack 0
  8972  005CB0                     _fabsf:
  8973                           	callstack 25
  8974  005CB0  C184  F032         	movff	fabsf@F465,fabsf@u
  8975  005CB4  C185  F033         	movff	fabsf@F465+1,fabsf@u+1
  8976  005CB8  C186  F034         	movff	fabsf@F465+2,fabsf@u+2
  8977  005CBC  C187  F035         	movff	fabsf@F465+3,fabsf@u+3
  8978  005CC0  C02E  F032         	movff	fabsf@x,fabsf@u
  8979  005CC4  C02F  F033         	movff	fabsf@x+1,fabsf@u+1
  8980  005CC8  C030  F034         	movff	fabsf@x+2,fabsf@u+2
  8981  005CCC  C031  F035         	movff	fabsf@x+3,fabsf@u+3
  8982  005CD0  9E35               	bcf	(fabsf@u+3)^0,7,c
  8983  005CD2  C032  F02E         	movff	fabsf@u,?_fabsf
  8984  005CD6  C033  F02F         	movff	fabsf@u+1,?_fabsf+1
  8985  005CDA  C034  F030         	movff	fabsf@u+2,?_fabsf+2
  8986  005CDE  C035  F031         	movff	fabsf@u+3,?_fabsf+3
  8987  005CE2  0012               	return		;funcret
  8988  005CE4                     __end_of_fabsf:
  8989                           	callstack 0
  8990                           
  8991 ;; *************** function ___fpclassifyf *****************
  8992 ;; Defined at:
  8993 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;  x               4   19[COMRAM] float 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;  u               4   29[COMRAM] struct .
  8998 ;;  e               2   27[COMRAM] int 
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  2   19[COMRAM] int 
  9001 ;; Registers used:
  9002 ;;		wreg, status,2, status,0
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9009 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9010 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9011 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9012 ;;Total ram usage:       14 bytes
  9013 ;; Hardware stack levels used: 1
  9014 ;; Hardware stack levels required when called: 3
  9015 ;; This function calls:
  9016 ;;		Nothing
  9017 ;; This function is called by:
  9018 ;;		_atan2f
  9019 ;;		_atanf
  9020 ;;		_efgtoa
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text28
  9025  004FC6                     __ptext28:
  9026                           	callstack 0
  9027  004FC6                     ___fpclassifyf:
  9028                           	callstack 22
  9029  004FC6  C188  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9030  004FCA  C189  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9031  004FCE  C18A  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9032  004FD2  C18B  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9033  004FD6  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  9034  004FDA  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9035  004FDE  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9036  004FE2  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9037  004FE6  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  9038  004FEA  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9039  004FEE  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9040  004FF2  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9041  004FF6  0E18               	movlw	24
  9042  004FF8  EF03  F028         	goto	u7200
  9043  004FFC                     u7205:
  9044  004FFC  90D8               	bcf	status,0,c
  9045  004FFE  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  9046  005000  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  9047  005002  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  9048  005004  3218               	rrcf	??___fpclassifyf^0,f,c
  9049  005006                     u7200:
  9050  005006  2EE8               	decfsz	wreg,f,c
  9051  005008  EFFE  F027         	goto	u7205
  9052  00500C  5018               	movf	??___fpclassifyf^0,w,c
  9053  00500E  6E1C               	movwf	___fpclassifyf@e^0,c
  9054  005010  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  9055  005012  501C               	movf	___fpclassifyf@e^0,w,c
  9056  005014  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9057  005016  A4D8               	btfss	status,2,c
  9058  005018  EF10  F028         	goto	u7211
  9059  00501C  EF12  F028         	goto	u7210
  9060  005020                     u7211:
  9061  005020  EF32  F028         	goto	l6958
  9062  005024                     u7210:
  9063  005024  90D8               	bcf	status,0,c
  9064  005026  341E               	rlcf	___fpclassifyf@u^0,w,c
  9065  005028  6E18               	movwf	??___fpclassifyf^0,c
  9066  00502A  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9067  00502C  6E19               	movwf	(??___fpclassifyf+1)^0,c
  9068  00502E  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9069  005030  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  9070  005032  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9071  005034  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  9072  005036  5018               	movf	??___fpclassifyf^0,w,c
  9073  005038  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  9074  00503A  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  9075  00503C  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  9076  00503E  A4D8               	btfss	status,2,c
  9077  005040  EF24  F028         	goto	u7221
  9078  005044  EF26  F028         	goto	u7220
  9079  005048                     u7221:
  9080  005048  EF2C  F028         	goto	l6954
  9081  00504C                     u7220:
  9082  00504C  0E00               	movlw	0
  9083  00504E  6E15               	movwf	(?___fpclassifyf+1)^0,c
  9084  005050  0E02               	movlw	2
  9085  005052  6E14               	movwf	?___fpclassifyf^0,c
  9086  005054  EF61  F028         	goto	l1056
  9087  005058                     l6954:
  9088  005058  0E00               	movlw	0
  9089  00505A  6E15               	movwf	(?___fpclassifyf+1)^0,c
  9090  00505C  0E03               	movlw	3
  9091  00505E  6E14               	movwf	?___fpclassifyf^0,c
  9092  005060  EF61  F028         	goto	l1056
  9093  005064                     l6958:
  9094  005064  281C               	incf	___fpclassifyf@e^0,w,c
  9095  005066  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9096  005068  A4D8               	btfss	status,2,c
  9097  00506A  EF39  F028         	goto	u7231
  9098  00506E  EF3B  F028         	goto	u7230
  9099  005072                     u7231:
  9100  005072  EF5D  F028         	goto	l6964
  9101  005076                     u7230:
  9102  005076  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  9103  00507A  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9104  00507E  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9105  005082  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9106  005086  0E09               	movlw	9
  9107  005088                     u7245:
  9108  005088  90D8               	bcf	status,0,c
  9109  00508A  3618               	rlcf	??___fpclassifyf^0,f,c
  9110  00508C  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  9111  00508E  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  9112  005090  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  9113  005092  2EE8               	decfsz	wreg,f,c
  9114  005094  EF44  F028         	goto	u7245
  9115  005098  5018               	movf	??___fpclassifyf^0,w,c
  9116  00509A  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  9117  00509C  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  9118  00509E  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  9119  0050A0  B4D8               	btfsc	status,2,c
  9120  0050A2  EF55  F028         	goto	u7251
  9121  0050A6  EF58  F028         	goto	u7250
  9122  0050AA                     u7251:
  9123  0050AA  0E01               	movlw	1
  9124  0050AC  EF59  F028         	goto	u7260
  9125  0050B0                     u7250:
  9126  0050B0  0E00               	movlw	0
  9127  0050B2                     u7260:
  9128  0050B2  6E14               	movwf	?___fpclassifyf^0,c
  9129  0050B4  6A15               	clrf	(?___fpclassifyf+1)^0,c
  9130  0050B6  EF61  F028         	goto	l1056
  9131  0050BA                     l6964:
  9132  0050BA  0E00               	movlw	0
  9133  0050BC  6E15               	movwf	(?___fpclassifyf+1)^0,c
  9134  0050BE  0E04               	movlw	4
  9135  0050C0  6E14               	movwf	?___fpclassifyf^0,c
  9136  0050C2                     l1056:
  9137  0050C2  0012               	return		;funcret
  9138  0050C4                     __end_of___fpclassifyf:
  9139                           	callstack 0
  9140                           
  9141 ;; *************** function ___flsub *****************
  9142 ;; Defined at:
  9143 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  b               4   50[BANK0 ] int 
  9146 ;;  a               4   54[BANK0 ] int 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;		None
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  4   50[BANK0 ] int 
  9151 ;; Registers used:
  9152 ;;		wreg, status,2, status,0, cstack
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9158 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;Total ram usage:        8 bytes
  9163 ;; Hardware stack levels used: 1
  9164 ;; Hardware stack levels required when called: 4
  9165 ;; This function calls:
  9166 ;;		___fladd
  9167 ;; This function is called by:
  9168 ;;		_atan2f
  9169 ;;		_atanf
  9170 ;;		_efgtoa
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text29
  9175  005AC0                     __ptext29:
  9176                           	callstack 0
  9177  005AC0                     ___flsub:
  9178                           	callstack 21
  9179  005AC0  0E00               	movlw	0
  9180  005AC2  0100               	movlb	0	; () banked
  9181  005AC4  1B96               	xorwf	___flsub@a& (0+255),f,b
  9182  005AC6  0E00               	movlw	0
  9183  005AC8  1B97               	xorwf	(___flsub@a+1)& (0+255),f,b
  9184  005ACA  0E00               	movlw	0
  9185  005ACC  1B98               	xorwf	(___flsub@a+2)& (0+255),f,b
  9186  005ACE  0E80               	movlw	128
  9187  005AD0  1B99               	xorwf	(___flsub@a+3)& (0+255),f,b
  9188  005AD2                     
  9189                           ; BSR set to: 0
  9190  005AD2  C092  F082         	movff	___flsub@b,___fladd@b
  9191  005AD6  C093  F083         	movff	___flsub@b+1,___fladd@b+1
  9192  005ADA  C094  F084         	movff	___flsub@b+2,___fladd@b+2
  9193  005ADE  C095  F085         	movff	___flsub@b+3,___fladd@b+3
  9194  005AE2  C096  F086         	movff	___flsub@a,___fladd@a
  9195  005AE6  C097  F087         	movff	___flsub@a+1,___fladd@a+1
  9196  005AEA  C098  F088         	movff	___flsub@a+2,___fladd@a+2
  9197  005AEE  C099  F089         	movff	___flsub@a+3,___fladd@a+3
  9198  005AF2  EC8F  F019         	call	___fladd	;wreg free
  9199  005AF6  C082  F092         	movff	?___fladd,?___flsub
  9200  005AFA  C083  F093         	movff	?___fladd+1,?___flsub+1
  9201  005AFE  C084  F094         	movff	?___fladd+2,?___flsub+2
  9202  005B02  C085  F095         	movff	?___fladd+3,?___flsub+3
  9203  005B06  0012               	return		;funcret
  9204  005B08                     __end_of___flsub:
  9205                           	callstack 0
  9206                           
  9207 ;; *************** function ___fladd *****************
  9208 ;; Defined at:
  9209 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  b               4   34[BANK0 ] int 
  9212 ;;  a               4   38[BANK0 ] int 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;  grs             1   49[BANK0 ] unsigned char 
  9215 ;;  bexp            1   48[BANK0 ] unsigned char 
  9216 ;;  aexp            1   47[BANK0 ] unsigned char 
  9217 ;;  signs           1   46[BANK0 ] unsigned char 
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  4   34[BANK0 ] unsigned char 
  9220 ;; Registers used:
  9221 ;;		wreg, status,2, status,0
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9227 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9228 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9229 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9230 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9231 ;;Total ram usage:       16 bytes
  9232 ;; Hardware stack levels used: 1
  9233 ;; Hardware stack levels required when called: 3
  9234 ;; This function calls:
  9235 ;;		Nothing
  9236 ;; This function is called by:
  9237 ;;		_MPU6050_Read
  9238 ;;		___flsub
  9239 ;;		_atan2f
  9240 ;;		_atanf
  9241 ;;		_efgtoa
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           	psect	text30
  9246  00331E                     __ptext30:
  9247                           	callstack 0
  9248  00331E                     ___fladd:
  9249                           	callstack 21
  9250  00331E  0100               	movlb	0	; () banked
  9251  003320  5185               	movf	(___fladd@b+3)& (0+255),w,b
  9252  003322  0B80               	andlw	128
  9253  003324  6F8E               	movwf	___fladd@signs& (0+255),b
  9254  003326  5185               	movf	(___fladd@b+3)& (0+255),w,b
  9255  003328  2585               	addwf	(___fladd@b+3)& (0+255),w,b
  9256  00332A  6F90               	movwf	___fladd@bexp& (0+255),b
  9257  00332C                     
  9258                           ; BSR set to: 0
  9259  00332C  AF84               	btfss	(___fladd@b+2)& (0+255),7,b
  9260  00332E  EF9B  F019         	goto	u6071
  9261  003332  EF9D  F019         	goto	u6070
  9262  003336                     u6071:
  9263  003336  EF9E  F019         	goto	l6278
  9264  00333A                     u6070:
  9265  00333A                     
  9266                           ; BSR set to: 0
  9267  00333A  8190               	bsf	___fladd@bexp& (0+255),0,b
  9268  00333C                     l6278:
  9269                           
  9270                           ; BSR set to: 0
  9271  00333C  5190               	movf	___fladd@bexp& (0+255),w,b
  9272  00333E  B4D8               	btfsc	status,2,c
  9273  003340  EFA4  F019         	goto	u6081
  9274  003344  EFA6  F019         	goto	u6080
  9275  003348                     u6081:
  9276  003348  EFBB  F019         	goto	l6288
  9277  00334C                     u6080:
  9278  00334C                     
  9279                           ; BSR set to: 0
  9280  00334C  2990               	incf	___fladd@bexp& (0+255),w,b
  9281  00334E  A4D8               	btfss	status,2,c
  9282  003350  EFAC  F019         	goto	u6091
  9283  003354  EFAE  F019         	goto	u6090
  9284  003358                     u6091:
  9285  003358  EFB6  F019         	goto	l6284
  9286  00335C                     u6090:
  9287  00335C                     
  9288                           ; BSR set to: 0
  9289  00335C  0E00               	movlw	0
  9290  00335E  6F82               	movwf	___fladd@b& (0+255),b
  9291  003360  0E00               	movlw	0
  9292  003362  6F83               	movwf	(___fladd@b+1)& (0+255),b
  9293  003364  0E00               	movlw	0
  9294  003366  6F84               	movwf	(___fladd@b+2)& (0+255),b
  9295  003368  0E00               	movlw	0
  9296  00336A  6F85               	movwf	(___fladd@b+3)& (0+255),b
  9297  00336C                     l6284:
  9298                           
  9299                           ; BSR set to: 0
  9300  00336C  8F84               	bsf	(___fladd@b+2)& (0+255),7,b
  9301  00336E                     
  9302                           ; BSR set to: 0
  9303  00336E  0E00               	movlw	0
  9304  003370  6F85               	movwf	(___fladd@b+3)& (0+255),b
  9305  003372  EFC3  F019         	goto	l6290
  9306  003376                     l6288:
  9307                           
  9308                           ; BSR set to: 0
  9309  003376  0E00               	movlw	0
  9310  003378  6F82               	movwf	___fladd@b& (0+255),b
  9311  00337A  0E00               	movlw	0
  9312  00337C  6F83               	movwf	(___fladd@b+1)& (0+255),b
  9313  00337E  0E00               	movlw	0
  9314  003380  6F84               	movwf	(___fladd@b+2)& (0+255),b
  9315  003382  0E00               	movlw	0
  9316  003384  6F85               	movwf	(___fladd@b+3)& (0+255),b
  9317  003386                     l6290:
  9318                           
  9319                           ; BSR set to: 0
  9320  003386  5189               	movf	(___fladd@a+3)& (0+255),w,b
  9321  003388  0B80               	andlw	128
  9322  00338A  6F8F               	movwf	___fladd@aexp& (0+255),b
  9323  00338C                     
  9324                           ; BSR set to: 0
  9325  00338C  518E               	movf	___fladd@signs& (0+255),w,b
  9326  00338E  198F               	xorwf	___fladd@aexp& (0+255),w,b
  9327  003390  B4D8               	btfsc	status,2,c
  9328  003392  EFCD  F019         	goto	u6101
  9329  003396  EFCF  F019         	goto	u6100
  9330  00339A                     u6101:
  9331  00339A  EFD0  F019         	goto	l6296
  9332  00339E                     u6100:
  9333  00339E                     
  9334                           ; BSR set to: 0
  9335  00339E  8D8E               	bsf	___fladd@signs& (0+255),6,b
  9336  0033A0                     l6296:
  9337                           
  9338                           ; BSR set to: 0
  9339  0033A0  5189               	movf	(___fladd@a+3)& (0+255),w,b
  9340  0033A2  2589               	addwf	(___fladd@a+3)& (0+255),w,b
  9341  0033A4  6F8F               	movwf	___fladd@aexp& (0+255),b
  9342  0033A6                     
  9343                           ; BSR set to: 0
  9344  0033A6  AF88               	btfss	(___fladd@a+2)& (0+255),7,b
  9345  0033A8  EFD8  F019         	goto	u6111
  9346  0033AC  EFDA  F019         	goto	u6110
  9347  0033B0                     u6111:
  9348  0033B0  EFDB  F019         	goto	l6302
  9349  0033B4                     u6110:
  9350  0033B4                     
  9351                           ; BSR set to: 0
  9352  0033B4  818F               	bsf	___fladd@aexp& (0+255),0,b
  9353  0033B6                     l6302:
  9354                           
  9355                           ; BSR set to: 0
  9356  0033B6  518F               	movf	___fladd@aexp& (0+255),w,b
  9357  0033B8  B4D8               	btfsc	status,2,c
  9358  0033BA  EFE1  F019         	goto	u6121
  9359  0033BE  EFE3  F019         	goto	u6120
  9360  0033C2                     u6121:
  9361  0033C2  EFF8  F019         	goto	l6312
  9362  0033C6                     u6120:
  9363  0033C6                     
  9364                           ; BSR set to: 0
  9365  0033C6  298F               	incf	___fladd@aexp& (0+255),w,b
  9366  0033C8  A4D8               	btfss	status,2,c
  9367  0033CA  EFE9  F019         	goto	u6131
  9368  0033CE  EFEB  F019         	goto	u6130
  9369  0033D2                     u6131:
  9370  0033D2  EFF3  F019         	goto	l6308
  9371  0033D6                     u6130:
  9372  0033D6                     
  9373                           ; BSR set to: 0
  9374  0033D6  0E00               	movlw	0
  9375  0033D8  6F86               	movwf	___fladd@a& (0+255),b
  9376  0033DA  0E00               	movlw	0
  9377  0033DC  6F87               	movwf	(___fladd@a+1)& (0+255),b
  9378  0033DE  0E00               	movlw	0
  9379  0033E0  6F88               	movwf	(___fladd@a+2)& (0+255),b
  9380  0033E2  0E00               	movlw	0
  9381  0033E4  6F89               	movwf	(___fladd@a+3)& (0+255),b
  9382  0033E6                     l6308:
  9383                           
  9384                           ; BSR set to: 0
  9385  0033E6  8F88               	bsf	(___fladd@a+2)& (0+255),7,b
  9386  0033E8                     
  9387                           ; BSR set to: 0
  9388  0033E8  0E00               	movlw	0
  9389  0033EA  6F89               	movwf	(___fladd@a+3)& (0+255),b
  9390  0033EC  EF00  F01A         	goto	l6314
  9391  0033F0                     l6312:
  9392                           
  9393                           ; BSR set to: 0
  9394  0033F0  0E00               	movlw	0
  9395  0033F2  6F86               	movwf	___fladd@a& (0+255),b
  9396  0033F4  0E00               	movlw	0
  9397  0033F6  6F87               	movwf	(___fladd@a+1)& (0+255),b
  9398  0033F8  0E00               	movlw	0
  9399  0033FA  6F88               	movwf	(___fladd@a+2)& (0+255),b
  9400  0033FC  0E00               	movlw	0
  9401  0033FE  6F89               	movwf	(___fladd@a+3)& (0+255),b
  9402  003400                     l6314:
  9403                           
  9404                           ; BSR set to: 0
  9405  003400  5190               	movf	___fladd@bexp& (0+255),w,b
  9406  003402  5D8F               	subwf	___fladd@aexp& (0+255),w,b
  9407  003404  B0D8               	btfsc	status,0,c
  9408  003406  EF07  F01A         	goto	u6141
  9409  00340A  EF09  F01A         	goto	u6140
  9410  00340E                     u6141:
  9411  00340E  EF30  F01A         	goto	l6350
  9412  003412                     u6140:
  9413  003412                     
  9414                           ; BSR set to: 0
  9415  003412  AD8E               	btfss	___fladd@signs& (0+255),6,b
  9416  003414  EF0E  F01A         	goto	u6151
  9417  003418  EF10  F01A         	goto	u6150
  9418  00341C                     u6151:
  9419  00341C  EF12  F01A         	goto	l6320
  9420  003420                     u6150:
  9421  003420                     
  9422                           ; BSR set to: 0
  9423  003420  0E80               	movlw	128
  9424  003422  1B8E               	xorwf	___fladd@signs& (0+255),f,b
  9425  003424                     l6320:
  9426                           
  9427                           ; BSR set to: 0
  9428  003424  C090  F091         	movff	___fladd@bexp,___fladd@grs
  9429  003428                     
  9430                           ; BSR set to: 0
  9431  003428  C08F  F090         	movff	___fladd@aexp,___fladd@bexp
  9432  00342C                     
  9433                           ; BSR set to: 0
  9434  00342C  C091  F08F         	movff	___fladd@grs,___fladd@aexp
  9435  003430                     
  9436                           ; BSR set to: 0
  9437  003430  C082  F091         	movff	___fladd@b,___fladd@grs
  9438  003434                     
  9439                           ; BSR set to: 0
  9440  003434  C086  F082         	movff	___fladd@a,___fladd@b
  9441  003438                     
  9442                           ; BSR set to: 0
  9443  003438  C091  F086         	movff	___fladd@grs,___fladd@a
  9444  00343C                     
  9445                           ; BSR set to: 0
  9446  00343C  C083  F091         	movff	___fladd@b+1,___fladd@grs
  9447  003440                     
  9448                           ; BSR set to: 0
  9449  003440  C087  F083         	movff	___fladd@a+1,___fladd@b+1
  9450  003444                     
  9451                           ; BSR set to: 0
  9452  003444  C091  F087         	movff	___fladd@grs,___fladd@a+1
  9453  003448                     
  9454                           ; BSR set to: 0
  9455  003448  C084  F091         	movff	___fladd@b+2,___fladd@grs
  9456  00344C                     
  9457                           ; BSR set to: 0
  9458  00344C  C088  F084         	movff	___fladd@a+2,___fladd@b+2
  9459  003450                     
  9460                           ; BSR set to: 0
  9461  003450  C091  F088         	movff	___fladd@grs,___fladd@a+2
  9462  003454                     
  9463                           ; BSR set to: 0
  9464  003454  C085  F091         	movff	___fladd@b+3,___fladd@grs
  9465  003458                     
  9466                           ; BSR set to: 0
  9467  003458  C089  F085         	movff	___fladd@a+3,___fladd@b+3
  9468  00345C                     
  9469                           ; BSR set to: 0
  9470  00345C  C091  F089         	movff	___fladd@grs,___fladd@a+3
  9471  003460                     l6350:
  9472                           
  9473                           ; BSR set to: 0
  9474  003460  0E00               	movlw	0
  9475  003462  6F91               	movwf	___fladd@grs& (0+255),b
  9476  003464                     
  9477                           ; BSR set to: 0
  9478  003464  5190               	movf	___fladd@bexp& (0+255),w,b
  9479  003466  C08F  F08A         	movff	___fladd@aexp,??___fladd
  9480  00346A  6B8B               	clrf	(??___fladd+1)& (0+255),b
  9481  00346C  5F8A               	subwf	??___fladd& (0+255),f,b
  9482  00346E  0E00               	movlw	0
  9483  003470  5B8B               	subwfb	(??___fladd+1)& (0+255),f,b
  9484  003472  BF8B               	btfsc	(??___fladd+1)& (0+255),7,b
  9485  003474  EF45  F01A         	goto	u6161
  9486  003478  518B               	movf	(??___fladd+1)& (0+255),w,b
  9487  00347A  E109               	bnz	u6160
  9488  00347C  0E1A               	movlw	26
  9489  00347E  5D8A               	subwf	??___fladd& (0+255),w,b
  9490  003480  A0D8               	btfss	status,0,c
  9491  003482  EF45  F01A         	goto	u6161
  9492  003486  EF47  F01A         	goto	u6160
  9493  00348A                     u6161:
  9494  00348A  EF7E  F01A         	goto	l841
  9495  00348E                     u6160:
  9496  00348E                     
  9497                           ; BSR set to: 0
  9498  00348E  5182               	movf	___fladd@b& (0+255),w,b
  9499  003490  1183               	iorwf	(___fladd@b+1)& (0+255),w,b
  9500  003492  1184               	iorwf	(___fladd@b+2)& (0+255),w,b
  9501  003494  1185               	iorwf	(___fladd@b+3)& (0+255),w,b
  9502  003496  A4D8               	btfss	status,2,c
  9503  003498  EF50  F01A         	goto	u6171
  9504  00349C  EF53  F01A         	goto	u6170
  9505  0034A0                     u6171:
  9506  0034A0  0E01               	movlw	1
  9507  0034A2  EF54  F01A         	goto	u6180
  9508  0034A6                     u6170:
  9509  0034A6  0E00               	movlw	0
  9510  0034A8                     u6180:
  9511  0034A8  6F91               	movwf	___fladd@grs& (0+255),b
  9512  0034AA                     
  9513                           ; BSR set to: 0
  9514  0034AA  0E00               	movlw	0
  9515  0034AC  6F82               	movwf	___fladd@b& (0+255),b
  9516  0034AE  0E00               	movlw	0
  9517  0034B0  6F83               	movwf	(___fladd@b+1)& (0+255),b
  9518  0034B2  0E00               	movlw	0
  9519  0034B4  6F84               	movwf	(___fladd@b+2)& (0+255),b
  9520  0034B6  0E00               	movlw	0
  9521  0034B8  6F85               	movwf	(___fladd@b+3)& (0+255),b
  9522  0034BA                     
  9523                           ; BSR set to: 0
  9524  0034BA  C08F  F090         	movff	___fladd@aexp,___fladd@bexp
  9525  0034BE  EF87  F01A         	goto	l840
  9526  0034C2                     l842:
  9527                           
  9528                           ; BSR set to: 0
  9529  0034C2  A191               	btfss	___fladd@grs& (0+255),0,b
  9530  0034C4  EF66  F01A         	goto	u6191
  9531  0034C8  EF68  F01A         	goto	u6190
  9532  0034CC                     u6191:
  9533  0034CC  EF6E  F01A         	goto	l6362
  9534  0034D0                     u6190:
  9535  0034D0                     
  9536                           ; BSR set to: 0
  9537  0034D0  90D8               	bcf	status,0,c
  9538  0034D2  3191               	rrcf	___fladd@grs& (0+255),w,b
  9539  0034D4  0901               	iorlw	1
  9540  0034D6  6F91               	movwf	___fladd@grs& (0+255),b
  9541  0034D8  EF70  F01A         	goto	l6364
  9542  0034DC                     l6362:
  9543                           
  9544                           ; BSR set to: 0
  9545  0034DC  90D8               	bcf	status,0,c
  9546  0034DE  3391               	rrcf	___fladd@grs& (0+255),f,b
  9547  0034E0                     l6364:
  9548                           
  9549                           ; BSR set to: 0
  9550  0034E0  A182               	btfss	___fladd@b& (0+255),0,b
  9551  0034E2  EF75  F01A         	goto	u6201
  9552  0034E6  EF77  F01A         	goto	u6200
  9553  0034EA                     u6201:
  9554  0034EA  EF78  F01A         	goto	l6368
  9555  0034EE                     u6200:
  9556  0034EE                     
  9557                           ; BSR set to: 0
  9558  0034EE  8F91               	bsf	___fladd@grs& (0+255),7,b
  9559  0034F0                     l6368:
  9560                           
  9561                           ; BSR set to: 0
  9562  0034F0  3585               	rlcf	(___fladd@b+3)& (0+255),w,b
  9563  0034F2  3385               	rrcf	(___fladd@b+3)& (0+255),f,b
  9564  0034F4  3384               	rrcf	(___fladd@b+2)& (0+255),f,b
  9565  0034F6  3383               	rrcf	(___fladd@b+1)& (0+255),f,b
  9566  0034F8  3382               	rrcf	___fladd@b& (0+255),f,b
  9567  0034FA                     
  9568                           ; BSR set to: 0
  9569  0034FA  2B90               	incf	___fladd@bexp& (0+255),f,b
  9570  0034FC                     l841:
  9571                           
  9572                           ; BSR set to: 0
  9573  0034FC  518F               	movf	___fladd@aexp& (0+255),w,b
  9574  0034FE  5D90               	subwf	___fladd@bexp& (0+255),w,b
  9575  003500  A0D8               	btfss	status,0,c
  9576  003502  EF85  F01A         	goto	u6211
  9577  003506  EF87  F01A         	goto	u6210
  9578  00350A                     u6211:
  9579  00350A  EF61  F01A         	goto	l842
  9580  00350E                     u6210:
  9581  00350E                     l840:
  9582                           
  9583                           ; BSR set to: 0
  9584  00350E  BD8E               	btfsc	___fladd@signs& (0+255),6,b
  9585  003510  EF8C  F01A         	goto	u6221
  9586  003514  EF8E  F01A         	goto	u6220
  9587  003518                     u6221:
  9588  003518  EFCE  F01A         	goto	l6396
  9589  00351C                     u6220:
  9590  00351C                     
  9591                           ; BSR set to: 0
  9592  00351C  5190               	movf	___fladd@bexp& (0+255),w,b
  9593  00351E  A4D8               	btfss	status,2,c
  9594  003520  EF94  F01A         	goto	u6231
  9595  003524  EF96  F01A         	goto	u6230
  9596  003528                     u6231:
  9597  003528  EFA0  F01A         	goto	l6378
  9598  00352C                     u6230:
  9599  00352C                     
  9600                           ; BSR set to: 0
  9601  00352C  0E00               	movlw	0
  9602  00352E  6F82               	movwf	?___fladd& (0+255),b
  9603  003530  0E00               	movlw	0
  9604  003532  6F83               	movwf	(?___fladd+1)& (0+255),b
  9605  003534  0E00               	movlw	0
  9606  003536  6F84               	movwf	(?___fladd+2)& (0+255),b
  9607  003538  0E00               	movlw	0
  9608  00353A  6F85               	movwf	(?___fladd+3)& (0+255),b
  9609  00353C  EFEF  F01B         	goto	l849
  9610  003540                     l6378:
  9611                           
  9612                           ; BSR set to: 0
  9613  003540  5186               	movf	___fladd@a& (0+255),w,b
  9614  003542  2782               	addwf	___fladd@b& (0+255),f,b
  9615  003544  5187               	movf	(___fladd@a+1)& (0+255),w,b
  9616  003546  2383               	addwfc	(___fladd@b+1)& (0+255),f,b
  9617  003548  5188               	movf	(___fladd@a+2)& (0+255),w,b
  9618  00354A  2384               	addwfc	(___fladd@b+2)& (0+255),f,b
  9619  00354C  5189               	movf	(___fladd@a+3)& (0+255),w,b
  9620  00354E  2385               	addwfc	(___fladd@b+3)& (0+255),f,b
  9621  003550                     
  9622                           ; BSR set to: 0
  9623  003550  A185               	btfss	(___fladd@b+3)& (0+255),0,b
  9624  003552  EFAD  F01A         	goto	u6241
  9625  003556  EFAF  F01A         	goto	u6240
  9626  00355A                     u6241:
  9627  00355A  EF5B  F01B         	goto	l6432
  9628  00355E                     u6240:
  9629  00355E                     
  9630                           ; BSR set to: 0
  9631  00355E  A191               	btfss	___fladd@grs& (0+255),0,b
  9632  003560  EFB4  F01A         	goto	u6251
  9633  003564  EFB6  F01A         	goto	u6250
  9634  003568                     u6251:
  9635  003568  EFBC  F01A         	goto	l6386
  9636  00356C                     u6250:
  9637  00356C                     
  9638                           ; BSR set to: 0
  9639  00356C  90D8               	bcf	status,0,c
  9640  00356E  3191               	rrcf	___fladd@grs& (0+255),w,b
  9641  003570  0901               	iorlw	1
  9642  003572  6F91               	movwf	___fladd@grs& (0+255),b
  9643  003574  EFBE  F01A         	goto	l6388
  9644  003578                     l6386:
  9645                           
  9646                           ; BSR set to: 0
  9647  003578  90D8               	bcf	status,0,c
  9648  00357A  3391               	rrcf	___fladd@grs& (0+255),f,b
  9649  00357C                     l6388:
  9650                           
  9651                           ; BSR set to: 0
  9652  00357C  A182               	btfss	___fladd@b& (0+255),0,b
  9653  00357E  EFC3  F01A         	goto	u6261
  9654  003582  EFC5  F01A         	goto	u6260
  9655  003586                     u6261:
  9656  003586  EFC6  F01A         	goto	l6392
  9657  00358A                     u6260:
  9658  00358A                     
  9659                           ; BSR set to: 0
  9660  00358A  8F91               	bsf	___fladd@grs& (0+255),7,b
  9661  00358C                     l6392:
  9662                           
  9663                           ; BSR set to: 0
  9664  00358C  3585               	rlcf	(___fladd@b+3)& (0+255),w,b
  9665  00358E  3385               	rrcf	(___fladd@b+3)& (0+255),f,b
  9666  003590  3384               	rrcf	(___fladd@b+2)& (0+255),f,b
  9667  003592  3383               	rrcf	(___fladd@b+1)& (0+255),f,b
  9668  003594  3382               	rrcf	___fladd@b& (0+255),f,b
  9669  003596                     
  9670                           ; BSR set to: 0
  9671  003596  2B90               	incf	___fladd@bexp& (0+255),f,b
  9672  003598  EF5B  F01B         	goto	l6432
  9673  00359C                     l6396:
  9674                           
  9675                           ; BSR set to: 0
  9676  00359C  5186               	movf	___fladd@a& (0+255),w,b
  9677  00359E  5D82               	subwf	___fladd@b& (0+255),w,b
  9678  0035A0  5187               	movf	(___fladd@a+1)& (0+255),w,b
  9679  0035A2  5983               	subwfb	(___fladd@b+1)& (0+255),w,b
  9680  0035A4  5188               	movf	(___fladd@a+2)& (0+255),w,b
  9681  0035A6  5984               	subwfb	(___fladd@b+2)& (0+255),w,b
  9682  0035A8  5185               	movf	(___fladd@b+3)& (0+255),w,b
  9683  0035AA  0A80               	xorlw	128
  9684  0035AC  6F8A               	movwf	??___fladd& (0+255),b
  9685  0035AE  5189               	movf	(___fladd@a+3)& (0+255),w,b
  9686  0035B0  0A80               	xorlw	128
  9687  0035B2  598A               	subwfb	??___fladd& (0+255),w,b
  9688  0035B4  B0D8               	btfsc	status,0,c
  9689  0035B6  EFDF  F01A         	goto	u6271
  9690  0035BA  EFE1  F01A         	goto	u6270
  9691  0035BE                     u6271:
  9692  0035BE  EF0C  F01B         	goto	l6406
  9693  0035C2                     u6270:
  9694  0035C2                     
  9695                           ; BSR set to: 0
  9696  0035C2  5182               	movf	___fladd@b& (0+255),w,b
  9697  0035C4  5D86               	subwf	___fladd@a& (0+255),w,b
  9698  0035C6  6F8A               	movwf	??___fladd& (0+255),b
  9699  0035C8  5183               	movf	(___fladd@b+1)& (0+255),w,b
  9700  0035CA  5987               	subwfb	(___fladd@a+1)& (0+255),w,b
  9701  0035CC  6F8B               	movwf	(??___fladd+1)& (0+255),b
  9702  0035CE  5184               	movf	(___fladd@b+2)& (0+255),w,b
  9703  0035D0  5988               	subwfb	(___fladd@a+2)& (0+255),w,b
  9704  0035D2  6F8C               	movwf	(??___fladd+2)& (0+255),b
  9705  0035D4  5185               	movf	(___fladd@b+3)& (0+255),w,b
  9706  0035D6  5989               	subwfb	(___fladd@a+3)& (0+255),w,b
  9707  0035D8  6F8D               	movwf	(??___fladd+3)& (0+255),b
  9708  0035DA  0EFF               	movlw	255
  9709  0035DC  258A               	addwf	??___fladd& (0+255),w,b
  9710  0035DE  6F82               	movwf	___fladd@b& (0+255),b
  9711  0035E0  0EFF               	movlw	255
  9712  0035E2  218B               	addwfc	(??___fladd+1)& (0+255),w,b
  9713  0035E4  6F83               	movwf	(___fladd@b+1)& (0+255),b
  9714  0035E6  0EFF               	movlw	255
  9715  0035E8  218C               	addwfc	(??___fladd+2)& (0+255),w,b
  9716  0035EA  6F84               	movwf	(___fladd@b+2)& (0+255),b
  9717  0035EC  0EFF               	movlw	255
  9718  0035EE  218D               	addwfc	(??___fladd+3)& (0+255),w,b
  9719  0035F0  6F85               	movwf	(___fladd@b+3)& (0+255),b
  9720  0035F2  0E80               	movlw	128
  9721  0035F4  1B8E               	xorwf	___fladd@signs& (0+255),f,b
  9722  0035F6                     
  9723                           ; BSR set to: 0
  9724  0035F6  6D91               	negf	___fladd@grs& (0+255),b
  9725  0035F8                     
  9726                           ; BSR set to: 0
  9727  0035F8  5191               	movf	___fladd@grs& (0+255),w,b
  9728  0035FA  A4D8               	btfss	status,2,c
  9729  0035FC  EF02  F01B         	goto	u6281
  9730  003600  EF04  F01B         	goto	u6280
  9731  003604                     u6281:
  9732  003604  EF14  F01B         	goto	l857
  9733  003608                     u6280:
  9734  003608                     
  9735                           ; BSR set to: 0
  9736  003608  0E01               	movlw	1
  9737  00360A  2782               	addwf	___fladd@b& (0+255),f,b
  9738  00360C  0E00               	movlw	0
  9739  00360E  2383               	addwfc	(___fladd@b+1)& (0+255),f,b
  9740  003610  2384               	addwfc	(___fladd@b+2)& (0+255),f,b
  9741  003612  2385               	addwfc	(___fladd@b+3)& (0+255),f,b
  9742  003614  EF14  F01B         	goto	l857
  9743  003618                     l6406:
  9744                           
  9745                           ; BSR set to: 0
  9746  003618  5186               	movf	___fladd@a& (0+255),w,b
  9747  00361A  5F82               	subwf	___fladd@b& (0+255),f,b
  9748  00361C  5187               	movf	(___fladd@a+1)& (0+255),w,b
  9749  00361E  5B83               	subwfb	(___fladd@b+1)& (0+255),f,b
  9750  003620  5188               	movf	(___fladd@a+2)& (0+255),w,b
  9751  003622  5B84               	subwfb	(___fladd@b+2)& (0+255),f,b
  9752  003624  5189               	movf	(___fladd@a+3)& (0+255),w,b
  9753  003626  5B85               	subwfb	(___fladd@b+3)& (0+255),f,b
  9754  003628                     l857:
  9755                           
  9756                           ; BSR set to: 0
  9757  003628  5182               	movf	___fladd@b& (0+255),w,b
  9758  00362A  1183               	iorwf	(___fladd@b+1)& (0+255),w,b
  9759  00362C  1184               	iorwf	(___fladd@b+2)& (0+255),w,b
  9760  00362E  1185               	iorwf	(___fladd@b+3)& (0+255),w,b
  9761  003630  A4D8               	btfss	status,2,c
  9762  003632  EF1D  F01B         	goto	u6291
  9763  003636  EF1F  F01B         	goto	u6290
  9764  00363A                     u6291:
  9765  00363A  EF54  F01B         	goto	l6430
  9766  00363E                     u6290:
  9767  00363E                     
  9768                           ; BSR set to: 0
  9769  00363E  5191               	movf	___fladd@grs& (0+255),w,b
  9770  003640  A4D8               	btfss	status,2,c
  9771  003642  EF25  F01B         	goto	u6301
  9772  003646  EF27  F01B         	goto	u6300
  9773  00364A                     u6301:
  9774  00364A  EF54  F01B         	goto	l6430
  9775  00364E                     u6300:
  9776  00364E                     
  9777                           ; BSR set to: 0
  9778  00364E  0E00               	movlw	0
  9779  003650  6F82               	movwf	?___fladd& (0+255),b
  9780  003652  0E00               	movlw	0
  9781  003654  6F83               	movwf	(?___fladd+1)& (0+255),b
  9782  003656  0E00               	movlw	0
  9783  003658  6F84               	movwf	(?___fladd+2)& (0+255),b
  9784  00365A  0E00               	movlw	0
  9785  00365C  6F85               	movwf	(?___fladd+3)& (0+255),b
  9786  00365E  EFEF  F01B         	goto	l849
  9787  003662                     l6414:
  9788                           
  9789                           ; BSR set to: 0
  9790  003662  90D8               	bcf	status,0,c
  9791  003664  3782               	rlcf	___fladd@b& (0+255),f,b
  9792  003666  3783               	rlcf	(___fladd@b+1)& (0+255),f,b
  9793  003668  3784               	rlcf	(___fladd@b+2)& (0+255),f,b
  9794  00366A  3785               	rlcf	(___fladd@b+3)& (0+255),f,b
  9795  00366C                     
  9796                           ; BSR set to: 0
  9797  00366C  AF91               	btfss	___fladd@grs& (0+255),7,b
  9798  00366E  EF3B  F01B         	goto	u6311
  9799  003672  EF3D  F01B         	goto	u6310
  9800  003676                     u6311:
  9801  003676  EF3E  F01B         	goto	l6420
  9802  00367A                     u6310:
  9803  00367A                     
  9804                           ; BSR set to: 0
  9805  00367A  8182               	bsf	___fladd@b& (0+255),0,b
  9806  00367C                     l6420:
  9807                           
  9808                           ; BSR set to: 0
  9809  00367C  A191               	btfss	___fladd@grs& (0+255),0,b
  9810  00367E  EF43  F01B         	goto	u6321
  9811  003682  EF45  F01B         	goto	u6320
  9812  003686                     u6321:
  9813  003686  EF49  F01B         	goto	l6424
  9814  00368A                     u6320:
  9815  00368A                     
  9816                           ; BSR set to: 0
  9817  00368A  80D8               	bsf	status,0,c
  9818  00368C  3791               	rlcf	___fladd@grs& (0+255),f,b
  9819  00368E  EF4B  F01B         	goto	l6426
  9820  003692                     l6424:
  9821                           
  9822                           ; BSR set to: 0
  9823  003692  90D8               	bcf	status,0,c
  9824  003694  3791               	rlcf	___fladd@grs& (0+255),f,b
  9825  003696                     l6426:
  9826                           
  9827                           ; BSR set to: 0
  9828  003696  5190               	movf	___fladd@bexp& (0+255),w,b
  9829  003698  B4D8               	btfsc	status,2,c
  9830  00369A  EF51  F01B         	goto	u6331
  9831  00369E  EF53  F01B         	goto	u6330
  9832  0036A2                     u6331:
  9833  0036A2  EF54  F01B         	goto	l6430
  9834  0036A6                     u6330:
  9835  0036A6                     
  9836                           ; BSR set to: 0
  9837  0036A6  0790               	decf	___fladd@bexp& (0+255),f,b
  9838  0036A8                     l6430:
  9839                           
  9840                           ; BSR set to: 0
  9841  0036A8  AF84               	btfss	(___fladd@b+2)& (0+255),7,b
  9842  0036AA  EF59  F01B         	goto	u6341
  9843  0036AE  EF5B  F01B         	goto	u6340
  9844  0036B2                     u6341:
  9845  0036B2  EF31  F01B         	goto	l6414
  9846  0036B6                     u6340:
  9847  0036B6                     l6432:
  9848                           
  9849                           ; BSR set to: 0
  9850  0036B6  0E00               	movlw	0
  9851  0036B8  6F8F               	movwf	___fladd@aexp& (0+255),b
  9852  0036BA                     
  9853                           ; BSR set to: 0
  9854  0036BA  AF91               	btfss	___fladd@grs& (0+255),7,b
  9855  0036BC  EF62  F01B         	goto	u6351
  9856  0036C0  EF64  F01B         	goto	u6350
  9857  0036C4                     u6351:
  9858  0036C4  EF7C  F01B         	goto	l866
  9859  0036C8                     u6350:
  9860  0036C8                     
  9861                           ; BSR set to: 0
  9862  0036C8  C091  F08A         	movff	___fladd@grs,??___fladd
  9863  0036CC  0E7F               	movlw	127
  9864  0036CE  178A               	andwf	??___fladd& (0+255),f,b
  9865  0036D0  B4D8               	btfsc	status,2,c
  9866  0036D2  EF6D  F01B         	goto	u6361
  9867  0036D6  EF6F  F01B         	goto	u6360
  9868  0036DA                     u6361:
  9869  0036DA  EF73  F01B         	goto	l867
  9870  0036DE                     u6360:
  9871  0036DE                     l6438:
  9872                           
  9873                           ; BSR set to: 0
  9874  0036DE  0E01               	movlw	1
  9875  0036E0  6F8F               	movwf	___fladd@aexp& (0+255),b
  9876  0036E2  EF7C  F01B         	goto	l866
  9877  0036E6                     l867:
  9878                           
  9879                           ; BSR set to: 0
  9880  0036E6  A182               	btfss	___fladd@b& (0+255),0,b
  9881  0036E8  EF78  F01B         	goto	u6371
  9882  0036EC  EF7A  F01B         	goto	u6370
  9883  0036F0                     u6371:
  9884  0036F0  EF7C  F01B         	goto	l866
  9885  0036F4                     u6370:
  9886  0036F4  EF6F  F01B         	goto	l6438
  9887  0036F8                     l866:
  9888                           
  9889                           ; BSR set to: 0
  9890  0036F8  518F               	movf	___fladd@aexp& (0+255),w,b
  9891  0036FA  B4D8               	btfsc	status,2,c
  9892  0036FC  EF82  F01B         	goto	u6381
  9893  003700  EF84  F01B         	goto	u6380
  9894  003704                     u6381:
  9895  003704  EFAF  F01B         	goto	l6450
  9896  003708                     u6380:
  9897  003708                     
  9898                           ; BSR set to: 0
  9899  003708  0E01               	movlw	1
  9900  00370A  2782               	addwf	___fladd@b& (0+255),f,b
  9901  00370C  0E00               	movlw	0
  9902  00370E  2383               	addwfc	(___fladd@b+1)& (0+255),f,b
  9903  003710  2384               	addwfc	(___fladd@b+2)& (0+255),f,b
  9904  003712  2385               	addwfc	(___fladd@b+3)& (0+255),f,b
  9905  003714                     
  9906                           ; BSR set to: 0
  9907  003714  A185               	btfss	(___fladd@b+3)& (0+255),0,b
  9908  003716  EF8F  F01B         	goto	u6391
  9909  00371A  EF91  F01B         	goto	u6390
  9910  00371E                     u6391:
  9911  00371E  EFAF  F01B         	goto	l6450
  9912  003722                     u6390:
  9913  003722                     
  9914                           ; BSR set to: 0
  9915  003722  C082  F08A         	movff	___fladd@b,??___fladd
  9916  003726  C083  F08B         	movff	___fladd@b+1,??___fladd+1
  9917  00372A  C084  F08C         	movff	___fladd@b+2,??___fladd+2
  9918  00372E  C085  F08D         	movff	___fladd@b+3,??___fladd+3
  9919  003732  358D               	rlcf	(??___fladd+3)& (0+255),w,b
  9920  003734  338D               	rrcf	(??___fladd+3)& (0+255),f,b
  9921  003736  338C               	rrcf	(??___fladd+2)& (0+255),f,b
  9922  003738  338B               	rrcf	(??___fladd+1)& (0+255),f,b
  9923  00373A  338A               	rrcf	??___fladd& (0+255),f,b
  9924  00373C  C08A  F082         	movff	??___fladd,___fladd@b
  9925  003740  C08B  F083         	movff	??___fladd+1,___fladd@b+1
  9926  003744  C08C  F084         	movff	??___fladd+2,___fladd@b+2
  9927  003748  C08D  F085         	movff	??___fladd+3,___fladd@b+3
  9928  00374C  2990               	incf	___fladd@bexp& (0+255),w,b
  9929  00374E  B4D8               	btfsc	status,2,c
  9930  003750  EFAC  F01B         	goto	u6401
  9931  003754  EFAE  F01B         	goto	u6400
  9932  003758                     u6401:
  9933  003758  EFAF  F01B         	goto	l6450
  9934  00375C                     u6400:
  9935  00375C                     
  9936                           ; BSR set to: 0
  9937  00375C  2B90               	incf	___fladd@bexp& (0+255),f,b
  9938  00375E                     l6450:
  9939                           
  9940                           ; BSR set to: 0
  9941  00375E  2990               	incf	___fladd@bexp& (0+255),w,b
  9942  003760  B4D8               	btfsc	status,2,c
  9943  003762  EFB5  F01B         	goto	u6411
  9944  003766  EFB7  F01B         	goto	u6410
  9945  00376A                     u6411:
  9946  00376A  EFBF  F01B         	goto	l6454
  9947  00376E                     u6410:
  9948  00376E                     
  9949                           ; BSR set to: 0
  9950  00376E  5190               	movf	___fladd@bexp& (0+255),w,b
  9951  003770  A4D8               	btfss	status,2,c
  9952  003772  EFBD  F01B         	goto	u6421
  9953  003776  EFBF  F01B         	goto	u6420
  9954  00377A                     u6421:
  9955  00377A  EFD1  F01B         	goto	l6458
  9956  00377E                     u6420:
  9957  00377E                     l6454:
  9958                           
  9959                           ; BSR set to: 0
  9960  00377E  0E00               	movlw	0
  9961  003780  6F82               	movwf	___fladd@b& (0+255),b
  9962  003782  0E00               	movlw	0
  9963  003784  6F83               	movwf	(___fladd@b+1)& (0+255),b
  9964  003786  0E00               	movlw	0
  9965  003788  6F84               	movwf	(___fladd@b+2)& (0+255),b
  9966  00378A  0E00               	movlw	0
  9967  00378C  6F85               	movwf	(___fladd@b+3)& (0+255),b
  9968  00378E  5190               	movf	___fladd@bexp& (0+255),w,b
  9969  003790  A4D8               	btfss	status,2,c
  9970  003792  EFCD  F01B         	goto	u6431
  9971  003796  EFCF  F01B         	goto	u6430
  9972  00379A                     u6431:
  9973  00379A  EFD1  F01B         	goto	l6458
  9974  00379E                     u6430:
  9975  00379E                     
  9976                           ; BSR set to: 0
  9977  00379E  0E00               	movlw	0
  9978  0037A0  6F8E               	movwf	___fladd@signs& (0+255),b
  9979  0037A2                     l6458:
  9980                           
  9981                           ; BSR set to: 0
  9982  0037A2  A190               	btfss	___fladd@bexp& (0+255),0,b
  9983  0037A4  EFD6  F01B         	goto	u6441
  9984  0037A8  EFD8  F01B         	goto	u6440
  9985  0037AC                     u6441:
  9986  0037AC  EFDB  F01B         	goto	l6462
  9987  0037B0                     u6440:
  9988  0037B0                     
  9989                           ; BSR set to: 0
  9990  0037B0  8F84               	bsf	(___fladd@b+2)& (0+255),7,b
  9991  0037B2  EFDC  F01B         	goto	l6464
  9992  0037B6                     l6462:
  9993                           
  9994                           ; BSR set to: 0
  9995  0037B6  9F84               	bcf	(___fladd@b+2)& (0+255),7,b
  9996  0037B8                     l6464:
  9997                           
  9998                           ; BSR set to: 0
  9999  0037B8  90D8               	bcf	status,0,c
 10000  0037BA  3190               	rrcf	___fladd@bexp& (0+255),w,b
 10001  0037BC  6F85               	movwf	(___fladd@b+3)& (0+255),b
 10002  0037BE                     
 10003                           ; BSR set to: 0
 10004  0037BE  AF8E               	btfss	___fladd@signs& (0+255),7,b
 10005  0037C0  EFE4  F01B         	goto	u6451
 10006  0037C4  EFE6  F01B         	goto	u6450
 10007  0037C8                     u6451:
 10008  0037C8  EFE7  F01B         	goto	l6470
 10009  0037CC                     u6450:
 10010  0037CC                     
 10011                           ; BSR set to: 0
 10012  0037CC  8F85               	bsf	(___fladd@b+3)& (0+255),7,b
 10013  0037CE                     l6470:
 10014                           
 10015                           ; BSR set to: 0
 10016  0037CE  C082  F082         	movff	___fladd@b,?___fladd
 10017  0037D2  C083  F083         	movff	___fladd@b+1,?___fladd+1
 10018  0037D6  C084  F084         	movff	___fladd@b+2,?___fladd+2
 10019  0037DA  C085  F085         	movff	___fladd@b+3,?___fladd+3
 10020  0037DE                     l849:
 10021                           
 10022                           ; BSR set to: 0
 10023  0037DE  0012               	return		;funcret
 10024  0037E0                     __end_of___fladd:
 10025                           	callstack 0
 10026                           
 10027 ;; *************** function ___flneg *****************
 10028 ;; Defined at:
 10029 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;  f1              4   45[COMRAM] unsigned char 
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;		None
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  4   45[COMRAM] unsigned char 
 10036 ;; Registers used:
 10037 ;;		wreg, status,2, status,0
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10046 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10047 ;;Total ram usage:        4 bytes
 10048 ;; Hardware stack levels used: 1
 10049 ;; Hardware stack levels required when called: 3
 10050 ;; This function calls:
 10051 ;;		Nothing
 10052 ;; This function is called by:
 10053 ;;		_MPU6050_Read
 10054 ;;		_atan2f
 10055 ;;		_atanf
 10056 ;;		_efgtoa
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           	psect	text31
 10061  005C42                     __ptext31:
 10062                           	callstack 0
 10063  005C42                     ___flneg:
 10064                           	callstack 22
 10065  005C42  502E               	movf	___flneg@f1^0,w,c
 10066  005C44  102F               	iorwf	(___flneg@f1+1)^0,w,c
 10067  005C46  1030               	iorwf	(___flneg@f1+2)^0,w,c
 10068  005C48  1031               	iorwf	(___flneg@f1+3)^0,w,c
 10069  005C4A  B4D8               	btfsc	status,2,c
 10070  005C4C  EF2A  F02E         	goto	u7121
 10071  005C50  EF2C  F02E         	goto	u7120
 10072  005C54                     u7121:
 10073  005C54  EF34  F02E         	goto	l6898
 10074  005C58                     u7120:
 10075  005C58  0E00               	movlw	0
 10076  005C5A  1A2E               	xorwf	___flneg@f1^0,f,c
 10077  005C5C  0E00               	movlw	0
 10078  005C5E  1A2F               	xorwf	(___flneg@f1+1)^0,f,c
 10079  005C60  0E00               	movlw	0
 10080  005C62  1A30               	xorwf	(___flneg@f1+2)^0,f,c
 10081  005C64  0E80               	movlw	128
 10082  005C66  1A31               	xorwf	(___flneg@f1+3)^0,f,c
 10083  005C68                     l6898:
 10084  005C68  C02E  F02E         	movff	___flneg@f1,?___flneg
 10085  005C6C  C02F  F02F         	movff	___flneg@f1+1,?___flneg+1
 10086  005C70  C030  F030         	movff	___flneg@f1+2,?___flneg+2
 10087  005C74  C031  F031         	movff	___flneg@f1+3,?___flneg+3
 10088  005C78  0012               	return		;funcret
 10089  005C7A                     __end_of___flneg:
 10090                           	callstack 0
 10091                           
 10092 ;; *************** function ___flmul *****************
 10093 ;; Defined at:
 10094 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;  b               4   13[BANK0 ] unsigned char 
 10097 ;;  a               4   17[BANK0 ] unsigned char 
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;  prod            4   28[BANK0 ] struct .
 10100 ;;  grs             4   23[BANK0 ] unsigned long 
 10101 ;;  temp            2   32[BANK0 ] struct .
 10102 ;;  bexp            1   27[BANK0 ] unsigned char 
 10103 ;;  aexp            1   22[BANK0 ] unsigned char 
 10104 ;;  sign            1   21[BANK0 ] unsigned char 
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  4   13[BANK0 ] unsigned char 
 10107 ;; Registers used:
 10108 ;;		wreg, status,2, status,0, prodl, prodh
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10114 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;      Totals:         4      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;Total ram usage:       25 bytes
 10119 ;; Hardware stack levels used: 1
 10120 ;; Hardware stack levels required when called: 3
 10121 ;; This function calls:
 10122 ;;		Nothing
 10123 ;; This function is called by:
 10124 ;;		_MPU6050_Read
 10125 ;;		_atanf
 10126 ;;		_efgtoa
 10127 ;;		_TMR0handler
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           	psect	text32
 10132  003C7C                     __ptext32:
 10133                           	callstack 0
 10134  003C7C                     ___flmul:
 10135                           	callstack 22
 10136  003C7C  0100               	movlb	0	; () banked
 10137  003C7E  5170               	movf	(___flmul@b+3)& (0+255),w,b
 10138  003C80  0B80               	andlw	128
 10139  003C82  6F75               	movwf	___flmul@sign& (0+255),b
 10140  003C84  5170               	movf	(___flmul@b+3)& (0+255),w,b
 10141  003C86  2570               	addwf	(___flmul@b+3)& (0+255),w,b
 10142  003C88  6F7B               	movwf	___flmul@bexp& (0+255),b
 10143  003C8A                     
 10144                           ; BSR set to: 0
 10145  003C8A  AF6F               	btfss	(___flmul@b+2)& (0+255),7,b
 10146  003C8C  EF4A  F01E         	goto	u6731
 10147  003C90  EF4C  F01E         	goto	u6730
 10148  003C94                     u6731:
 10149  003C94  EF4D  F01E         	goto	l6646
 10150  003C98                     u6730:
 10151  003C98                     
 10152                           ; BSR set to: 0
 10153  003C98  817B               	bsf	___flmul@bexp& (0+255),0,b
 10154  003C9A                     l6646:
 10155                           
 10156                           ; BSR set to: 0
 10157  003C9A  517B               	movf	___flmul@bexp& (0+255),w,b
 10158  003C9C  B4D8               	btfsc	status,2,c
 10159  003C9E  EF53  F01E         	goto	u6741
 10160  003CA2  EF55  F01E         	goto	u6740
 10161  003CA6                     u6741:
 10162  003CA6  EF68  F01E         	goto	l6654
 10163  003CAA                     u6740:
 10164  003CAA                     
 10165                           ; BSR set to: 0
 10166  003CAA  297B               	incf	___flmul@bexp& (0+255),w,b
 10167  003CAC  A4D8               	btfss	status,2,c
 10168  003CAE  EF5B  F01E         	goto	u6751
 10169  003CB2  EF5D  F01E         	goto	u6750
 10170  003CB6                     u6751:
 10171  003CB6  EF65  F01E         	goto	l6652
 10172  003CBA                     u6750:
 10173  003CBA                     
 10174                           ; BSR set to: 0
 10175  003CBA  0E00               	movlw	0
 10176  003CBC  6F6D               	movwf	___flmul@b& (0+255),b
 10177  003CBE  0E00               	movlw	0
 10178  003CC0  6F6E               	movwf	(___flmul@b+1)& (0+255),b
 10179  003CC2  0E00               	movlw	0
 10180  003CC4  6F6F               	movwf	(___flmul@b+2)& (0+255),b
 10181  003CC6  0E00               	movlw	0
 10182  003CC8  6F70               	movwf	(___flmul@b+3)& (0+255),b
 10183  003CCA                     l6652:
 10184                           
 10185                           ; BSR set to: 0
 10186  003CCA  8F6F               	bsf	(___flmul@b+2)& (0+255),7,b
 10187  003CCC  EF70  F01E         	goto	l6656
 10188  003CD0                     l6654:
 10189                           
 10190                           ; BSR set to: 0
 10191  003CD0  0E00               	movlw	0
 10192  003CD2  6F6D               	movwf	___flmul@b& (0+255),b
 10193  003CD4  0E00               	movlw	0
 10194  003CD6  6F6E               	movwf	(___flmul@b+1)& (0+255),b
 10195  003CD8  0E00               	movlw	0
 10196  003CDA  6F6F               	movwf	(___flmul@b+2)& (0+255),b
 10197  003CDC  0E00               	movlw	0
 10198  003CDE  6F70               	movwf	(___flmul@b+3)& (0+255),b
 10199  003CE0                     l6656:
 10200                           
 10201                           ; BSR set to: 0
 10202  003CE0  5174               	movf	(___flmul@a+3)& (0+255),w,b
 10203  003CE2  0B80               	andlw	128
 10204  003CE4  1B75               	xorwf	___flmul@sign& (0+255),f,b
 10205  003CE6                     
 10206                           ; BSR set to: 0
 10207  003CE6  5174               	movf	(___flmul@a+3)& (0+255),w,b
 10208  003CE8  2574               	addwf	(___flmul@a+3)& (0+255),w,b
 10209  003CEA  6F76               	movwf	___flmul@aexp& (0+255),b
 10210  003CEC                     
 10211                           ; BSR set to: 0
 10212  003CEC  AF73               	btfss	(___flmul@a+2)& (0+255),7,b
 10213  003CEE  EF7B  F01E         	goto	u6761
 10214  003CF2  EF7D  F01E         	goto	u6760
 10215  003CF6                     u6761:
 10216  003CF6  EF7E  F01E         	goto	l6664
 10217  003CFA                     u6760:
 10218  003CFA                     
 10219                           ; BSR set to: 0
 10220  003CFA  8176               	bsf	___flmul@aexp& (0+255),0,b
 10221  003CFC                     l6664:
 10222                           
 10223                           ; BSR set to: 0
 10224  003CFC  5176               	movf	___flmul@aexp& (0+255),w,b
 10225  003CFE  B4D8               	btfsc	status,2,c
 10226  003D00  EF84  F01E         	goto	u6771
 10227  003D04  EF86  F01E         	goto	u6770
 10228  003D08                     u6771:
 10229  003D08  EF99  F01E         	goto	l6672
 10230  003D0C                     u6770:
 10231  003D0C                     
 10232                           ; BSR set to: 0
 10233  003D0C  2976               	incf	___flmul@aexp& (0+255),w,b
 10234  003D0E  A4D8               	btfss	status,2,c
 10235  003D10  EF8C  F01E         	goto	u6781
 10236  003D14  EF8E  F01E         	goto	u6780
 10237  003D18                     u6781:
 10238  003D18  EF96  F01E         	goto	l6670
 10239  003D1C                     u6780:
 10240  003D1C                     
 10241                           ; BSR set to: 0
 10242  003D1C  0E00               	movlw	0
 10243  003D1E  6F71               	movwf	___flmul@a& (0+255),b
 10244  003D20  0E00               	movlw	0
 10245  003D22  6F72               	movwf	(___flmul@a+1)& (0+255),b
 10246  003D24  0E00               	movlw	0
 10247  003D26  6F73               	movwf	(___flmul@a+2)& (0+255),b
 10248  003D28  0E00               	movlw	0
 10249  003D2A  6F74               	movwf	(___flmul@a+3)& (0+255),b
 10250  003D2C                     l6670:
 10251                           
 10252                           ; BSR set to: 0
 10253  003D2C  8F73               	bsf	(___flmul@a+2)& (0+255),7,b
 10254  003D2E  EFA1  F01E         	goto	l926
 10255  003D32                     l6672:
 10256                           
 10257                           ; BSR set to: 0
 10258  003D32  0E00               	movlw	0
 10259  003D34  6F71               	movwf	___flmul@a& (0+255),b
 10260  003D36  0E00               	movlw	0
 10261  003D38  6F72               	movwf	(___flmul@a+1)& (0+255),b
 10262  003D3A  0E00               	movlw	0
 10263  003D3C  6F73               	movwf	(___flmul@a+2)& (0+255),b
 10264  003D3E  0E00               	movlw	0
 10265  003D40  6F74               	movwf	(___flmul@a+3)& (0+255),b
 10266  003D42                     l926:
 10267                           
 10268                           ; BSR set to: 0
 10269  003D42  5176               	movf	___flmul@aexp& (0+255),w,b
 10270  003D44  B4D8               	btfsc	status,2,c
 10271  003D46  EFA7  F01E         	goto	u6791
 10272  003D4A  EFA9  F01E         	goto	u6790
 10273  003D4E                     u6791:
 10274  003D4E  EFB1  F01E         	goto	l6676
 10275  003D52                     u6790:
 10276  003D52                     
 10277                           ; BSR set to: 0
 10278  003D52  517B               	movf	___flmul@bexp& (0+255),w,b
 10279  003D54  A4D8               	btfss	status,2,c
 10280  003D56  EFAF  F01E         	goto	u6801
 10281  003D5A  EFB1  F01E         	goto	u6800
 10282  003D5E                     u6801:
 10283  003D5E  EFBB  F01E         	goto	l6680
 10284  003D62                     u6800:
 10285  003D62                     l6676:
 10286                           
 10287                           ; BSR set to: 0
 10288  003D62  0E00               	movlw	0
 10289  003D64  6F6D               	movwf	?___flmul& (0+255),b
 10290  003D66  0E00               	movlw	0
 10291  003D68  6F6E               	movwf	(?___flmul+1)& (0+255),b
 10292  003D6A  0E00               	movlw	0
 10293  003D6C  6F6F               	movwf	(?___flmul+2)& (0+255),b
 10294  003D6E  0E00               	movlw	0
 10295  003D70  6F70               	movwf	(?___flmul+3)& (0+255),b
 10296  003D72  EF53  F020         	goto	l930
 10297  003D76                     l6680:
 10298                           
 10299                           ; BSR set to: 0
 10300  003D76  5173               	movf	(___flmul@a+2)& (0+255),w,b
 10301  003D78  036D               	mulwf	___flmul@b& (0+255),b
 10302  003D7A  CFF3 F080          	movff	prodl,___flmul@temp
 10303  003D7E  CFF4 F081          	movff	prodh,___flmul@temp+1
 10304  003D82                     
 10305                           ; BSR set to: 0
 10306  003D82  5180               	movf	___flmul@temp& (0+255),w,b
 10307  003D84  6F77               	movwf	___flmul@grs& (0+255),b
 10308  003D86  6B78               	clrf	(___flmul@grs+1)& (0+255),b
 10309  003D88  6B79               	clrf	(___flmul@grs+2)& (0+255),b
 10310  003D8A  6B7A               	clrf	(___flmul@grs+3)& (0+255),b
 10311  003D8C                     
 10312                           ; BSR set to: 0
 10313  003D8C  5181               	movf	(___flmul@temp+1)& (0+255),w,b
 10314  003D8E  6F7C               	movwf	___flmul@prod& (0+255),b
 10315  003D90  6B7D               	clrf	(___flmul@prod+1)& (0+255),b
 10316  003D92  6B7E               	clrf	(___flmul@prod+2)& (0+255),b
 10317  003D94  6B7F               	clrf	(___flmul@prod+3)& (0+255),b
 10318  003D96  5172               	movf	(___flmul@a+1)& (0+255),w,b
 10319  003D98  036E               	mulwf	(___flmul@b+1)& (0+255),b
 10320  003D9A  CFF3 F080          	movff	prodl,___flmul@temp
 10321  003D9E  CFF4 F081          	movff	prodh,___flmul@temp+1
 10322  003DA2                     
 10323                           ; BSR set to: 0
 10324  003DA2  5180               	movf	___flmul@temp& (0+255),w,b
 10325  003DA4  2777               	addwf	___flmul@grs& (0+255),f,b
 10326  003DA6  0E00               	movlw	0
 10327  003DA8  2378               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10328  003DAA  2379               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10329  003DAC  237A               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10330  003DAE                     
 10331                           ; BSR set to: 0
 10332  003DAE  5181               	movf	(___flmul@temp+1)& (0+255),w,b
 10333  003DB0  277C               	addwf	___flmul@prod& (0+255),f,b
 10334  003DB2  0E00               	movlw	0
 10335  003DB4  237D               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10336  003DB6  237E               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10337  003DB8  237F               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10338  003DBA  5171               	movf	___flmul@a& (0+255),w,b
 10339  003DBC  036F               	mulwf	(___flmul@b+2)& (0+255),b
 10340  003DBE  CFF3 F080          	movff	prodl,___flmul@temp
 10341  003DC2  CFF4 F081          	movff	prodh,___flmul@temp+1
 10342  003DC6                     
 10343                           ; BSR set to: 0
 10344  003DC6  5180               	movf	___flmul@temp& (0+255),w,b
 10345  003DC8  2777               	addwf	___flmul@grs& (0+255),f,b
 10346  003DCA  0E00               	movlw	0
 10347  003DCC  2378               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10348  003DCE  2379               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10349  003DD0  237A               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10350  003DD2                     
 10351                           ; BSR set to: 0
 10352  003DD2  5181               	movf	(___flmul@temp+1)& (0+255),w,b
 10353  003DD4  277C               	addwf	___flmul@prod& (0+255),f,b
 10354  003DD6  0E00               	movlw	0
 10355  003DD8  237D               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10356  003DDA  237E               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10357  003DDC  237F               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10358  003DDE                     
 10359                           ; BSR set to: 0
 10360  003DDE  C079  F07A         	movff	___flmul@grs+2,___flmul@grs+3
 10361  003DE2  C078  F079         	movff	___flmul@grs+1,___flmul@grs+2
 10362  003DE6  C077  F078         	movff	___flmul@grs,___flmul@grs+1
 10363  003DEA  6B77               	clrf	___flmul@grs& (0+255),b
 10364  003DEC                     
 10365                           ; BSR set to: 0
 10366  003DEC  5171               	movf	___flmul@a& (0+255),w,b
 10367  003DEE  036E               	mulwf	(___flmul@b+1)& (0+255),b
 10368  003DF0  CFF3 F080          	movff	prodl,___flmul@temp
 10369  003DF4  CFF4 F081          	movff	prodh,___flmul@temp+1
 10370  003DF8                     
 10371                           ; BSR set to: 0
 10372  003DF8  5180               	movf	___flmul@temp& (0+255),w,b
 10373  003DFA  2777               	addwf	___flmul@grs& (0+255),f,b
 10374  003DFC  5181               	movf	(___flmul@temp+1)& (0+255),w,b
 10375  003DFE  2378               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10376  003E00  0E00               	movlw	0
 10377  003E02  2379               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10378  003E04  0E00               	movlw	0
 10379  003E06  237A               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10380  003E08                     
 10381                           ; BSR set to: 0
 10382  003E08  5172               	movf	(___flmul@a+1)& (0+255),w,b
 10383  003E0A  036D               	mulwf	___flmul@b& (0+255),b
 10384  003E0C  CFF3 F080          	movff	prodl,___flmul@temp
 10385  003E10  CFF4 F081          	movff	prodh,___flmul@temp+1
 10386  003E14                     
 10387                           ; BSR set to: 0
 10388  003E14  5180               	movf	___flmul@temp& (0+255),w,b
 10389  003E16  2777               	addwf	___flmul@grs& (0+255),f,b
 10390  003E18  5181               	movf	(___flmul@temp+1)& (0+255),w,b
 10391  003E1A  2378               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10392  003E1C  0E00               	movlw	0
 10393  003E1E  2379               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10394  003E20  0E00               	movlw	0
 10395  003E22  237A               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10396  003E24                     
 10397                           ; BSR set to: 0
 10398  003E24  C079  F07A         	movff	___flmul@grs+2,___flmul@grs+3
 10399  003E28  C078  F079         	movff	___flmul@grs+1,___flmul@grs+2
 10400  003E2C  C077  F078         	movff	___flmul@grs,___flmul@grs+1
 10401  003E30  6B77               	clrf	___flmul@grs& (0+255),b
 10402  003E32  5171               	movf	___flmul@a& (0+255),w,b
 10403  003E34  036D               	mulwf	___flmul@b& (0+255),b
 10404  003E36  CFF3 F080          	movff	prodl,___flmul@temp
 10405  003E3A  CFF4 F081          	movff	prodh,___flmul@temp+1
 10406  003E3E                     
 10407                           ; BSR set to: 0
 10408  003E3E  5180               	movf	___flmul@temp& (0+255),w,b
 10409  003E40  2777               	addwf	___flmul@grs& (0+255),f,b
 10410  003E42  5181               	movf	(___flmul@temp+1)& (0+255),w,b
 10411  003E44  2378               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10412  003E46  0E00               	movlw	0
 10413  003E48  2379               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10414  003E4A  0E00               	movlw	0
 10415  003E4C  237A               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10416  003E4E                     
 10417                           ; BSR set to: 0
 10418  003E4E  5173               	movf	(___flmul@a+2)& (0+255),w,b
 10419  003E50  036E               	mulwf	(___flmul@b+1)& (0+255),b
 10420  003E52  CFF3 F080          	movff	prodl,___flmul@temp
 10421  003E56  CFF4 F081          	movff	prodh,___flmul@temp+1
 10422  003E5A  5180               	movf	___flmul@temp& (0+255),w,b
 10423  003E5C  277C               	addwf	___flmul@prod& (0+255),f,b
 10424  003E5E  5181               	movf	(___flmul@temp+1)& (0+255),w,b
 10425  003E60  237D               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10426  003E62  0E00               	movlw	0
 10427  003E64  237E               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10428  003E66  0E00               	movlw	0
 10429  003E68  237F               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10430  003E6A                     
 10431                           ; BSR set to: 0
 10432  003E6A  5172               	movf	(___flmul@a+1)& (0+255),w,b
 10433  003E6C  036F               	mulwf	(___flmul@b+2)& (0+255),b
 10434  003E6E  CFF3 F080          	movff	prodl,___flmul@temp
 10435  003E72  CFF4 F081          	movff	prodh,___flmul@temp+1
 10436  003E76                     
 10437                           ; BSR set to: 0
 10438  003E76  5180               	movf	___flmul@temp& (0+255),w,b
 10439  003E78  277C               	addwf	___flmul@prod& (0+255),f,b
 10440  003E7A  5181               	movf	(___flmul@temp+1)& (0+255),w,b
 10441  003E7C  237D               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10442  003E7E  0E00               	movlw	0
 10443  003E80  237E               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10444  003E82  0E00               	movlw	0
 10445  003E84  237F               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10446  003E86  5173               	movf	(___flmul@a+2)& (0+255),w,b
 10447  003E88  036F               	mulwf	(___flmul@b+2)& (0+255),b
 10448  003E8A  CFF3 F080          	movff	prodl,___flmul@temp
 10449  003E8E  CFF4 F081          	movff	prodh,___flmul@temp+1
 10450  003E92                     
 10451                           ; BSR set to: 0
 10452  003E92  5180               	movf	___flmul@temp& (0+255),w,b
 10453  003E94  6E32               	movwf	??___flmul^0,c
 10454  003E96  5181               	movf	(___flmul@temp+1)& (0+255),w,b
 10455  003E98  6E33               	movwf	(??___flmul+1)^0,c
 10456  003E9A  6A34               	clrf	(??___flmul+2)^0,c
 10457  003E9C  6A35               	clrf	(??___flmul+3)^0,c
 10458  003E9E  C034  F035         	movff	??___flmul+2,??___flmul+3
 10459  003EA2  C033  F034         	movff	??___flmul+1,??___flmul+2
 10460  003EA6  C032  F033         	movff	??___flmul,??___flmul+1
 10461  003EAA  6A32               	clrf	??___flmul^0,c
 10462  003EAC  5032               	movf	??___flmul^0,w,c
 10463  003EAE  277C               	addwf	___flmul@prod& (0+255),f,b
 10464  003EB0  5033               	movf	(??___flmul+1)^0,w,c
 10465  003EB2  237D               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10466  003EB4  5034               	movf	(??___flmul+2)^0,w,c
 10467  003EB6  237E               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10468  003EB8  5035               	movf	(??___flmul+3)^0,w,c
 10469  003EBA  237F               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10470  003EBC                     
 10471                           ; BSR set to: 0
 10472  003EBC  C077  F032         	movff	___flmul@grs,??___flmul
 10473  003EC0  C078  F033         	movff	___flmul@grs+1,??___flmul+1
 10474  003EC4  C079  F034         	movff	___flmul@grs+2,??___flmul+2
 10475  003EC8  C07A  F035         	movff	___flmul@grs+3,??___flmul+3
 10476  003ECC  0E19               	movlw	25
 10477  003ECE  EF6E  F01F         	goto	u6810
 10478  003ED2                     u6815:
 10479  003ED2  90D8               	bcf	status,0,c
 10480  003ED4  3235               	rrcf	(??___flmul+3)^0,f,c
 10481  003ED6  3234               	rrcf	(??___flmul+2)^0,f,c
 10482  003ED8  3233               	rrcf	(??___flmul+1)^0,f,c
 10483  003EDA  3232               	rrcf	??___flmul^0,f,c
 10484  003EDC                     u6810:
 10485  003EDC  2EE8               	decfsz	wreg,f,c
 10486  003EDE  EF69  F01F         	goto	u6815
 10487  003EE2  5032               	movf	??___flmul^0,w,c
 10488  003EE4  277C               	addwf	___flmul@prod& (0+255),f,b
 10489  003EE6  5033               	movf	(??___flmul+1)^0,w,c
 10490  003EE8  237D               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10491  003EEA  5034               	movf	(??___flmul+2)^0,w,c
 10492  003EEC  237E               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10493  003EEE  5035               	movf	(??___flmul+3)^0,w,c
 10494  003EF0  237F               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10495  003EF2                     
 10496                           ; BSR set to: 0
 10497  003EF2  C079  F07A         	movff	___flmul@grs+2,___flmul@grs+3
 10498  003EF6  C078  F079         	movff	___flmul@grs+1,___flmul@grs+2
 10499  003EFA  C077  F078         	movff	___flmul@grs,___flmul@grs+1
 10500  003EFE  6B77               	clrf	___flmul@grs& (0+255),b
 10501  003F00                     
 10502                           ; BSR set to: 0
 10503  003F00  5176               	movf	___flmul@aexp& (0+255),w,b
 10504  003F02  C07B  F032         	movff	___flmul@bexp,??___flmul
 10505  003F06  6A33               	clrf	(??___flmul+1)^0,c
 10506  003F08  2632               	addwf	??___flmul^0,f,c
 10507  003F0A  0E00               	movlw	0
 10508  003F0C  2233               	addwfc	(??___flmul+1)^0,f,c
 10509  003F0E  0E82               	movlw	130
 10510  003F10  2432               	addwf	??___flmul^0,w,c
 10511  003F12  6F80               	movwf	___flmul@temp& (0+255),b
 10512  003F14  0EFF               	movlw	255
 10513  003F16  2033               	addwfc	(??___flmul+1)^0,w,c
 10514  003F18  6F81               	movwf	(___flmul@temp+1)& (0+255),b
 10515  003F1A  EFA4  F01F         	goto	l6728
 10516  003F1E                     l6722:
 10517                           
 10518                           ; BSR set to: 0
 10519  003F1E  90D8               	bcf	status,0,c
 10520  003F20  377C               	rlcf	___flmul@prod& (0+255),f,b
 10521  003F22  377D               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10522  003F24  377E               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10523  003F26  377F               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10524  003F28                     
 10525                           ; BSR set to: 0
 10526  003F28  AF7A               	btfss	(___flmul@grs+3)& (0+255),7,b
 10527  003F2A  EF99  F01F         	goto	u6821
 10528  003F2E  EF9B  F01F         	goto	u6820
 10529  003F32                     u6821:
 10530  003F32  EF9C  F01F         	goto	l933
 10531  003F36                     u6820:
 10532  003F36                     
 10533                           ; BSR set to: 0
 10534  003F36  817C               	bsf	___flmul@prod& (0+255),0,b
 10535  003F38                     l933:
 10536                           
 10537                           ; BSR set to: 0
 10538  003F38  90D8               	bcf	status,0,c
 10539  003F3A  3777               	rlcf	___flmul@grs& (0+255),f,b
 10540  003F3C  3778               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10541  003F3E  3779               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10542  003F40  377A               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10543  003F42  0780               	decf	___flmul@temp& (0+255),f,b
 10544  003F44  A0D8               	btfss	status,0,c
 10545  003F46  0781               	decf	(___flmul@temp+1)& (0+255),f,b
 10546  003F48                     l6728:
 10547                           
 10548                           ; BSR set to: 0
 10549  003F48  AF7E               	btfss	(___flmul@prod+2)& (0+255),7,b
 10550  003F4A  EFA9  F01F         	goto	u6831
 10551  003F4E  EFAB  F01F         	goto	u6830
 10552  003F52                     u6831:
 10553  003F52  EF8F  F01F         	goto	l6722
 10554  003F56                     u6830:
 10555  003F56                     
 10556                           ; BSR set to: 0
 10557  003F56  0E00               	movlw	0
 10558  003F58  6F76               	movwf	___flmul@aexp& (0+255),b
 10559  003F5A                     
 10560                           ; BSR set to: 0
 10561  003F5A  AF7A               	btfss	(___flmul@grs+3)& (0+255),7,b
 10562  003F5C  EFB2  F01F         	goto	u6841
 10563  003F60  EFB4  F01F         	goto	u6840
 10564  003F64                     u6841:
 10565  003F64  EFD8  F01F         	goto	l935
 10566  003F68                     u6840:
 10567  003F68                     
 10568                           ; BSR set to: 0
 10569  003F68  0EFF               	movlw	255
 10570  003F6A  1577               	andwf	___flmul@grs& (0+255),w,b
 10571  003F6C  6E32               	movwf	??___flmul^0,c
 10572  003F6E  0EFF               	movlw	255
 10573  003F70  1578               	andwf	(___flmul@grs+1)& (0+255),w,b
 10574  003F72  6E33               	movwf	(??___flmul+1)^0,c
 10575  003F74  0EFF               	movlw	255
 10576  003F76  1579               	andwf	(___flmul@grs+2)& (0+255),w,b
 10577  003F78  6E34               	movwf	(??___flmul+2)^0,c
 10578  003F7A  0E7F               	movlw	127
 10579  003F7C  157A               	andwf	(___flmul@grs+3)& (0+255),w,b
 10580  003F7E  6E35               	movwf	(??___flmul+3)^0,c
 10581  003F80  5032               	movf	??___flmul^0,w,c
 10582  003F82  1033               	iorwf	(??___flmul+1)^0,w,c
 10583  003F84  1034               	iorwf	(??___flmul+2)^0,w,c
 10584  003F86  1035               	iorwf	(??___flmul+3)^0,w,c
 10585  003F88  B4D8               	btfsc	status,2,c
 10586  003F8A  EFC9  F01F         	goto	u6851
 10587  003F8E  EFCB  F01F         	goto	u6850
 10588  003F92                     u6851:
 10589  003F92  EFCF  F01F         	goto	l936
 10590  003F96                     u6850:
 10591  003F96                     l6736:
 10592                           
 10593                           ; BSR set to: 0
 10594  003F96  0E01               	movlw	1
 10595  003F98  6F76               	movwf	___flmul@aexp& (0+255),b
 10596  003F9A  EFD8  F01F         	goto	l935
 10597  003F9E                     l936:
 10598                           
 10599                           ; BSR set to: 0
 10600  003F9E  A17C               	btfss	___flmul@prod& (0+255),0,b
 10601  003FA0  EFD4  F01F         	goto	u6861
 10602  003FA4  EFD6  F01F         	goto	u6860
 10603  003FA8                     u6861:
 10604  003FA8  EFD8  F01F         	goto	l935
 10605  003FAC                     u6860:
 10606  003FAC  EFCB  F01F         	goto	l6736
 10607  003FB0                     l935:
 10608                           
 10609                           ; BSR set to: 0
 10610  003FB0  5176               	movf	___flmul@aexp& (0+255),w,b
 10611  003FB2  B4D8               	btfsc	status,2,c
 10612  003FB4  EFDE  F01F         	goto	u6871
 10613  003FB8  EFE0  F01F         	goto	u6870
 10614  003FBC                     u6871:
 10615  003FBC  EF04  F020         	goto	l6748
 10616  003FC0                     u6870:
 10617  003FC0                     
 10618                           ; BSR set to: 0
 10619  003FC0  0E01               	movlw	1
 10620  003FC2  277C               	addwf	___flmul@prod& (0+255),f,b
 10621  003FC4  0E00               	movlw	0
 10622  003FC6  237D               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10623  003FC8  237E               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10624  003FCA  237F               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10625  003FCC                     
 10626                           ; BSR set to: 0
 10627  003FCC  A17F               	btfss	(___flmul@prod+3)& (0+255),0,b
 10628  003FCE  EFEB  F01F         	goto	u6881
 10629  003FD2  EFED  F01F         	goto	u6880
 10630  003FD6                     u6881:
 10631  003FD6  EF04  F020         	goto	l6748
 10632  003FDA                     u6880:
 10633  003FDA                     
 10634                           ; BSR set to: 0
 10635  003FDA  C07C  F032         	movff	___flmul@prod,??___flmul
 10636  003FDE  C07D  F033         	movff	___flmul@prod+1,??___flmul+1
 10637  003FE2  C07E  F034         	movff	___flmul@prod+2,??___flmul+2
 10638  003FE6  C07F  F035         	movff	___flmul@prod+3,??___flmul+3
 10639  003FEA  3435               	rlcf	(??___flmul+3)^0,w,c
 10640  003FEC  3235               	rrcf	(??___flmul+3)^0,f,c
 10641  003FEE  3234               	rrcf	(??___flmul+2)^0,f,c
 10642  003FF0  3233               	rrcf	(??___flmul+1)^0,f,c
 10643  003FF2  3232               	rrcf	??___flmul^0,f,c
 10644  003FF4  C032  F07C         	movff	??___flmul,___flmul@prod
 10645  003FF8  C033  F07D         	movff	??___flmul+1,___flmul@prod+1
 10646  003FFC  C034  F07E         	movff	??___flmul+2,___flmul@prod+2
 10647  004000  C035  F07F         	movff	??___flmul+3,___flmul@prod+3
 10648  004004                     
 10649                           ; BSR set to: 0
 10650  004004  4B80               	infsnz	___flmul@temp& (0+255),f,b
 10651  004006  2B81               	incf	(___flmul@temp+1)& (0+255),f,b
 10652  004008                     l6748:
 10653                           
 10654                           ; BSR set to: 0
 10655  004008  BF81               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10656  00400A  EF0F  F020         	goto	u6891
 10657  00400E  5181               	movf	(___flmul@temp+1)& (0+255),w,b
 10658  004010  E108               	bnz	u6890
 10659  004012  2980               	incf	___flmul@temp& (0+255),w,b
 10660  004014  A0D8               	btfss	status,0,c
 10661  004016  EF0F  F020         	goto	u6891
 10662  00401A  EF11  F020         	goto	u6890
 10663  00401E                     u6891:
 10664  00401E  EF1B  F020         	goto	l6752
 10665  004022                     u6890:
 10666  004022                     
 10667                           ; BSR set to: 0
 10668  004022  0E00               	movlw	0
 10669  004024  6F7C               	movwf	___flmul@prod& (0+255),b
 10670  004026  0E00               	movlw	0
 10671  004028  6F7D               	movwf	(___flmul@prod+1)& (0+255),b
 10672  00402A  0E80               	movlw	128
 10673  00402C  6F7E               	movwf	(___flmul@prod+2)& (0+255),b
 10674  00402E  0E7F               	movlw	127
 10675  004030  6F7F               	movwf	(___flmul@prod+3)& (0+255),b
 10676  004032  EF49  F020         	goto	l6764
 10677  004036                     l6752:
 10678                           
 10679                           ; BSR set to: 0
 10680  004036  BF81               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10681  004038  EF28  F020         	goto	u6900
 10682  00403C  5181               	movf	(___flmul@temp+1)& (0+255),w,b
 10683  00403E  E106               	bnz	u6901
 10684  004040  0580               	decf	___flmul@temp& (0+255),w,b
 10685  004042  B0D8               	btfsc	status,0,c
 10686  004044  EF26  F020         	goto	u6901
 10687  004048  EF28  F020         	goto	u6900
 10688  00404C                     u6901:
 10689  00404C  EF34  F020         	goto	l943
 10690  004050                     u6900:
 10691  004050                     
 10692                           ; BSR set to: 0
 10693  004050  0E00               	movlw	0
 10694  004052  6F7C               	movwf	___flmul@prod& (0+255),b
 10695  004054  0E00               	movlw	0
 10696  004056  6F7D               	movwf	(___flmul@prod+1)& (0+255),b
 10697  004058  0E00               	movlw	0
 10698  00405A  6F7E               	movwf	(___flmul@prod+2)& (0+255),b
 10699  00405C  0E00               	movlw	0
 10700  00405E  6F7F               	movwf	(___flmul@prod+3)& (0+255),b
 10701  004060  0E00               	movlw	0
 10702  004062  6F75               	movwf	___flmul@sign& (0+255),b
 10703  004064  EF49  F020         	goto	l6764
 10704  004068                     l943:
 10705                           
 10706                           ; BSR set to: 0
 10707  004068  C080  F07B         	movff	___flmul@temp,___flmul@bexp
 10708  00406C                     
 10709                           ; BSR set to: 0
 10710  00406C  0EFF               	movlw	255
 10711  00406E  177C               	andwf	___flmul@prod& (0+255),f,b
 10712  004070  0EFF               	movlw	255
 10713  004072  177D               	andwf	(___flmul@prod+1)& (0+255),f,b
 10714  004074  0E7F               	movlw	127
 10715  004076  177E               	andwf	(___flmul@prod+2)& (0+255),f,b
 10716  004078  0E00               	movlw	0
 10717  00407A  177F               	andwf	(___flmul@prod+3)& (0+255),f,b
 10718  00407C                     
 10719                           ; BSR set to: 0
 10720  00407C  A17B               	btfss	___flmul@bexp& (0+255),0,b
 10721  00407E  EF43  F020         	goto	u6911
 10722  004082  EF45  F020         	goto	u6910
 10723  004086                     u6911:
 10724  004086  EF46  F020         	goto	l6762
 10725  00408A                     u6910:
 10726  00408A                     
 10727                           ; BSR set to: 0
 10728  00408A  8F7E               	bsf	(___flmul@prod+2)& (0+255),7,b
 10729  00408C                     l6762:
 10730                           
 10731                           ; BSR set to: 0
 10732  00408C  90D8               	bcf	status,0,c
 10733  00408E  317B               	rrcf	___flmul@bexp& (0+255),w,b
 10734  004090  6F7F               	movwf	(___flmul@prod+3)& (0+255),b
 10735  004092                     l6764:
 10736                           
 10737                           ; BSR set to: 0
 10738  004092  5175               	movf	___flmul@sign& (0+255),w,b
 10739  004094  137F               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10740  004096                     
 10741                           ; BSR set to: 0
 10742  004096  C07C  F06D         	movff	___flmul@prod,?___flmul
 10743  00409A  C07D  F06E         	movff	___flmul@prod+1,?___flmul+1
 10744  00409E  C07E  F06F         	movff	___flmul@prod+2,?___flmul+2
 10745  0040A2  C07F  F070         	movff	___flmul@prod+3,?___flmul+3
 10746  0040A6                     l930:
 10747                           
 10748                           ; BSR set to: 0
 10749  0040A6  0012               	return		;funcret
 10750  0040A8                     __end_of___flmul:
 10751                           	callstack 0
 10752                           
 10753 ;; *************** function ___fldiv *****************
 10754 ;; Defined at:
 10755 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 10756 ;; Parameters:    Size  Location     Type
 10757 ;;  b               4   33[COMRAM] unsigned char 
 10758 ;;  a               4   37[COMRAM] unsigned char 
 10759 ;; Auto vars:     Size  Location     Type
 10760 ;;  grs             4    7[BANK0 ] unsigned long 
 10761 ;;  rem             4    0[BANK0 ] unsigned long 
 10762 ;;  new_exp         2    5[BANK0 ] short 
 10763 ;;  aexp            1   12[BANK0 ] unsigned char 
 10764 ;;  bexp            1   11[BANK0 ] unsigned char 
 10765 ;;  sign            1    4[BANK0 ] unsigned char 
 10766 ;; Return value:  Size  Location     Type
 10767 ;;                  4   33[COMRAM] unsigned char 
 10768 ;; Registers used:
 10769 ;;		wreg, status,2, status,0
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10775 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10776 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10777 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10778 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10779 ;;Total ram usage:       25 bytes
 10780 ;; Hardware stack levels used: 1
 10781 ;; Hardware stack levels required when called: 3
 10782 ;; This function calls:
 10783 ;;		Nothing
 10784 ;; This function is called by:
 10785 ;;		_MPU6050_Read
 10786 ;;		_atan2f
 10787 ;;		_atanf
 10788 ;;		_efgtoa
 10789 ;; This function uses a non-reentrant model
 10790 ;;
 10791                           
 10792                           	psect	text33
 10793  0040A8                     __ptext33:
 10794                           	callstack 0
 10795  0040A8                     ___fldiv:
 10796                           	callstack 22
 10797  0040A8  5025               	movf	(___fldiv@b+3)^0,w,c
 10798  0040AA  0B80               	andlw	128
 10799  0040AC  0100               	movlb	0	; () banked
 10800  0040AE  6F64               	movwf	___fldiv@sign& (0+255),b
 10801  0040B0  5025               	movf	(___fldiv@b+3)^0,w,c
 10802  0040B2  2425               	addwf	(___fldiv@b+3)^0,w,c
 10803  0040B4  6F6B               	movwf	___fldiv@bexp& (0+255),b
 10804  0040B6                     
 10805                           ; BSR set to: 0
 10806  0040B6  AE24               	btfss	(___fldiv@b+2)^0,7,c
 10807  0040B8  EF60  F020         	goto	u6501
 10808  0040BC  EF62  F020         	goto	u6500
 10809  0040C0                     u6501:
 10810  0040C0  EF63  F020         	goto	l6508
 10811  0040C4                     u6500:
 10812  0040C4                     
 10813                           ; BSR set to: 0
 10814  0040C4  816B               	bsf	___fldiv@bexp& (0+255),0,b
 10815  0040C6                     l6508:
 10816                           
 10817                           ; BSR set to: 0
 10818  0040C6  516B               	movf	___fldiv@bexp& (0+255),w,b
 10819  0040C8  B4D8               	btfsc	status,2,c
 10820  0040CA  EF69  F020         	goto	u6511
 10821  0040CE  EF6B  F020         	goto	u6510
 10822  0040D2                     u6511:
 10823  0040D2  EF80  F020         	goto	l6518
 10824  0040D6                     u6510:
 10825  0040D6                     
 10826                           ; BSR set to: 0
 10827  0040D6  296B               	incf	___fldiv@bexp& (0+255),w,b
 10828  0040D8  A4D8               	btfss	status,2,c
 10829  0040DA  EF71  F020         	goto	u6521
 10830  0040DE  EF73  F020         	goto	u6520
 10831  0040E2                     u6521:
 10832  0040E2  EF7B  F020         	goto	l6514
 10833  0040E6                     u6520:
 10834  0040E6                     
 10835                           ; BSR set to: 0
 10836  0040E6  0E00               	movlw	0
 10837  0040E8  6E22               	movwf	___fldiv@b^0,c
 10838  0040EA  0E00               	movlw	0
 10839  0040EC  6E23               	movwf	(___fldiv@b+1)^0,c
 10840  0040EE  0E00               	movlw	0
 10841  0040F0  6E24               	movwf	(___fldiv@b+2)^0,c
 10842  0040F2  0E00               	movlw	0
 10843  0040F4  6E25               	movwf	(___fldiv@b+3)^0,c
 10844  0040F6                     l6514:
 10845                           
 10846                           ; BSR set to: 0
 10847  0040F6  8E24               	bsf	(___fldiv@b+2)^0,7,c
 10848  0040F8                     
 10849                           ; BSR set to: 0
 10850  0040F8  0E00               	movlw	0
 10851  0040FA  6E25               	movwf	(___fldiv@b+3)^0,c
 10852  0040FC  EF88  F020         	goto	l6520
 10853  004100                     l6518:
 10854                           
 10855                           ; BSR set to: 0
 10856  004100  0E00               	movlw	0
 10857  004102  6E22               	movwf	___fldiv@b^0,c
 10858  004104  0E00               	movlw	0
 10859  004106  6E23               	movwf	(___fldiv@b+1)^0,c
 10860  004108  0E00               	movlw	0
 10861  00410A  6E24               	movwf	(___fldiv@b+2)^0,c
 10862  00410C  0E00               	movlw	0
 10863  00410E  6E25               	movwf	(___fldiv@b+3)^0,c
 10864  004110                     l6520:
 10865                           
 10866                           ; BSR set to: 0
 10867  004110  5029               	movf	(___fldiv@a+3)^0,w,c
 10868  004112  0B80               	andlw	128
 10869  004114  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 10870  004116                     
 10871                           ; BSR set to: 0
 10872  004116  5029               	movf	(___fldiv@a+3)^0,w,c
 10873  004118  2429               	addwf	(___fldiv@a+3)^0,w,c
 10874  00411A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10875  00411C                     
 10876                           ; BSR set to: 0
 10877  00411C  AE28               	btfss	(___fldiv@a+2)^0,7,c
 10878  00411E  EF93  F020         	goto	u6531
 10879  004122  EF95  F020         	goto	u6530
 10880  004126                     u6531:
 10881  004126  EF96  F020         	goto	l6528
 10882  00412A                     u6530:
 10883  00412A                     
 10884                           ; BSR set to: 0
 10885  00412A  816C               	bsf	___fldiv@aexp& (0+255),0,b
 10886  00412C                     l6528:
 10887                           
 10888                           ; BSR set to: 0
 10889  00412C  516C               	movf	___fldiv@aexp& (0+255),w,b
 10890  00412E  B4D8               	btfsc	status,2,c
 10891  004130  EF9C  F020         	goto	u6541
 10892  004134  EF9E  F020         	goto	u6540
 10893  004138                     u6541:
 10894  004138  EFB3  F020         	goto	l6538
 10895  00413C                     u6540:
 10896  00413C                     
 10897                           ; BSR set to: 0
 10898  00413C  296C               	incf	___fldiv@aexp& (0+255),w,b
 10899  00413E  A4D8               	btfss	status,2,c
 10900  004140  EFA4  F020         	goto	u6551
 10901  004144  EFA6  F020         	goto	u6550
 10902  004148                     u6551:
 10903  004148  EFAE  F020         	goto	l6534
 10904  00414C                     u6550:
 10905  00414C                     
 10906                           ; BSR set to: 0
 10907  00414C  0E00               	movlw	0
 10908  00414E  6E26               	movwf	___fldiv@a^0,c
 10909  004150  0E00               	movlw	0
 10910  004152  6E27               	movwf	(___fldiv@a+1)^0,c
 10911  004154  0E00               	movlw	0
 10912  004156  6E28               	movwf	(___fldiv@a+2)^0,c
 10913  004158  0E00               	movlw	0
 10914  00415A  6E29               	movwf	(___fldiv@a+3)^0,c
 10915  00415C                     l6534:
 10916                           
 10917                           ; BSR set to: 0
 10918  00415C  8E28               	bsf	(___fldiv@a+2)^0,7,c
 10919  00415E                     
 10920                           ; BSR set to: 0
 10921  00415E  0E00               	movlw	0
 10922  004160  6E29               	movwf	(___fldiv@a+3)^0,c
 10923  004162  EFBB  F020         	goto	l6540
 10924  004166                     l6538:
 10925                           
 10926                           ; BSR set to: 0
 10927  004166  0E00               	movlw	0
 10928  004168  6E26               	movwf	___fldiv@a^0,c
 10929  00416A  0E00               	movlw	0
 10930  00416C  6E27               	movwf	(___fldiv@a+1)^0,c
 10931  00416E  0E00               	movlw	0
 10932  004170  6E28               	movwf	(___fldiv@a+2)^0,c
 10933  004172  0E00               	movlw	0
 10934  004174  6E29               	movwf	(___fldiv@a+3)^0,c
 10935  004176                     l6540:
 10936                           
 10937                           ; BSR set to: 0
 10938  004176  5026               	movf	___fldiv@a^0,w,c
 10939  004178  1027               	iorwf	(___fldiv@a+1)^0,w,c
 10940  00417A  1028               	iorwf	(___fldiv@a+2)^0,w,c
 10941  00417C  1029               	iorwf	(___fldiv@a+3)^0,w,c
 10942  00417E  A4D8               	btfss	status,2,c
 10943  004180  EFC4  F020         	goto	u6561
 10944  004184  EFC6  F020         	goto	u6560
 10945  004188                     u6561:
 10946  004188  EFDE  F020         	goto	l6552
 10947  00418C                     u6560:
 10948  00418C                     
 10949                           ; BSR set to: 0
 10950  00418C  0E00               	movlw	0
 10951  00418E  6E22               	movwf	___fldiv@b^0,c
 10952  004190  0E00               	movlw	0
 10953  004192  6E23               	movwf	(___fldiv@b+1)^0,c
 10954  004194  0E00               	movlw	0
 10955  004196  6E24               	movwf	(___fldiv@b+2)^0,c
 10956  004198  0E00               	movlw	0
 10957  00419A  6E25               	movwf	(___fldiv@b+3)^0,c
 10958  00419C                     
 10959                           ; BSR set to: 0
 10960  00419C  0E80               	movlw	128
 10961  00419E  1224               	iorwf	(___fldiv@b+2)^0,f,c
 10962  0041A0  0E7F               	movlw	127
 10963  0041A2  1225               	iorwf	(___fldiv@b+3)^0,f,c
 10964  0041A4                     l6546:
 10965                           
 10966                           ; BSR set to: 0
 10967  0041A4  5164               	movf	___fldiv@sign& (0+255),w,b
 10968  0041A6  1225               	iorwf	(___fldiv@b+3)^0,f,c
 10969  0041A8                     
 10970                           ; BSR set to: 0
 10971  0041A8  C022  F022         	movff	___fldiv@b,?___fldiv
 10972  0041AC  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
 10973  0041B0  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
 10974  0041B4  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
 10975  0041B8  EF21  F022         	goto	l894
 10976  0041BC                     l6552:
 10977                           
 10978                           ; BSR set to: 0
 10979  0041BC  516B               	movf	___fldiv@bexp& (0+255),w,b
 10980  0041BE  A4D8               	btfss	status,2,c
 10981  0041C0  EFE4  F020         	goto	u6571
 10982  0041C4  EFE6  F020         	goto	u6570
 10983  0041C8                     u6571:
 10984  0041C8  EFF0  F020         	goto	l6560
 10985  0041CC                     u6570:
 10986  0041CC                     
 10987                           ; BSR set to: 0
 10988  0041CC  0E00               	movlw	0
 10989  0041CE  6E22               	movwf	?___fldiv^0,c
 10990  0041D0  0E00               	movlw	0
 10991  0041D2  6E23               	movwf	(?___fldiv+1)^0,c
 10992  0041D4  0E00               	movlw	0
 10993  0041D6  6E24               	movwf	(?___fldiv+2)^0,c
 10994  0041D8  0E00               	movlw	0
 10995  0041DA  6E25               	movwf	(?___fldiv+3)^0,c
 10996  0041DC  EF21  F022         	goto	l894
 10997  0041E0                     l6560:
 10998                           
 10999                           ; BSR set to: 0
 11000  0041E0  516C               	movf	___fldiv@aexp& (0+255),w,b
 11001  0041E2  C06B  F02A         	movff	___fldiv@bexp,??___fldiv
 11002  0041E6  6A2B               	clrf	(??___fldiv+1)^0,c
 11003  0041E8  5E2A               	subwf	??___fldiv^0,f,c
 11004  0041EA  0E00               	movlw	0
 11005  0041EC  5A2B               	subwfb	(??___fldiv+1)^0,f,c
 11006  0041EE  0E7F               	movlw	127
 11007  0041F0  242A               	addwf	??___fldiv^0,w,c
 11008  0041F2  6F65               	movwf	___fldiv@new_exp& (0+255),b
 11009  0041F4  0E00               	movlw	0
 11010  0041F6  202B               	addwfc	(??___fldiv+1)^0,w,c
 11011  0041F8  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11012  0041FA                     
 11013                           ; BSR set to: 0
 11014  0041FA  C022  F060         	movff	___fldiv@b,___fldiv@rem
 11015  0041FE  C023  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 11016  004202  C024  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 11017  004206  C025  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 11018  00420A                     
 11019                           ; BSR set to: 0
 11020  00420A  0E00               	movlw	0
 11021  00420C  6E22               	movwf	___fldiv@b^0,c
 11022  00420E  0E00               	movlw	0
 11023  004210  6E23               	movwf	(___fldiv@b+1)^0,c
 11024  004212  0E00               	movlw	0
 11025  004214  6E24               	movwf	(___fldiv@b+2)^0,c
 11026  004216  0E00               	movlw	0
 11027  004218  6E25               	movwf	(___fldiv@b+3)^0,c
 11028  00421A                     
 11029                           ; BSR set to: 0
 11030  00421A  0E00               	movlw	0
 11031  00421C  6F67               	movwf	___fldiv@grs& (0+255),b
 11032  00421E  0E00               	movlw	0
 11033  004220  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 11034  004222  0E00               	movlw	0
 11035  004224  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 11036  004226  0E00               	movlw	0
 11037  004228  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 11038  00422A                     
 11039                           ; BSR set to: 0
 11040  00422A  0E00               	movlw	0
 11041  00422C  6F6C               	movwf	___fldiv@aexp& (0+255),b
 11042  00422E  EF51  F021         	goto	l896
 11043  004232                     l6570:
 11044                           
 11045                           ; BSR set to: 0
 11046  004232  516C               	movf	___fldiv@aexp& (0+255),w,b
 11047  004234  B4D8               	btfsc	status,2,c
 11048  004236  EF1F  F021         	goto	u6581
 11049  00423A  EF21  F021         	goto	u6580
 11050  00423E                     u6581:
 11051  00423E  EF38  F021         	goto	l6578
 11052  004242                     u6580:
 11053  004242                     
 11054                           ; BSR set to: 0
 11055  004242  90D8               	bcf	status,0,c
 11056  004244  3760               	rlcf	___fldiv@rem& (0+255),f,b
 11057  004246  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11058  004248  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11059  00424A  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11060  00424C  90D8               	bcf	status,0,c
 11061  00424E  3622               	rlcf	___fldiv@b^0,f,c
 11062  004250  3623               	rlcf	(___fldiv@b+1)^0,f,c
 11063  004252  3624               	rlcf	(___fldiv@b+2)^0,f,c
 11064  004254  3625               	rlcf	(___fldiv@b+3)^0,f,c
 11065  004256                     
 11066                           ; BSR set to: 0
 11067  004256  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11068  004258  EF30  F021         	goto	u6591
 11069  00425C  EF32  F021         	goto	u6590
 11070  004260                     u6591:
 11071  004260  EF33  F021         	goto	l899
 11072  004264                     u6590:
 11073  004264                     
 11074                           ; BSR set to: 0
 11075  004264  8022               	bsf	___fldiv@b^0,0,c
 11076  004266                     l899:
 11077                           
 11078                           ; BSR set to: 0
 11079  004266  90D8               	bcf	status,0,c
 11080  004268  3767               	rlcf	___fldiv@grs& (0+255),f,b
 11081  00426A  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11082  00426C  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11083  00426E  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11084  004270                     l6578:
 11085                           
 11086                           ; BSR set to: 0
 11087  004270  5026               	movf	___fldiv@a^0,w,c
 11088  004272  5D60               	subwf	___fldiv@rem& (0+255),w,b
 11089  004274  5027               	movf	(___fldiv@a+1)^0,w,c
 11090  004276  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11091  004278  5028               	movf	(___fldiv@a+2)^0,w,c
 11092  00427A  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11093  00427C  5029               	movf	(___fldiv@a+3)^0,w,c
 11094  00427E  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11095  004280  A0D8               	btfss	status,0,c
 11096  004282  EF45  F021         	goto	u6601
 11097  004286  EF47  F021         	goto	u6600
 11098  00428A                     u6601:
 11099  00428A  EF50  F021         	goto	l6584
 11100  00428E                     u6600:
 11101  00428E                     
 11102                           ; BSR set to: 0
 11103  00428E  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11104  004290                     
 11105                           ; BSR set to: 0
 11106  004290  5026               	movf	___fldiv@a^0,w,c
 11107  004292  5F60               	subwf	___fldiv@rem& (0+255),f,b
 11108  004294  5027               	movf	(___fldiv@a+1)^0,w,c
 11109  004296  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11110  004298  5028               	movf	(___fldiv@a+2)^0,w,c
 11111  00429A  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11112  00429C  5029               	movf	(___fldiv@a+3)^0,w,c
 11113  00429E  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11114  0042A0                     l6584:
 11115                           
 11116                           ; BSR set to: 0
 11117  0042A0  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 11118  0042A2                     l896:
 11119                           
 11120                           ; BSR set to: 0
 11121  0042A2  0E19               	movlw	25
 11122  0042A4  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 11123  0042A6  EF57  F021         	goto	u6611
 11124  0042AA  EF59  F021         	goto	u6610
 11125  0042AE                     u6611:
 11126  0042AE  EF19  F021         	goto	l6570
 11127  0042B2                     u6610:
 11128  0042B2                     
 11129                           ; BSR set to: 0
 11130  0042B2  5160               	movf	___fldiv@rem& (0+255),w,b
 11131  0042B4  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11132  0042B6  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11133  0042B8  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11134  0042BA  B4D8               	btfsc	status,2,c
 11135  0042BC  EF62  F021         	goto	u6621
 11136  0042C0  EF64  F021         	goto	u6620
 11137  0042C4                     u6621:
 11138  0042C4  EF7C  F021         	goto	l6596
 11139  0042C8                     u6620:
 11140  0042C8                     
 11141                           ; BSR set to: 0
 11142  0042C8  8167               	bsf	___fldiv@grs& (0+255),0,b
 11143  0042CA  EF7C  F021         	goto	l6596
 11144  0042CE                     l6590:
 11145                           
 11146                           ; BSR set to: 0
 11147  0042CE  90D8               	bcf	status,0,c
 11148  0042D0  3622               	rlcf	___fldiv@b^0,f,c
 11149  0042D2  3623               	rlcf	(___fldiv@b+1)^0,f,c
 11150  0042D4  3624               	rlcf	(___fldiv@b+2)^0,f,c
 11151  0042D6  3625               	rlcf	(___fldiv@b+3)^0,f,c
 11152  0042D8                     
 11153                           ; BSR set to: 0
 11154  0042D8  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11155  0042DA  EF71  F021         	goto	u6631
 11156  0042DE  EF73  F021         	goto	u6630
 11157  0042E2                     u6631:
 11158  0042E2  EF74  F021         	goto	l905
 11159  0042E6                     u6630:
 11160  0042E6                     
 11161                           ; BSR set to: 0
 11162  0042E6  8022               	bsf	___fldiv@b^0,0,c
 11163  0042E8                     l905:
 11164                           
 11165                           ; BSR set to: 0
 11166  0042E8  90D8               	bcf	status,0,c
 11167  0042EA  3767               	rlcf	___fldiv@grs& (0+255),f,b
 11168  0042EC  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11169  0042EE  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11170  0042F0  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11171  0042F2  0765               	decf	___fldiv@new_exp& (0+255),f,b
 11172  0042F4  A0D8               	btfss	status,0,c
 11173  0042F6  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11174  0042F8                     l6596:
 11175                           
 11176                           ; BSR set to: 0
 11177  0042F8  AE24               	btfss	(___fldiv@b+2)^0,7,c
 11178  0042FA  EF81  F021         	goto	u6641
 11179  0042FE  EF83  F021         	goto	u6640
 11180  004302                     u6641:
 11181  004302  EF67  F021         	goto	l6590
 11182  004306                     u6640:
 11183  004306                     
 11184                           ; BSR set to: 0
 11185  004306  0E00               	movlw	0
 11186  004308  6F6C               	movwf	___fldiv@aexp& (0+255),b
 11187  00430A                     
 11188                           ; BSR set to: 0
 11189  00430A  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11190  00430C  EF8A  F021         	goto	u6651
 11191  004310  EF8C  F021         	goto	u6650
 11192  004314                     u6651:
 11193  004314  EFB0  F021         	goto	l907
 11194  004318                     u6650:
 11195  004318                     
 11196                           ; BSR set to: 0
 11197  004318  0EFF               	movlw	255
 11198  00431A  1567               	andwf	___fldiv@grs& (0+255),w,b
 11199  00431C  6E2A               	movwf	??___fldiv^0,c
 11200  00431E  0EFF               	movlw	255
 11201  004320  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 11202  004322  6E2B               	movwf	(??___fldiv+1)^0,c
 11203  004324  0EFF               	movlw	255
 11204  004326  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 11205  004328  6E2C               	movwf	(??___fldiv+2)^0,c
 11206  00432A  0E7F               	movlw	127
 11207  00432C  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 11208  00432E  6E2D               	movwf	(??___fldiv+3)^0,c
 11209  004330  502A               	movf	??___fldiv^0,w,c
 11210  004332  102B               	iorwf	(??___fldiv+1)^0,w,c
 11211  004334  102C               	iorwf	(??___fldiv+2)^0,w,c
 11212  004336  102D               	iorwf	(??___fldiv+3)^0,w,c
 11213  004338  B4D8               	btfsc	status,2,c
 11214  00433A  EFA1  F021         	goto	u6661
 11215  00433E  EFA3  F021         	goto	u6660
 11216  004342                     u6661:
 11217  004342  EFA7  F021         	goto	l908
 11218  004346                     u6660:
 11219  004346                     l6604:
 11220                           
 11221                           ; BSR set to: 0
 11222  004346  0E01               	movlw	1
 11223  004348  6F6C               	movwf	___fldiv@aexp& (0+255),b
 11224  00434A  EFB0  F021         	goto	l907
 11225  00434E                     l908:
 11226                           
 11227                           ; BSR set to: 0
 11228  00434E  A022               	btfss	___fldiv@b^0,0,c
 11229  004350  EFAC  F021         	goto	u6671
 11230  004354  EFAE  F021         	goto	u6670
 11231  004358                     u6671:
 11232  004358  EFB0  F021         	goto	l907
 11233  00435C                     u6670:
 11234  00435C  EFA3  F021         	goto	l6604
 11235  004360                     l907:
 11236                           
 11237                           ; BSR set to: 0
 11238  004360  516C               	movf	___fldiv@aexp& (0+255),w,b
 11239  004362  B4D8               	btfsc	status,2,c
 11240  004364  EFB6  F021         	goto	u6681
 11241  004368  EFB8  F021         	goto	u6680
 11242  00436C                     u6681:
 11243  00436C  EFDC  F021         	goto	l6616
 11244  004370                     u6680:
 11245  004370                     
 11246                           ; BSR set to: 0
 11247  004370  0E01               	movlw	1
 11248  004372  2622               	addwf	___fldiv@b^0,f,c
 11249  004374  0E00               	movlw	0
 11250  004376  2223               	addwfc	(___fldiv@b+1)^0,f,c
 11251  004378  2224               	addwfc	(___fldiv@b+2)^0,f,c
 11252  00437A  2225               	addwfc	(___fldiv@b+3)^0,f,c
 11253  00437C                     
 11254                           ; BSR set to: 0
 11255  00437C  A025               	btfss	(___fldiv@b+3)^0,0,c
 11256  00437E  EFC3  F021         	goto	u6691
 11257  004382  EFC5  F021         	goto	u6690
 11258  004386                     u6691:
 11259  004386  EFDC  F021         	goto	l6616
 11260  00438A                     u6690:
 11261  00438A                     
 11262                           ; BSR set to: 0
 11263  00438A  C022  F02A         	movff	___fldiv@b,??___fldiv
 11264  00438E  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
 11265  004392  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
 11266  004396  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
 11267  00439A  342D               	rlcf	(??___fldiv+3)^0,w,c
 11268  00439C  322D               	rrcf	(??___fldiv+3)^0,f,c
 11269  00439E  322C               	rrcf	(??___fldiv+2)^0,f,c
 11270  0043A0  322B               	rrcf	(??___fldiv+1)^0,f,c
 11271  0043A2  322A               	rrcf	??___fldiv^0,f,c
 11272  0043A4  C02A  F022         	movff	??___fldiv,___fldiv@b
 11273  0043A8  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
 11274  0043AC  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
 11275  0043B0  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
 11276  0043B4                     
 11277                           ; BSR set to: 0
 11278  0043B4  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 11279  0043B6  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11280  0043B8                     l6616:
 11281                           
 11282                           ; BSR set to: 0
 11283  0043B8  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11284  0043BA  EFE7  F021         	goto	u6701
 11285  0043BE  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11286  0043C0  E108               	bnz	u6700
 11287  0043C2  2965               	incf	___fldiv@new_exp& (0+255),w,b
 11288  0043C4  A0D8               	btfss	status,0,c
 11289  0043C6  EFE7  F021         	goto	u6701
 11290  0043CA  EFE9  F021         	goto	u6700
 11291  0043CE                     u6701:
 11292  0043CE  EFF4  F021         	goto	l6620
 11293  0043D2                     u6700:
 11294  0043D2                     
 11295                           ; BSR set to: 0
 11296  0043D2  0E00               	movlw	0
 11297  0043D4  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11298  0043D6  6965               	setf	___fldiv@new_exp& (0+255),b
 11299  0043D8  0E00               	movlw	0
 11300  0043DA  6E22               	movwf	___fldiv@b^0,c
 11301  0043DC  0E00               	movlw	0
 11302  0043DE  6E23               	movwf	(___fldiv@b+1)^0,c
 11303  0043E0  0E00               	movlw	0
 11304  0043E2  6E24               	movwf	(___fldiv@b+2)^0,c
 11305  0043E4  0E00               	movlw	0
 11306  0043E6  6E25               	movwf	(___fldiv@b+3)^0,c
 11307  0043E8                     l6620:
 11308                           
 11309                           ; BSR set to: 0
 11310  0043E8  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11311  0043EA  EF01  F022         	goto	u6710
 11312  0043EE  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11313  0043F0  E106               	bnz	u6711
 11314  0043F2  0565               	decf	___fldiv@new_exp& (0+255),w,b
 11315  0043F4  B0D8               	btfsc	status,0,c
 11316  0043F6  EFFF  F021         	goto	u6711
 11317  0043FA  EF01  F022         	goto	u6710
 11318  0043FE                     u6711:
 11319  0043FE  EF0F  F022         	goto	l6624
 11320  004402                     u6710:
 11321  004402                     
 11322                           ; BSR set to: 0
 11323  004402  0E00               	movlw	0
 11324  004404  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11325  004406  0E00               	movlw	0
 11326  004408  6F65               	movwf	___fldiv@new_exp& (0+255),b
 11327  00440A  0E00               	movlw	0
 11328  00440C  6E22               	movwf	___fldiv@b^0,c
 11329  00440E  0E00               	movlw	0
 11330  004410  6E23               	movwf	(___fldiv@b+1)^0,c
 11331  004412  0E00               	movlw	0
 11332  004414  6E24               	movwf	(___fldiv@b+2)^0,c
 11333  004416  0E00               	movlw	0
 11334  004418  6E25               	movwf	(___fldiv@b+3)^0,c
 11335  00441A  0E00               	movlw	0
 11336  00441C  6F64               	movwf	___fldiv@sign& (0+255),b
 11337  00441E                     l6624:
 11338                           
 11339                           ; BSR set to: 0
 11340  00441E  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 11341  004422                     
 11342                           ; BSR set to: 0
 11343  004422  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 11344  004424  EF16  F022         	goto	u6721
 11345  004428  EF18  F022         	goto	u6720
 11346  00442C                     u6721:
 11347  00442C  EF1B  F022         	goto	l6630
 11348  004430                     u6720:
 11349  004430                     
 11350                           ; BSR set to: 0
 11351  004430  8E24               	bsf	(___fldiv@b+2)^0,7,c
 11352  004432  EF1C  F022         	goto	l6632
 11353  004436                     l6630:
 11354                           
 11355                           ; BSR set to: 0
 11356  004436  9E24               	bcf	(___fldiv@b+2)^0,7,c
 11357  004438                     l6632:
 11358                           
 11359                           ; BSR set to: 0
 11360  004438  90D8               	bcf	status,0,c
 11361  00443A  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 11362  00443C  6E25               	movwf	(___fldiv@b+3)^0,c
 11363  00443E  EFD2  F020         	goto	l6546
 11364  004442                     l894:
 11365                           
 11366                           ; BSR set to: 0
 11367  004442  0012               	return		;funcret
 11368  004444                     __end_of___fldiv:
 11369                           	callstack 0
 11370                           
 11371 ;; *************** function ___xxtofl *****************
 11372 ;; Defined at:
 11373 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;  sign            1    wreg     unsigned char 
 11376 ;;  val             4   19[COMRAM] long 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;  sign            1   27[COMRAM] unsigned char 
 11379 ;;  arg             4   29[COMRAM] unsigned long 
 11380 ;;  exp             1   28[COMRAM] unsigned char 
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  4   19[COMRAM] unsigned char 
 11383 ;; Registers used:
 11384 ;;		wreg, status,2, status,0
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11391 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11392 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11393 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11394 ;;Total ram usage:       14 bytes
 11395 ;; Hardware stack levels used: 1
 11396 ;; Hardware stack levels required when called: 3
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		_MPU6050_Read
 11401 ;;		_TMR0handler
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           	psect	text34
 11406  00465A                     __ptext34:
 11407                           	callstack 0
 11408  00465A                     ___xxtofl:
 11409                           	callstack 26
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;incstack = 0
 11413                           ;___xxtofl@sign stored from wreg
 11414  00465A  6E1C               	movwf	___xxtofl@sign^0,c
 11415  00465C  501C               	movf	___xxtofl@sign^0,w,c
 11416  00465E  B4D8               	btfsc	status,2,c
 11417  004660  EF34  F023         	goto	u8741
 11418  004664  EF36  F023         	goto	u8740
 11419  004668                     u8741:
 11420  004668  EF58  F023         	goto	l967
 11421  00466C                     u8740:
 11422  00466C  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
 11423  00466E  EF3D  F023         	goto	u8750
 11424  004672  EF3B  F023         	goto	u8751
 11425  004676                     u8751:
 11426  004676  EF58  F023         	goto	l967
 11427  00467A                     u8750:
 11428  00467A  C014  F018         	movff	___xxtofl@val,??___xxtofl
 11429  00467E  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
 11430  004682  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
 11431  004686  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
 11432  00468A  1E18               	comf	??___xxtofl^0,f,c
 11433  00468C  1E19               	comf	(??___xxtofl+1)^0,f,c
 11434  00468E  1E1A               	comf	(??___xxtofl+2)^0,f,c
 11435  004690  1E1B               	comf	(??___xxtofl+3)^0,f,c
 11436  004692  2A18               	incf	??___xxtofl^0,f,c
 11437  004694  0E00               	movlw	0
 11438  004696  2219               	addwfc	(??___xxtofl+1)^0,f,c
 11439  004698  221A               	addwfc	(??___xxtofl+2)^0,f,c
 11440  00469A  221B               	addwfc	(??___xxtofl+3)^0,f,c
 11441  00469C  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
 11442  0046A0  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
 11443  0046A4  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
 11444  0046A8  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
 11445  0046AC  EF60  F023         	goto	l7942
 11446  0046B0                     l967:
 11447  0046B0  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
 11448  0046B4  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11449  0046B8  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11450  0046BC  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11451  0046C0                     l7942:
 11452  0046C0  5014               	movf	___xxtofl@val^0,w,c
 11453  0046C2  1015               	iorwf	(___xxtofl@val+1)^0,w,c
 11454  0046C4  1016               	iorwf	(___xxtofl@val+2)^0,w,c
 11455  0046C6  1017               	iorwf	(___xxtofl@val+3)^0,w,c
 11456  0046C8  A4D8               	btfss	status,2,c
 11457  0046CA  EF69  F023         	goto	u8761
 11458  0046CE  EF6B  F023         	goto	u8760
 11459  0046D2                     u8761:
 11460  0046D2  EF75  F023         	goto	l7948
 11461  0046D6                     u8760:
 11462  0046D6  0E00               	movlw	0
 11463  0046D8  6E14               	movwf	?___xxtofl^0,c
 11464  0046DA  0E00               	movlw	0
 11465  0046DC  6E15               	movwf	(?___xxtofl+1)^0,c
 11466  0046DE  0E00               	movlw	0
 11467  0046E0  6E16               	movwf	(?___xxtofl+2)^0,c
 11468  0046E2  0E00               	movlw	0
 11469  0046E4  6E17               	movwf	(?___xxtofl+3)^0,c
 11470  0046E6  EF06  F024         	goto	l970
 11471  0046EA                     l7948:
 11472  0046EA  0E96               	movlw	150
 11473  0046EC  6E1D               	movwf	___xxtofl@exp^0,c
 11474  0046EE  EF7F  F023         	goto	l7952
 11475  0046F2                     l7950:
 11476  0046F2  2A1D               	incf	___xxtofl@exp^0,f,c
 11477  0046F4  90D8               	bcf	status,0,c
 11478  0046F6  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
 11479  0046F8  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
 11480  0046FA  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
 11481  0046FC  321E               	rrcf	___xxtofl@arg^0,f,c
 11482  0046FE                     l7952:
 11483  0046FE  0E00               	movlw	0
 11484  004700  141E               	andwf	___xxtofl@arg^0,w,c
 11485  004702  6E18               	movwf	??___xxtofl^0,c
 11486  004704  0E00               	movlw	0
 11487  004706  141F               	andwf	(___xxtofl@arg+1)^0,w,c
 11488  004708  6E19               	movwf	(??___xxtofl+1)^0,c
 11489  00470A  0E00               	movlw	0
 11490  00470C  1420               	andwf	(___xxtofl@arg+2)^0,w,c
 11491  00470E  6E1A               	movwf	(??___xxtofl+2)^0,c
 11492  004710  0EFE               	movlw	254
 11493  004712  1421               	andwf	(___xxtofl@arg+3)^0,w,c
 11494  004714  6E1B               	movwf	(??___xxtofl+3)^0,c
 11495  004716  5018               	movf	??___xxtofl^0,w,c
 11496  004718  1019               	iorwf	(??___xxtofl+1)^0,w,c
 11497  00471A  101A               	iorwf	(??___xxtofl+2)^0,w,c
 11498  00471C  101B               	iorwf	(??___xxtofl+3)^0,w,c
 11499  00471E  A4D8               	btfss	status,2,c
 11500  004720  EF94  F023         	goto	u8771
 11501  004724  EF96  F023         	goto	u8770
 11502  004728                     u8771:
 11503  004728  EF79  F023         	goto	l7950
 11504  00472C                     u8770:
 11505  00472C  EFA4  F023         	goto	l974
 11506  004730                     l7954:
 11507  004730  2A1D               	incf	___xxtofl@exp^0,f,c
 11508  004732  0E01               	movlw	1
 11509  004734  261E               	addwf	___xxtofl@arg^0,f,c
 11510  004736  0E00               	movlw	0
 11511  004738  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
 11512  00473A  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
 11513  00473C  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
 11514  00473E  90D8               	bcf	status,0,c
 11515  004740  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
 11516  004742  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
 11517  004744  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
 11518  004746  321E               	rrcf	___xxtofl@arg^0,f,c
 11519  004748                     l974:
 11520  004748  0E00               	movlw	0
 11521  00474A  141E               	andwf	___xxtofl@arg^0,w,c
 11522  00474C  6E18               	movwf	??___xxtofl^0,c
 11523  00474E  0E00               	movlw	0
 11524  004750  141F               	andwf	(___xxtofl@arg+1)^0,w,c
 11525  004752  6E19               	movwf	(??___xxtofl+1)^0,c
 11526  004754  0E00               	movlw	0
 11527  004756  1420               	andwf	(___xxtofl@arg+2)^0,w,c
 11528  004758  6E1A               	movwf	(??___xxtofl+2)^0,c
 11529  00475A  0EFF               	movlw	255
 11530  00475C  1421               	andwf	(___xxtofl@arg+3)^0,w,c
 11531  00475E  6E1B               	movwf	(??___xxtofl+3)^0,c
 11532  004760  5018               	movf	??___xxtofl^0,w,c
 11533  004762  1019               	iorwf	(??___xxtofl+1)^0,w,c
 11534  004764  101A               	iorwf	(??___xxtofl+2)^0,w,c
 11535  004766  101B               	iorwf	(??___xxtofl+3)^0,w,c
 11536  004768  A4D8               	btfss	status,2,c
 11537  00476A  EFB9  F023         	goto	u8781
 11538  00476E  EFBB  F023         	goto	u8780
 11539  004772                     u8781:
 11540  004772  EF98  F023         	goto	l7954
 11541  004776                     u8780:
 11542  004776  EFC3  F023         	goto	l7962
 11543  00477A                     l7960:
 11544  00477A  061D               	decf	___xxtofl@exp^0,f,c
 11545  00477C  90D8               	bcf	status,0,c
 11546  00477E  361E               	rlcf	___xxtofl@arg^0,f,c
 11547  004780  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
 11548  004782  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
 11549  004784  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
 11550  004786                     l7962:
 11551  004786  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
 11552  004788  EFC8  F023         	goto	u8791
 11553  00478C  EFCA  F023         	goto	u8790
 11554  004790                     u8791:
 11555  004790  EFD2  F023         	goto	l981
 11556  004794                     u8790:
 11557  004794  0E02               	movlw	2
 11558  004796  601D               	cpfslt	___xxtofl@exp^0,c
 11559  004798  EFD0  F023         	goto	u8801
 11560  00479C  EFD2  F023         	goto	u8800
 11561  0047A0                     u8801:
 11562  0047A0  EFBD  F023         	goto	l7960
 11563  0047A4                     u8800:
 11564  0047A4                     l981:
 11565  0047A4  B01D               	btfsc	___xxtofl@exp^0,0,c
 11566  0047A6  EFD7  F023         	goto	u8811
 11567  0047AA  EFD9  F023         	goto	u8810
 11568  0047AE                     u8811:
 11569  0047AE  EFDA  F023         	goto	l7968
 11570  0047B2                     u8810:
 11571  0047B2  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
 11572  0047B4                     l7968:
 11573  0047B4  90D8               	bcf	status,0,c
 11574  0047B6  321D               	rrcf	___xxtofl@exp^0,f,c
 11575  0047B8  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
 11576  0047BC  6A19               	clrf	(??___xxtofl+1)^0,c
 11577  0047BE  6A1A               	clrf	(??___xxtofl+2)^0,c
 11578  0047C0  6A1B               	clrf	(??___xxtofl+3)^0,c
 11579  0047C2  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
 11580  0047C6  6A1A               	clrf	(??___xxtofl+2)^0,c
 11581  0047C8  6A19               	clrf	(??___xxtofl+1)^0,c
 11582  0047CA  6A18               	clrf	??___xxtofl^0,c
 11583  0047CC  5018               	movf	??___xxtofl^0,w,c
 11584  0047CE  121E               	iorwf	___xxtofl@arg^0,f,c
 11585  0047D0  5019               	movf	(??___xxtofl+1)^0,w,c
 11586  0047D2  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
 11587  0047D4  501A               	movf	(??___xxtofl+2)^0,w,c
 11588  0047D6  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
 11589  0047D8  501B               	movf	(??___xxtofl+3)^0,w,c
 11590  0047DA  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
 11591  0047DC  501C               	movf	___xxtofl@sign^0,w,c
 11592  0047DE  B4D8               	btfsc	status,2,c
 11593  0047E0  EFF4  F023         	goto	u8821
 11594  0047E4  EFF6  F023         	goto	u8820
 11595  0047E8                     u8821:
 11596  0047E8  EFFE  F023         	goto	l7978
 11597  0047EC                     u8820:
 11598  0047EC  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
 11599  0047EE  EFFD  F023         	goto	u8830
 11600  0047F2  EFFB  F023         	goto	u8831
 11601  0047F6                     u8831:
 11602  0047F6  EFFE  F023         	goto	l7978
 11603  0047FA                     u8830:
 11604  0047FA  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
 11605  0047FC                     l7978:
 11606  0047FC  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
 11607  004800  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
 11608  004804  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
 11609  004808  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
 11610  00480C                     l970:
 11611  00480C  0012               	return		;funcret
 11612  00480E                     __end_of___xxtofl:
 11613                           	callstack 0
 11614                           
 11615 ;; *************** function _UART_Write_String *****************
 11616 ;; Defined at:
 11617 ;;		line 503 in file "Le_Jason_Project.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;  buf             2   20[COMRAM] PTR unsigned char 
 11620 ;;		 -> MPU6050_Read@buffer(40), 
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;  i               2   22[COMRAM] int 
 11623 ;; Return value:  Size  Location     Type
 11624 ;;                  1    wreg      void 
 11625 ;; Registers used:
 11626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11627 ;; Tracked objects:
 11628 ;;		On entry : 0/0
 11629 ;;		On exit  : 0/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11636 ;;Total ram usage:        4 bytes
 11637 ;; Hardware stack levels used: 1
 11638 ;; Hardware stack levels required when called: 4
 11639 ;; This function calls:
 11640 ;;		_UART_Write
 11641 ;; This function is called by:
 11642 ;;		_MPU6050_Read
 11643 ;; This function uses a non-reentrant model
 11644 ;;
 11645                           
 11646                           	psect	text35
 11647  005B92                     __ptext35:
 11648                           	callstack 0
 11649  005B92                     _UART_Write_String:
 11650                           	callstack 25
 11651  005B92                     
 11652                           ;Le_Jason_Project.c: 504:     int i = 0;
 11653  005B92  0E00               	movlw	0
 11654  005B94  6E18               	movwf	(UART_Write_String@i+1)^0,c
 11655  005B96  0E00               	movlw	0
 11656  005B98  6E17               	movwf	UART_Write_String@i^0,c
 11657                           
 11658                           ;Le_Jason_Project.c: 505:     while(buf[i] != '\0')
 11659  005B9A  EFDA  F02D         	goto	l7934
 11660  005B9E                     l7930:
 11661                           
 11662                           ;Le_Jason_Project.c: 506:         UART_Write(buf[i++]);
 11663  005B9E  5017               	movf	UART_Write_String@i^0,w,c
 11664  005BA0  2415               	addwf	UART_Write_String@buf^0,w,c
 11665  005BA2  6ED9               	movwf	fsr2l,c
 11666  005BA4  5018               	movf	(UART_Write_String@i+1)^0,w,c
 11667  005BA6  2016               	addwfc	(UART_Write_String@buf+1)^0,w,c
 11668  005BA8  6EDA               	movwf	fsr2h,c
 11669  005BAA  50DF               	movf	indf2,w,c
 11670  005BAC  ECA7  F02E         	call	_UART_Write
 11671  005BB0  4A17               	infsnz	UART_Write_String@i^0,f,c
 11672  005BB2  2A18               	incf	(UART_Write_String@i+1)^0,f,c
 11673  005BB4                     l7934:
 11674                           
 11675                           ;Le_Jason_Project.c: 505:     while(buf[i] != '\0')
 11676  005BB4  5017               	movf	UART_Write_String@i^0,w,c
 11677  005BB6  2415               	addwf	UART_Write_String@buf^0,w,c
 11678  005BB8  6ED9               	movwf	fsr2l,c
 11679  005BBA  5018               	movf	(UART_Write_String@i+1)^0,w,c
 11680  005BBC  2016               	addwfc	(UART_Write_String@buf+1)^0,w,c
 11681  005BBE  6EDA               	movwf	fsr2h,c
 11682  005BC0  50DF               	movf	indf2,w,c
 11683  005BC2  A4D8               	btfss	status,2,c
 11684  005BC4  EFE6  F02D         	goto	u8731
 11685  005BC8  EFE8  F02D         	goto	u8730
 11686  005BCC                     u8731:
 11687  005BCC  EFCF  F02D         	goto	l7930
 11688  005BD0                     u8730:
 11689  005BD0  0012               	return		;funcret
 11690  005BD2                     __end_of_UART_Write_String:
 11691                           	callstack 0
 11692                           
 11693 ;; *************** function _UART_Write *****************
 11694 ;; Defined at:
 11695 ;;		line 497 in file "Le_Jason_Project.c"
 11696 ;; Parameters:    Size  Location     Type
 11697 ;;  data            1    wreg     unsigned char 
 11698 ;; Auto vars:     Size  Location     Type
 11699 ;;  data            1   19[COMRAM] unsigned char 
 11700 ;; Return value:  Size  Location     Type
 11701 ;;                  1    wreg      void 
 11702 ;; Registers used:
 11703 ;;		wreg
 11704 ;; Tracked objects:
 11705 ;;		On entry : 0/0
 11706 ;;		On exit  : 0/0
 11707 ;;		Unchanged: 0/0
 11708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11713 ;;Total ram usage:        1 bytes
 11714 ;; Hardware stack levels used: 1
 11715 ;; Hardware stack levels required when called: 3
 11716 ;; This function calls:
 11717 ;;		Nothing
 11718 ;; This function is called by:
 11719 ;;		_UART_Write_String
 11720 ;; This function uses a non-reentrant model
 11721 ;;
 11722                           
 11723                           	psect	text36
 11724  005D4E                     __ptext36:
 11725                           	callstack 0
 11726  005D4E                     _UART_Write:
 11727                           	callstack 25
 11728                           
 11729                           ;incstack = 0
 11730                           ;UART_Write@data stored from wreg
 11731  005D4E  6E14               	movwf	UART_Write@data^0,c
 11732  005D50                     l300:
 11733                           
 11734                           ;Le_Jason_Project.c: 498:     while(PIR1bits.TX1IF == 0){
 11735  005D50  A89E               	btfss	158,4,c	;volatile
 11736  005D52  EFAD  F02E         	goto	u8401
 11737  005D56  EFAF  F02E         	goto	u8400
 11738  005D5A                     u8401:
 11739  005D5A  EFA8  F02E         	goto	l300
 11740  005D5E                     u8400:
 11741  005D5E                     
 11742                           ;Le_Jason_Project.c: 500:     TXREG1 = data;
 11743  005D5E  C014  FFAD         	movff	UART_Write@data,4013	;volatile
 11744  005D62  0012               	return		;funcret
 11745  005D64                     __end_of_UART_Write:
 11746                           	callstack 0
 11747                           
 11748 ;; *************** function _Servo2 *****************
 11749 ;; Defined at:
 11750 ;;		line 332 in file "Le_Jason_Project.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  angle           2   52[COMRAM] unsigned int 
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;  temp            2    8[BANK0 ] unsigned int 
 11755 ;; Return value:  Size  Location     Type
 11756 ;;                  1    wreg      void 
 11757 ;; Registers used:
 11758 ;;		wreg, status,2, status,0, cstack
 11759 ;; Tracked objects:
 11760 ;;		On entry : 0/0
 11761 ;;		On exit  : 0/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11765 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11766 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11767 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11768 ;;Total ram usage:       12 bytes
 11769 ;; Hardware stack levels used: 1
 11770 ;; Hardware stack levels required when called: 5
 11771 ;; This function calls:
 11772 ;;		_map
 11773 ;; This function is called by:
 11774 ;;		_main
 11775 ;;		_MPU6050_Read
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           	psect	text37
 11780  005550                     __ptext37:
 11781                           	callstack 0
 11782  005550                     _Servo2:
 11783                           	callstack 25
 11784  005550                     
 11785                           ;Le_Jason_Project.c: 337:     SSP1CON2bits.SEN = 1;
 11786  005550  5036               	movf	(Servo2@angle+1)^0,w,c
 11787  005552  E109               	bnz	u8540
 11788  005554  0EB5               	movlw	181
 11789  005556  5C35               	subwf	Servo2@angle^0,w,c
 11790  005558  A0D8               	btfss	status,0,c
 11791  00555A  EFB1  F02A         	goto	u8541
 11792  00555E  EFB3  F02A         	goto	u8540
 11793  005562                     u8541:
 11794  005562  EFB7  F02A         	goto	l7698
 11795  005566                     u8540:
 11796  005566                     
 11797                           ;Le_Jason_Project.c: 338: }
 11798  005566  0E00               	movlw	0
 11799  005568  6E36               	movwf	(Servo2@angle+1)^0,c
 11800  00556A  0EB4               	movlw	180
 11801  00556C  6E35               	movwf	Servo2@angle^0,c
 11802  00556E                     l7698:
 11803                           
 11804                           ;Le_Jason_Project.c: 343:     I2C_Master_Write(add);
 11805  00556E  C043  F068         	movff	_Servo2_on,Servo2@temp
 11806  005572  C044  F069         	movff	_Servo2_on+1,Servo2@temp+1
 11807  005576                     
 11808                           ;Le_Jason_Project.c: 344: }
 11809  005576  C035  F021         	movff	Servo2@angle,map@value
 11810  00557A  C036  F022         	movff	Servo2@angle+1,map@value+1
 11811  00557E  0E00               	movlw	0
 11812  005580  6E24               	movwf	(map@valuemin+1)^0,c
 11813  005582  0E00               	movlw	0
 11814  005584  6E23               	movwf	map@valuemin^0,c
 11815  005586  0E00               	movlw	0
 11816  005588  6E26               	movwf	(map@valuemax+1)^0,c
 11817  00558A  0EB4               	movlw	180
 11818  00558C  6E25               	movwf	map@valuemax^0,c
 11819  00558E  0E07               	movlw	7
 11820  005590  6E28               	movwf	(map@newmin+1)^0,c
 11821  005592  0ED0               	movlw	208
 11822  005594  6E27               	movwf	map@newmin^0,c
 11823  005596  0E25               	movlw	37
 11824  005598  6E2A               	movwf	(map@newmax+1)^0,c
 11825  00559A  0E80               	movlw	128
 11826  00559C  6E29               	movwf	map@newmax^0,c
 11827  00559E  EC9E  F02B         	call	_map	;wreg free
 11828  0055A2  C021  F043         	movff	?_map,_Servo2_on
 11829  0055A6  C022  F044         	movff	?_map+1,_Servo2_on+1
 11830  0055AA  6A45               	clrf	(_Servo2_on+2)^0,c
 11831  0055AC  6A46               	clrf	(_Servo2_on+3)^0,c
 11832  0055AE                     
 11833                           ;Le_Jason_Project.c: 345: 
 11834  0055AE  0100               	movlb	0	; () banked
 11835  0055B0  5168               	movf	Servo2@temp& (0+255),w,b
 11836  0055B2  6F60               	movwf	??_Servo2& (0+255),b
 11837  0055B4  5169               	movf	(Servo2@temp+1)& (0+255),w,b
 11838  0055B6  6F61               	movwf	(??_Servo2+1)& (0+255),b
 11839  0055B8  6B62               	clrf	(??_Servo2+2)& (0+255),b
 11840  0055BA  6B63               	clrf	(??_Servo2+3)& (0+255),b
 11841  0055BC  5160               	movf	??_Servo2& (0+255),w,b
 11842  0055BE  5C43               	subwf	_Servo2_on^0,w,c
 11843  0055C0  6F64               	movwf	(??_Servo2+4)& (0+255),b
 11844  0055C2  5161               	movf	(??_Servo2+1)& (0+255),w,b
 11845  0055C4  5844               	subwfb	(_Servo2_on+1)^0,w,c
 11846  0055C6  6F65               	movwf	(??_Servo2+5)& (0+255),b
 11847  0055C8  5162               	movf	(??_Servo2+2)& (0+255),w,b
 11848  0055CA  5845               	subwfb	(_Servo2_on+2)^0,w,c
 11849  0055CC  6F66               	movwf	(??_Servo2+6)& (0+255),b
 11850  0055CE  5163               	movf	(??_Servo2+3)& (0+255),w,b
 11851  0055D0  5846               	subwfb	(_Servo2_on+3)^0,w,c
 11852  0055D2  6F67               	movwf	(??_Servo2+7)& (0+255),b
 11853  0055D4  5164               	movf	(??_Servo2+4)& (0+255),w,b
 11854  0055D6  0101               	movlb	1	; () banked
 11855  0055D8  5FF6               	subwf	_Servo2_off& (0+255),f,b
 11856  0055DA  0100               	movlb	0	; () banked
 11857  0055DC  5165               	movf	(??_Servo2+5)& (0+255),w,b
 11858  0055DE  0101               	movlb	1	; () banked
 11859  0055E0  5BF7               	subwfb	(_Servo2_off+1)& (0+255),f,b
 11860  0055E2  0100               	movlb	0	; () banked
 11861  0055E4  5166               	movf	(??_Servo2+6)& (0+255),w,b
 11862  0055E6  0101               	movlb	1	; () banked
 11863  0055E8  5BF8               	subwfb	(_Servo2_off+2)& (0+255),f,b
 11864  0055EA  0100               	movlb	0	; () banked
 11865  0055EC  5167               	movf	(??_Servo2+7)& (0+255),w,b
 11866  0055EE  0101               	movlb	1	; () banked
 11867  0055F0  5BF9               	subwfb	(_Servo2_off+3)& (0+255),f,b
 11868  0055F2                     
 11869                           ; BSR set to: 1
 11870  0055F2  0012               	return		;funcret
 11871  0055F4                     __end_of_Servo2:
 11872                           	callstack 0
 11873                           
 11874 ;; *************** function _Servo1 *****************
 11875 ;; Defined at:
 11876 ;;		line 317 in file "Le_Jason_Project.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;  angle           2   52[COMRAM] unsigned int 
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;  temp            2    8[BANK0 ] unsigned int 
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  1    wreg      void 
 11883 ;; Registers used:
 11884 ;;		wreg, status,2, status,0, cstack
 11885 ;; Tracked objects:
 11886 ;;		On entry : 0/0
 11887 ;;		On exit  : 0/0
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11891 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11892 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11893 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11894 ;;Total ram usage:       12 bytes
 11895 ;; Hardware stack levels used: 1
 11896 ;; Hardware stack levels required when called: 5
 11897 ;; This function calls:
 11898 ;;		_map
 11899 ;; This function is called by:
 11900 ;;		_main
 11901 ;;		_MPU6050_Read
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           	psect	text38
 11906  0055F4                     __ptext38:
 11907                           	callstack 0
 11908  0055F4                     _Servo1:
 11909                           	callstack 25
 11910  0055F4                     
 11911                           ;Le_Jason_Project.c: 322:     if(angle < 0){
 11912  0055F4  5036               	movf	(Servo1@angle+1)^0,w,c
 11913  0055F6  E109               	bnz	u8530
 11914  0055F8  0EB5               	movlw	181
 11915  0055FA  5C35               	subwf	Servo1@angle^0,w,c
 11916  0055FC  A0D8               	btfss	status,0,c
 11917  0055FE  EF03  F02B         	goto	u8531
 11918  005602  EF05  F02B         	goto	u8530
 11919  005606                     u8531:
 11920  005606  EF09  F02B         	goto	l7682
 11921  00560A                     u8530:
 11922  00560A                     
 11923                           ;Le_Jason_Project.c: 323:         angle = 0;
 11924  00560A  0E00               	movlw	0
 11925  00560C  6E36               	movwf	(Servo1@angle+1)^0,c
 11926  00560E  0EB4               	movlw	180
 11927  005610  6E35               	movwf	Servo1@angle^0,c
 11928  005612                     l7682:
 11929                           
 11930                           ;Le_Jason_Project.c: 328: }
 11931  005612  C047  F068         	movff	_Servo1_on,Servo1@temp
 11932  005616  C048  F069         	movff	_Servo1_on+1,Servo1@temp+1
 11933  00561A                     
 11934                           ;Le_Jason_Project.c: 329: 
 11935  00561A  C035  F021         	movff	Servo1@angle,map@value
 11936  00561E  C036  F022         	movff	Servo1@angle+1,map@value+1
 11937  005622  0E00               	movlw	0
 11938  005624  6E24               	movwf	(map@valuemin+1)^0,c
 11939  005626  0E00               	movlw	0
 11940  005628  6E23               	movwf	map@valuemin^0,c
 11941  00562A  0E00               	movlw	0
 11942  00562C  6E26               	movwf	(map@valuemax+1)^0,c
 11943  00562E  0EB4               	movlw	180
 11944  005630  6E25               	movwf	map@valuemax^0,c
 11945  005632  0E07               	movlw	7
 11946  005634  6E28               	movwf	(map@newmin+1)^0,c
 11947  005636  0ED0               	movlw	208
 11948  005638  6E27               	movwf	map@newmin^0,c
 11949  00563A  0E25               	movlw	37
 11950  00563C  6E2A               	movwf	(map@newmax+1)^0,c
 11951  00563E  0E80               	movlw	128
 11952  005640  6E29               	movwf	map@newmax^0,c
 11953  005642  EC9E  F02B         	call	_map	;wreg free
 11954  005646  C021  F047         	movff	?_map,_Servo1_on
 11955  00564A  C022  F048         	movff	?_map+1,_Servo1_on+1
 11956  00564E  6A49               	clrf	(_Servo1_on+2)^0,c
 11957  005650  6A4A               	clrf	(_Servo1_on+3)^0,c
 11958  005652                     
 11959                           ;Le_Jason_Project.c: 330: void I2C_Master_Wait(void){
 11960  005652  0100               	movlb	0	; () banked
 11961  005654  5168               	movf	Servo1@temp& (0+255),w,b
 11962  005656  6F60               	movwf	??_Servo1& (0+255),b
 11963  005658  5169               	movf	(Servo1@temp+1)& (0+255),w,b
 11964  00565A  6F61               	movwf	(??_Servo1+1)& (0+255),b
 11965  00565C  6B62               	clrf	(??_Servo1+2)& (0+255),b
 11966  00565E  6B63               	clrf	(??_Servo1+3)& (0+255),b
 11967  005660  5160               	movf	??_Servo1& (0+255),w,b
 11968  005662  5C47               	subwf	_Servo1_on^0,w,c
 11969  005664  6F64               	movwf	(??_Servo1+4)& (0+255),b
 11970  005666  5161               	movf	(??_Servo1+1)& (0+255),w,b
 11971  005668  5848               	subwfb	(_Servo1_on+1)^0,w,c
 11972  00566A  6F65               	movwf	(??_Servo1+5)& (0+255),b
 11973  00566C  5162               	movf	(??_Servo1+2)& (0+255),w,b
 11974  00566E  5849               	subwfb	(_Servo1_on+2)^0,w,c
 11975  005670  6F66               	movwf	(??_Servo1+6)& (0+255),b
 11976  005672  5163               	movf	(??_Servo1+3)& (0+255),w,b
 11977  005674  584A               	subwfb	(_Servo1_on+3)^0,w,c
 11978  005676  6F67               	movwf	(??_Servo1+7)& (0+255),b
 11979  005678  5164               	movf	(??_Servo1+4)& (0+255),w,b
 11980  00567A  0101               	movlb	1	; () banked
 11981  00567C  5FFA               	subwf	_Servo1_off& (0+255),f,b
 11982  00567E  0100               	movlb	0	; () banked
 11983  005680  5165               	movf	(??_Servo1+5)& (0+255),w,b
 11984  005682  0101               	movlb	1	; () banked
 11985  005684  5BFB               	subwfb	(_Servo1_off+1)& (0+255),f,b
 11986  005686  0100               	movlb	0	; () banked
 11987  005688  5166               	movf	(??_Servo1+6)& (0+255),w,b
 11988  00568A  0101               	movlb	1	; () banked
 11989  00568C  5BFC               	subwfb	(_Servo1_off+2)& (0+255),f,b
 11990  00568E  0100               	movlb	0	; () banked
 11991  005690  5167               	movf	(??_Servo1+7)& (0+255),w,b
 11992  005692  0101               	movlb	1	; () banked
 11993  005694  5BFD               	subwfb	(_Servo1_off+3)& (0+255),f,b
 11994  005696                     
 11995                           ; BSR set to: 1
 11996  005696  0012               	return		;funcret
 11997  005698                     __end_of_Servo1:
 11998                           	callstack 0
 11999                           
 12000 ;; *************** function _map *****************
 12001 ;; Defined at:
 12002 ;;		line 310 in file "Le_Jason_Project.c"
 12003 ;; Parameters:    Size  Location     Type
 12004 ;;  value           2   32[COMRAM] unsigned int 
 12005 ;;  valuemin        2   34[COMRAM] unsigned int 
 12006 ;;  valuemax        2   36[COMRAM] unsigned int 
 12007 ;;  newmin          2   38[COMRAM] unsigned int 
 12008 ;;  newmax          2   40[COMRAM] unsigned int 
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;  second          4   44[COMRAM] unsigned long 
 12011 ;;  third           2   50[COMRAM] unsigned int 
 12012 ;;  first           2   48[COMRAM] unsigned int 
 12013 ;; Return value:  Size  Location     Type
 12014 ;;                  2   32[COMRAM] unsigned int 
 12015 ;; Registers used:
 12016 ;;		wreg, status,2, status,0, cstack
 12017 ;; Tracked objects:
 12018 ;;		On entry : 0/0
 12019 ;;		On exit  : 0/0
 12020 ;;		Unchanged: 0/0
 12021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12022 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12023 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12025 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12026 ;;Total ram usage:       20 bytes
 12027 ;; Hardware stack levels used: 1
 12028 ;; Hardware stack levels required when called: 4
 12029 ;; This function calls:
 12030 ;;		___lldiv
 12031 ;;		___lmul
 12032 ;; This function is called by:
 12033 ;;		_Servo1
 12034 ;;		_Servo2
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038                           	psect	text39
 12039  00573C                     __ptext39:
 12040                           	callstack 0
 12041  00573C                     _map:
 12042                           	callstack 25
 12043  00573C                     
 12044                           ;Le_Jason_Project.c: 311:     Servo1_on = map(angle,0,180,2000,9600);
 12045  00573C  5023               	movf	map@valuemin^0,w,c
 12046  00573E  5C21               	subwf	map@value^0,w,c
 12047  005740  6E31               	movwf	map@first^0,c
 12048  005742  5024               	movf	(map@valuemin+1)^0,w,c
 12049  005744  5822               	subwfb	(map@value+1)^0,w,c
 12050  005746  6E32               	movwf	(map@first+1)^0,c
 12051  005748                     
 12052                           ;Le_Jason_Project.c: 312:     Servo1_off -= Servo1_on - temp;
 12053  005748  C031  F014         	movff	map@first,___lmul@multiplier
 12054  00574C  C032  F015         	movff	map@first+1,___lmul@multiplier+1
 12055  005750  6A16               	clrf	(___lmul@multiplier+2)^0,c
 12056  005752  6A17               	clrf	(___lmul@multiplier+3)^0,c
 12057  005754  5027               	movf	map@newmin^0,w,c
 12058  005756  5C29               	subwf	map@newmax^0,w,c
 12059  005758  6E18               	movwf	___lmul@multiplicand^0,c
 12060  00575A  5028               	movf	(map@newmin+1)^0,w,c
 12061  00575C  582A               	subwfb	(map@newmax+1)^0,w,c
 12062  00575E  6E19               	movwf	(___lmul@multiplicand+1)^0,c
 12063  005760  6A1A               	clrf	(___lmul@multiplicand+2)^0,c
 12064  005762  A0D8               	btfss	status,0,c
 12065  005764  061A               	decf	(___lmul@multiplicand+2)^0,f,c
 12066  005766  501A               	movf	(___lmul@multiplicand+2)^0,w,c
 12067  005768  6E1B               	movwf	(___lmul@multiplicand+3)^0,c
 12068  00576A  EC17  F02C         	call	___lmul	;wreg free
 12069  00576E  C014  F02D         	movff	?___lmul,map@second
 12070  005772  C015  F02E         	movff	?___lmul+1,map@second+1
 12071  005776  C016  F02F         	movff	?___lmul+2,map@second+2
 12072  00577A  C017  F030         	movff	?___lmul+3,map@second+3
 12073  00577E                     
 12074                           ;Le_Jason_Project.c: 313: }
 12075  00577E  C02D  F014         	movff	map@second,___lldiv@dividend
 12076  005782  C02E  F015         	movff	map@second+1,___lldiv@dividend+1
 12077  005786  C02F  F016         	movff	map@second+2,___lldiv@dividend+2
 12078  00578A  C030  F017         	movff	map@second+3,___lldiv@dividend+3
 12079  00578E  5023               	movf	map@valuemin^0,w,c
 12080  005790  5C25               	subwf	map@valuemax^0,w,c
 12081  005792  6E2B               	movwf	??_map^0,c
 12082  005794  5024               	movf	(map@valuemin+1)^0,w,c
 12083  005796  5826               	subwfb	(map@valuemax+1)^0,w,c
 12084  005798  6E2C               	movwf	(??_map+1)^0,c
 12085  00579A  C02B  F018         	movff	??_map,___lldiv@divisor
 12086  00579E  C02C  F019         	movff	??_map+1,___lldiv@divisor+1
 12087  0057A2  6A1A               	clrf	(___lldiv@divisor+2)^0,c
 12088  0057A4  6A1B               	clrf	(___lldiv@divisor+3)^0,c
 12089  0057A6  EC4C  F02B         	call	___lldiv	;wreg free
 12090  0057AA  C014  F033         	movff	?___lldiv,map@third
 12091  0057AE  C015  F034         	movff	?___lldiv+1,map@third+1
 12092                           
 12093                           ;Le_Jason_Project.c: 314: void Servo2(unsigned int angle){
 12094  0057B2  5027               	movf	map@newmin^0,w,c
 12095  0057B4  2433               	addwf	map@third^0,w,c
 12096  0057B6  6E21               	movwf	?_map^0,c
 12097  0057B8  5028               	movf	(map@newmin+1)^0,w,c
 12098  0057BA  2034               	addwfc	(map@third+1)^0,w,c
 12099  0057BC  6E22               	movwf	(?_map+1)^0,c
 12100  0057BE  0012               	return		;funcret
 12101  0057C0                     __end_of_map:
 12102                           	callstack 0
 12103                           
 12104 ;; *************** function ___lmul *****************
 12105 ;; Defined at:
 12106 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;  multiplier      4   19[COMRAM] unsigned long 
 12109 ;;  multiplicand    4   23[COMRAM] unsigned long 
 12110 ;; Auto vars:     Size  Location     Type
 12111 ;;  product         4   27[COMRAM] unsigned long 
 12112 ;; Return value:  Size  Location     Type
 12113 ;;                  4   19[COMRAM] unsigned long 
 12114 ;; Registers used:
 12115 ;;		wreg, status,2, status,0
 12116 ;; Tracked objects:
 12117 ;;		On entry : 0/0
 12118 ;;		On exit  : 0/0
 12119 ;;		Unchanged: 0/0
 12120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12121 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12122 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12124 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12125 ;;Total ram usage:       12 bytes
 12126 ;; Hardware stack levels used: 1
 12127 ;; Hardware stack levels required when called: 3
 12128 ;; This function calls:
 12129 ;;		Nothing
 12130 ;; This function is called by:
 12131 ;;		_map
 12132 ;; This function uses a non-reentrant model
 12133 ;;
 12134                           
 12135                           	psect	text40
 12136  00582E                     __ptext40:
 12137                           	callstack 0
 12138  00582E                     ___lmul:
 12139                           	callstack 25
 12140  00582E  0E00               	movlw	0
 12141  005830  6E1C               	movwf	___lmul@product^0,c
 12142  005832  0E00               	movlw	0
 12143  005834  6E1D               	movwf	(___lmul@product+1)^0,c
 12144  005836  0E00               	movlw	0
 12145  005838  6E1E               	movwf	(___lmul@product+2)^0,c
 12146  00583A  0E00               	movlw	0
 12147  00583C  6E1F               	movwf	(___lmul@product+3)^0,c
 12148  00583E                     l7424:
 12149  00583E  A014               	btfss	___lmul@multiplier^0,0,c
 12150  005840  EF24  F02C         	goto	u8181
 12151  005844  EF26  F02C         	goto	u8180
 12152  005848                     u8181:
 12153  005848  EF2E  F02C         	goto	l7428
 12154  00584C                     u8180:
 12155  00584C  5018               	movf	___lmul@multiplicand^0,w,c
 12156  00584E  261C               	addwf	___lmul@product^0,f,c
 12157  005850  5019               	movf	(___lmul@multiplicand+1)^0,w,c
 12158  005852  221D               	addwfc	(___lmul@product+1)^0,f,c
 12159  005854  501A               	movf	(___lmul@multiplicand+2)^0,w,c
 12160  005856  221E               	addwfc	(___lmul@product+2)^0,f,c
 12161  005858  501B               	movf	(___lmul@multiplicand+3)^0,w,c
 12162  00585A  221F               	addwfc	(___lmul@product+3)^0,f,c
 12163  00585C                     l7428:
 12164  00585C  90D8               	bcf	status,0,c
 12165  00585E  3618               	rlcf	___lmul@multiplicand^0,f,c
 12166  005860  3619               	rlcf	(___lmul@multiplicand+1)^0,f,c
 12167  005862  361A               	rlcf	(___lmul@multiplicand+2)^0,f,c
 12168  005864  361B               	rlcf	(___lmul@multiplicand+3)^0,f,c
 12169  005866  90D8               	bcf	status,0,c
 12170  005868  3217               	rrcf	(___lmul@multiplier+3)^0,f,c
 12171  00586A  3216               	rrcf	(___lmul@multiplier+2)^0,f,c
 12172  00586C  3215               	rrcf	(___lmul@multiplier+1)^0,f,c
 12173  00586E  3214               	rrcf	___lmul@multiplier^0,f,c
 12174  005870  5014               	movf	___lmul@multiplier^0,w,c
 12175  005872  1015               	iorwf	(___lmul@multiplier+1)^0,w,c
 12176  005874  1016               	iorwf	(___lmul@multiplier+2)^0,w,c
 12177  005876  1017               	iorwf	(___lmul@multiplier+3)^0,w,c
 12178  005878  A4D8               	btfss	status,2,c
 12179  00587A  EF41  F02C         	goto	u8191
 12180  00587E  EF43  F02C         	goto	u8190
 12181  005882                     u8191:
 12182  005882  EF1F  F02C         	goto	l7424
 12183  005886                     u8190:
 12184  005886  C01C  F014         	movff	___lmul@product,?___lmul
 12185  00588A  C01D  F015         	movff	___lmul@product+1,?___lmul+1
 12186  00588E  C01E  F016         	movff	___lmul@product+2,?___lmul+2
 12187  005892  C01F  F017         	movff	___lmul@product+3,?___lmul+3
 12188  005896  0012               	return		;funcret
 12189  005898                     __end_of___lmul:
 12190                           	callstack 0
 12191                           
 12192 ;; *************** function ___lldiv *****************
 12193 ;; Defined at:
 12194 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;  dividend        4   19[COMRAM] unsigned long 
 12197 ;;  divisor         4   23[COMRAM] unsigned long 
 12198 ;; Auto vars:     Size  Location     Type
 12199 ;;  quotient        4   27[COMRAM] unsigned long 
 12200 ;;  counter         1   31[COMRAM] unsigned char 
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  4   19[COMRAM] unsigned long 
 12203 ;; Registers used:
 12204 ;;		wreg, status,2, status,0
 12205 ;; Tracked objects:
 12206 ;;		On entry : 0/0
 12207 ;;		On exit  : 0/0
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12210 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12211 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12213 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12214 ;;Total ram usage:       13 bytes
 12215 ;; Hardware stack levels used: 1
 12216 ;; Hardware stack levels required when called: 3
 12217 ;; This function calls:
 12218 ;;		Nothing
 12219 ;; This function is called by:
 12220 ;;		_map
 12221 ;; This function uses a non-reentrant model
 12222 ;;
 12223                           
 12224                           	psect	text41
 12225  005698                     __ptext41:
 12226                           	callstack 0
 12227  005698                     ___lldiv:
 12228                           	callstack 25
 12229  005698  0E00               	movlw	0
 12230  00569A  6E1C               	movwf	___lldiv@quotient^0,c
 12231  00569C  0E00               	movlw	0
 12232  00569E  6E1D               	movwf	(___lldiv@quotient+1)^0,c
 12233  0056A0  0E00               	movlw	0
 12234  0056A2  6E1E               	movwf	(___lldiv@quotient+2)^0,c
 12235  0056A4  0E00               	movlw	0
 12236  0056A6  6E1F               	movwf	(___lldiv@quotient+3)^0,c
 12237  0056A8  5018               	movf	___lldiv@divisor^0,w,c
 12238  0056AA  1019               	iorwf	(___lldiv@divisor+1)^0,w,c
 12239  0056AC  101A               	iorwf	(___lldiv@divisor+2)^0,w,c
 12240  0056AE  101B               	iorwf	(___lldiv@divisor+3)^0,w,c
 12241  0056B0  B4D8               	btfsc	status,2,c
 12242  0056B2  EF5D  F02B         	goto	u8201
 12243  0056B6  EF5F  F02B         	goto	u8200
 12244  0056BA                     u8201:
 12245  0056BA  EF95  F02B         	goto	l339
 12246  0056BE                     u8200:
 12247  0056BE  0E01               	movlw	1
 12248  0056C0  6E20               	movwf	___lldiv@counter^0,c
 12249  0056C2  EF69  F02B         	goto	l7440
 12250  0056C6                     l7438:
 12251  0056C6  90D8               	bcf	status,0,c
 12252  0056C8  3618               	rlcf	___lldiv@divisor^0,f,c
 12253  0056CA  3619               	rlcf	(___lldiv@divisor+1)^0,f,c
 12254  0056CC  361A               	rlcf	(___lldiv@divisor+2)^0,f,c
 12255  0056CE  361B               	rlcf	(___lldiv@divisor+3)^0,f,c
 12256  0056D0  2A20               	incf	___lldiv@counter^0,f,c
 12257  0056D2                     l7440:
 12258  0056D2  AE1B               	btfss	(___lldiv@divisor+3)^0,7,c
 12259  0056D4  EF6E  F02B         	goto	u8211
 12260  0056D8  EF70  F02B         	goto	u8210
 12261  0056DC                     u8211:
 12262  0056DC  EF63  F02B         	goto	l7438
 12263  0056E0                     u8210:
 12264  0056E0                     l7442:
 12265  0056E0  90D8               	bcf	status,0,c
 12266  0056E2  361C               	rlcf	___lldiv@quotient^0,f,c
 12267  0056E4  361D               	rlcf	(___lldiv@quotient+1)^0,f,c
 12268  0056E6  361E               	rlcf	(___lldiv@quotient+2)^0,f,c
 12269  0056E8  361F               	rlcf	(___lldiv@quotient+3)^0,f,c
 12270  0056EA  5018               	movf	___lldiv@divisor^0,w,c
 12271  0056EC  5C14               	subwf	___lldiv@dividend^0,w,c
 12272  0056EE  5019               	movf	(___lldiv@divisor+1)^0,w,c
 12273  0056F0  5815               	subwfb	(___lldiv@dividend+1)^0,w,c
 12274  0056F2  501A               	movf	(___lldiv@divisor+2)^0,w,c
 12275  0056F4  5816               	subwfb	(___lldiv@dividend+2)^0,w,c
 12276  0056F6  501B               	movf	(___lldiv@divisor+3)^0,w,c
 12277  0056F8  5817               	subwfb	(___lldiv@dividend+3)^0,w,c
 12278  0056FA  A0D8               	btfss	status,0,c
 12279  0056FC  EF82  F02B         	goto	u8221
 12280  005700  EF84  F02B         	goto	u8220
 12281  005704                     u8221:
 12282  005704  EF8D  F02B         	goto	l7450
 12283  005708                     u8220:
 12284  005708  5018               	movf	___lldiv@divisor^0,w,c
 12285  00570A  5E14               	subwf	___lldiv@dividend^0,f,c
 12286  00570C  5019               	movf	(___lldiv@divisor+1)^0,w,c
 12287  00570E  5A15               	subwfb	(___lldiv@dividend+1)^0,f,c
 12288  005710  501A               	movf	(___lldiv@divisor+2)^0,w,c
 12289  005712  5A16               	subwfb	(___lldiv@dividend+2)^0,f,c
 12290  005714  501B               	movf	(___lldiv@divisor+3)^0,w,c
 12291  005716  5A17               	subwfb	(___lldiv@dividend+3)^0,f,c
 12292  005718  801C               	bsf	___lldiv@quotient^0,0,c
 12293  00571A                     l7450:
 12294  00571A  90D8               	bcf	status,0,c
 12295  00571C  321B               	rrcf	(___lldiv@divisor+3)^0,f,c
 12296  00571E  321A               	rrcf	(___lldiv@divisor+2)^0,f,c
 12297  005720  3219               	rrcf	(___lldiv@divisor+1)^0,f,c
 12298  005722  3218               	rrcf	___lldiv@divisor^0,f,c
 12299  005724  2E20               	decfsz	___lldiv@counter^0,f,c
 12300  005726  EF70  F02B         	goto	l7442
 12301  00572A                     l339:
 12302  00572A  C01C  F014         	movff	___lldiv@quotient,?___lldiv
 12303  00572E  C01D  F015         	movff	___lldiv@quotient+1,?___lldiv+1
 12304  005732  C01E  F016         	movff	___lldiv@quotient+2,?___lldiv+2
 12305  005736  C01F  F017         	movff	___lldiv@quotient+3,?___lldiv+3
 12306  00573A  0012               	return		;funcret
 12307  00573C                     __end_of___lldiv:
 12308                           	callstack 0
 12309                           
 12310 ;; *************** function _I2C_Read *****************
 12311 ;; Defined at:
 12312 ;;		line 407 in file "Le_Jason_Project.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;  ACK_NACK        1    wreg     unsigned char 
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;  ACK_NACK        1   19[COMRAM] unsigned char 
 12317 ;;  Data            1   20[COMRAM] unsigned char 
 12318 ;; Return value:  Size  Location     Type
 12319 ;;                  1    wreg      unsigned char 
 12320 ;; Registers used:
 12321 ;;		wreg, status,2, cstack
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12331 ;;Total ram usage:        2 bytes
 12332 ;; Hardware stack levels used: 1
 12333 ;; Hardware stack levels required when called: 4
 12334 ;; This function calls:
 12335 ;;		_I2C_ACK
 12336 ;;		_I2C_NACK
 12337 ;; This function is called by:
 12338 ;;		_MPU6050_Read
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           
 12342                           	psect	text42
 12343  005B08                     __ptext42:
 12344                           	callstack 0
 12345  005B08                     _I2C_Read:
 12346                           	callstack 25
 12347                           
 12348                           ;incstack = 0
 12349                           ;I2C_Read@ACK_NACK stored from wreg
 12350  005B08  6E14               	movwf	I2C_Read@ACK_NACK^0,c
 12351  005B0A                     
 12352                           ;Le_Jason_Project.c: 408:     char buffer[40];;Le_Jason_Project.c: 409:     int Ax,Ay,Az
      +                          ,Gx,Gy,Gz,T;
 12353  005B0A  86C5               	bsf	197,3,c	;volatile
 12354  005B0C                     l286:
 12355                           
 12356                           ;Le_Jason_Project.c: 410:     float accAngleX, accAngleY;
 12357  005B0C  A0C7               	btfss	199,0,c	;volatile
 12358  005B0E  EF8B  F02D         	goto	u8551
 12359  005B12  EF8D  F02D         	goto	u8550
 12360  005B16                     u8551:
 12361  005B16  EF86  F02D         	goto	l286
 12362  005B1A                     u8550:
 12363  005B1A                     
 12364                           ;Le_Jason_Project.c: 412: 
 12365  005B1A  CFC9 F015          	movff	4041,I2C_Read@Data	;volatile
 12366  005B1E                     
 12367                           ;Le_Jason_Project.c: 413: 
 12368  005B1E  5014               	movf	I2C_Read@ACK_NACK^0,w,c
 12369  005B20  A4D8               	btfss	status,2,c
 12370  005B22  EF95  F02D         	goto	u8561
 12371  005B26  EF97  F02D         	goto	u8560
 12372  005B2A                     u8561:
 12373  005B2A  EF9B  F02D         	goto	l7718
 12374  005B2E                     u8560:
 12375  005B2E                     
 12376                           ;Le_Jason_Project.c: 414:     I2C_Start(0xD0);
 12377  005B2E  ECBC  F02E         	call	_I2C_ACK	;wreg free
 12378                           
 12379                           ;Le_Jason_Project.c: 415:     I2C_Master_Write(0x3B);
 12380  005B32  EF9D  F02D         	goto	l291
 12381  005B36                     l7718:
 12382                           
 12383                           ;Le_Jason_Project.c: 417:     I2C_Start(0xD1);
 12384  005B36  ECB2  F02E         	call	_I2C_NACK	;wreg free
 12385  005B3A                     l291:
 12386                           
 12387                           ;Le_Jason_Project.c: 419:     Ax = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
 12388  005B3A  A69E               	btfss	158,3,c	;volatile
 12389  005B3C  EFA2  F02D         	goto	u8571
 12390  005B40  EFA4  F02D         	goto	u8570
 12391  005B44                     u8571:
 12392  005B44  EF9D  F02D         	goto	l291
 12393  005B48                     u8570:
 12394  005B48                     
 12395                           ;Le_Jason_Project.c: 421:     Az = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
 12396  005B48  969E               	bcf	158,3,c	;volatile
 12397                           
 12398                           ;Le_Jason_Project.c: 422:     T = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
 12399  005B4A  5015               	movf	I2C_Read@Data^0,w,c
 12400  005B4C  0012               	return		;funcret
 12401  005B4E                     __end_of_I2C_Read:
 12402                           	callstack 0
 12403                           
 12404 ;; *************** function _I2C_NACK *****************
 12405 ;; Defined at:
 12406 ;;		line 381 in file "Le_Jason_Project.c"
 12407 ;; Parameters:    Size  Location     Type
 12408 ;;		None
 12409 ;; Auto vars:     Size  Location     Type
 12410 ;;		None
 12411 ;; Return value:  Size  Location     Type
 12412 ;;                  1    wreg      void 
 12413 ;; Registers used:
 12414 ;;		None
 12415 ;; Tracked objects:
 12416 ;;		On entry : 0/0
 12417 ;;		On exit  : 0/0
 12418 ;;		Unchanged: 0/0
 12419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12424 ;;Total ram usage:        0 bytes
 12425 ;; Hardware stack levels used: 1
 12426 ;; Hardware stack levels required when called: 3
 12427 ;; This function calls:
 12428 ;;		Nothing
 12429 ;; This function is called by:
 12430 ;;		_I2C_Read
 12431 ;; This function uses a non-reentrant model
 12432 ;;
 12433                           
 12434                           	psect	text43
 12435  005D64                     __ptext43:
 12436                           	callstack 0
 12437  005D64                     _I2C_NACK:
 12438                           	callstack 25
 12439  005D64                     
 12440                           ;Le_Jason_Project.c: 382:     while(!PIR1bits.SSP1IF){
 12441  005D64  8AC5               	bsf	197,5,c	;volatile
 12442                           
 12443                           ;Le_Jason_Project.c: 383:     }
 12444  005D66  88C5               	bsf	197,4,c	;volatile
 12445  005D68                     l268:
 12446                           
 12447                           ;Le_Jason_Project.c: 384:     PIR1bits.SSP1IF = 0;
 12448  005D68  B8C5               	btfsc	197,4,c	;volatile
 12449  005D6A  EFB9  F02E         	goto	u8391
 12450  005D6E  EFBB  F02E         	goto	u8390
 12451  005D72                     u8391:
 12452  005D72  EFB4  F02E         	goto	l268
 12453  005D76                     u8390:
 12454  005D76  0012               	return		;funcret
 12455  005D78                     __end_of_I2C_NACK:
 12456                           	callstack 0
 12457                           
 12458 ;; *************** function _I2C_ACK *****************
 12459 ;; Defined at:
 12460 ;;		line 374 in file "Le_Jason_Project.c"
 12461 ;; Parameters:    Size  Location     Type
 12462 ;;		None
 12463 ;; Auto vars:     Size  Location     Type
 12464 ;;		None
 12465 ;; Return value:  Size  Location     Type
 12466 ;;                  1    wreg      void 
 12467 ;; Registers used:
 12468 ;;		None
 12469 ;; Tracked objects:
 12470 ;;		On entry : 0/0
 12471 ;;		On exit  : 0/0
 12472 ;;		Unchanged: 0/0
 12473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12478 ;;Total ram usage:        0 bytes
 12479 ;; Hardware stack levels used: 1
 12480 ;; Hardware stack levels required when called: 3
 12481 ;; This function calls:
 12482 ;;		Nothing
 12483 ;; This function is called by:
 12484 ;;		_I2C_Read
 12485 ;; This function uses a non-reentrant model
 12486 ;;
 12487                           
 12488                           	psect	text44
 12489  005D78                     __ptext44:
 12490                           	callstack 0
 12491  005D78                     _I2C_ACK:
 12492                           	callstack 25
 12493  005D78                     
 12494                           ;Le_Jason_Project.c: 375:     PIR1bits.SSP1IF = 0;
 12495  005D78  9AC5               	bcf	197,5,c	;volatile
 12496                           
 12497                           ;Le_Jason_Project.c: 376:     return SSP1CON2bits.ACKSTAT;
 12498  005D7A  88C5               	bsf	197,4,c	;volatile
 12499  005D7C                     l262:
 12500                           
 12501                           ;Le_Jason_Project.c: 377: }
 12502  005D7C  B8C5               	btfsc	197,4,c	;volatile
 12503  005D7E  EFC3  F02E         	goto	u8381
 12504  005D82  EFC5  F02E         	goto	u8380
 12505  005D86                     u8381:
 12506  005D86  EFBE  F02E         	goto	l262
 12507  005D8A                     u8380:
 12508  005D8A  0012               	return		;funcret
 12509  005D8C                     __end_of_I2C_ACK:
 12510                           	callstack 0
 12511                           
 12512 ;; *************** function _Initial *****************
 12513 ;; Defined at:
 12514 ;;		line 86 in file "Le_Jason_Project.c"
 12515 ;; Parameters:    Size  Location     Type
 12516 ;;		None
 12517 ;; Auto vars:     Size  Location     Type
 12518 ;;		None
 12519 ;; Return value:  Size  Location     Type
 12520 ;;                  1    wreg      void 
 12521 ;; Registers used:
 12522 ;;		wreg, status,2, status,0, cstack
 12523 ;; Tracked objects:
 12524 ;;		On entry : 0/0
 12525 ;;		On exit  : 0/0
 12526 ;;		Unchanged: 0/0
 12527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12532 ;;Total ram usage:        2 bytes
 12533 ;; Hardware stack levels used: 1
 12534 ;; Hardware stack levels required when called: 6
 12535 ;; This function calls:
 12536 ;;		_I2C_Master_Stop
 12537 ;;		_I2C_Master_Write
 12538 ;;		_I2C_Start
 12539 ;; This function is called by:
 12540 ;;		_main
 12541 ;; This function uses a non-reentrant model
 12542 ;;
 12543                           
 12544                           	psect	text45
 12545  004C94                     __ptext45:
 12546                           	callstack 0
 12547  004C94                     _Initial:
 12548                           	callstack 24
 12549  004C94                     
 12550                           ;Le_Jason_Project.c: 88:     PIE3bits.CCP1IE = 1;
 12551  004C94  0E00               	movlw	0
 12552  004C96  6E94               	movwf	148,c	;volatile
 12553                           
 12554                           ;Le_Jason_Project.c: 89:     PIE1bits.TMR1IE = 1;
 12555  004C98  0E00               	movlw	0
 12556  004C9A  6E8B               	movwf	139,c	;volatile
 12557                           
 12558                           ;Le_Jason_Project.c: 90:     CCPR1X = (Servo1_on & 0xFF0000)/65536;
 12559  004C9C  0E00               	movlw	0
 12560  004C9E  6E95               	movwf	149,c	;volatile
 12561                           
 12562                           ;Le_Jason_Project.c: 91: 
 12563  004CA0  0E00               	movlw	0
 12564  004CA2  6E8C               	movwf	140,c	;volatile
 12565                           
 12566                           ;Le_Jason_Project.c: 92: 
 12567  004CA4  0E00               	movlw	0
 12568  004CA6  6E96               	movwf	150,c	;volatile
 12569                           
 12570                           ;Le_Jason_Project.c: 93:     T3CON = 0b00000010;
 12571  004CA8  0E00               	movlw	0
 12572  004CAA  6E8D               	movwf	141,c	;volatile
 12573  004CAC                     
 12574                           ;Le_Jason_Project.c: 96:     IPR2bits.TMR3IP = 0;
 12575  004CAC  8ED0               	bsf	208,7,c	;volatile
 12576  004CAE                     
 12577                           ;Le_Jason_Project.c: 97:     IPR4bits.CCP4IP = 0;
 12578  004CAE  8CF2               	bsf	242,6,c	;volatile
 12579  004CB0                     
 12580                           ;Le_Jason_Project.c: 98:     PIE4bits.CCP4IE = 1;
 12581  004CB0  8EF2               	bsf	242,7,c	;volatile
 12582                           
 12583                           ;Le_Jason_Project.c: 101: 
 12584  004CB2  0E02               	movlw	2
 12585  004CB4  6ECD               	movwf	205,c	;volatile
 12586                           
 12587                           ;Le_Jason_Project.c: 102: 
 12588  004CB6  0E08               	movlw	8
 12589  004CB8  6EBB               	movwf	187,c	;volatile
 12590                           
 12591                           ;Le_Jason_Project.c: 103: 
 12592  004CBA  0E00               	movlw	0
 12593  004CBC  010F               	movlb	15	; () banked
 12594  004CBE  6F2D               	movwf	45,b	;volatile
 12595  004CC0                     
 12596                           ; BSR set to: 15
 12597                           ;Le_Jason_Project.c: 104: 
 12598  004CC0  909F               	bcf	159,0,c	;volatile
 12599  004CC2                     
 12600                           ; BSR set to: 15
 12601                           ;Le_Jason_Project.c: 105: 
 12602  004CC2  92A5               	bcf	165,1,c	;volatile
 12603  004CC4                     
 12604                           ; BSR set to: 15
 12605                           ;Le_Jason_Project.c: 106: 
 12606  004CC4  82A3               	bsf	163,1,c	;volatile
 12607  004CC6                     
 12608                           ; BSR set to: 15
 12609                           ;Le_Jason_Project.c: 107: 
 12610  004CC6  809D               	bsf	157,0,c	;volatile
 12611  004CC8                     
 12612                           ; BSR set to: 15
 12613                           ;Le_Jason_Project.c: 108:     SSP1CON1 = 0x28;
 12614  004CC8  C049  F04B         	movff	_Servo1_on+2,_CCPR1X
 12615                           
 12616                           ;Le_Jason_Project.c: 111:     SSP1ADD = ((16000000/4)/100000) - 1;
 12617  004CCC  0E02               	movlw	2
 12618  004CCE  6EB1               	movwf	177,c	;volatile
 12619                           
 12620                           ;Le_Jason_Project.c: 112:     TRISCbits.TRISC3 = 1;
 12621  004CD0  0E08               	movlw	8
 12622  004CD2  6E77               	movwf	119,c	;volatile
 12623                           
 12624                           ;Le_Jason_Project.c: 113:     TRISCbits.TRISC4 = 1;
 12625  004CD4  0E01               	movlw	1
 12626  004CD6  6F2C               	movwf	44,b	;volatile
 12627  004CD8                     
 12628                           ; BSR set to: 15
 12629                           ;Le_Jason_Project.c: 114: 
 12630  004CD8  92A2               	bcf	162,1,c	;volatile
 12631  004CDA                     
 12632                           ; BSR set to: 15
 12633                           ;Le_Jason_Project.c: 115: 
 12634  004CDA  92B8               	bcf	184,1,c	;volatile
 12635  004CDC                     
 12636                           ; BSR set to: 15
 12637                           ;Le_Jason_Project.c: 116:     _delay((unsigned long)((100)*(16000000/4000.0)));
 12638  004CDC  82B6               	bsf	182,1,c	;volatile
 12639  004CDE                     
 12640                           ; BSR set to: 15
 12641                           ;Le_Jason_Project.c: 117: 
 12642  004CDE  82A0               	bsf	160,1,c	;volatile
 12643  004CE0                     
 12644                           ; BSR set to: 15
 12645                           ;Le_Jason_Project.c: 118: 
 12646  004CE0  C045  F0FE         	movff	_Servo2_on+2,_CCPR4X
 12647                           
 12648                           ;Le_Jason_Project.c: 126:     I2C_Master_Write(0x6B);
 12649  004CE4  0E28               	movlw	40
 12650  004CE6  6EC6               	movwf	198,c	;volatile
 12651                           
 12652                           ;Le_Jason_Project.c: 127:     I2C_Master_Write(0x01);
 12653  004CE8  0E00               	movlw	0
 12654  004CEA  6EC5               	movwf	197,c	;volatile
 12655                           
 12656                           ;Le_Jason_Project.c: 128:     I2C_Master_Stop();
 12657  004CEC  0E00               	movlw	0
 12658  004CEE  6EC7               	movwf	199,c	;volatile
 12659                           
 12660                           ;Le_Jason_Project.c: 129: 
 12661  004CF0  0E27               	movlw	39
 12662  004CF2  6EC8               	movwf	200,c	;volatile
 12663  004CF4                     
 12664                           ; BSR set to: 15
 12665                           ;Le_Jason_Project.c: 130: 
 12666  004CF4  8694               	bsf	148,3,c	;volatile
 12667  004CF6                     
 12668                           ; BSR set to: 15
 12669                           ;Le_Jason_Project.c: 131:     I2C_Start(0xD0);
 12670  004CF6  8894               	bsf	148,4,c	;volatile
 12671  004CF8                     
 12672                           ; BSR set to: 15
 12673                           ;Le_Jason_Project.c: 134:     I2C_Master_Stop();
 12674  004CF8  0E03               	movlw	3
 12675  004CFA  6E18               	movwf	(??_Initial+1)^0,c
 12676  004CFC  0E08               	movlw	8
 12677  004CFE  6E17               	movwf	??_Initial^0,c
 12678  004D00  0E77               	movlw	119
 12679  004D02                     u8877:
 12680  004D02  2EE8               	decfsz	wreg,f,c
 12681  004D04  D7FE               	bra	u8877
 12682  004D06  2E17               	decfsz	??_Initial^0,f,c
 12683  004D08  D7FC               	bra	u8877
 12684  004D0A  2E18               	decfsz	(??_Initial+1)^0,f,c
 12685  004D0C  D7FA               	bra	u8877
 12686  004D0E  F000               	nop	
 12687  004D10                     
 12688                           ;Le_Jason_Project.c: 137:     I2C_Start(0xD0);
 12689  004D10  0ED0               	movlw	208
 12690  004D12  ECC6  F02E         	call	_I2C_Start
 12691  004D16                     
 12692                           ;Le_Jason_Project.c: 138:     I2C_Master_Write(0x1C);
 12693  004D16  0E19               	movlw	25
 12694  004D18  EC98  F02E         	call	_I2C_Master_Write
 12695  004D1C                     
 12696                           ;Le_Jason_Project.c: 139:     I2C_Master_Write(0x00);
 12697  004D1C  0E07               	movlw	7
 12698  004D1E  EC98  F02E         	call	_I2C_Master_Write
 12699  004D22                     
 12700                           ;Le_Jason_Project.c: 140:     I2C_Master_Stop();
 12701  004D22  ECD6  F02E         	call	_I2C_Master_Stop	;wreg free
 12702  004D26                     
 12703                           ;Le_Jason_Project.c: 143:     I2C_Start(0xD0);
 12704  004D26  0ED0               	movlw	208
 12705  004D28  ECC6  F02E         	call	_I2C_Start
 12706  004D2C                     
 12707                           ;Le_Jason_Project.c: 144:     I2C_Master_Write(0x1B);
 12708  004D2C  0E6B               	movlw	107
 12709  004D2E  EC98  F02E         	call	_I2C_Master_Write
 12710  004D32                     
 12711                           ;Le_Jason_Project.c: 145:     I2C_Master_Write(0x18);
 12712  004D32  0E01               	movlw	1
 12713  004D34  EC98  F02E         	call	_I2C_Master_Write
 12714  004D38                     
 12715                           ;Le_Jason_Project.c: 146:     I2C_Master_Stop();
 12716  004D38  ECD6  F02E         	call	_I2C_Master_Stop	;wreg free
 12717  004D3C                     
 12718                           ;Le_Jason_Project.c: 149:     I2C_Start(0xD0);
 12719  004D3C  0ED0               	movlw	208
 12720  004D3E  ECC6  F02E         	call	_I2C_Start
 12721  004D42                     
 12722                           ;Le_Jason_Project.c: 150:     I2C_Master_Write(0x56);
 12723  004D42  0E1A               	movlw	26
 12724  004D44  EC98  F02E         	call	_I2C_Master_Write
 12725  004D48                     
 12726                           ;Le_Jason_Project.c: 151:     I2C_Master_Write(0x01);
 12727  004D48  0E00               	movlw	0
 12728  004D4A  EC98  F02E         	call	_I2C_Master_Write
 12729  004D4E                     
 12730                           ;Le_Jason_Project.c: 152:     I2C_Master_Stop();
 12731  004D4E  ECD6  F02E         	call	_I2C_Master_Stop	;wreg free
 12732  004D52                     
 12733                           ;Le_Jason_Project.c: 155:     TRISCbits.TRISC7 = 1;
 12734  004D52  0ED0               	movlw	208
 12735  004D54  ECC6  F02E         	call	_I2C_Start
 12736  004D58                     
 12737                           ;Le_Jason_Project.c: 156:     TRISCbits.TRISC6 = 0;
 12738  004D58  0E1C               	movlw	28
 12739  004D5A  EC98  F02E         	call	_I2C_Master_Write
 12740  004D5E                     
 12741                           ;Le_Jason_Project.c: 157:     BAUDCON1bits.BRG16 = 0;
 12742  004D5E  0E00               	movlw	0
 12743  004D60  EC98  F02E         	call	_I2C_Master_Write
 12744  004D64                     
 12745                           ;Le_Jason_Project.c: 158:     BAUDCON1bits.RCIDL = 1;
 12746  004D64  ECD6  F02E         	call	_I2C_Master_Stop	;wreg free
 12747  004D68                     
 12748                           ;Le_Jason_Project.c: 161:     TXSTA1bits.BRGH = 0;
 12749  004D68  0ED0               	movlw	208
 12750  004D6A  ECC6  F02E         	call	_I2C_Start
 12751  004D6E                     
 12752                           ;Le_Jason_Project.c: 162:     TXSTA1bits.TX9 = 0;
 12753  004D6E  0E1B               	movlw	27
 12754  004D70  EC98  F02E         	call	_I2C_Master_Write
 12755  004D74                     
 12756                           ;Le_Jason_Project.c: 163:     TXSTA1bits.TXEN = 1;
 12757  004D74  0E18               	movlw	24
 12758  004D76  EC98  F02E         	call	_I2C_Master_Write
 12759  004D7A                     
 12760                           ;Le_Jason_Project.c: 164:     RCSTA1bits.SPEN = 1;
 12761  004D7A  ECD6  F02E         	call	_I2C_Master_Stop	;wreg free
 12762  004D7E                     
 12763                           ;Le_Jason_Project.c: 167:     PIE1bits.RC1IE = 1;
 12764  004D7E  0ED0               	movlw	208
 12765  004D80  ECC6  F02E         	call	_I2C_Start
 12766  004D84                     
 12767                           ;Le_Jason_Project.c: 168: 
 12768  004D84  0E56               	movlw	86
 12769  004D86  EC98  F02E         	call	_I2C_Master_Write
 12770  004D8A                     
 12771                           ;Le_Jason_Project.c: 169: 
 12772  004D8A  0E01               	movlw	1
 12773  004D8C  EC98  F02E         	call	_I2C_Master_Write
 12774  004D90                     
 12775                           ;Le_Jason_Project.c: 170:     T0CONbits.TMR0ON = 1;
 12776  004D90  ECD6  F02E         	call	_I2C_Master_Stop	;wreg free
 12777  004D94                     
 12778                           ;Le_Jason_Project.c: 173: 
 12779  004D94  8E94               	bsf	148,7,c	;volatile
 12780  004D96                     
 12781                           ;Le_Jason_Project.c: 174: }
 12782  004D96  9C94               	bcf	148,6,c	;volatile
 12783  004D98                     
 12784                           ;Le_Jason_Project.c: 175: 
 12785  004D98  9665               	bcf	101,3,c	;volatile
 12786  004D9A                     
 12787                           ;Le_Jason_Project.c: 176: void __attribute__((picinterrupt(("")))) HiPriISR (void){
 12788  004D9A  8C65               	bsf	101,6,c	;volatile
 12789  004D9C                     
 12790                           ;Le_Jason_Project.c: 177:     while(1){
 12791  004D9C  0E0C               	movlw	12
 12792  004D9E  6EAF               	movwf	175,c	;volatile
 12793  004DA0                     
 12794                           ;Le_Jason_Project.c: 178: 
 12795  004DA0  0E00               	movlw	0
 12796  004DA2  6ED4               	movwf	212,c	;volatile
 12797  004DA4                     
 12798                           ;Le_Jason_Project.c: 179: 
 12799  004DA4  94AC               	bcf	172,2,c	;volatile
 12800  004DA6                     
 12801                           ;Le_Jason_Project.c: 180: 
 12802  004DA6  9CAC               	bcf	172,6,c	;volatile
 12803  004DA8                     
 12804                           ;Le_Jason_Project.c: 181: 
 12805  004DA8  8AAC               	bsf	172,5,c	;volatile
 12806  004DAA                     
 12807                           ;Le_Jason_Project.c: 182:     break;
 12808  004DAA  8EAB               	bsf	171,7,c	;volatile
 12809  004DAC                     
 12810                           ;Le_Jason_Project.c: 183:     }
 12811  004DAC  88AB               	bsf	171,4,c	;volatile
 12812  004DAE                     
 12813                           ;Le_Jason_Project.c: 184:     return;
 12814  004DAE  9A9F               	bcf	159,5,c	;volatile
 12815  004DB0                     
 12816                           ;Le_Jason_Project.c: 185: }
 12817  004DB0  8A9D               	bsf	157,5,c	;volatile
 12818  004DB2                     
 12819                           ;Le_Jason_Project.c: 188:     Wreg_temp = WREG;
 12820  004DB2  8ED5               	bsf	213,7,c	;volatile
 12821  004DB4                     
 12822                           ;Le_Jason_Project.c: 189:     BSR_temp = BSR;
 12823  004DB4  80CD               	bsf	205,0,c	;volatile
 12824  004DB6                     
 12825                           ;Le_Jason_Project.c: 190:     while(1){
 12826  004DB6  80B1               	bsf	177,0,c	;volatile
 12827  004DB8  0012               	return		;funcret
 12828  004DBA                     __end_of_Initial:
 12829                           	callstack 0
 12830                           
 12831 ;; *************** function _I2C_Start *****************
 12832 ;; Defined at:
 12833 ;;		line 358 in file "Le_Jason_Project.c"
 12834 ;; Parameters:    Size  Location     Type
 12835 ;;  add             1    wreg     unsigned char 
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;  add             1   21[COMRAM] unsigned char 
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  1    wreg      void 
 12840 ;; Registers used:
 12841 ;;		wreg, status,2, status,0, cstack
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12850 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12851 ;;Total ram usage:        1 bytes
 12852 ;; Hardware stack levels used: 1
 12853 ;; Hardware stack levels required when called: 5
 12854 ;; This function calls:
 12855 ;;		_I2C_Master_Wait
 12856 ;;		_I2C_Master_Write
 12857 ;; This function is called by:
 12858 ;;		_Initial
 12859 ;;		_MPU6050_Read
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863                           	psect	text46
 12864  005D8C                     __ptext46:
 12865                           	callstack 0
 12866  005D8C                     _I2C_Start:
 12867                           	callstack 24
 12868                           
 12869                           ;incstack = 0
 12870                           ;I2C_Start@add stored from wreg
 12871  005D8C  6E16               	movwf	I2C_Start@add^0,c
 12872  005D8E                     
 12873                           ;Le_Jason_Project.c: 359:     while(SSP1CON2bits.ACKEN == 1){
 12874  005D8E  EC85  F02E         	call	_I2C_Master_Wait	;wreg free
 12875  005D92                     
 12876                           ;Le_Jason_Project.c: 360:     }
 12877  005D92  80C5               	bsf	197,0,c	;volatile
 12878                           
 12879                           ;Le_Jason_Project.c: 361: }
 12880  005D94  5016               	movf	I2C_Start@add^0,w,c
 12881  005D96  EC98  F02E         	call	_I2C_Master_Write
 12882  005D9A  0012               	return		;funcret
 12883  005D9C                     __end_of_I2C_Start:
 12884                           	callstack 0
 12885                           
 12886 ;; *************** function _I2C_Master_Write *****************
 12887 ;; Defined at:
 12888 ;;		line 388 in file "Le_Jason_Project.c"
 12889 ;; Parameters:    Size  Location     Type
 12890 ;;  data            1    wreg     unsigned char 
 12891 ;; Auto vars:     Size  Location     Type
 12892 ;;  data            1   20[COMRAM] unsigned char 
 12893 ;; Return value:  Size  Location     Type
 12894 ;;                  1    wreg      unsigned char 
 12895 ;; Registers used:
 12896 ;;		wreg, status,2, status,0, cstack
 12897 ;; Tracked objects:
 12898 ;;		On entry : 0/0
 12899 ;;		On exit  : 0/0
 12900 ;;		Unchanged: 0/0
 12901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12905 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12906 ;;Total ram usage:        1 bytes
 12907 ;; Hardware stack levels used: 1
 12908 ;; Hardware stack levels required when called: 4
 12909 ;; This function calls:
 12910 ;;		_I2C_Master_Wait
 12911 ;; This function is called by:
 12912 ;;		_Initial
 12913 ;;		_I2C_Start
 12914 ;;		_MPU6050_Read
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text47
 12919  005D30                     __ptext47:
 12920                           	callstack 0
 12921  005D30                     _I2C_Master_Write:
 12922                           	callstack 24
 12923                           
 12924                           ;incstack = 0
 12925                           ;I2C_Master_Write@data stored from wreg
 12926  005D30  6E15               	movwf	I2C_Master_Write@data^0,c
 12927  005D32                     
 12928                           ;Le_Jason_Project.c: 389: unsigned char I2C_Read(unsigned char ACK_NACK){
 12929  005D32  EC85  F02E         	call	_I2C_Master_Wait	;wreg free
 12930  005D36                     
 12931                           ;Le_Jason_Project.c: 390:     unsigned char Data;
 12932  005D36  C015  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
 12933  005D3A                     l274:
 12934                           
 12935                           ;Le_Jason_Project.c: 391:     SSP1CON2bits.RCEN = 1;
 12936  005D3A  A69E               	btfss	158,3,c	;volatile
 12937  005D3C  EFA2  F02E         	goto	u8371
 12938  005D40  EFA4  F02E         	goto	u8370
 12939  005D44                     u8371:
 12940  005D44  EF9D  F02E         	goto	l274
 12941  005D48                     u8370:
 12942  005D48                     
 12943                           ;Le_Jason_Project.c: 393:     }
 12944  005D48  969E               	bcf	158,3,c	;volatile
 12945  005D4A                     
 12946                           ;Le_Jason_Project.c: 394:     Data = SSP1BUF;;	Return value of _I2C_Master_Write is neve
      +                          r used
 12947  005D4A  50C5               	movf	197,w,c	;volatile
 12948  005D4C  0012               	return		;funcret
 12949  005D4E                     __end_of_I2C_Master_Write:
 12950                           	callstack 0
 12951                           
 12952 ;; *************** function _I2C_Master_Stop *****************
 12953 ;; Defined at:
 12954 ;;		line 369 in file "Le_Jason_Project.c"
 12955 ;; Parameters:    Size  Location     Type
 12956 ;;		None
 12957 ;; Auto vars:     Size  Location     Type
 12958 ;;		None
 12959 ;; Return value:  Size  Location     Type
 12960 ;;                  1    wreg      void 
 12961 ;; Registers used:
 12962 ;;		wreg, status,2, status,0, cstack
 12963 ;; Tracked objects:
 12964 ;;		On entry : 0/0
 12965 ;;		On exit  : 0/0
 12966 ;;		Unchanged: 0/0
 12967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12972 ;;Total ram usage:        0 bytes
 12973 ;; Hardware stack levels used: 1
 12974 ;; Hardware stack levels required when called: 4
 12975 ;; This function calls:
 12976 ;;		_I2C_Master_Wait
 12977 ;; This function is called by:
 12978 ;;		_Initial
 12979 ;;		_MPU6050_Read
 12980 ;; This function uses a non-reentrant model
 12981 ;;
 12982                           
 12983                           	psect	text48
 12984  005DAC                     __ptext48:
 12985                           	callstack 0
 12986  005DAC                     _I2C_Master_Stop:
 12987                           	callstack 25
 12988  005DAC                     
 12989                           ;Le_Jason_Project.c: 370: unsigned char I2C_Master_Write(unsigned char data){
 12990  005DAC  EC85  F02E         	call	_I2C_Master_Wait	;wreg free
 12991  005DB0                     
 12992                           ;Le_Jason_Project.c: 371:     I2C_Master_Wait();
 12993  005DB0  84C5               	bsf	197,2,c	;volatile
 12994  005DB2  0012               	return		;funcret
 12995  005DB4                     __end_of_I2C_Master_Stop:
 12996                           	callstack 0
 12997                           
 12998 ;; *************** function _I2C_Master_Wait *****************
 12999 ;; Defined at:
 13000 ;;		line 348 in file "Le_Jason_Project.c"
 13001 ;; Parameters:    Size  Location     Type
 13002 ;;		None
 13003 ;; Auto vars:     Size  Location     Type
 13004 ;;		None
 13005 ;; Return value:  Size  Location     Type
 13006 ;;                  1    wreg      void 
 13007 ;; Registers used:
 13008 ;;		wreg, status,2, status,0
 13009 ;; Tracked objects:
 13010 ;;		On entry : 0/0
 13011 ;;		On exit  : 0/0
 13012 ;;		Unchanged: 0/0
 13013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13018 ;;Total ram usage:        1 bytes
 13019 ;; Hardware stack levels used: 1
 13020 ;; Hardware stack levels required when called: 3
 13021 ;; This function calls:
 13022 ;;		Nothing
 13023 ;; This function is called by:
 13024 ;;		_I2C_Start
 13025 ;;		_I2C_Master_Stop
 13026 ;;		_I2C_Master_Write
 13027 ;;		_I2C_Master_Start
 13028 ;;		_I2C_Master_RepeatedStart
 13029 ;;		_I2C_Read_Byte
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           
 13033                           	psect	text49
 13034  005D0A                     __ptext49:
 13035                           	callstack 0
 13036  005D0A                     _I2C_Master_Wait:
 13037                           	callstack 24
 13038  005D0A                     l244:
 13039                           
 13040                           ;Le_Jason_Project.c: 349: }
 13041  005D0A  B4C7               	btfsc	199,2,c	;volatile
 13042  005D0C  EF8A  F02E         	goto	u8161
 13043  005D10  EF8C  F02E         	goto	u8160
 13044  005D14                     u8161:
 13045  005D14  EF85  F02E         	goto	l244
 13046  005D18                     u8160:
 13047  005D18  CFC5 F014          	movff	4037,??_I2C_Master_Wait	;volatile
 13048  005D1C  0E1F               	movlw	31
 13049  005D1E  1614               	andwf	??_I2C_Master_Wait^0,f,c
 13050  005D20  A4D8               	btfss	status,2,c
 13051  005D22  EF95  F02E         	goto	u8171
 13052  005D26  EF97  F02E         	goto	u8170
 13053  005D2A                     u8171:
 13054  005D2A  EF85  F02E         	goto	l244
 13055  005D2E                     u8170:
 13056  005D2E  0012               	return		;funcret
 13057  005D30                     __end_of_I2C_Master_Wait:
 13058                           	callstack 0
 13059                           
 13060 ;; *************** function _LoPriISR *****************
 13061 ;; Defined at:
 13062 ;;		line 204 in file "Le_Jason_Project.c"
 13063 ;; Parameters:    Size  Location     Type
 13064 ;;		None
 13065 ;; Auto vars:     Size  Location     Type
 13066 ;;		None
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  1    wreg      void 
 13069 ;; Registers used:
 13070 ;;		wreg, status,2, status,0, cstack
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13078 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13079 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13080 ;;Total ram usage:        3 bytes
 13081 ;; Hardware stack levels used: 1
 13082 ;; Hardware stack levels required when called: 2
 13083 ;; This function calls:
 13084 ;;		_CCP1handler
 13085 ;;		_CCP4handler
 13086 ;;		_TMR1handler
 13087 ;;		_TMR3handler
 13088 ;; This function is called by:
 13089 ;;		Interrupt level 1
 13090 ;; This function uses a non-reentrant model
 13091 ;;
 13092                           
 13093                           	psect	intcodelo
 13094  000018                     __pintcodelo:
 13095                           	callstack 0
 13096  000018                     _LoPriISR:
 13097                           	callstack 19
 13098                           
 13099                           ;incstack = 0
 13100  000018  804C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 13101  00001A  CFD8 F011          	movff	status,??_LoPriISR
 13102  00001E  CFE8 F012          	movff	wreg,??_LoPriISR+1
 13103  000022  CFE0 F013          	movff	bsr,??_LoPriISR+2
 13104  000026                     
 13105                           ;Le_Jason_Project.c: 205:             TMR3handler();
 13106  000026  CFD8 F040          	movff	status,_Status_temp	;volatile
 13107  00002A                     
 13108                           ;Le_Jason_Project.c: 206:             continue;
 13109  00002A  6E3F               	movwf	_Wreg_temp^0,c
 13110  00002C                     
 13111                           ;Le_Jason_Project.c: 207:         }
 13112  00002C  CFE0 F03E          	movff	bsr,_BSR_temp	;volatile
 13113  000030                     i1l5838:
 13114                           
 13115                           ;Le_Jason_Project.c: 209:         break;
 13116  000030  A2A4               	btfss	164,1,c	;volatile
 13117  000032  EF1D  F000         	goto	i1u598_21
 13118  000036  EF1F  F000         	goto	i1u598_20
 13119  00003A                     i1u598_21:
 13120  00003A  EF23  F000         	goto	i1l195
 13121  00003E                     i1u598_20:
 13122  00003E                     
 13123                           ;Le_Jason_Project.c: 210:     }
 13124  00003E  EC92  F025         	call	_CCP1handler	;wreg free
 13125                           
 13126                           ;Le_Jason_Project.c: 211:     STATUS = Status_temp;
 13127  000042  EF18  F000         	goto	i1l5838
 13128  000046                     i1l195:
 13129                           
 13130                           ;Le_Jason_Project.c: 213:     BSR = BSR_temp;
 13131  000046  A2B7               	btfss	183,1,c	;volatile
 13132  000048  EF28  F000         	goto	i1u599_21
 13133  00004C  EF2A  F000         	goto	i1u599_20
 13134  000050                     i1u599_21:
 13135  000050  EF2E  F000         	goto	i1l197
 13136  000054                     i1u599_20:
 13137  000054                     
 13138                           ;Le_Jason_Project.c: 214: }
 13139  000054  ECD9  F024         	call	_CCP4handler	;wreg free
 13140                           
 13141                           ;Le_Jason_Project.c: 215: void CCP1handler(void){
 13142  000058  EF18  F000         	goto	i1l5838
 13143  00005C                     i1l197:
 13144                           
 13145                           ;Le_Jason_Project.c: 217:     if(PIR1bits.TMR1IF){
 13146  00005C  A09E               	btfss	158,0,c	;volatile
 13147  00005E  EF33  F000         	goto	i1u600_21
 13148  000062  EF35  F000         	goto	i1u600_20
 13149  000066                     i1u600_21:
 13150  000066  EF39  F000         	goto	i1l198
 13151  00006A                     i1u600_20:
 13152  00006A                     
 13153                           ;Le_Jason_Project.c: 218:         if(CCPR1H < 0b10000000){
 13154  00006A  ECDD  F02E         	call	_TMR1handler	;wreg free
 13155                           
 13156                           ;Le_Jason_Project.c: 219:             TMR1X++;
 13157  00006E  EF18  F000         	goto	i1l5838
 13158  000072                     i1l198:
 13159                           
 13160                           ;Le_Jason_Project.c: 222:     }
 13161  000072  A2A1               	btfss	161,1,c	;volatile
 13162  000074  EF3E  F000         	goto	i1u601_21
 13163  000078  EF40  F000         	goto	i1u601_20
 13164  00007C                     i1u601_21:
 13165  00007C  EF44  F000         	goto	i1l200
 13166  000080                     i1u601_20:
 13167  000080                     
 13168                           ;Le_Jason_Project.c: 223:     if(CCPR1X != TMR1X){
 13169  000080  ECDA  F02E         	call	_TMR3handler	;wreg free
 13170                           
 13171                           ;Le_Jason_Project.c: 224:         PIR3bits.CCP1IF = 0;
 13172  000084  EF18  F000         	goto	i1l5838
 13173  000088                     i1l200:
 13174                           
 13175                           ;Le_Jason_Project.c: 229:         CCPRT = ((unsigned long)CCPR1X*65536) + ((unsigned lon
      +                          g)CCPR1H*256) + (unsigned long)CCPR1L;
 13176  000088  C040  FFD8         	movff	_Status_temp,status	;volatile
 13177  00008C                     
 13178                           ;Le_Jason_Project.c: 230:         CCPRT += Servo1_on;
 13179  00008C  503F               	movf	_Wreg_temp^0,w,c
 13180  00008E                     
 13181                           ;Le_Jason_Project.c: 231:         CCPR1L = (CCPRT & 0x0000FF);
 13182  00008E  C03E  FFE0         	movff	_BSR_temp,bsr	;volatile
 13183  000092  C013  FFE0         	movff	??_LoPriISR+2,bsr
 13184  000096  C012  FFE8         	movff	??_LoPriISR+1,wreg
 13185  00009A  C011  FFD8         	movff	??_LoPriISR,status
 13186  00009E  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13187  0000A0  0010               	retfie	
 13188  0000A2                     __end_of_LoPriISR:
 13189                           	callstack 0
 13190                           
 13191 ;; *************** function _TMR3handler *****************
 13192 ;; Defined at:
 13193 ;;		line 298 in file "Le_Jason_Project.c"
 13194 ;; Parameters:    Size  Location     Type
 13195 ;;		None
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;		None
 13198 ;; Return value:  Size  Location     Type
 13199 ;;                  1    wreg      void 
 13200 ;; Registers used:
 13201 ;;		status,2, status,0
 13202 ;; Tracked objects:
 13203 ;;		On entry : 0/0
 13204 ;;		On exit  : 0/0
 13205 ;;		Unchanged: 0/0
 13206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13211 ;;Total ram usage:        0 bytes
 13212 ;; Hardware stack levels used: 1
 13213 ;; Hardware stack levels required when called: 1
 13214 ;; This function calls:
 13215 ;;		Nothing
 13216 ;; This function is called by:
 13217 ;;		_LoPriISR
 13218 ;; This function uses a non-reentrant model
 13219 ;;
 13220                           
 13221                           	psect	text51
 13222  005DB4                     __ptext51:
 13223                           	callstack 0
 13224  005DB4                     _TMR3handler:
 13225                           	callstack 19
 13226  005DB4                     
 13227                           ;Le_Jason_Project.c: 299: void Servo1(unsigned int angle){
 13228  005DB4  2A41               	incf	_TMR3X^0,f,c
 13229  005DB6                     
 13230                           ;Le_Jason_Project.c: 300:     unsigned int temp;
 13231  005DB6  92A1               	bcf	161,1,c	;volatile
 13232  005DB8  0012               	return		;funcret
 13233  005DBA                     __end_of_TMR3handler:
 13234                           	callstack 0
 13235                           
 13236 ;; *************** function _TMR1handler *****************
 13237 ;; Defined at:
 13238 ;;		line 293 in file "Le_Jason_Project.c"
 13239 ;; Parameters:    Size  Location     Type
 13240 ;;		None
 13241 ;; Auto vars:     Size  Location     Type
 13242 ;;		None
 13243 ;; Return value:  Size  Location     Type
 13244 ;;                  1    wreg      void 
 13245 ;; Registers used:
 13246 ;;		status,2, status,0
 13247 ;; Tracked objects:
 13248 ;;		On entry : 0/0
 13249 ;;		On exit  : 0/0
 13250 ;;		Unchanged: 0/0
 13251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13256 ;;Total ram usage:        0 bytes
 13257 ;; Hardware stack levels used: 1
 13258 ;; Hardware stack levels required when called: 1
 13259 ;; This function calls:
 13260 ;;		Nothing
 13261 ;; This function is called by:
 13262 ;;		_LoPriISR
 13263 ;; This function uses a non-reentrant model
 13264 ;;
 13265                           
 13266                           	psect	text52
 13267  005DBA                     __ptext52:
 13268                           	callstack 0
 13269  005DBA                     _TMR1handler:
 13270                           	callstack 19
 13271  005DBA                     
 13272                           ;Le_Jason_Project.c: 294:     unsigned long second = (unsigned long)first*((unsigned lon
      +                          g)newmax - (unsigned long)newmin);
 13273  005DBA  2A42               	incf	_TMR1X^0,f,c
 13274  005DBC                     
 13275                           ;Le_Jason_Project.c: 295:     unsigned int third = second/(valuemax - valuemin);
 13276  005DBC  909E               	bcf	158,0,c	;volatile
 13277  005DBE  0012               	return		;funcret
 13278  005DC0                     __end_of_TMR1handler:
 13279                           	callstack 0
 13280                           
 13281 ;; *************** function _CCP4handler *****************
 13282 ;; Defined at:
 13283 ;;		line 263 in file "Le_Jason_Project.c"
 13284 ;; Parameters:    Size  Location     Type
 13285 ;;		None
 13286 ;; Auto vars:     Size  Location     Type
 13287 ;;  CCPRT           4   12[COMRAM] unsigned long 
 13288 ;; Return value:  Size  Location     Type
 13289 ;;                  1    wreg      void 
 13290 ;; Registers used:
 13291 ;;		wreg, status,2, status,0
 13292 ;; Tracked objects:
 13293 ;;		On entry : 0/0
 13294 ;;		On exit  : 0/0
 13295 ;;		Unchanged: 0/0
 13296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13298 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13299 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13300 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13301 ;;Total ram usage:       16 bytes
 13302 ;; Hardware stack levels used: 1
 13303 ;; Hardware stack levels required when called: 1
 13304 ;; This function calls:
 13305 ;;		Nothing
 13306 ;; This function is called by:
 13307 ;;		_LoPriISR
 13308 ;; This function uses a non-reentrant model
 13309 ;;
 13310                           
 13311                           	psect	text53
 13312  0049B2                     __ptext53:
 13313                           	callstack 0
 13314  0049B2                     _CCP4handler:
 13315                           	callstack 19
 13316  0049B2                     
 13317                           ;Le_Jason_Project.c: 264:     };Le_Jason_Project.c: 265:     if(LATEbits.LATE1 == 0){
 13318  0049B2  A2A1               	btfss	161,1,c	;volatile
 13319  0049B4  EFDE  F024         	goto	i1u590_21
 13320  0049B8  EFE0  F024         	goto	i1u590_20
 13321  0049BC                     i1u590_21:
 13322  0049BC  EFEA  F024         	goto	i1l5786
 13323  0049C0                     i1u590_20:
 13324  0049C0                     
 13325                           ;Le_Jason_Project.c: 266:         CCPRT = ((unsigned long)CCPR4X*65536) + ((unsigned lon
      +                          g)CCPR4H*256) + (unsigned long)CCPR4L;
 13326  0049C0  0E80               	movlw	128
 13327  0049C2  6079               	cpfslt	121,c	;volatile
 13328  0049C4  EFE6  F024         	goto	i1u591_21
 13329  0049C8  EFE8  F024         	goto	i1u591_20
 13330  0049CC                     i1u591_21:
 13331  0049CC  EFEA  F024         	goto	i1l5786
 13332  0049D0                     i1u591_20:
 13333  0049D0                     
 13334                           ;Le_Jason_Project.c: 267:         CCPRT += Servo2_off;
 13335  0049D0  2A41               	incf	_TMR3X^0,f,c
 13336  0049D2                     
 13337                           ;Le_Jason_Project.c: 268:         CCPR4L = (CCPRT & 0x0000FF);
 13338  0049D2  92A1               	bcf	161,1,c	;volatile
 13339  0049D4                     i1l5786:
 13340                           
 13341                           ;Le_Jason_Project.c: 271:     }
 13342  0049D4  5041               	movf	_TMR3X^0,w,c
 13343  0049D6  0100               	movlb	0	; () banked
 13344  0049D8  19FE               	xorwf	_CCPR4X& (0+255),w,b
 13345  0049DA  B4D8               	btfsc	status,2,c
 13346  0049DC  EFF2  F024         	goto	i1u592_21
 13347  0049E0  EFF4  F024         	goto	i1u592_20
 13348  0049E4                     i1u592_21:
 13349  0049E4  EFF7  F024         	goto	i1l5790
 13350  0049E8                     i1u592_20:
 13351  0049E8                     
 13352                           ; BSR set to: 0
 13353                           ;Le_Jason_Project.c: 272:     PIR4bits.CCP4IF = 0;
 13354  0049E8  92B7               	bcf	183,1,c	;volatile
 13355                           
 13356                           ;Le_Jason_Project.c: 273:     return;
 13357  0049EA  EF91  F025         	goto	i1l215
 13358  0049EE                     i1l5790:
 13359                           
 13360                           ; BSR set to: 0
 13361                           ;Le_Jason_Project.c: 275: void TMR1handler(void){
 13362  0049EE  A28D               	btfss	141,1,c	;volatile
 13363  0049F0  EFFC  F024         	goto	i1u593_21
 13364  0049F4  EF00  F025         	goto	i1u593_20
 13365  0049F8                     i1u593_21:
 13366  0049F8  6A01               	clrf	??_CCP4handler^0,c
 13367  0049FA  2A01               	incf	??_CCP4handler^0,f,c
 13368  0049FC  EF01  F025         	goto	i1u594_28
 13369  004A00                     i1u593_20:
 13370  004A00  6A01               	clrf	??_CCP4handler^0,c
 13371  004A02                     i1u594_28:
 13372  004A02  4601               	rlncf	??_CCP4handler^0,f,c
 13373  004A04  508D               	movf	141,w,c	;volatile
 13374  004A06  1801               	xorwf	??_CCP4handler^0,w,c
 13375  004A08  0BFD               	andlw	-3
 13376  004A0A  1801               	xorwf	??_CCP4handler^0,w,c
 13377  004A0C  6E8D               	movwf	141,c	;volatile
 13378  004A0E                     
 13379                           ;Le_Jason_Project.c: 276:     TMR1X++;
 13380  004A0E  A28D               	btfss	141,1,c	;volatile
 13381  004A10  EF0C  F025         	goto	i1u595_21
 13382  004A14  EF0E  F025         	goto	i1u595_20
 13383  004A18                     i1u595_21:
 13384  004A18  EF4B  F025         	goto	i1l5802
 13385  004A1C                     i1u595_20:
 13386  004A1C                     
 13387                           ;Le_Jason_Project.c: 277:     PIR1bits.TMR1IF = 0;
 13388  004A1C  CF79 F001          	movff	3961,??_CCP4handler	;volatile
 13389  004A20  6A02               	clrf	(??_CCP4handler+1)^0,c
 13390  004A22  6A03               	clrf	(??_CCP4handler+2)^0,c
 13391  004A24  6A04               	clrf	(??_CCP4handler+3)^0,c
 13392  004A26  C003  F004         	movff	??_CCP4handler+2,??_CCP4handler+3
 13393  004A2A  C002  F003         	movff	??_CCP4handler+1,??_CCP4handler+2
 13394  004A2E  C001  F002         	movff	??_CCP4handler,??_CCP4handler+1
 13395  004A32  6A01               	clrf	??_CCP4handler^0,c
 13396  004A34  C0FE  F005         	movff	_CCPR4X,??_CCP4handler+4
 13397  004A38  6A06               	clrf	(??_CCP4handler+5)^0,c
 13398  004A3A  6A07               	clrf	(??_CCP4handler+6)^0,c
 13399  004A3C  6A08               	clrf	(??_CCP4handler+7)^0,c
 13400  004A3E  C006  F008         	movff	??_CCP4handler+5,??_CCP4handler+7
 13401  004A42  C005  F007         	movff	??_CCP4handler+4,??_CCP4handler+6
 13402  004A46  6A06               	clrf	(??_CCP4handler+5)^0,c
 13403  004A48  6A05               	clrf	(??_CCP4handler+4)^0,c
 13404  004A4A  5001               	movf	??_CCP4handler^0,w,c
 13405  004A4C  2405               	addwf	(??_CCP4handler+4)^0,w,c
 13406  004A4E  6E09               	movwf	(??_CCP4handler+8)^0,c
 13407  004A50  5002               	movf	(??_CCP4handler+1)^0,w,c
 13408  004A52  2006               	addwfc	(??_CCP4handler+5)^0,w,c
 13409  004A54  6E0A               	movwf	(??_CCP4handler+9)^0,c
 13410  004A56  5003               	movf	(??_CCP4handler+2)^0,w,c
 13411  004A58  2007               	addwfc	(??_CCP4handler+6)^0,w,c
 13412  004A5A  6E0B               	movwf	(??_CCP4handler+10)^0,c
 13413  004A5C  5004               	movf	(??_CCP4handler+3)^0,w,c
 13414  004A5E  2008               	addwfc	(??_CCP4handler+7)^0,w,c
 13415  004A60  6E0C               	movwf	(??_CCP4handler+11)^0,c
 13416  004A62  5078               	movf	120,w,c	;volatile
 13417  004A64  2409               	addwf	(??_CCP4handler+8)^0,w,c
 13418  004A66  6E0D               	movwf	CCP4handler@CCPRT^0,c
 13419  004A68  0E00               	movlw	0
 13420  004A6A  200A               	addwfc	(??_CCP4handler+9)^0,w,c
 13421  004A6C  6E0E               	movwf	(CCP4handler@CCPRT+1)^0,c
 13422  004A6E  0E00               	movlw	0
 13423  004A70  200B               	addwfc	(??_CCP4handler+10)^0,w,c
 13424  004A72  6E0F               	movwf	(CCP4handler@CCPRT+2)^0,c
 13425  004A74  0E00               	movlw	0
 13426  004A76  200C               	addwfc	(??_CCP4handler+11)^0,w,c
 13427  004A78  6E10               	movwf	(CCP4handler@CCPRT+3)^0,c
 13428                           
 13429                           ;Le_Jason_Project.c: 278:     return;
 13430  004A7A  5043               	movf	_Servo2_on^0,w,c
 13431  004A7C  260D               	addwf	CCP4handler@CCPRT^0,f,c
 13432  004A7E  5044               	movf	(_Servo2_on+1)^0,w,c
 13433  004A80  220E               	addwfc	(CCP4handler@CCPRT+1)^0,f,c
 13434  004A82  5045               	movf	(_Servo2_on+2)^0,w,c
 13435  004A84  220F               	addwfc	(CCP4handler@CCPRT+2)^0,f,c
 13436  004A86  5046               	movf	(_Servo2_on+3)^0,w,c
 13437  004A88  2210               	addwfc	(CCP4handler@CCPRT+3)^0,f,c
 13438  004A8A                     
 13439                           ;Le_Jason_Project.c: 279: }
 13440  004A8A  C00D  FF78         	movff	CCP4handler@CCPRT,3960	;volatile
 13441  004A8E                     
 13442                           ;Le_Jason_Project.c: 280: void TMR3handler(void){
 13443  004A8E  C00E  FF79         	movff	CCP4handler@CCPRT+1,3961	;volatile
 13444  004A92                     
 13445                           ;Le_Jason_Project.c: 281:     TMR3X++;
 13446  004A92  C00F  F0FE         	movff	CCP4handler@CCPRT+2,_CCPR4X
 13447  004A96                     i1l5802:
 13448                           
 13449                           ;Le_Jason_Project.c: 283:     return;
 13450  004A96  B28D               	btfsc	141,1,c	;volatile
 13451  004A98  EF50  F025         	goto	i1u596_21
 13452  004A9C  EF52  F025         	goto	i1u596_20
 13453  004AA0                     i1u596_21:
 13454  004AA0  EF90  F025         	goto	i1l5812
 13455  004AA4                     i1u596_20:
 13456  004AA4                     
 13457                           ;Le_Jason_Project.c: 284: }
 13458  004AA4  CF79 F001          	movff	3961,??_CCP4handler	;volatile
 13459  004AA8  6A02               	clrf	(??_CCP4handler+1)^0,c
 13460  004AAA  6A03               	clrf	(??_CCP4handler+2)^0,c
 13461  004AAC  6A04               	clrf	(??_CCP4handler+3)^0,c
 13462  004AAE  C003  F004         	movff	??_CCP4handler+2,??_CCP4handler+3
 13463  004AB2  C002  F003         	movff	??_CCP4handler+1,??_CCP4handler+2
 13464  004AB6  C001  F002         	movff	??_CCP4handler,??_CCP4handler+1
 13465  004ABA  6A01               	clrf	??_CCP4handler^0,c
 13466  004ABC  C0FE  F005         	movff	_CCPR4X,??_CCP4handler+4
 13467  004AC0  6A06               	clrf	(??_CCP4handler+5)^0,c
 13468  004AC2  6A07               	clrf	(??_CCP4handler+6)^0,c
 13469  004AC4  6A08               	clrf	(??_CCP4handler+7)^0,c
 13470  004AC6  C006  F008         	movff	??_CCP4handler+5,??_CCP4handler+7
 13471  004ACA  C005  F007         	movff	??_CCP4handler+4,??_CCP4handler+6
 13472  004ACE  6A06               	clrf	(??_CCP4handler+5)^0,c
 13473  004AD0  6A05               	clrf	(??_CCP4handler+4)^0,c
 13474  004AD2  5001               	movf	??_CCP4handler^0,w,c
 13475  004AD4  2405               	addwf	(??_CCP4handler+4)^0,w,c
 13476  004AD6  6E09               	movwf	(??_CCP4handler+8)^0,c
 13477  004AD8  5002               	movf	(??_CCP4handler+1)^0,w,c
 13478  004ADA  2006               	addwfc	(??_CCP4handler+5)^0,w,c
 13479  004ADC  6E0A               	movwf	(??_CCP4handler+9)^0,c
 13480  004ADE  5003               	movf	(??_CCP4handler+2)^0,w,c
 13481  004AE0  2007               	addwfc	(??_CCP4handler+6)^0,w,c
 13482  004AE2  6E0B               	movwf	(??_CCP4handler+10)^0,c
 13483  004AE4  5004               	movf	(??_CCP4handler+3)^0,w,c
 13484  004AE6  2008               	addwfc	(??_CCP4handler+7)^0,w,c
 13485  004AE8  6E0C               	movwf	(??_CCP4handler+11)^0,c
 13486  004AEA  5078               	movf	120,w,c	;volatile
 13487  004AEC  2409               	addwf	(??_CCP4handler+8)^0,w,c
 13488  004AEE  6E0D               	movwf	CCP4handler@CCPRT^0,c
 13489  004AF0  0E00               	movlw	0
 13490  004AF2  200A               	addwfc	(??_CCP4handler+9)^0,w,c
 13491  004AF4  6E0E               	movwf	(CCP4handler@CCPRT+1)^0,c
 13492  004AF6  0E00               	movlw	0
 13493  004AF8  200B               	addwfc	(??_CCP4handler+10)^0,w,c
 13494  004AFA  6E0F               	movwf	(CCP4handler@CCPRT+2)^0,c
 13495  004AFC  0E00               	movlw	0
 13496  004AFE  200C               	addwfc	(??_CCP4handler+11)^0,w,c
 13497  004B00  6E10               	movwf	(CCP4handler@CCPRT+3)^0,c
 13498                           
 13499                           ;Le_Jason_Project.c: 285: void TMR0handler(void){
 13500  004B02  0101               	movlb	1	; () banked
 13501  004B04  51F6               	movf	_Servo2_off& (0+255),w,b
 13502  004B06  260D               	addwf	CCP4handler@CCPRT^0,f,c
 13503  004B08  51F7               	movf	(_Servo2_off+1)& (0+255),w,b
 13504  004B0A  220E               	addwfc	(CCP4handler@CCPRT+1)^0,f,c
 13505  004B0C  51F8               	movf	(_Servo2_off+2)& (0+255),w,b
 13506  004B0E  220F               	addwfc	(CCP4handler@CCPRT+2)^0,f,c
 13507  004B10  51F9               	movf	(_Servo2_off+3)& (0+255),w,b
 13508  004B12  2210               	addwfc	(CCP4handler@CCPRT+3)^0,f,c
 13509  004B14                     
 13510                           ; BSR set to: 1
 13511                           ;Le_Jason_Project.c: 286:     time0counter++;
 13512  004B14  C00D  FF78         	movff	CCP4handler@CCPRT,3960	;volatile
 13513  004B18                     
 13514                           ; BSR set to: 1
 13515                           ;Le_Jason_Project.c: 287:     CurrentTime = time0counter*0.064;
 13516  004B18  C00E  FF79         	movff	CCP4handler@CCPRT+1,3961	;volatile
 13517  004B1C                     
 13518                           ; BSR set to: 1
 13519                           ;Le_Jason_Project.c: 288:     INTCONbits.TMR0IF = 0;
 13520  004B1C  C00F  F0FE         	movff	CCP4handler@CCPRT+2,_CCPR4X
 13521  004B20                     i1l5812:
 13522                           
 13523                           ;Le_Jason_Project.c: 290: }
 13524  004B20  92B7               	bcf	183,1,c	;volatile
 13525  004B22                     i1l215:
 13526  004B22  0012               	return		;funcret
 13527  004B24                     __end_of_CCP4handler:
 13528                           	callstack 0
 13529                           
 13530 ;; *************** function _CCP1handler *****************
 13531 ;; Defined at:
 13532 ;;		line 233 in file "Le_Jason_Project.c"
 13533 ;; Parameters:    Size  Location     Type
 13534 ;;		None
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;  CCPRT           4   12[COMRAM] unsigned long 
 13537 ;; Return value:  Size  Location     Type
 13538 ;;                  1    wreg      void 
 13539 ;; Registers used:
 13540 ;;		wreg, status,2, status,0
 13541 ;; Tracked objects:
 13542 ;;		On entry : 0/0
 13543 ;;		On exit  : 0/0
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13547 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13548 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13549 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13550 ;;Total ram usage:       16 bytes
 13551 ;; Hardware stack levels used: 1
 13552 ;; Hardware stack levels required when called: 1
 13553 ;; This function calls:
 13554 ;;		Nothing
 13555 ;; This function is called by:
 13556 ;;		_LoPriISR
 13557 ;; This function uses a non-reentrant model
 13558 ;;
 13559                           
 13560                           	psect	text54
 13561  004B24                     __ptext54:
 13562                           	callstack 0
 13563  004B24                     _CCP1handler:
 13564                           	callstack 19
 13565  004B24                     
 13566                           ;Le_Jason_Project.c: 234:     };Le_Jason_Project.c: 235:     if(LATDbits.LATD1 == 0){
 13567  004B24  A09E               	btfss	158,0,c	;volatile
 13568  004B26  EF97  F025         	goto	i1u583_21
 13569  004B2A  EF99  F025         	goto	i1u583_20
 13570  004B2E                     i1u583_21:
 13571  004B2E  EFA3  F025         	goto	i1l5748
 13572  004B32                     i1u583_20:
 13573  004B32                     
 13574                           ;Le_Jason_Project.c: 236:       CCPRT = ((unsigned long)CCPR1X*65536) + ((unsigned long)
      +                          CCPR1H*256) + (unsigned long)CCPR1L;
 13575  004B32  0E80               	movlw	128
 13576  004B34  60BD               	cpfslt	189,c	;volatile
 13577  004B36  EF9F  F025         	goto	i1u584_21
 13578  004B3A  EFA1  F025         	goto	i1u584_20
 13579  004B3E                     i1u584_21:
 13580  004B3E  EFA3  F025         	goto	i1l5748
 13581  004B42                     i1u584_20:
 13582  004B42                     
 13583                           ;Le_Jason_Project.c: 237:         CCPRT += Servo1_off;
 13584  004B42  2A42               	incf	_TMR1X^0,f,c
 13585  004B44                     
 13586                           ;Le_Jason_Project.c: 238:         CCPR1L = CCPRT & 0x0000FF;
 13587  004B44  909E               	bcf	158,0,c	;volatile
 13588  004B46                     i1l5748:
 13589                           
 13590                           ;Le_Jason_Project.c: 241:     }
 13591  004B46  5042               	movf	_TMR1X^0,w,c
 13592  004B48  184B               	xorwf	_CCPR1X^0,w,c
 13593  004B4A  B4D8               	btfsc	status,2,c
 13594  004B4C  EFAA  F025         	goto	i1u585_21
 13595  004B50  EFAC  F025         	goto	i1u585_20
 13596  004B54                     i1u585_21:
 13597  004B54  EFAF  F025         	goto	i1l5752
 13598  004B58                     i1u585_20:
 13599  004B58                     
 13600                           ;Le_Jason_Project.c: 242:     PIR3bits.CCP1IF = 0;
 13601  004B58  92A4               	bcf	164,1,c	;volatile
 13602                           
 13603                           ;Le_Jason_Project.c: 243:     return;
 13604  004B5A  EF49  F026         	goto	i1l207
 13605  004B5E                     i1l5752:
 13606                           
 13607                           ;Le_Jason_Project.c: 245: void CCP4handler(void){
 13608  004B5E  A28C               	btfss	140,1,c	;volatile
 13609  004B60  EFB4  F025         	goto	i1u586_21
 13610  004B64  EFB8  F025         	goto	i1u586_20
 13611  004B68                     i1u586_21:
 13612  004B68  6A01               	clrf	??_CCP1handler^0,c
 13613  004B6A  2A01               	incf	??_CCP1handler^0,f,c
 13614  004B6C  EFB9  F025         	goto	i1u587_28
 13615  004B70                     i1u586_20:
 13616  004B70  6A01               	clrf	??_CCP1handler^0,c
 13617  004B72                     i1u587_28:
 13618  004B72  4601               	rlncf	??_CCP1handler^0,f,c
 13619  004B74  508C               	movf	140,w,c	;volatile
 13620  004B76  1801               	xorwf	??_CCP1handler^0,w,c
 13621  004B78  0BFD               	andlw	-3
 13622  004B7A  1801               	xorwf	??_CCP1handler^0,w,c
 13623  004B7C  6E8C               	movwf	140,c	;volatile
 13624  004B7E                     
 13625                           ;Le_Jason_Project.c: 246:     unsigned long CCPRT;
 13626  004B7E  A28C               	btfss	140,1,c	;volatile
 13627  004B80  EFC4  F025         	goto	i1u588_21
 13628  004B84  EFC6  F025         	goto	i1u588_20
 13629  004B88                     i1u588_21:
 13630  004B88  EF03  F026         	goto	i1l5764
 13631  004B8C                     i1u588_20:
 13632  004B8C                     
 13633                           ;Le_Jason_Project.c: 247:     if(PIR2bits.TMR3IF){
 13634  004B8C  CFBD F001          	movff	4029,??_CCP1handler	;volatile
 13635  004B90  6A02               	clrf	(??_CCP1handler+1)^0,c
 13636  004B92  6A03               	clrf	(??_CCP1handler+2)^0,c
 13637  004B94  6A04               	clrf	(??_CCP1handler+3)^0,c
 13638  004B96  C003  F004         	movff	??_CCP1handler+2,??_CCP1handler+3
 13639  004B9A  C002  F003         	movff	??_CCP1handler+1,??_CCP1handler+2
 13640  004B9E  C001  F002         	movff	??_CCP1handler,??_CCP1handler+1
 13641  004BA2  6A01               	clrf	??_CCP1handler^0,c
 13642  004BA4  C04B  F005         	movff	_CCPR1X,??_CCP1handler+4
 13643  004BA8  6A06               	clrf	(??_CCP1handler+5)^0,c
 13644  004BAA  6A07               	clrf	(??_CCP1handler+6)^0,c
 13645  004BAC  6A08               	clrf	(??_CCP1handler+7)^0,c
 13646  004BAE  C006  F008         	movff	??_CCP1handler+5,??_CCP1handler+7
 13647  004BB2  C005  F007         	movff	??_CCP1handler+4,??_CCP1handler+6
 13648  004BB6  6A06               	clrf	(??_CCP1handler+5)^0,c
 13649  004BB8  6A05               	clrf	(??_CCP1handler+4)^0,c
 13650  004BBA  5001               	movf	??_CCP1handler^0,w,c
 13651  004BBC  2405               	addwf	(??_CCP1handler+4)^0,w,c
 13652  004BBE  6E09               	movwf	(??_CCP1handler+8)^0,c
 13653  004BC0  5002               	movf	(??_CCP1handler+1)^0,w,c
 13654  004BC2  2006               	addwfc	(??_CCP1handler+5)^0,w,c
 13655  004BC4  6E0A               	movwf	(??_CCP1handler+9)^0,c
 13656  004BC6  5003               	movf	(??_CCP1handler+2)^0,w,c
 13657  004BC8  2007               	addwfc	(??_CCP1handler+6)^0,w,c
 13658  004BCA  6E0B               	movwf	(??_CCP1handler+10)^0,c
 13659  004BCC  5004               	movf	(??_CCP1handler+3)^0,w,c
 13660  004BCE  2008               	addwfc	(??_CCP1handler+7)^0,w,c
 13661  004BD0  6E0C               	movwf	(??_CCP1handler+11)^0,c
 13662  004BD2  50BC               	movf	188,w,c	;volatile
 13663  004BD4  2409               	addwf	(??_CCP1handler+8)^0,w,c
 13664  004BD6  6E0D               	movwf	CCP1handler@CCPRT^0,c
 13665  004BD8  0E00               	movlw	0
 13666  004BDA  200A               	addwfc	(??_CCP1handler+9)^0,w,c
 13667  004BDC  6E0E               	movwf	(CCP1handler@CCPRT+1)^0,c
 13668  004BDE  0E00               	movlw	0
 13669  004BE0  200B               	addwfc	(??_CCP1handler+10)^0,w,c
 13670  004BE2  6E0F               	movwf	(CCP1handler@CCPRT+2)^0,c
 13671  004BE4  0E00               	movlw	0
 13672  004BE6  200C               	addwfc	(??_CCP1handler+11)^0,w,c
 13673  004BE8  6E10               	movwf	(CCP1handler@CCPRT+3)^0,c
 13674                           
 13675                           ;Le_Jason_Project.c: 248:         if(CCPR4H < 0b10000000){
 13676  004BEA  5047               	movf	_Servo1_on^0,w,c
 13677  004BEC  260D               	addwf	CCP1handler@CCPRT^0,f,c
 13678  004BEE  5048               	movf	(_Servo1_on+1)^0,w,c
 13679  004BF0  220E               	addwfc	(CCP1handler@CCPRT+1)^0,f,c
 13680  004BF2  5049               	movf	(_Servo1_on+2)^0,w,c
 13681  004BF4  220F               	addwfc	(CCP1handler@CCPRT+2)^0,f,c
 13682  004BF6  504A               	movf	(_Servo1_on+3)^0,w,c
 13683  004BF8  2210               	addwfc	(CCP1handler@CCPRT+3)^0,f,c
 13684  004BFA                     
 13685                           ;Le_Jason_Project.c: 249:             TMR3X++;
 13686  004BFA  C00D  FFBC         	movff	CCP1handler@CCPRT,4028	;volatile
 13687  004BFE                     
 13688                           ;Le_Jason_Project.c: 250:             PIR2bits.TMR3IF = 0;
 13689  004BFE  C00E  FFBD         	movff	CCP1handler@CCPRT+1,4029	;volatile
 13690  004C02                     
 13691                           ;Le_Jason_Project.c: 251:         }
 13692  004C02  C00F  F04B         	movff	CCP1handler@CCPRT+2,_CCPR1X
 13693  004C06                     i1l5764:
 13694                           
 13695                           ;Le_Jason_Project.c: 253:     if(CCPR4X != TMR3X){
 13696  004C06  B28C               	btfsc	140,1,c	;volatile
 13697  004C08  EF08  F026         	goto	i1u589_21
 13698  004C0C  EF0A  F026         	goto	i1u589_20
 13699  004C10                     i1u589_21:
 13700  004C10  EF48  F026         	goto	i1l5774
 13701  004C14                     i1u589_20:
 13702  004C14                     
 13703                           ;Le_Jason_Project.c: 254:         PIR4bits.CCP4IF = 0;
 13704  004C14  CFBD F001          	movff	4029,??_CCP1handler	;volatile
 13705  004C18  6A02               	clrf	(??_CCP1handler+1)^0,c
 13706  004C1A  6A03               	clrf	(??_CCP1handler+2)^0,c
 13707  004C1C  6A04               	clrf	(??_CCP1handler+3)^0,c
 13708  004C1E  C003  F004         	movff	??_CCP1handler+2,??_CCP1handler+3
 13709  004C22  C002  F003         	movff	??_CCP1handler+1,??_CCP1handler+2
 13710  004C26  C001  F002         	movff	??_CCP1handler,??_CCP1handler+1
 13711  004C2A  6A01               	clrf	??_CCP1handler^0,c
 13712  004C2C  C04B  F005         	movff	_CCPR1X,??_CCP1handler+4
 13713  004C30  6A06               	clrf	(??_CCP1handler+5)^0,c
 13714  004C32  6A07               	clrf	(??_CCP1handler+6)^0,c
 13715  004C34  6A08               	clrf	(??_CCP1handler+7)^0,c
 13716  004C36  C006  F008         	movff	??_CCP1handler+5,??_CCP1handler+7
 13717  004C3A  C005  F007         	movff	??_CCP1handler+4,??_CCP1handler+6
 13718  004C3E  6A06               	clrf	(??_CCP1handler+5)^0,c
 13719  004C40  6A05               	clrf	(??_CCP1handler+4)^0,c
 13720  004C42  5001               	movf	??_CCP1handler^0,w,c
 13721  004C44  2405               	addwf	(??_CCP1handler+4)^0,w,c
 13722  004C46  6E09               	movwf	(??_CCP1handler+8)^0,c
 13723  004C48  5002               	movf	(??_CCP1handler+1)^0,w,c
 13724  004C4A  2006               	addwfc	(??_CCP1handler+5)^0,w,c
 13725  004C4C  6E0A               	movwf	(??_CCP1handler+9)^0,c
 13726  004C4E  5003               	movf	(??_CCP1handler+2)^0,w,c
 13727  004C50  2007               	addwfc	(??_CCP1handler+6)^0,w,c
 13728  004C52  6E0B               	movwf	(??_CCP1handler+10)^0,c
 13729  004C54  5004               	movf	(??_CCP1handler+3)^0,w,c
 13730  004C56  2008               	addwfc	(??_CCP1handler+7)^0,w,c
 13731  004C58  6E0C               	movwf	(??_CCP1handler+11)^0,c
 13732  004C5A  50BC               	movf	188,w,c	;volatile
 13733  004C5C  2409               	addwf	(??_CCP1handler+8)^0,w,c
 13734  004C5E  6E0D               	movwf	CCP1handler@CCPRT^0,c
 13735  004C60  0E00               	movlw	0
 13736  004C62  200A               	addwfc	(??_CCP1handler+9)^0,w,c
 13737  004C64  6E0E               	movwf	(CCP1handler@CCPRT+1)^0,c
 13738  004C66  0E00               	movlw	0
 13739  004C68  200B               	addwfc	(??_CCP1handler+10)^0,w,c
 13740  004C6A  6E0F               	movwf	(CCP1handler@CCPRT+2)^0,c
 13741  004C6C  0E00               	movlw	0
 13742  004C6E  200C               	addwfc	(??_CCP1handler+11)^0,w,c
 13743  004C70  6E10               	movwf	(CCP1handler@CCPRT+3)^0,c
 13744                           
 13745                           ;Le_Jason_Project.c: 255:         return;
 13746  004C72  0101               	movlb	1	; () banked
 13747  004C74  51FA               	movf	_Servo1_off& (0+255),w,b
 13748  004C76  260D               	addwf	CCP1handler@CCPRT^0,f,c
 13749  004C78  51FB               	movf	(_Servo1_off+1)& (0+255),w,b
 13750  004C7A  220E               	addwfc	(CCP1handler@CCPRT+1)^0,f,c
 13751  004C7C  51FC               	movf	(_Servo1_off+2)& (0+255),w,b
 13752  004C7E  220F               	addwfc	(CCP1handler@CCPRT+2)^0,f,c
 13753  004C80  51FD               	movf	(_Servo1_off+3)& (0+255),w,b
 13754  004C82  2210               	addwfc	(CCP1handler@CCPRT+3)^0,f,c
 13755  004C84                     
 13756                           ; BSR set to: 1
 13757                           ;Le_Jason_Project.c: 256:     }
 13758  004C84  C00D  FFBC         	movff	CCP1handler@CCPRT,4028	;volatile
 13759  004C88                     
 13760                           ; BSR set to: 1
 13761                           ;Le_Jason_Project.c: 257:     LATEbits.LATE1 = !LATEbits.LATE1;
 13762  004C88  C00E  FFBD         	movff	CCP1handler@CCPRT+1,4029	;volatile
 13763  004C8C                     
 13764                           ; BSR set to: 1
 13765                           ;Le_Jason_Project.c: 258:     if(LATEbits.LATE1 == 1){
 13766  004C8C  C00F  F04B         	movff	CCP1handler@CCPRT+2,_CCPR1X
 13767  004C90                     i1l5774:
 13768                           
 13769                           ;Le_Jason_Project.c: 260:         CCPRT += Servo2_on;
 13770  004C90  92A4               	bcf	164,1,c	;volatile
 13771  004C92                     i1l207:
 13772  004C92  0012               	return		;funcret
 13773  004C94                     __end_of_CCP1handler:
 13774                           	callstack 0
 13775                           
 13776 ;; *************** function _HiPriISR *****************
 13777 ;; Defined at:
 13778 ;;		line 194 in file "Le_Jason_Project.c"
 13779 ;; Parameters:    Size  Location     Type
 13780 ;;		None
 13781 ;; Auto vars:     Size  Location     Type
 13782 ;;		None
 13783 ;; Return value:  Size  Location     Type
 13784 ;;                  1    wreg      void 
 13785 ;; Registers used:
 13786 ;;		None
 13787 ;; Tracked objects:
 13788 ;;		On entry : 0/0
 13789 ;;		On exit  : 0/0
 13790 ;;		Unchanged: 0/0
 13791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13796 ;;Total ram usage:        0 bytes
 13797 ;; Hardware stack levels used: 1
 13798 ;; This function calls:
 13799 ;;		Nothing
 13800 ;; This function is called by:
 13801 ;;		Interrupt level 2
 13802 ;; This function uses a non-reentrant model
 13803 ;;
 13804                           
 13805                           	psect	intcode
 13806  000008                     __pintcode:
 13807                           	callstack 0
 13808  000008                     _HiPriISR:
 13809                           	callstack 19
 13810                           
 13811                           ;incstack = 0
 13812  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13813  00000A  EFE0  F02E         	goto	int_func
 13814                           
 13815                           	psect	intcode_body
 13816  005DC0                     __pintcode_body:
 13817                           	callstack 19
 13818  005DC0                     int_func:
 13819                           	callstack 19
 13820  005DC0  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13821  005DC2  0011               	retfie		f
 13822  005DC4                     __end_of_HiPriISR:
 13823                           	callstack 0
 13824                           
 13825                           	psect	rparam
 13826  0000                     
 13827                           	psect	temp
 13828  00004C                     btemp:
 13829                           	callstack 0
 13830  00004C                     	ds	1
 13831  0000                     int$flags	set	btemp
 13832  0000                     wtemp8	set	btemp+1
 13833  0000                     ttemp5	set	btemp+1
 13834  0000                     ttemp6	set	btemp+4
 13835  0000                     ttemp7	set	btemp+8
 13836                           
 13837                           	psect	idloc
 13838                           
 13839                           ;Config register IDLOC0 @ 0x200000
 13840                           ;	unspecified, using default values
 13841  200000                     	org	2097152
 13842  200000  FF                 	db	255
 13843                           
 13844                           ;Config register IDLOC1 @ 0x200001
 13845                           ;	unspecified, using default values
 13846  200001                     	org	2097153
 13847  200001  FF                 	db	255
 13848                           
 13849                           ;Config register IDLOC2 @ 0x200002
 13850                           ;	unspecified, using default values
 13851  200002                     	org	2097154
 13852  200002  FF                 	db	255
 13853                           
 13854                           ;Config register IDLOC3 @ 0x200003
 13855                           ;	unspecified, using default values
 13856  200003                     	org	2097155
 13857  200003  FF                 	db	255
 13858                           
 13859                           ;Config register IDLOC4 @ 0x200004
 13860                           ;	unspecified, using default values
 13861  200004                     	org	2097156
 13862  200004  FF                 	db	255
 13863                           
 13864                           ;Config register IDLOC5 @ 0x200005
 13865                           ;	unspecified, using default values
 13866  200005                     	org	2097157
 13867  200005  FF                 	db	255
 13868                           
 13869                           ;Config register IDLOC6 @ 0x200006
 13870                           ;	unspecified, using default values
 13871  200006                     	org	2097158
 13872  200006  FF                 	db	255
 13873                           
 13874                           ;Config register IDLOC7 @ 0x200007
 13875                           ;	unspecified, using default values
 13876  200007                     	org	2097159
 13877  200007  FF                 	db	255
 13878                           
 13879                           	psect	config
 13880                           
 13881                           ;Config register CONFIG1L @ 0x300000
 13882                           ;	VREG Sleep Enable bit
 13883                           ;	RETEN = 0x1, unprogrammed default
 13884                           ;	LF-INTOSC Low-power Enable bit
 13885                           ;	INTOSCSEL = 0x1, unprogrammed default
 13886                           ;	SOSC Power Selection and mode Configuration bits
 13887                           ;	SOSCSEL = 0x3, unprogrammed default
 13888                           ;	Extended Instruction Set
 13889                           ;	XINST = OFF, Disabled
 13890  300000                     	org	3145728
 13891  300000  1D                 	db	29
 13892                           
 13893                           ;Config register CONFIG1H @ 0x300001
 13894                           ;	Oscillator
 13895                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 13896                           ;	PLL x4 Enable bit
 13897                           ;	PLLCFG = OFF, Disabled
 13898                           ;	Fail-Safe Clock Monitor
 13899                           ;	FCMEN = 0x0, unprogrammed default
 13900                           ;	Internal External Oscillator Switch Over Mode
 13901                           ;	IESO = 0x0, unprogrammed default
 13902  300001                     	org	3145729
 13903  300001  03                 	db	3
 13904                           
 13905                           ;Config register CONFIG2L @ 0x300002
 13906                           ;	Power Up Timer
 13907                           ;	PWRTEN = ON, Enabled
 13908                           ;	Brown Out Detect
 13909                           ;	BOREN = ON, Controlled with SBOREN bit
 13910                           ;	Brown-out Reset Voltage bits
 13911                           ;	BORV = 2, 2.0V
 13912                           ;	BORMV Power level
 13913                           ;	BORPWR = 0x3, unprogrammed default
 13914  300002                     	org	3145730
 13915  300002  72                 	db	114
 13916                           
 13917                           ;Config register CONFIG2H @ 0x300003
 13918                           ;	Watchdog Timer
 13919                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 13920                           ;	Watchdog Postscaler
 13921                           ;	WDTPS = 0x1F, unprogrammed default
 13922  300003                     	org	3145731
 13923  300003  7C                 	db	124
 13924                           
 13925                           ;Config register CONFIG3L @ 0x300004
 13926                           ;	unspecified, using default values
 13927                           ;	RTCC Clock Select
 13928                           ;	RTCOSC = 0x1, unprogrammed default
 13929                           ;	External Address Shift bit
 13930                           ;	EASHFT = 0x1, unprogrammed default
 13931                           ;	Address Bus Width Select bits
 13932                           ;	ABW = 0x3, unprogrammed default
 13933                           ;	Data Bus Width
 13934                           ;	BW = 0x1, unprogrammed default
 13935                           ;	External Bus Wait
 13936                           ;	WAIT = 0x1, unprogrammed default
 13937  300004                     	org	3145732
 13938  300004  F9                 	db	249
 13939                           
 13940                           ;Config register CONFIG3H @ 0x300005
 13941                           ;	CCP2 Mux
 13942                           ;	CCP2MX = PORTC, RC1
 13943                           ;	ECCP Mux
 13944                           ;	ECCPMX = 0x1, unprogrammed default
 13945                           ;	MSSP address masking
 13946                           ;	MSSPMSK = 0x1, unprogrammed default
 13947                           ;	Master Clear Enable
 13948                           ;	MCLRE = 0x1, unprogrammed default
 13949  300005                     	org	3145733
 13950  300005  8B                 	db	139
 13951                           
 13952                           ;Config register CONFIG4L @ 0x300006
 13953                           ;	unspecified, using default values
 13954                           ;	Stack Overflow Reset
 13955                           ;	STVREN = 0x1, unprogrammed default
 13956                           ;	Boot Block Size
 13957                           ;	BBSIZ = 0x1, unprogrammed default
 13958                           ;	Background Debug
 13959                           ;	DEBUG = 0x1, unprogrammed default
 13960  300006                     	org	3145734
 13961  300006  91                 	db	145
 13962                           
 13963                           ; Padding undefined space
 13964  300007                     	org	3145735
 13965  300007  FF                 	db	255
 13966                           
 13967                           ;Config register CONFIG5L @ 0x300008
 13968                           ;	unspecified, using default values
 13969                           ;	Code Protect 00800-03FFF
 13970                           ;	CP0 = 0x1, unprogrammed default
 13971                           ;	Code Protect 04000-07FFF
 13972                           ;	CP1 = 0x1, unprogrammed default
 13973                           ;	Code Protect 08000-0BFFF
 13974                           ;	CP2 = 0x1, unprogrammed default
 13975                           ;	Code Protect 0C000-0FFFF
 13976                           ;	CP3 = 0x1, unprogrammed default
 13977                           ;	Code Protect 10000-13FFF
 13978                           ;	CP4 = 0x1, unprogrammed default
 13979                           ;	Code Protect 14000-17FFF
 13980                           ;	CP5 = 0x1, unprogrammed default
 13981                           ;	Code Protect 18000-1BFFF
 13982                           ;	CP6 = 0x1, unprogrammed default
 13983                           ;	Code Protect 1C000-1FFFF
 13984                           ;	CP7 = 0x1, unprogrammed default
 13985  300008                     	org	3145736
 13986  300008  FF                 	db	255
 13987                           
 13988                           ;Config register CONFIG5H @ 0x300009
 13989                           ;	unspecified, using default values
 13990                           ;	Code Protect Boot
 13991                           ;	CPB = 0x1, unprogrammed default
 13992                           ;	Data EE Read Protect
 13993                           ;	CPD = 0x1, unprogrammed default
 13994  300009                     	org	3145737
 13995  300009  C0                 	db	192
 13996                           
 13997                           ;Config register CONFIG6L @ 0x30000A
 13998                           ;	unspecified, using default values
 13999                           ;	Table Write Protect 00800-03FFF
 14000                           ;	WRT0 = 0x1, unprogrammed default
 14001                           ;	Table Write Protect 04000-07FFF
 14002                           ;	WRT1 = 0x1, unprogrammed default
 14003                           ;	Table Write Protect 08000-0BFFF
 14004                           ;	WRT2 = 0x1, unprogrammed default
 14005                           ;	Table Write Protect 0C000-0FFFF
 14006                           ;	WRT3 = 0x1, unprogrammed default
 14007                           ;	Table Write Protect 10000-13FFF
 14008                           ;	WRT4 = 0x1, unprogrammed default
 14009                           ;	Table Write Protect 14000-17FFF
 14010                           ;	WRT5 = 0x1, unprogrammed default
 14011                           ;	Table Write Protect 18000-1BFFF
 14012                           ;	WRT6 = 0x1, unprogrammed default
 14013                           ;	Table Write Protect 1C000-1FFFF
 14014                           ;	WRT7 = 0x1, unprogrammed default
 14015  30000A                     	org	3145738
 14016  30000A  FF                 	db	255
 14017                           
 14018                           ;Config register CONFIG6H @ 0x30000B
 14019                           ;	unspecified, using default values
 14020                           ;	Config. Write Protect
 14021                           ;	WRTC = 0x1, unprogrammed default
 14022                           ;	Table Write Protect Boot
 14023                           ;	WRTB = 0x1, unprogrammed default
 14024                           ;	Data EE Write Protect
 14025                           ;	WRTD = 0x1, unprogrammed default
 14026  30000B                     	org	3145739
 14027  30000B  E0                 	db	224
 14028                           
 14029                           ;Config register CONFIG7L @ 0x30000C
 14030                           ;	unspecified, using default values
 14031                           ;	Table Read Protect 00800-03FFF
 14032                           ;	EBRT0 = 0x1, unprogrammed default
 14033                           ;	Table Read Protect 04000-07FFF
 14034                           ;	EBRT1 = 0x1, unprogrammed default
 14035                           ;	Table Read Protect 08000-0BFFF
 14036                           ;	EBRT2 = 0x1, unprogrammed default
 14037                           ;	Table Read Protect 0C000-0FFFF
 14038                           ;	EBRT3 = 0x1, unprogrammed default
 14039                           ;	Table Read Protect 10000-13FFF
 14040                           ;	EBRT4 = 0x1, unprogrammed default
 14041                           ;	Table Read Protect 14000-17FFF
 14042                           ;	EBRT5 = 0x1, unprogrammed default
 14043                           ;	Table Read Protect 18000-1BFFF
 14044                           ;	EBRT6 = 0x1, unprogrammed default
 14045                           ;	Table Read Protect 1C000-1FFFF
 14046                           ;	EBRT7 = 0x1, unprogrammed default
 14047  30000C                     	org	3145740
 14048  30000C  FF                 	db	255
 14049                           
 14050                           ;Config register CONFIG7H @ 0x30000D
 14051                           ;	unspecified, using default values
 14052                           ;	Table Read Protect Boot
 14053                           ;	EBRTB = 0x1, unprogrammed default
 14054  30000D                     	org	3145741
 14055  30000D  40                 	db	64
 14056                           tosu	equ	0xFFF
 14057                           tosh	equ	0xFFE
 14058                           tosl	equ	0xFFD
 14059                           stkptr	equ	0xFFC
 14060                           pclatu	equ	0xFFB
 14061                           pclath	equ	0xFFA
 14062                           pcl	equ	0xFF9
 14063                           tblptru	equ	0xFF8
 14064                           tblptrh	equ	0xFF7
 14065                           tblptrl	equ	0xFF6
 14066                           tablat	equ	0xFF5
 14067                           prodh	equ	0xFF4
 14068                           prodl	equ	0xFF3
 14069                           indf0	equ	0xFEF
 14070                           postinc0	equ	0xFEE
 14071                           postdec0	equ	0xFED
 14072                           preinc0	equ	0xFEC
 14073                           plusw0	equ	0xFEB
 14074                           fsr0h	equ	0xFEA
 14075                           fsr0l	equ	0xFE9
 14076                           wreg	equ	0xFE8
 14077                           indf1	equ	0xFE7
 14078                           postinc1	equ	0xFE6
 14079                           postdec1	equ	0xFE5
 14080                           preinc1	equ	0xFE4
 14081                           plusw1	equ	0xFE3
 14082                           fsr1h	equ	0xFE2
 14083                           fsr1l	equ	0xFE1
 14084                           bsr	equ	0xFE0
 14085                           indf2	equ	0xFDF
 14086                           postinc2	equ	0xFDE
 14087                           postdec2	equ	0xFDD
 14088                           preinc2	equ	0xFDC
 14089                           plusw2	equ	0xFDB
 14090                           fsr2h	equ	0xFDA
 14091                           fsr2l	equ	0xFD9
 14092                           status	equ	0xFD8

Data Sizes:
    Strings     60
    Constant    60
    Data        16
    BSS         129
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      75
    BANK0           160    158     159
    BANK1           256    128     254
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2114_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 

    UART_Write_String@buf	PTR unsigned char  size(2) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flge->___flmul
    _atoi->_isspace
    _atan2f->_fabsf
    _atanf->___flmul
    _atanf->_fabsf
    _fabsf->___fldiv
    ___flsub->___flmul
    ___fladd->___flmul
    ___flneg->___fldiv
    ___flmul->___flneg
    ___fldiv->___xxtofl
    _UART_Write_String->_UART_Write
    _Servo2->_map
    _Servo1->_map
    _map->___lldiv
    _Initial->_I2C_Start
    _I2C_Start->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait

Critical Paths under _LoPriISR in COMRAM

    _LoPriISR->_CCP1handler
    _LoPriISR->_CCP4handler

Critical Paths under _HiPriISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _floorf->___fldiv
    ___flge->___flmul
    _atan2f->_atanf
    _atanf->___flsub
    _fabsf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flneg->___fldiv
    ___flmul->___fldiv

Critical Paths under _LoPriISR in BANK0

    None.

Critical Paths under _HiPriISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MPU6050_Read
    _MPU6050_Read->_atan2f

Critical Paths under _LoPriISR in BANK1

    None.

Critical Paths under _HiPriISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LoPriISR in BANK2

    None.

Critical Paths under _HiPriISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LoPriISR in BANK3

    None.

Critical Paths under _HiPriISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LoPriISR in BANK4

    None.

Critical Paths under _HiPriISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LoPriISR in BANK5

    None.

Critical Paths under _HiPriISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LoPriISR in BANK6

    None.

Critical Paths under _HiPriISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LoPriISR in BANK7

    None.

Critical Paths under _HiPriISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LoPriISR in BANK8

    None.

Critical Paths under _HiPriISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LoPriISR in BANK9

    None.

Critical Paths under _HiPriISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LoPriISR in BANK10

    None.

Critical Paths under _HiPriISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LoPriISR in BANK11

    None.

Critical Paths under _HiPriISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LoPriISR in BANK12

    None.

Critical Paths under _HiPriISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LoPriISR in BANK13

    None.

Critical Paths under _HiPriISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LoPriISR in BANK14

    None.

Critical Paths under _HiPriISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _LoPriISR in BANK15

    None.

Critical Paths under _HiPriISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  140999
                                            156 BANK0      2     2      0
                                            126 BANK1      2     2      0
                            _Initial
                       _MPU6050_Read
                             _Servo1
                             _Servo2
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                       118   118      0  136014
                                             32 BANK1     94    94      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                             _Servo1
                             _Servo2
                  _UART_Write_String
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                             _atan2f
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   52320
                                              0 BANK1     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   51636
                                            148 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   51109
                                            126 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   44300
                                             58 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3957
                                             35 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             28 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             19 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             45 COMRAM    10     6      4
                                             13 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     697
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             34 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1515
                                             26 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             19 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _atan2f                                              56    48      8   55648
                                            116 BANK0     24    16      8
                                              0 BANK1     32    32      0
                            ___fladd
                            ___fldiv
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _atanf
                              _fabsf
 ---------------------------------------------------------------------------------
 (3) _atanf                                               58    54      4   31061
                                             58 BANK0     58    54      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _fabsf
 ---------------------------------------------------------------------------------
 (3) _fabsf                                                8     4      4     251
                                             45 COMRAM     8     4      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     645
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8327
                                             50 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             34 BANK0     16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     605
                                             45 COMRAM     4     0      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    6113
                                             49 COMRAM     4     4      0
                                             13 BANK0     21    13      8
                            ___fldiv (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    6323
                                             33 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1196
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    4     2      2     341
                                             20 COMRAM     4     2      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      31
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Servo2                                              12    10      2    2412
                                             52 COMRAM     2     0      2
                                              0 BANK0     10    10      0
                            ___fltol (ARG)
                                _map
 ---------------------------------------------------------------------------------
 (1) _Servo1                                              12    10      2    2412
                                             52 COMRAM     2     0      2
                                              0 BANK0     10    10      0
                            ___fltol (ARG)
                                _map
 ---------------------------------------------------------------------------------
 (2) _map                                                 20    10     10    2096
                                             32 COMRAM    20    10     10
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     456
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                             19 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0      65
                                             19 COMRAM     2     2      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initial                                              2     2      0      93
                                             22 COMRAM     2     2      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      62
                                             21 COMRAM     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      31
                                             20 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LoPriISR                                            3     3      0     272
                                             16 COMRAM     3     3      0
                        _CCP1handler
                        _CCP4handler
                        _TMR1handler
                        _TMR3handler
 ---------------------------------------------------------------------------------
 (11) _TMR3handler                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1handler                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP4handler                                        16    16      0     136
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 (11) _CCP1handler                                        16    16      0     136
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HiPriISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
   _MPU6050_Read
     _I2C_Master_Stop
     _I2C_Master_Write
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
     _Servo1
       ___fltol (ARG)
       _map (ARG)
         ___lldiv
         ___lmul
     _Servo2
       ___fltol (ARG)
       _map (ARG)
     _UART_Write_String
       _UART_Write
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___flneg
     ___fltol
     ___xxtofl
     _atan2f
       ___fladd
       ___fldiv
       ___flneg
       ___flsub
         ___fladd
         ___flmul (ARG)
       ___fpclassifyf
       _atanf
         ___fladd
         ___fldiv
         ___flmul
         ___flneg
         ___flsub
         ___fpclassifyf
         _fabsf
           ___fldiv (ARG)
       _fabsf
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
   _Servo1
   _Servo2

 _LoPriISR (ROOT)
   _CCP1handler
   _CCP4handler
   _TMR1handler
   _TMR3handler

 _HiPriISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     80      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      4B       1       79.8%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E8      12        0.0%
DATA                 0      0     1E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 23:32:19 2021

              ___fldiv@aexp 006C                ___fldiv@bexp 006B                ___fldiv@sign 0064  
        __size_of_I2C_Start 0010                ___awdiv@sign 0019                          _aT 1001  
                        _pi 1039                          bsr 000FE0         ___wmul@multiplicand 0016  
__size_of_UART_Write_String 0040                 map@valuemax 0025                 map@valuemin 0023  
                       l300 5D50                         l303 5D62                         l312 5D08  
                       l241 55F2                         l323 5886                         l235 5696  
                       l244 5D0A                         l324 5896                         l253 5D9A  
                       l181 4DB8                         l229 57BE                         l309 5BD0  
                       l262 5D7C                         l247 5D2E                         l271 5D76  
                       l265 5D8A                         l274 5D3A                         l346 573A  
                       l259 5DB2                         l291 5B3A                         l339 572A  
                       l276 5D48                         l268 5D68                         l277 5D4C  
                       l293 5B48                         l294 5B4C                         l286 5B0C  
                       l543 5332                         l288 5B1A                         l609 4EBE  
                       l297 331C                         l571 554E                         l556 54A4  
                       l582 4FC4                         l840 350E                         l905 42E8  
                       l841 34FC                         l577 4F7E                         l930 40A6  
                       l586 5C78                         l842 34C2                         l907 4360  
                       l908 434E                         l933 3F38                         l926 3D42  
                       l943 4068                         l935 3FB0                         l936 3F9E  
                       l857 3628                         l849 37DE                         l970 480C  
                       l866 36F8                         l882 5B06                         l867 36E6  
                       l981 47A4                         l974 4748                         l894 4442  
                       l967 46B0                         l896 42A2                         l899 4266  
                       l999 2C98                         _BSR 000FE0             __end_of_I2C_ACK 5D8C  
                       _map 573C                         _pad 5334                         _yaw 018C  
              ___awmod@sign 0019                         wreg 000FE8                  _TXSTA1bits 000FAC  
              ___flmul@aexp 0076                ___flmul@bexp 007B                ___flmul@sign 0075  
              ___flmul@temp 0080                ___flmul@prod 007C          MPU6050_Read@buffer 0124  
              ___fltol@exp1 001D                        l1000 25B6                        l1002 25D6  
                      l1032 2A3E                        l1008 26FE                        l1105 5A6C  
                      l1042 2B26                        l1034 2A02                        l1070 1CDA  
                      l1303 49A8                        l1151 53F4                        l1215 18AC  
                      l1056 50C2                        l1080 1E52                        l1312 4658  
                      l1074 2530                        l1322 5C40                        l1330 5ABE  
                      l1306 49B0                        l1146 5378                        l1315 459C  
                      l1149 53BA                        l1261 3C7A                        l1351 526E  
                      l1336 5C08                        l1169 1CD8                        l1098 5CE2  
                      l1362 5DC4                        l1274 5824                        l1187 146C  
                      l1275 582C                        l1268 3BB8                        l1374 5CAE  
                      l1359 5B90                        l1368 5A18                        l1393 59BA  
                      l1378 51A4                        l1388 59B2                        l7000 59A4  
                      l7010 44D0                        l6300 33B4                        l7012 44DE  
                      l7020 45C0                        l7004 4444                        l6310 33E8  
                      l6302 33B6                        l7022 45FC                        l7006 4464  
                      l7102 1264                        ?_pad 0024                        ?_map 0021  
                      l8000 4CD8                        l6400 35F6                        l6320 3424  
                      l6304 33C6                        l6312 33F0                        l7032 5C0A  
                      l7040 5A86                        l7024 4610                        l7016 4550  
                      l7008 44BC                        l7200 16FE                        l7120 12FE  
                      l7104 1276                        l8010 4CF4                        l8002 4CDA  
                      l6410 364E                        l6402 35F8                        l6330 3438  
                      l6322 3428                        l6314 3400                        l6306 33D6  
                      l7042 5AB4                        l7026 4638                        l7018 458C  
                      l7210 1798                        l7202 1732                        l7130 13D2  
                      l7122 1332                        l7106 1292                        l7114 12AE  
                      l7050 1084                        l8020 4D1C                        l8012 4CF6  
                      l8004 4CDC                        l6420 367C                        l6404 3608  
                      l6340 344C                        l6332 343C                        l6324 342C  
                      l6316 3412                        l6308 33E6                        l7044 5AB8  
                      l7036 5A6E                        l7028 4648                        l6260 51B8  
                      l7300 1B54                        l7220 1872                        l7212 17CC  
                      l7204 1746                        l7140 143E                        l7124 1338  
                      l7132 1406                        l7116 12C8                        l7060 10D8  
                      l7052 1094                        l8100 2CB6                        l8030 4D38  
                      l8022 4D22                        l8014 4CF8                        l8006 4CDE  
                      l6510 40D6                        l6502 40A8                        l6422 368A  
                      l6414 3662                        l6430 36A8                        l6406 3618  
                      l6342 3450                        l6334 3440                        l6326 3430  
                      l6318 3420                        l6350 3460                        l7038 5A72  
                      l6262 51CA                        l7310 1B84                        l7302 1B62  
                      l7230 18C8                        l7214 1826                        l7222 1876  
                      l7206 1778                        l7142 1446                        l7134 1416  
                      l7126 1396                        l7070 111E                        l7062 10E0  
                      l7054 10A2                        l8110 2D6A                        l8102 2CDA  
                      l8040 4D52                        l8032 4D3C                        l8024 4D26  
                      l8016 4D10                        l8008 4CE0                        l6600 430A  
                      l6520 4110                        l6512 40E6                        l6504 40B6  
                      l6424 3692                        l6416 366C                        l6408 363E  
                      l6432 36B6                        l6360 34D0                        l6352 3464  
                      l6344 3454                        l6336 3444                        l6328 3434  
                      l6280 334C                        l6272 331E                        l6264 51D4  
                      l7320 1BE6                        l7312 1BAA                        l7304 1B6A  
                      l7240 196E                        l7232 192C                        l7224 1886  
                      l7216 182A                        l7208 1788                        l7160 14F6  
                      l7152 148A                        l7144 1460                        l7136 141A  
                      l7128 13CA                        l7080 115A                        l7072 1126  
                      l7064 10F2                        l7056 10AA                        l7048 107A  
                      l7400 50EE                        l8120 2E4E                        l8112 2D8E  
                      l8104 2CFE                        l8050 4D6E                        l8042 4D58  
                      l8034 4D42                        l8026 4D2C                        l8018 4D16  
                      l6610 437C                        l6602 4318                        l6530 413C  
                      l6522 4116                        l6514 40F6                        l6506 40C4  
                      l6442 3708                        l6450 375E                        l6434 36BA  
                      l6426 3696                        l6418 367A                        l6370 34FA  
                      l6362 34DC                        l6354 348E                        l6346 3458  
                      l6338 3448                        l6290 3386                        l6282 335C  
                      l6274 332C                        l6266 51F2                        l6258 51A6  
                      l7330 1C2C                        l7322 1C00                        l7314 1BC6  
                      l7306 1B72                        l7250 19AC                        l7234 193A  
                      l7242 1976                        l7226 1898                        l7218 185E  
                      l7170 1534                        l7154 149C                        l7162 14FA  
                      l7138 142C                        l7146 1478                        l7090 11D6  
                      l7074 112A                        l7066 1100                        l7058 10CE  
                      l7410 5140                        l8130 2FB0                        l8122 2E9A  
                      l8114 2DB2                        l8106 2D22                        l7420 5D18  
                      l8060 4D8A                        l8052 4D74                        l8044 4D5E  
                      l8036 4D48                        l8028 4D32                        l6620 43E8  
                      l6612 438A                        l6604 4346                        l6540 4176  
                      l6532 414C                        l6524 411C                        l6516 40F8  
                      l6508 40C6                        l6700 3E08                        l6460 37B0  
                      l6452 376E                        l6444 3714                        l6436 36C8  
                      l6428 36A6                        l6380 3550                        l6372 351C  
                      l6364 34E0                        l6356 34AA                        l6348 345C  
                      l6292 338C                        l6284 336C                        l6276 333A  
                      l6268 5228                        l7340 1C7C                        l7332 1C3C  
                      l7324 1C06                        l7316 1BCE                        l7308 1B7E  
                      l7260 19D8                        l7252 19B2                        l7244 198A  
                      l7236 194E                        l7228 18A4                        l7180 1582  
                      l7172 1538                        l7164 1502                        l7156 14B8  
                      l7092 11E0                        l7084 1190                        l7076 112E  
                      l7068 1112                        l7412 5152                        l7404 50FA  
                      l7500 3A08                        l8140 3114                        l8132 2FE4  
                      l8124 2ED6                        l8116 2DB6                        l8108 2D46  
                      l8070 4D9A                        l8062 4D90                        l8054 4D7A  
                      l8046 4D64                        l8038 4D4E                        l7430 5866  
                      l7422 582E                        l6630 4436                        l6622 4402  
                      l6614 43B4                        l6542 418C                        l6534 415C  
                      l6526 412A                        l6518 4100                        l6710 3E6A  
                      l6702 3E14                        l6470 37CE                        l6462 37B6  
                      l6454 377E                        l6446 3722                        l6438 36DE  
                      l6390 358A                        l6382 355E                        l6374 352C  
                      l6366 34EE                        l6358 34BA                        l6294 339E  
                      l6286 336E                        l6278 333C                        l7350 1CB8  
                      l7342 1C8E                        l7334 1C42                        l7326 1C18  
                      l7318 1BD4                        l7254 19BE                        l7246 1998  
                      l7262 19DE                        l7270 1A0C                        l7238 1960  
                      l7190 161A                        l7174 154A                        l7182 158A  
                      l7166 1514                        l7158 14EE                        l7086 11A2  
                      l7078 1134                        l7414 517E                        l7406 5108  
                      l7502 3A1A                        l8150 3278                        l8142 3148  
                      l8134 3018                        l8126 2F12                        l8118 2E02  
                      l8080 4DA8                        l8072 4D9C                        l8064 4D94  
                      l8056 4D7E                        l8048 4D68                        l7440 56D2  
                      l7432 5698                        l7424 583E                        l6632 4438  
                      l6624 441E                        l6608 4370                        l6616 43B8  
                      l6560 41E0                        l6544 419C                        l6552 41BC  
                      l6536 415E                        l6528 412C                        l6720 3F00  
                      l6712 3E76                        l6704 3E24                        l6640 3C7C  
                      l6464 37B8                        l6456 379E                        l6448 375C  
                      l6392 358C                        l6384 356C                        l6368 34F0  
                      l6296 33A0                        l6288 3376                        l7360 4826  
                      l6800 52E0                        l6480 5B70                        l7344 1C9A  
                      l7336 1C48                        l7328 1C24                        l7280 1AC2  
                      l7272 1A64                        l7264 19F0                        l7256 19CE  
                      l7248 19A8                        l7192 1672                        l7184 1592  
                      l7176 1558                        l7168 1526                        l7088 11BE  
                      l7096 1208                        l7408 5120                        l7520 3B54  
                      l7504 3A34                        l7512 3A9E                        l8160 32FC  
                      l8152 329E                        l8144 317C                        l8136 304C  
                      l8128 2F4E                        l7418 5D0A                        l8090 4DB2  
                      l8082 4DAA                        l8074 4DA0                        l8066 4D96  
                      l8058 4D84                        l7450 571A                        l7442 56E0  
                      l7434 56A8                        l7426 584C                        l6626 4422  
                      l6618 43D2                        l6570 4232                        l6562 41FA  
                      l6554 41CC                        l6546 41A4                        l6538 4166  
                      l6730 3F56                        l6722 3F1E                        l6714 3E92  
                      l6706 3E3E                        l6650 3CBA                        l6642 3C8A  
                      l6466 37BE                        l6458 37A2                        l6394 3596  
                      l6386 3578                        l6378 3540                        l6298 33A6  
                      l7610 1EB4                        l7602 1E5A                        l7362 482A  
                      l6810 530C                        l6802 52E6                        l6474 5B4E  
                      l6482 5C7A                        l7346 1CA2                        l7290 1B12  
                      l7282 1ADE                        l7274 1A98                        l7266 1A02  
                      l7258 19D2                        l7194 16A6                        l7186 15A2  
                      l7178 1570                        l7098 122E                        l7530 3BF4  
                      l7522 3B88                        l7514 3ACC                        l7506 3A42  
                      l8154 32AA                        l8146 31B0                        l8138 3094  
                      l8092 4DB4                        l8084 4DAC                        l8076 4DA4  
                      l8068 4D98                        l7452 5724                        l7444 56EA  
                      l7436 56BE                        l7428 585C                        l7700 5576  
                      l6628 4430                        l6580 428E                        l6572 4242  
                      l6564 420A                        l6556 41CC                        l6548 41A8  
                      l6740 3FC0                        l6732 3F5A                        l6724 3F28  
                      l6716 3EBC                        l6708 3E4E                        l6660 3CEC  
                      l6652 3CCA                        l6644 3C98                        l6468 37CC  
                      l6388 357C                        l6396 359C                        l7620 2002  
                      l7612 1F5A                        l7604 1E7E                        l7380 48EC  
                      l7372 488E                        l7364 484A                        l7356 480E  
                      l6804 52FC                        l6812 5312                        l6820 53F6  
                      l6476 5B5A                        l6484 5C86                        l6492 5BD2  
                      l7348 1CB2                        l7292 1B22                        l7284 1AF0  
                      l7276 1AA0                        l7268 1A06                        l7188 15B6  
                      l7196 16AC                        l7540 3C32                        l7532 3C02  
                      l7508 3A72                        l8156 32D0                        l8148 31F8  
                      l8172 5920                        l8164 58FA                        l7710 5DB0  
                      l8094 4DB6                        l8086 4DAE                        l8078 4DA6  
                      l7446 5708                        l7438 56C6                        l7702 55AE  
                      l6590 42CE                        l6582 4290                        l6574 4256  
                      l6566 421A                        l6750 4022                        l6742 3FCC  
                      l6734 3F68                        l6726 3F36                        l6718 3EF2  
                      l6670 3D2C                        l6662 3CFA                        l6654 3CD0  
                      l6646 3C9A                        l6398 35C2                        l7454 5CB0  
                      l7630 214C                        l7622 20A8                        l7614 1F62  
                      l7606 1E96                        l7390 497A                        l7374 48A4  
                      l7366 4884                        l7358 4822                        l6814 5322  
                      l6806 5304                        l6830 5422                        l6822 53FA  
                      l6910 4E0E                        l6902 4DBA                        l6478 5B6C  
                      l6486 5C8A                        l7294 1B34                        l7286 1AFE  
                      l7278 1AA4                        l7198 16CA                        l7534 3C16  
                      l7518 3B42                        l7470 382A                        l7462 37E0  
                      l8158 32DC                        l8174 5924                        l8166 5916  
                      l7552 5D32                        l7704 5D8E                        l8088 4DB0  
                      l7712 5B0A                        l7448 5718                        l7560 573C  
                      l6592 42D8                        l6584 42A0                        l6576 4264  
                      l6568 422A                        l6760 408A                        l6752 4036  
                      l6744 3FDA                        l6736 3F96                        l6728 3F48  
                      l6680 3D76                        l6672 3D32                        l6664 3CFC  
                      l6656 3CE0                        l6648 3CAA                        l7456 5CD0  
                      l7640 2320                        l7632 21CC                        l7624 20B0  
                      l7608 1EAC                        l7616 1FE4                        l8600 294C  
                      l7720 2532                        l6496 5CE4                        l7392 498C  
                      l7384 4926                        l7376 48AC                        l7368 4888  
                      l6816 532A                        l6808 5306                        l6840 545A  
                      l6832 542A                        l6824 5408                        l6912 4E10  
                      l6904 4DD0                        l6488 5CA2                        l7296 1B3C  
                      l7288 1B0E                        l7528 3BCC                        l7480 38CA  
                      l7472 3852                        l7464 3808                        l7544 3C40  
                      l8096 2C9A                        l8176 593E                        l7554 5D36  
                      l7706 5D92                        l7570 5D64                        l7714 5B1E  
                      l7562 5748                        l6594 42E6                        l6586 42B2  
                      l6578 4270                        l6762 408C                        l6754 4050  
                      l6746 4004                        l6690 3DC6                        l6682 3D82  
                      l6674 3D52                        l6666 3D0C                        l6658 3CE6  
                      l6770 5AC0                        l7458 5CD2                        l7650 2418  
                      l7642 2330                        l7634 2238                        l7618 1FFA  
                      l7626 20E4                        l8610 2C6C                        l8602 2980  
                      l7802 2918                        l7810 298E                        l7730 2614  
                      l7722 2558                        l6498 5D00                        l7378 48B4  
                      l6850 5494                        l6842 5470                        l6834 543C  
                      l6826 5410                        l6914 4E20                        l7298 1B4C  
                      l7546 3C68                        l7538 3C24                        l7482 38EA  
                      l7474 385A                        l7490 3956                        l7466 3816  
                      l8098 2CB0                        l8178 5946                        l7708 5DAC  
                      l7556 5D4A                        l7716 5B2E                        l7564 577E  
                      l7572 5D50                        l6588 42C8                        l6596 42F8  
                      l6756 406C                        l6764 4092                        l6748 4008  
                      l6692 3DD2                        l6684 3D8C                        l6676 3D62  
                      l6668 3D1C                        l6772 5AD2                        l7652 247C  
                      l7644 2388                        l7636 226C                        l7628 2118  
                      l7580 1D34                        l7820 2A4C                        l7812 29E4  
                      l8604 295A                        l7724 257E                        l7388 4968  
                      l6780 5282                        l6852 549C                        l6844 5478  
                      l6836 5444                        l6828 5414                        l6860 54E4  
                      l6940 4E9E                        l6924 4E4A                        l6916 4E24  
                      l6908 4DE4                        l7492 397C                        l7484 38F8  
                      l7476 3868                        l7468 3826                        l7718 5B36  
                      l7574 5D5E                        l6598 4306                        l6766 4096  
                      l6758 407C                        l6694 3DDE                        l6686 3DA2  
                      l6950 5024                        l7654 24B0                        l7638 22EC  
                      l7590 1DE6                        l7582 1D4A                        l8606 2C5E  
                      l7822 2AA0                        l7814 2A12                        l7742 2712  
                      l7734 263C                        l6790 52A8                        l6782 528A  
                      l6846 547E                        l6838 544C                        l6862 5512  
                      l6942 4EAE                        l6934 4E72                        l6926 4E54  
                      l6918 4E32                        l7398 50C4                        l7494 398C  
                      l7478 3890                        l7670 5804                        l7568 5D78  
                      l7672 55F4                        l6696 3DEC                        l6688 3DAE  
                      l6960 5076                        l6952 504C                        l7656 2514  
                      l7648 23C0                        l7592 1DFA                        l7584 1D70  
                      l7576 1CFA                        l8608 2C8A                        l7832 2B62  
                      l7824 2AB6                        l7816 2A28                        l7808 292C  
                      l7760 27D8                        l7752 273A                        l7736 26E0  
                      l7728 25F6                        l6792 52B0                        l6784 528E  
                      l6776 5270                        l6848 5484                        l6864 5522  
                      l6856 54A6                        l6880 4F3E                        l6872 4EC0  
                      l6936 4E7E                        l6928 4E5E                        l7496 39C2  
                      l7488 3944                        l7664 57C0                        l7920 5A34  
                      l7682 5612                        l7930 5B9E                        l6698 3DF8  
                      l6954 5058                        l6946 4FC6                        l7586 1D84  
                      l7578 1D32                        l7826 2AFE                        l7842 2C3E  
                      l7770 282A                        l7746 2726                        l7754 279C  
                      l7738 26E2                        l6794 52C2                        l6786 529C  
                      l6778 5274                        l6866 5546                        l6858 54D4  
                      l6890 4FC2                        l6882 4F4C                        l6874 4EF0  
                      l6938 4E8E                        l6970 5342                        l7498 39D2  
                      l7666 57C8                        l7922 5A3C                        l7684 561A  
                      l7676 55F4                        l7692 5550                        l7932 5BB0  
                      l7940 467A                        l6964 50BA                        l6948 4FE6  
                      l7588 1DCE                        l7596 1E22                        l7836 2BD0  
                      l7828 2B3A                        l7756 27B4                        l7764 27EE  
                      l6796 52CA                        l6788 52A4                        l6868 554C  
                      l6884 4F5E                        l6876 4F00                        l6980 5398  
                      l6972 5356                        l7668 57D6                        l7924 5A5A  
                      l7916 5A1A                        l7686 5652                        l7678 560A  
                      l7694 5566                        l7934 5BB4                        l7950 46F2  
                      l7942 46C0                        l6894 5C42                        l6958 5064  
                      l7598 1E38                        l7790 28DC                        l7782 2866  
                      l7774 283E                        l7766 280A                        l7758 27C2  
                      l8590 278E                        l6798 52D2                        l6886 4F6C  
                      l6878 4F2E                        l6982 539C                        l6974 5364  
                      l6990 59BC                        l7918 5A2C                        l7688 5550  
                      l7928 5B92                        l7960 477A                        l7952 46FE  
                      l7944 46D6                        l7936 465C                        l6896 5C58  
                      l8592 2768                        l6888 4FBC                        l6984 53C8  
                      l6976 5370                        l6968 5334                        l6992 59CC  
                      l7698 556E                        l7970 47B8                        l7962 4786  
                      l7954 4730                        l7938 466C                        l6898 5C68  
                      l7794 28F0                        l8594 289A                        l7778 2852  
                      l8586 48D6                        l6986 53DC                        l6978 5384  
                      l6994 595C                        l7972 47DC                        l7964 4794  
                      l7956 4732                        l7948 46EA                        l8596 28CE  
                      l7788 287A                        l8588 275A                        l7990 4CC0  
                      l7982 4C94                        l7974 47EC                        l7966 47B2  
                      l7958 473E                        l7798 2904                        l8598 28A8  
                      l6998 5992                        l7992 4CC2                        l7984 4CAC  
                      l7976 47FA                        l7968 47B4                        l7994 4CC4  
                      l7986 4CAE                        l7978 47FC                        l7996 4CC6  
                      l7988 4CB0                        l7998 4CC8                        STR_1 1052  
                      STR_2 103D                        STR_3 1066                        STR_4 106E  
                      STR_7 106A                        STR_8 1072                        _LATC 000F8B  
                      _LATD 000F8C                        _LATE 000F8D                        u6100 339E  
                      u6101 339A                        u6110 33B4                        u6030 51B8  
                      u6111 33B0                        u6031 51B4                        u6200 34EE  
                      u6120 33C6                        u7000 543C                        u6040 51CA  
                      u6201 34EA                        u6121 33C2                        u7001 5438  
                      u6041 51C6                        u6210 350E                        u6130 33D6  
                      u7010 545A                        u6050 51F2                        u6211 350A  
                      u6131 33D2                        u7011 5456                        u6051 51EE  
                      u6300 364E                        u6220 351C                        u6140 3412  
                      u7020 5470                        u7100 4F6C                        u6060 5228  
                      u6301 364A                        u6221 3518                        u6141 340E  
                      u7021 546C                        u7101 4F68                        u6061 5224  
                      u6310 367A                        u6230 352C                        u6150 3420  
                      u6070 333A                        u7030 5494                        u7110 4FBC  
                      u6311 3676                        u6231 3528                        u6151 341C  
                      u6071 3336                        u7031 5490                        u7111 4FB8  
                      u7120 5C58                        u6400 375C                        u6320 368A  
                      u6240 355E                        u6160 348E                        u6080 334C  
                      u7200 5006                        u7040 54D4                        u8000 1C18  
                      u7121 5C54                        u6401 3758                        u6321 3686  
                      u6241 355A                        u6161 348A                        u6081 3348  
                      u7041 54D0                        u8001 1C14                        u6410 376E  
                      u6330 36A6                        u6250 356C                        u6170 34A6  
                      u6090 335C                        u7210 5024                        u7050 5512  
                      u7130 4DD0                        u8010 1C76                        u6411 376A  
                      u6331 36A2                        u6251 3568                        u6171 34A0  
                      u6091 3358                        u7211 5020                        u7051 550E  
                      u7131 4DCC                        u8011 1C70                        u6500 40C4  
                      u6420 377E                        u6340 36B6                        u6260 358A  
                      u6180 34A8                        u7220 504C                        u8100 498C  
                      u7060 5546                        u7140 4E04                        u7300 53C8  
                      u8020 1C78                        u6501 40C0                        u6421 377A  
                      u6341 36B2                        u6261 3586                        u7221 5048  
                      u7205 4FFC                        u8101 4988                        u7061 5542  
                      u7301 53C4                        u6510 40D6                        u6430 379E  
                      u6350 36C8                        u6270 35C2                        u6190 34D0  
                      u7230 5076                        u7070 4EF0                        u7150 4E32  
                      u7310 5A06                        u8030 1C8E                        u8110 50EE  
                      u6511 40D2                        u6431 379A                        u6351 36C4  
                      u6271 35BE                        u6191 34CC                        u7231 5072  
                      u7071 4EEC                        u7151 4E2E                        u8031 1C8A  
                      u8111 50EA                        u8200 56BE                        u6600 428E  
                      u6520 40E6                        u6440 37B0                        u6360 36DE  
                      u6280 3608                        u8040 484A                        u7080 4F2E  
                      u7160 4E46                        u7400 454C                        u7320 5A18  
                      u8120 5120                        u8201 56BA                        u6601 428A  
                      u6521 40E2                        u6441 37AC                        u6361 36DA  
                      u6281 3604                        u8041 4846                        u7081 4F2A  
                      u7161 4E42                        u7145 4DFA                        u7401 4548  
                      u7321 5A14                        u8121 511C                        u8210 56E0  
                      u6610 42B2                        u6530 412A                        u6450 37CC  
                      u6370 36F4                        u6290 363E                        u7250 50B0  
                      u8050 4884                        u7090 4F4C                        u7170 4E6E  
                      u7410 4570                        u7330 598C                        u8130 5140  
                      u8211 56DC                        u6611 42AE                        u6531 4126  
                      u6451 37C8                        u6371 36F0                        u6291 363A  
                      u7251 50AA                        u8051 4880                        u7091 4F48  
                      u7171 4E6A                        u7331 5986                        u8131 513C  
                      u8220 5708                        u6700 43D2                        u6620 42C8  
                      u6540 413C                        u6380 3708                        u7260 50B2  
                      u8060 48A0                        u7180 4E8E                        u7420 458C  
                      u6460 5B90                        u7340 598E                        u7500 10A2  
                      u8140 5152                        u8300 39D2                        u8221 5704  
                      u6701 43CE                        u6621 42C4                        u6541 4138  
                      u6381 3704                        u7245 5088                        u8061 489C  
                      u7181 4E8A                        u7421 4588                        u6461 5B8C  
                      u7317 59FC                        u7501 109E                        u8141 514E  
                      u8301 39CE                        u6710 4402                        u6630 42E6  
                      u6550 414C                        u6390 3722                        u8070 4962  
                      u7190 4E9E                        u7430 45E0                        u6470 5CA2  
                      u7270 5342                        u7350 59A4                        u7510 10F2  
                      u8150 517E                        u8310 3A1A                        u8230 3808  
                      u6711 43FE                        u6631 42E2                        u6551 4148  
                      u6391 371E                        u8071 495C                        u7191 4E9A  
                      u7415 4566                        u6471 5C9E                        u7271 533E  
                      u7351 59A0                        u7511 10EE                        u8151 517A  
                      u8311 3A16                        u8231 3804                        u8160 5D18  
                      u8400 5D5E                        u6720 4430                        u6640 4306  
                      u6560 418C                        u6800 3D62                        u8080 4964  
                      u7440 45FC                        u7360 448C                        u7280 5364  
                      u6480 5C02                        u7600 1260                        u7520 1100  
                      u8320 3ACC                        u8240 3852                        u8161 5D14  
                      u8401 5D5A                        u6721 442C                        u6641 4302  
                      u6561 4188                        u6801 3D5E                        u7441 45F8  
                      u7281 5360                        u6481 5BFC                        u7521 10FC  
                      u8321 3AC8                        u8241 384E                        u8170 5D2E  
                      u6650 4318                        u6570 41CC                        u6810 3EDC  
                      u6730 3C98                        u8410 1D1C                        u8090 497A  
                      u7450 4638                        u7370 44BC                        u7290 53BA  
                      u6490 5C04                        u7610 1276                        u7530 1112  
                      u8330 3B3C                        u8250 3890                        u8171 5D2A  
                      u6651 4314                        u6571 41C8                        u6731 3C94  
                      u8091 4976                        u7451 4634                        u7435 45D6  
                      u7371 44B8                        u7291 53B6                        u7611 1272  
                      u7531 110E                        u8331 3B36                        u8251 388C  
                      u8180 584C                        u6660 4346                        u6580 4242  
                      u6900 4050                        u6820 3F36                        u6740 3CAA  
                      u8500 2330                        u8420 1D4A                        u7460 5C3A  
                      u7380 44DE                        u7700 14B8                        u7620 12FA  
                      u7540 115A                        u8340 3B3E                        u8260 393E  
                      u8181 5848                        u6661 4342                        u6581 423E  
                      u6901 404C                        u6821 3F32                        u6741 3CA6  
                      u8501 232C                        u8421 1D46                        u7461 5C34  
                      u7381 44DA                        u7365 4482                        u7701 14B4  
                      u7621 12F6                        u7541 1156                        u8261 3938  
                      u8190 5886                        u6670 435C                        u6590 4264  
                      u6910 408A                        u6830 3F56                        u6750 3CBA  
                      u8510 252C                        u8430 1D70                        u7470 5C3C  
                      u7710 14EE                        u7630 1392                        u7550 118A  
                      u8350 3B54                        u8270 3940                        u8191 5882  
                      u6671 4358                        u6591 4260                        u6911 4086  
                      u6831 3F52                        u6815 3ED2                        u6751 3CB6  
                      u8511 2528                        u8431 1D6C                        u8415 1D10  
                      u7711 14EA                        u7631 138E                        u7551 1184  
                      u8351 3B50                        u6680 4370                        u6840 3F68  
                      u6760 3CFA                        u8440 1DE6                        u8600 2614  
                      u7480 5A86                        u6920 5282                        u7800 1778  
                      u7720 1514                        u7640 1406                        u7560 118C  
                      u8360 3BF4                        u8280 3956                        u8520 5824  
                      u6681 436C                        u6841 3F64                        u6761 3CF6  
                      u8441 1DE2                        u8601 2610                        u7481 5A82  
                      u6921 527E                        u7801 1774                        u7721 1510  
                      u7641 1402                        u8361 3BF0                        u8281 3952  
                      u8521 5820                        u8370 5D48                        u8530 560A  
                      u6690 438A                        u6850 3F96                        u6770 3D0C  
                      u8450 1E38                        u8610 265E                        u7490 5AB4  
                      u6930 529C                        u7810 1788                        u7730 1526  
                      u7650 142C                        u7570 11A2                        u8290 398C  
                      u8371 5D44                        u8531 5606                        u6691 4386  
                      u6851 3F92                        u6771 3D08                        u8451 1E34  
                      u7491 5AB0                        u6931 5298                        u7395 44F2  
                      u7811 1784                        u7731 1522                        u7651 1428  
                      u7571 119E                        u8291 3988                        u8380 5D8A  
                      u8540 5566                        u6860 3FAC                        u6780 3D1C  
                      u8460 1E4E                        u8700 2A12                        u8620 269C  
                      u6940 52C2                        u7396 44FC                        u7900 1998  
                      u7820 1826                        u7740 1534                        u7660 143E  
                      u7580 122E                        u8381 5D86                        u8541 5562  
                      u6861 3FA8                        u6781 3D18                        u8461 1E4A  
                      u8701 2A0E                        u6941 52BE                        u7397 450C  
                      u7901 1994                        u7821 1822                        u7741 1530  
                      u7661 143A                        u7581 122A                        u8390 5D76  
                      u8550 5B1A                        u6870 3FC0                        u6790 3D52  
                      u8470 1E96                        u8710 2A4C                        u8630 26FA  
                      u6950 52E0                        u7910 19F0                        u7830 1872  
                      u7750 154A                        u7670 1460                        u7590 125E  
                      u8391 5D72                        u8551 5B16                        u6871 3FBC  
                      u6791 3D4E                        u8471 1E92                        u8711 2A48  
                      u8631 26F6                        u8615 2652                        u6951 52DC  
                      u7911 19EC                        u7831 186E                        u7751 1546  
                      u7671 145C                        u7591 1258                        u8560 5B2E  
                      u8800 47A4                        u6880 3FDA                        u8480 1EAC  
                      u8720 2AA0                        u8640 27B4                        u6960 52FC  
                      u7920 1AC2                        u7840 1898                        u7760 1558  
                      u7680 1486                        u8561 5B2A                        u8801 47A0  
                      u6881 3FD6                        u8481 1EA8                        u8721 2A9C  
                      u8641 27B0                        u8625 2692                        u6961 52F8  
                      u7921 1ABE                        u7841 1894                        u7761 1554  
                      u7681 1482                        u8570 5B48                        u8730 5BD0  
                      u8810 47B2                        u6890 4022                        u8490 1FFA  
                      u8650 27C2                        u6970 5322                        u7930 1ADE  
                      u7850 193A                        u7770 1582                        u7690 149C  
                      u8571 5B44                        u8731 5BCC                        u8811 47AE  
                      u6891 401E                        u8491 1FF6                        u8651 27BE  
                      u6971 531E                        u7931 1ADA                        u7851 1936  
                      u7771 157E                        u7691 1498                        u8820 47EC  
                      u8740 466C                        u8660 280A                        u8580 2558  
                      u6980 5408                        u7940 1AF0                        u7860 194E  
                      u7780 16CA                        u8821 47E8                        u8741 4668  
                      u8661 2806                        u8581 2554                        u6981 5404  
                      u7941 1AEC                        u7861 194A                        u7781 16C6  
                      u8830 47FA                        u8750 467A                        u8670 2826  
                      u8590 257E                        u6990 5422                        u7950 1AFE  
                      u7870 1960                        u7790 1732                        u8831 47F6  
                      u8751 4676                        u8671 2822                        u8591 257A  
                      u6991 541E                        u7951 1AFA                        u7871 195C  
                      u7791 172E                        u8760 46D6                        u8680 29E4  
                      u7960 1B34                        u7880 196E                        u8840 5954  
                      u8761 46D2                        u8681 29E0                        u7961 1B30  
                      u7881 196A                        u8841 5950                        u8770 472C  
                      u8690 2A02                        u7970 1B62                        u7890 198A  
                      u8771 4728                        u8691 29FE                        u7971 1B5E  
                      u7891 1986                        u8780 4776                        u7980 1BE6  
                      u8781 4772                        u7981 1BE2                        u8790 4794  
                      u7990 1C00                        u8791 4790                        u7991 1BFC  
                      u8867 5930                        u8877 4D02                        _WREG 000FE8  
          __end_of_I2C_NACK 5D78                        _dbuf 01A6                        _atoi 480E  
      __size_of_CCP1handler 0170                        _main 58FA                        _prec 003A  
          __end_of_I2C_Read 5B4E                        _nout 01A4                        pad@i 002B  
                      pad@p 0028                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf1 000FE7                        indf2 000FDF                        fsr1l 000FE1  
                      pad@w 002D                        fsr2l 000FD9                        btemp 004C  
             ___fpclassifyf 4FC6                        prodh 000FF4                        prodl 000FF3  
      __size_of_CCP4handler 0172                        start 00A2             ___fldiv@new_exp 0065  
              _tolower$2382 0020                ___param_bank 000000             __end_of_Initial 4DBA  
                     ??_map 002B                       ??_pad 002A            CCP1handler@CCPRT 000D  
          ?_I2C_Master_Wait 0001                _BAUDCON1bits 000F65            ?_I2C_Master_Stop 0001  
             ___fltol@sign1 001C                       ?_atoi 001B             __end_of___fladd 37E0  
                     ?_main 0001             __end_of___fldiv 4444             __end_of___awdiv 5334  
           __end_of___flneg 5C7A                       STR_11 1076                       STR_13 1076  
           __end_of___awmod 54A6             __end_of___flmul 40A8             __end_of___flsub 5B08  
           __end_of___fltol 4EC0             __end_of___lldiv 573C             ___awdiv@divisor 0016  
                     _T1CON 000FCD                       _T3CON 000FB1                       i1l200 0088  
                     i1l201 0092                       i1l220 5DBE                       i1l207 4C92  
                     i1l215 4B22                       i1l223 5DB8                       i1l195 0046  
                     i1l197 005C                       i1l198 0072                       i2l186 5DC0  
                     i2l189 5DC0             ___awdiv@counter 0018                vfpfcnvrt@fmt 00E0  
                     _TMR1X 0042                       _TMR3X 0041                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96         ___lmul@multiplicand 0018  
               ?_UART_Write 0001                       _fabsf 5CB0                       _atanf 1CDA  
                     _flags 003C               ?_MPU6050_Read 0001                       _fputc 51A6  
                     _pi_lo 1035                       _fputs 5B4E             __end_of_isdigit 5C42  
                     atoi@n 0028                       pad@fp 0024                       atoi@s 001B  
                     _width 0038                       _putch 5DC4                       main@i 017E  
           __end_of_isspace 5AC0           __end_of_I2C_Start 5D9C             __end_of_isupper 5C0A  
                     tablat 000FF5                       ttemp5 004D                       ttemp6 0050  
                     ttemp7 0054                       status 000FD8                       wtemp8 004D  
           __end_of_sprintf 5A6E              ?___fpclassifyf 0014             __end_of_tolower 59BC  
           __end_of_strncmp 51A6            __end_of_HiPriISR 5DC4              MPU6050_Read@AX 014C  
            MPU6050_Read@AY 0150              MPU6050_Read@AZ 016A              MPU6050_Read@Ax 0154  
            MPU6050_Read@Ay 0156              MPU6050_Read@Az 0158              MPU6050_Read@Gx 015A  
            MPU6050_Read@Gy 015C              MPU6050_Read@Gz 015E             __initialization 5898  
          __end_of_LoPriISR 00A2                __end_of_atoi 49B2                __end_of_main 595C  
                 ??_I2C_ACK 0014                      ??_atoi 001D                      ??_main 00FC  
             __activetblptr 000003      atan2f@__xc8_float_word 010C           ?_I2C_Master_Write 0001  
            ??_MPU6050_Read 0120                      ?_fabsf 002E                  _GyroAngleX 0194  
                _GyroAngleY 0190                      ?_atanf 009A          ??_I2C_Master_Write 0015  
                    ?_fputc 0014                      ?_fputs 001D                      _CCPR1H 000FBD  
                    _CCPR1L 000FBC                      _CCPR4H 000F79                      _CCPR4L 000F78  
                    _CCPR1X 004B                      _CCPR4X 00FE            ___awdiv@dividend 0014  
                    ?_putch 0001                      i1l3380 5DBA                      i1l3382 5DBC  
                    i1l3386 5DB4                      i1l3388 5DB6                      i1l5800 4A92  
                    i1l5810 4B1C                      i1l5802 4A96                      i1l5740 4B24  
                    i1l5804 4AA4                      i1l5812 4B20                      i1l5750 4B58  
                    i1l5742 4B32                      i1l5806 4B14                      i1l5760 4BFE  
                    i1l5752 4B5E                      i1l5744 4B42                      i1l5808 4B18  
                    i1l5840 003E                      i1l5832 0026                      i1l5770 4C88  
                    i1l5762 4C02                      i1l5754 4B7E                      i1l5746 4B44  
                    i1l5850 008E                      i1l5842 0054                      i1l5834 002A  
                    i1l5772 4C8C                      i1l5756 4B8C                      i1l5764 4C06  
                    i1l5748 4B46                      i1l5780 49C0                      i1l5844 006A  
                    i1l5836 002C                      i1l5766 4C14                      i1l5774 4C90  
                    i1l5758 4BFA                      i1l5790 49EE                      i1l5782 49D0  
                    i1l5846 0080                      i1l5838 0030                      i1l5768 4C84  
                    i1l5792 4A0E                      i1l5784 49D2                      i1l5848 008C  
                    i1l5794 4A1C                      i1l5786 49D4                      i1l5778 49B2  
                    i1l5796 4A8A                      i1l5788 49E8                      i1l5798 4A8E  
                Servo1@temp 0068                  Servo2@temp 0068                      _SPBRG1 000FAF  
                    _STATUS 000FD8                      _TXREG1 000FAD            __end_of___xxtofl 480E  
                 ??_Initial 0017                      _Servo1 55F4                      _Servo2 5550  
              vfprintf@cfmt 00FA                  _Servo1_off 01FA                  _Servo2_off 01F6  
                    ___flge 4EC0                      ___fleq 54A6                      ___lmul 582E  
          I2C_Read@ACK_NACK 0014         __size_of_UART_Write 0016                   ??___fladd 008A  
                    ___wmul 5CE4                   ??___fldiv 002A                   ??___awdiv 0018  
                 ??___flneg 0032                   ??___awmod 0018                   ??___flmul 0032  
                    _atan2f 2532                   ??___flsub 0036                   ??___fltol 0018  
                 ??___lldiv 001C                      _efgtoa 107A                      _atanhi 1025  
                    _atanlo 1015                      _floorf 4444                      fabsf@u 0032  
                    fabsf@x 002E                      clear_0 58DE                      clear_1 58EA  
          ___awdiv@quotient 001A             ___awmod@divisor 0016                      atanf@w 00C6  
                    atanf@x 009A                      atanf@z 00CC                      isa$std 000001  
           ___awmod@counter 0018                      pad@buf 0026                      _strcpy 59BC  
                    _strlen 5C7A                   ?_I2C_NACK 0001                ?_TMR1handler 0001  
                    fputc@c 0014                      fputs@c 0021                      fputs@i 0022  
              __pdataCOMRAM 0043                      fputs@s 001D                   ??_isdigit 0016  
                 ?_I2C_Read 0001                ?_TMR3handler 0001             ___fpclassifyf@e 001C  
           ___fpclassifyf@u 001E             ___fpclassifyf@x 0014                __mediumconst 0000  
                 ??_isspace 0016                      tblptrh 000FF7                   ??_isupper 0016  
                    tblptrl 000FF6                      tblptru 000FF8                      putch@c 0001  
          __end_of_vfprintf 582E                   ??_sprintf 0038                   ??_tolower 001C  
                 ??_strncmp 001A       MPU6050_Read@accAngleX 0162       MPU6050_Read@accAngleY 0166  
                ___flge@ff1 0082             ??___fpclassifyf 0018                  ___flge@ff2 0086  
              ___xxtofl@arg 001E                ___xxtofl@exp 001D                ___xxtofl@val 0014  
                ___fleq@ff1 0014                  ___fleq@ff2 0018                  __accesstop 0060  
   __end_of__initialization 58F0                  ___flneg@f1 002E               ___rparam_used 000001  
                ___fltol@f1 0014              __pcstackCOMRAM 0001                __pidataBANK1 5DA4  
             __end_of_fabsf 5CE4               __end_of_atanf 2532               __end_of_fputc 5270  
             __end_of_pi_lo 1039               __end_of_fputs 5B92               __end_of_putch 5DC6  
                __end_of_aT 1015                  __end_of_pi 103D                 _CurrentTime 019C  
                ??_I2C_NACK 0014                  ??_I2C_Read 0014                   ?_HiPriISR 0001  
                   ??_fabsf 0032                     ??_atanf 009E                     ??_fputc 0018  
                   ??_fputs 0021                     ??_putch 0014                   ?_LoPriISR 0001  
                __pbssBANK1 0180                  _atanf$2610 00BE                  _atanf$2611 00A6  
                _atanf$2612 00C2                  _atanf$2613 00AA                  _atanf$2614 00AE  
                __pnvCOMRAM 004B           _MPU6050_Read$2603 016E           _MPU6050_Read$2604 0172  
         _MPU6050_Read$2605 0176           _MPU6050_Read$2606 017A                I2C_Read@Data 0015  
                   ?_Servo1 0035                     ?_Servo2 0035                     ?___flge 0082  
                   ?___fleq 0014                     ?___lmul 0014        __end_of_MPU6050_Read 331E  
                   ?___wmul 0014                     ?_atan2f 00D4                     ?_efgtoa 009A  
                   _I2C_ACK 5D78                     _CCP1CON 000FBB                     _CCP4CON 000F77  
                   ?_floorf 002E              ___lmul@product 001C                     ?_strcpy 0014  
                   ?_strlen 0014                 Servo1@angle 0035                 Servo2@angle 0035  
                 ?___xxtofl 0014                  ??_HiPriISR 0001                ??_UART_Write 0014  
        __size_of_vfpfcnvrt 049C                     _SPBRGH1 000FD4                     _SSP1ADD 000FC8  
                   _SSP1BUF 000FC9               ??_CCP1handler 0001                  ??_LoPriISR 0011  
             ??_CCP4handler 0001                I2C_Start@add 0016                   _I2C_Start 5D8C  
                   _Initial 4C94                     __Hparam 0000                     __Lparam 0000  
           __size_of_Servo1 00A4             __size_of_Servo2 00A4             __size_of___flge 0106  
           __size_of___fleq 00AA                     ___fladd 331E                     ___fldiv 40A8  
                   ___awdiv 5270                     ___flneg 5C42             __size_of___lmul 006A  
                   ___awmod 53F6                     ___flmul 3C7C                     ___flsub 5AC0  
                   ___fltol 4DBA                     ___lldiv 5698             __size_of___wmul 0026  
        __end_of_UART_Write 5D64             __size_of_atan2f 0768                   ?_vfprintf 00F4  
              __psmallconst 1000             __size_of_efgtoa 0C60             __size_of_floorf 0216  
                   __pcinit 5898                     __ramtop 1000                     __ptext0 58FA  
                   __ptext1 2C9A                     __ptext2 5A1A                     __ptext3 57C0  
                   __ptext4 37E0                     __ptext5 50C4                     __ptext6 107A  
                   __ptext7 595C                     __ptext8 5BD2                     __ptext9 59BC  
                 _T0CONbits 000FD5             __size_of_strcpy 005E             __size_of_strlen 0036  
                 _T1CONbits 000FCD                __size_of_map 0084                __size_of_pad 00C2  
                   _isdigit 5C0A                     atan2f@m 011C                     atan2f@x 00D8  
                   atan2f@y 00D4                     atan2f@z 0110                  ??___xxtofl 0018  
                 _T3CONbits 000FB1            ___awmod@dividend 0014                     _isspace 5A6E  
                   atanf@s1 00B2                     atanf@s2 00B6                     atanf@id 00CA  
                   _isupper 5BD2                     atanf@ix 00D0                     efgtoa@c 00A0  
                   efgtoa@d 00BE                     efgtoa@e 00D6                     efgtoa@f 009C  
                   efgtoa@g 00D2                     efgtoa@h 00C8                     efgtoa@i 00D0  
                   efgtoa@l 00CC                     efgtoa@m 00B8                     efgtoa@n 00D8  
                   efgtoa@p 00C2        __size_of_TMR1handler 0006                     efgtoa@t 00B2  
                   efgtoa@u 00DA                     efgtoa@w 00C4    __size_of_I2C_Master_Wait 0026  
  __size_of_I2C_Master_Stop 0008                     atoi@neg 0021        __size_of_TMR3handler 0006  
                   _sprintf 5A1A                     _tolower 595C                     _strncmp 50C4  
            __pintcode_body 5DC0        end_of_initialization 58F0                     floorf@e 0071  
                   floorf@m 006D                     floorf@u 0073                     floorf@x 002E  
                   fputc@fp 0016                     int_func 5DC0                     fputs@fp 001F  
                ?_I2C_Start 0001         __end_of_CCP1handler 4C94   __size_of_I2C_Master_Write 001E  
           ___lldiv@divisor 0018             ___lldiv@counter 0020         __end_of_CCP4handler 4B24  
         __end_of_vfpfcnvrt 3C7C                  efgtoa@mode 00C7                  efgtoa@sign 00C0  
                   postdec1 000FE5                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                  ??_vfprintf 0038  
                   strcpy@d 001C                     strlen@a 0016                     strcpy@s 001A  
                   strlen@s 0014            CCP4handler@CCPRT 000D              UART_Write@data 0014  
               ___fladd@grs 0091               ___xxtofl@sign 001C                 _Status_temp 0040  
         __size_of_I2C_NACK 0014                   _TRISCbits 000F94           __size_of_I2C_Read 0046  
               ___fldiv@grs 0067                 ___fldiv@rem 0060                 ___flmul@grs 0077  
     __size_of_MPU6050_Read 0684              __end_of_Servo1 5698              __end_of_Servo2 55F4  
            __end_of___flge 4FC6              __end_of___fleq 5550              __end_of___lmul 5898  
               vfpfcnvrt@ap 00E2                 vfpfcnvrt@ct 00F0                 vfpfcnvrt@fp 00DE  
            __end_of___wmul 5D0A              __end_of_atan2f 2C9A               __pidataCOMRAM 5D9C  
            __end_of_efgtoa 1CDA              __end_of_atanhi 1035              __end_of_atanlo 1025  
            __end_of_floorf 465A                  floorf@F527 0180              __end_of_strcpy 5A1A  
            __end_of_strlen 5CB0         start_initialization 5898               MPU6050_Read@T 0160  
               __end_of_map 57C0                 __end_of_pad 53F6           __size_of_HiPriISR 5DBC  
              _MPU6050_Read 2C9A                 _CCP1handler 4B24                 _CCP4handler 49B2  
         ??_I2C_Master_Wait 0014           ??_I2C_Master_Stop 0015           __size_of_LoPriISR 008A  
     __end_of___fpclassifyf 50C4                 ??_I2C_Start 0016                    ??_Servo1 0060  
                  ??_Servo2 0060                 vfprintf@fmt 00F6                   _Servo1_on 0047  
                 _Servo2_on 0043                    ??___flge 008A                    ??___fleq 001C  
                  ??___lmul 001C                    ??___wmul 0018                    ??_atan2f 00DC  
                  ??_efgtoa 00A1                 __pdataBANK1 01F6                    ?_I2C_ACK 0001  
                  ??_floorf 0032                 _atan2f$2607 0100                 _atan2f$2608 0104  
               _atan2f$2609 0108                    ??_strcpy 0018                    ??_strlen 0016  
                 ___fladd@a 0086                   ___fladd@b 0082                   ___fldiv@a 0026  
                 ___fldiv@b 0022       atanf@__xc8_float_word 00A2                   ___flmul@a 0071  
                 ___flmul@b 006D                 __pbssCOMRAM 0038                   _Wreg_temp 003F  
                 ___flsub@a 0096                   ___flsub@b 0092               __pcstackBANK0 0060  
             __pcstackBANK1 0100           __size_of___xxtofl 01B4                   _atoi$2287 0023  
                 _atoi$2288 0027                   _atoi$2289 0025                   __pnvBANK0 00FE  
                  ?_Initial 0001            _I2C_Master_Write 5D30                 _efgtoa$2241 00AA  
               _efgtoa$2235 00A6                 _efgtoa$2236 00A8                 _efgtoa$2245 00AC  
               _efgtoa$2246 00AE                 _efgtoa$2247 00B0                   __pintcode 0008  
                  ?___fladd 0082                    ?___fldiv 0022                    ?___awdiv 0014  
                  ?___flneg 002E                    ?___awmod 0014                    ?___flmul 006D  
                  ?___flsub 0092                    ?___fltol 0014                    ?___lldiv 0014  
               __pintcodelo 0018        I2C_Master_Write@data 0015           __size_of_vfprintf 006E  
                  _I2C_NACK 5D64                   fabsf@F465 0184                 __smallconst 1000  
                  ?_isdigit 0014                    _I2C_Read 5B08                    ?_isspace 0014  
                  ?_isupper 0014                    _CCPTMRS0 000F2D                    _CCPTMRS1 000F2C  
            __size_of_fabsf 0034              __size_of_atanf 0858                    ?_sprintf 0100  
                  ?_tolower 001A              __size_of_fputc 00CA              __size_of_fputs 0044  
                  ?_strncmp 0014              __size_of_putch 0002              ___wmul@product 0018  
                  _LATDbits 000F8C                    _LATEbits 000F8D                    _IPR1bits 000F9F  
                  _IPR2bits 000FA2                    _IPR3bits 000FA5                    _PIE1bits 000F9D  
                  _IPR4bits 000FB8                    _PIE2bits 000FA0                    _PIE3bits 000FA3  
                  _PIE4bits 000FB6                    _BSR_temp 003E                    i1u600_20 006A  
                  i1u600_21 0066                    i1u601_20 0080                    i1u601_21 007C  
                  i1u590_20 49C0                    i1u590_21 49BC                    i1u583_20 4B32  
                  i1u591_20 49D0                    i1u583_21 4B2E                    i1u591_21 49CC  
                  i1u584_20 4B42                    i1u592_20 49E8                    i1u584_21 4B3E  
                  i1u592_21 49E4                    i1u585_20 4B58                    i1u593_20 4A00  
                  i1u585_21 4B54                    i1u593_21 49F8                    _PIR1bits 000F9E  
                  i1u586_20 4B70                    i1u586_21 4B68                    i1u595_20 4A1C  
                  i1u594_28 4A02                    i1u595_21 4A18                    _PIR2bits 000FA1  
                  i1u588_20 4B8C                    i1u587_28 4B72                    i1u596_20 4AA4  
                  i1u588_21 4B88                    i1u596_21 4AA0                    i1u589_20 4C14  
                  i1u589_21 4C10                    _PIR3bits 000FA4                    i1u598_20 003E  
                  i1u598_21 003A                    i1u599_20 0054                    i1u599_21 0050  
                  _PIR4bits 000FB7                   atanf@sign 00BA                    _RCONbits 000FD0  
                  _SSP1CON1 000FC6                    _SSP1CON2 000FC5                    _SSP1STAT 000FC7  
                 _vfpfcnvrt 37E0            __size_of_I2C_ACK 0014        UART_Write_String@buf 0015  
                 map@newmax 0029                   map@newmin 0027                   map@second 002D  
         ___wmul@multiplier 0014               ??_TMR1handler 0001               ??_TMR3handler 0001  
                  _HiPriISR 0008                _isspace$2318 001A                  vfpfcnvrt@c 00F3  
                vfpfcnvrt@f 00EC           ___lmul@multiplier 0014                   copy_data0 58AC  
                 copy_data1 58CC                    _LoPriISR 0018                    __Hrparam 0000  
          __size_of_Initial 0126                  vfprintf@ap 00F8                    __Lrparam 0000  
                vfprintf@fp 00F4            __size_of___fladd 04C2            __size_of___fldiv 039C  
          __size_of___awdiv 00C4            __size_of___flneg 0038            __size_of___awmod 00B0  
              _time0counter 01A0            __size_of___flmul 042C            __size_of___flsub 0048  
          __size_of___fltol 0106            __size_of___lldiv 00A4                  ?_vfpfcnvrt 00DE  
        ___fpclassifyf@F465 0188           _UART_Write_String 5B92                  sprintf@fmt 0102  
                  ___xxtofl 465A             _I2C_Master_Wait 5D0A             _I2C_Master_Stop 5DAC  
          __size_of_isdigit 0038          ?_UART_Write_String 0015            __size_of_isspace 0052  
                  __ptext10 5334                    __ptext11 5C7A                    __ptext20 5270  
                  __ptext12 5B4E                    __ptext21 480E                    __ptext13 51A6  
                  __ptext30 331E                    __ptext22 5A6E                    __ptext14 5DC4  
                  __ptext31 5C42                    __ptext23 5C0A                    __ptext15 4444  
                  __ptext40 582E                    __ptext32 3C7C                    __ptext24 5CE4  
                  __ptext16 4DBA                    __ptext41 5698                    __ptext33 40A8  
                  __ptext25 2532                    __ptext17 4EC0                    __ptext42 5B08  
                  __ptext34 465A                    __ptext26 1CDA                    __ptext18 54A6  
                  __ptext51 5DB4                    __ptext43 5D64                    __ptext35 5B92  
                  __ptext27 5CB0                    __ptext19 53F6                    __ptext52 5DBA  
                  __ptext44 5D78                    __ptext36 5D4E                    __ptext28 4FC6  
                  __ptext53 49B2                    __ptext45 4C94                    __ptext37 5550  
                  __ptext29 5AC0                    __ptext54 4B24                    __ptext46 5D8C  
                  __ptext38 55F4                    __ptext47 5D30                    __ptext39 573C  
                  __ptext48 5DAC                    __ptext49 5D0A            __size_of_isupper 0038  
              _SSP1CON2bits 000FC5         __end_of_TMR1handler 5DC0                ?_CCP1handler 0001  
       __end_of_TMR3handler 5DBA            __size_of_sprintf 0054            __size_of_tolower 0060  
                strcpy@dest 0014            __size_of_strncmp 00E2         ??_UART_Write_String 0017  
              ?_CCP4handler 0001               __size_of_atoi 01A4               __size_of_main 0062  
                  atan2f@ix 0114                    atan2f@iy 0118                    efgtoa@fp 009A  
                  efgtoa@ne 00B6                    efgtoa@pp 00B4                    efgtoa@ou 00BA  
                  isa$xinst 000000                    int$flags 004C                    map@first 0031  
                  map@value 0021                    map@third 0033                    _vfprintf 57C0  
              _SSP1STATbits 000FC7   __end_of_UART_Write_String 5BD2              _vfpfcnvrt$2261 00E8  
            _vfpfcnvrt$2265 00EA    __end_of_I2C_Master_Write 5D4E                  _INTCONbits 000FF2  
                  isdigit@c 0014                    intlevel1 0000                    intlevel2 0000  
                 sprintf@ap 0108                    isspace@c 0014            ___lldiv@dividend 0014  
                 strcpy@src 0016                  _RCSTA1bits 000FAB                    isupper@c 0014  
                 strncmp@_l 0014                   strncmp@_r 0016                 efgtoa@nmode 00C6  
        UART_Write_String@i 0017     __end_of_I2C_Master_Wait 5D30     __end_of_I2C_Master_Stop 5DB4  
               ??_vfpfcnvrt 00E4                    sprintf@f 010A                    tolower@c 001A  
                  sprintf@s 0100                 _TMR1handler 5DBA      __size_of___fpclassifyf 00FE  
          ___lldiv@quotient 001C                 _TMR3handler 5DB4                    strncmp@l 001B  
                  strncmp@n 0018                    strncmp@r 001D                _previousTime 0198  
                _UART_Write 5D4E               ___fladd@signs 008E                ___fladd@aexp 008F  
              ___fladd@bexp 0090  
