

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 13 00:25:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81  0000                     
    82                           ; Version 2.20
    83                           ; Generated 05/05/2020 GMT
    84                           ; 
    85                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F87K22 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  00636E                     __pidataCOMRAM:
   119                           	callstack 0
   120                           
   121                           ;initializer for _Servo2_on
   122  00636E  0FA0               	dw	4000
   123  006370  0000               	dw	0
   124                           
   125                           ;initializer for _Servo1_on
   126  006372  0FA0               	dw	4000
   127  006374  0000               	dw	0
   128                           
   129                           	psect	idataBANK1
   130  006376                     __pidataBANK1:
   131                           	callstack 0
   132                           
   133                           ;initializer for _Servo2_off
   134  006376  28E0               	dw	10464
   135  006378  0001               	dw	1
   136                           
   137                           ;initializer for _Servo1_off
   138  00637A  28E0               	dw	10464
   139  00637C  0001               	dw	1
   140                           
   141                           	psect	smallconst
   142  001000                     __psmallconst:
   143                           	callstack 0
   144  001000  00                 	db	0
   145  001001                     _aT:
   146                           	callstack 0
   147  001001  AAA9               	dw	43689
   148  001003  3EAA               	dw	16042
   149  001005  CA98               	dw	51864
   150  001007  BE4C               	dw	48716
   151  001009  F50D               	dw	62733
   152  00100B  3E11               	dw	15889
   153  00100D  1247               	dw	4679
   154  00100F  BDDA               	dw	48602
   155  001011  AC25               	dw	44069
   156  001013  3D7C               	dw	15740
   157  001015                     __end_of_aT:
   158                           	callstack 0
   159  001015                     _atanlo:
   160                           	callstack 0
   161  001015  3769               	dw	14185
   162  001017  31AC               	dw	12716
   163  001019  2168               	dw	8552
   164  00101B  3322               	dw	13090
   165  00101D  0FB4               	dw	4020
   166  00101F  3314               	dw	13076
   167  001021  2168               	dw	8552
   168  001023  33A2               	dw	13218
   169  001025                     __end_of_atanlo:
   170                           	callstack 0
   171  001025                     _atanhi:
   172                           	callstack 0
   173  001025  6338               	dw	25400
   174  001027  3EED               	dw	16109
   175  001029  0FDA               	dw	4058
   176  00102B  3F49               	dw	16201
   177  00102D  985E               	dw	39006
   178  00102F  3F7B               	dw	16251
   179  001031  0FDA               	dw	4058
   180  001033  3FC9               	dw	16329
   181  001035                     __end_of_atanhi:
   182                           	callstack 0
   183  001035  BD2E               	dw	48430
   184  001037  B3BB               	dw	46011
   185  001039                     __end_of_pi_lo:
   186                           	callstack 0
   187  001039  0FDB               	dw	4059
   188  00103B  4049               	dw	16457
   189  00103D                     __end_of_pi:
   190                           	callstack 0
   191  00103D                     STR_3:
   192  00103D  20                 	db	32
   193  00103E  65                 	db	101	;'e'
   194  00103F  6C                 	db	108	;'l'
   195  001040  61                 	db	97	;'a'
   196  001041  70                 	db	112	;'p'
   197  001042  73                 	db	115	;'s'
   198  001043  65                 	db	101	;'e'
   199  001044  64                 	db	100	;'d'
   200  001045  54                 	db	84	;'T'
   201  001046  69                 	db	105	;'i'
   202  001047  6D                 	db	109	;'m'
   203  001048  65                 	db	101	;'e'
   204  001049  20                 	db	32
   205  00104A  3D                 	db	61	;'='
   206  00104B  20                 	db	32
   207  00104C  25                 	db	37
   208  00104D  2E                 	db	46
   209  00104E  32                 	db	50	;'2'
   210  00104F  66                 	db	102	;'f'
   211  001050  20                 	db	32
   212  001051  09                 	db	9
   213  001052  00                 	db	0
   214  001053                     STR_4:
   215  001053  20                 	db	32
   216  001054  47                 	db	71	;'G'
   217  001055  79                 	db	121	;'y'
   218  001056  72                 	db	114	;'r'
   219  001057  6F                 	db	111	;'o'
   220  001058  41                 	db	65	;'A'
   221  001059  6E                 	db	110	;'n'
   222  00105A  67                 	db	103	;'g'
   223  00105B  6C                 	db	108	;'l'
   224  00105C  65                 	db	101	;'e'
   225  00105D  58                 	db	88	;'X'
   226  00105E  20                 	db	32
   227  00105F  3D                 	db	61	;'='
   228  001060  20                 	db	32
   229  001061  25                 	db	37
   230  001062  2E                 	db	46
   231  001063  32                 	db	50	;'2'
   232  001064  66                 	db	102	;'f'
   233  001065  20                 	db	32
   234  001066  09                 	db	9
   235  001067  00                 	db	0
   236  001068                     STR_5:
   237  001068  20                 	db	32
   238  001069  47                 	db	71	;'G'
   239  00106A  79                 	db	121	;'y'
   240  00106B  72                 	db	114	;'r'
   241  00106C  6F                 	db	111	;'o'
   242  00106D  41                 	db	65	;'A'
   243  00106E  6E                 	db	110	;'n'
   244  00106F  67                 	db	103	;'g'
   245  001070  6C                 	db	108	;'l'
   246  001071  65                 	db	101	;'e'
   247  001072  59                 	db	89	;'Y'
   248  001073  20                 	db	32
   249  001074  3D                 	db	61	;'='
   250  001075  20                 	db	32
   251  001076  25                 	db	37
   252  001077  2E                 	db	46
   253  001078  32                 	db	50	;'2'
   254  001079  66                 	db	102	;'f'
   255  00107A  20                 	db	32
   256  00107B  09                 	db	9
   257  00107C  00                 	db	0
   258  00107D                     STR_7:
   259  00107D  20                 	db	32
   260  00107E  61                 	db	97	;'a'
   261  00107F  63                 	db	99	;'c'
   262  001080  63                 	db	99	;'c'
   263  001081  41                 	db	65	;'A'
   264  001082  6E                 	db	110	;'n'
   265  001083  67                 	db	103	;'g'
   266  001084  6C                 	db	108	;'l'
   267  001085  65                 	db	101	;'e'
   268  001086  59                 	db	89	;'Y'
   269  001087  20                 	db	32
   270  001088  3D                 	db	61	;'='
   271  001089  20                 	db	32
   272  00108A  25                 	db	37
   273  00108B  2E                 	db	46
   274  00108C  32                 	db	50	;'2'
   275  00108D  66                 	db	102	;'f'
   276  00108E  20                 	db	32
   277  00108F  0D                 	db	13
   278  001090  0A                 	db	10
   279  001091  00                 	db	0
   280  001092                     STR_6:
   281  001092  20                 	db	32
   282  001093  61                 	db	97	;'a'
   283  001094  63                 	db	99	;'c'
   284  001095  63                 	db	99	;'c'
   285  001096  41                 	db	65	;'A'
   286  001097  6E                 	db	110	;'n'
   287  001098  67                 	db	103	;'g'
   288  001099  6C                 	db	108	;'l'
   289  00109A  65                 	db	101	;'e'
   290  00109B  58                 	db	88	;'X'
   291  00109C  20                 	db	32
   292  00109D  3D                 	db	61	;'='
   293  00109E  20                 	db	32
   294  00109F  25                 	db	37
   295  0010A0  2E                 	db	46
   296  0010A1  32                 	db	50	;'2'
   297  0010A2  66                 	db	102	;'f'
   298  0010A3  20                 	db	32
   299  0010A4  09                 	db	9
   300  0010A5  00                 	db	0
   301  0010A6                     STR_2:
   302  0010A6  20                 	db	32
   303  0010A7  70                 	db	112	;'p'
   304  0010A8  69                 	db	105	;'i'
   305  0010A9  74                 	db	116	;'t'
   306  0010AA  63                 	db	99	;'c'
   307  0010AB  68                 	db	104	;'h'
   308  0010AC  20                 	db	32
   309  0010AD  3D                 	db	61	;'='
   310  0010AE  20                 	db	32
   311  0010AF  25                 	db	37
   312  0010B0  2E                 	db	46
   313  0010B1  32                 	db	50	;'2'
   314  0010B2  66                 	db	102	;'f'
   315  0010B3  20                 	db	32
   316  0010B4  09                 	db	9
   317  0010B5  00                 	db	0
   318  0010B6                     STR_1:
   319  0010B6  20                 	db	32
   320  0010B7  72                 	db	114	;'r'
   321  0010B8  6F                 	db	111	;'o'
   322  0010B9  6C                 	db	108	;'l'
   323  0010BA  6C                 	db	108	;'l'
   324  0010BB  20                 	db	32
   325  0010BC  3D                 	db	61	;'='
   326  0010BD  20                 	db	32
   327  0010BE  25                 	db	37
   328  0010BF  2E                 	db	46
   329  0010C0  32                 	db	50	;'2'
   330  0010C1  66                 	db	102	;'f'
   331  0010C2  20                 	db	32
   332  0010C3  09                 	db	9
   333  0010C4  00                 	db	0
   334  0010C5                     STR_8:
   335  0010C5  49                 	db	73	;'I'
   336  0010C6  4E                 	db	78	;'N'
   337  0010C7  46                 	db	70	;'F'
   338  0010C8  00                 	db	0
   339  0010C9                     STR_12:
   340  0010C9  4E                 	db	78	;'N'
   341  0010CA  41                 	db	65	;'A'
   342  0010CB  4E                 	db	78	;'N'
   343  0010CC  00                 	db	0
   344  0010CD                     STR_9:
   345  0010CD  69                 	db	105	;'i'
   346  0010CE  6E                 	db	110	;'n'
   347  0010CF  66                 	db	102	;'f'
   348  0010D0  00                 	db	0
   349  0010D1                     STR_13:
   350  0010D1  6E                 	db	110	;'n'
   351  0010D2  61                 	db	97	;'a'
   352  0010D3  6E                 	db	110	;'n'
   353  0010D4  00                 	db	0
   354  0010D5                     STR_16:
   355  0010D5  6C                 	db	108	;'l'
   356  0010D6  66                 	db	102	;'f'
   357  0010D7  00                 	db	0
   358  0010D8  00                 	db	0	; dummy byte at the end
   359  0000                     
   360                           	psect	nvCOMRAM
   361  00004B                     __pnvCOMRAM:
   362                           	callstack 0
   363  00004B                     _CCPR1X:
   364                           	callstack 0
   365  00004B                     	ds	1
   366                           
   367                           	psect	nvBANK0
   368  0000FE                     __pnvBANK0:
   369                           	callstack 0
   370  0000FE                     _CCPR4X:
   371                           	callstack 0
   372  0000FE                     	ds	1
   373  0000                     _CCPTMRS1	set	3884
   374  0000                     _CCPTMRS0	set	3885
   375  0000                     _TXREG1	set	4013
   376  0000                     _TMR1L	set	4046
   377  0000                     _TMR1H	set	4047
   378  0000                     _SSP1STATbits	set	4039
   379  0000                     _SSP1BUF	set	4041
   380  0000                     _SSP1CON2bits	set	4037
   381  0000                     _CCPR4L	set	3960
   382  0000                     _LATEbits	set	3981
   383  0000                     _CCPR4H	set	3961
   384  0000                     _CCPR1L	set	4028
   385  0000                     _LATDbits	set	3980
   386  0000                     _CCPR1H	set	4029
   387  0000                     _PIR2bits	set	4001
   388  0000                     _PIR1bits	set	3998
   389  0000                     _PIR4bits	set	4023
   390  0000                     _PIR3bits	set	4004
   391  0000                     _BSR	set	4064
   392  0000                     _WREG	set	4072
   393  0000                     _STATUS	set	4056
   394  0000                     _T3CONbits	set	4017
   395  0000                     _T1CONbits	set	4045
   396  0000                     _T0CONbits	set	4053
   397  0000                     _RCSTA1bits	set	4011
   398  0000                     _TXSTA1bits	set	4012
   399  0000                     _SPBRGH1	set	4052
   400  0000                     _SPBRG1	set	4015
   401  0000                     _BAUDCON1bits	set	3941
   402  0000                     _TRISCbits	set	3988
   403  0000                     _SSP1ADD	set	4040
   404  0000                     _SSP1STAT	set	4039
   405  0000                     _SSP1CON2	set	4037
   406  0000                     _SSP1CON1	set	4038
   407  0000                     _PIE2bits	set	4000
   408  0000                     _PIE4bits	set	4022
   409  0000                     _IPR4bits	set	4024
   410  0000                     _IPR2bits	set	4002
   411  0000                     _CCP4CON	set	3959
   412  0000                     _T3CON	set	4017
   413  0000                     _PIE1bits	set	3997
   414  0000                     _PIE3bits	set	4003
   415  0000                     _IPR3bits	set	4005
   416  0000                     _IPR1bits	set	3999
   417  0000                     _CCP1CON	set	4027
   418  0000                     _T1CON	set	4045
   419  0000                     _INTCONbits	set	4082
   420  0000                     _RCONbits	set	4048
   421  0000                     _LATE	set	3981
   422  0000                     _TRISE	set	3990
   423  0000                     _LATD	set	3980
   424  0000                     _TRISD	set	3989
   425  0000                     _LATC	set	3979
   426  0000                     _TRISC	set	3988
   427                           
   428                           ; #config settings
   429                           
   430                           	psect	cinit
   431  005D6C                     __pcinit:
   432                           	callstack 0
   433  005D6C                     start_initialization:
   434                           	callstack 0
   435  005D6C                     __initialization:
   436                           	callstack 0
   437                           
   438                           ; Initialize objects allocated to BANK1 (8 bytes)
   439                           ; load TBLPTR registers with __pidataBANK1
   440  005D6C  0E76               	movlw	low __pidataBANK1
   441  005D6E  6EF6               	movwf	tblptrl,c
   442  005D70  0E63               	movlw	high __pidataBANK1
   443  005D72  6EF7               	movwf	tblptrh,c
   444  005D74  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   445  005D76  6EF8               	movwf	tblptru,c
   446  005D78  EE01  F0C8         	lfsr	0,__pdataBANK1
   447  005D7C  EE10 F008          	lfsr	1,8
   448  005D80                     copy_data0:
   449  005D80  0009               	tblrd		*+
   450  005D82  CFF5 FFEE          	movff	tablat,postinc0
   451  005D86  50E5               	movf	postdec1,w,c
   452  005D88  50E1               	movf	fsr1l,w,c
   453  005D8A  E1FA               	bnz	copy_data0
   454                           
   455                           ; Initialize objects allocated to COMRAM (8 bytes)
   456                           ; load TBLPTR registers with __pidataCOMRAM
   457  005D8C  0E6E               	movlw	low __pidataCOMRAM
   458  005D8E  6EF6               	movwf	tblptrl,c
   459  005D90  0E63               	movlw	high __pidataCOMRAM
   460  005D92  6EF7               	movwf	tblptrh,c
   461  005D94  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   462  005D96  6EF8               	movwf	tblptru,c
   463  005D98  EE00  F043         	lfsr	0,__pdataCOMRAM
   464  005D9C  EE10 F008          	lfsr	1,8
   465  005DA0                     copy_data1:
   466  005DA0  0009               	tblrd		*+
   467  005DA2  CFF5 FFEE          	movff	tablat,postinc0
   468  005DA6  50E5               	movf	postdec1,w,c
   469  005DA8  50E1               	movf	fsr1l,w,c
   470  005DAA  E1FA               	bnz	copy_data1
   471                           
   472                           ; Clear objects allocated to BANK2 (80 bytes)
   473  005DAC  EE02  F000         	lfsr	0,__pbssBANK2
   474  005DB0  0E50               	movlw	80
   475  005DB2                     clear_0:
   476  005DB2  6AEE               	clrf	postinc0,c
   477  005DB4  06E8               	decf	wreg,f,c
   478  005DB6  E1FD               	bnz	clear_0
   479                           
   480                           ; Clear objects allocated to BANK1 (38 bytes)
   481  005DB8  EE01  F0A2         	lfsr	0,__pbssBANK1
   482  005DBC  0E26               	movlw	38
   483  005DBE                     clear_1:
   484  005DBE  6AEE               	clrf	postinc0,c
   485  005DC0  06E8               	decf	wreg,f,c
   486  005DC2  E1FD               	bnz	clear_1
   487                           
   488                           ; Clear objects allocated to COMRAM (11 bytes)
   489  005DC4  EE00  F038         	lfsr	0,__pbssCOMRAM
   490  005DC8  0E0B               	movlw	11
   491  005DCA                     clear_2:
   492  005DCA  6AEE               	clrf	postinc0,c
   493  005DCC  06E8               	decf	wreg,f,c
   494  005DCE  E1FD               	bnz	clear_2
   495  005DD0                     end_of_initialization:
   496                           	callstack 0
   497  005DD0                     __end_of__initialization:
   498                           	callstack 0
   499  005DD0  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   500  005DD2  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   501  005DD4  0100               	movlb	0
   502  005DD6  EF59  F02F         	goto	_main	;jump to C main() function
   503                           
   504                           	psect	bssCOMRAM
   505  000038                     __pbssCOMRAM:
   506                           	callstack 0
   507  000038                     _width:
   508                           	callstack 0
   509  000038                     	ds	2
   510  00003A                     _prec:
   511                           	callstack 0
   512  00003A                     	ds	2
   513  00003C                     _flags:
   514                           	callstack 0
   515  00003C                     	ds	2
   516  00003E                     _BSR_temp:
   517                           	callstack 0
   518  00003E                     	ds	1
   519  00003F                     _Wreg_temp:
   520                           	callstack 0
   521  00003F                     	ds	1
   522  000040                     _Status_temp:
   523                           	callstack 0
   524  000040                     	ds	1
   525  000041                     _TMR3X:
   526                           	callstack 0
   527  000041                     	ds	1
   528  000042                     _TMR1X:
   529                           	callstack 0
   530  000042                     	ds	1
   531                           
   532                           	psect	dataCOMRAM
   533  000043                     __pdataCOMRAM:
   534                           	callstack 0
   535  000043                     _Servo2_on:
   536                           	callstack 0
   537  000043                     	ds	4
   538  000047                     _Servo1_on:
   539                           	callstack 0
   540  000047                     	ds	4
   541                           
   542                           	psect	bssBANK1
   543  0001A2                     __pbssBANK1:
   544                           	callstack 0
   545  0001A2                     floorf@F527:
   546                           	callstack 0
   547  0001A2                     	ds	4
   548  0001A6                     fabsf@F465:
   549                           	callstack 0
   550  0001A6                     	ds	4
   551  0001AA                     ___fpclassifyf@F465:
   552                           	callstack 0
   553  0001AA                     	ds	4
   554  0001AE                     _yaw:
   555                           	callstack 0
   556  0001AE                     	ds	4
   557  0001B2                     _previousTime:
   558                           	callstack 0
   559  0001B2                     	ds	4
   560  0001B6                     _CurrentTime:
   561                           	callstack 0
   562  0001B6                     	ds	4
   563  0001BA                     _time0counter:
   564                           	callstack 0
   565  0001BA                     	ds	4
   566  0001BE                     _nout:
   567                           	callstack 0
   568  0001BE                     	ds	2
   569  0001C0                     _GyroAngleY:
   570                           	callstack 0
   571  0001C0                     	ds	4
   572  0001C4                     _GyroAngleX:
   573                           	callstack 0
   574  0001C4                     	ds	4
   575                           
   576                           	psect	dataBANK1
   577  0001C8                     __pdataBANK1:
   578                           	callstack 0
   579  0001C8                     _Servo2_off:
   580                           	callstack 0
   581  0001C8                     	ds	4
   582  0001CC                     _Servo1_off:
   583                           	callstack 0
   584  0001CC                     	ds	4
   585                           
   586                           	psect	bssBANK2
   587  000200                     __pbssBANK2:
   588                           	callstack 0
   589  000200                     _dbuf:
   590                           	callstack 0
   591  000200                     	ds	80
   592                           
   593                           	psect	cstackBANK1
   594  000100                     __pcstackBANK1:
   595                           	callstack 0
   596  000100                     _vfpfcnvrt$2269:
   597                           	callstack 0
   598  000100                     _atan2f$2618:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x0
   602  000100                     	ds	2
   603  000102                     _vfpfcnvrt$2273:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x2
   607  000102                     	ds	2
   608  000104                     vfpfcnvrt@f:
   609                           	callstack 0
   610  000104                     _atan2f$2619:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x4
   614  000104                     	ds	4
   615  000108                     vfpfcnvrt@ct:
   616                           	callstack 0
   617  000108                     _atan2f$2620:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x8
   621  000108                     	ds	3
   622  00010B                     vfpfcnvrt@c:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0xB
   626  00010B                     	ds	1
   627  00010C                     vfprintf@cfmt:
   628                           	callstack 0
   629  00010C                     atan2f@__xc8_float_word:
   630                           	callstack 0
   631                           
   632                           ; 4 bytes @ 0xC
   633  00010C                     	ds	2
   634  00010E                     ?_sprintf:
   635                           	callstack 0
   636  00010E                     sprintf@s:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0xE
   640  00010E                     	ds	2
   641  000110                     sprintf@fmt:
   642                           	callstack 0
   643  000110                     atan2f@z:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x10
   647  000110                     	ds	4
   648  000114                     atan2f@ix:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x14
   652  000114                     	ds	2
   653  000116                     sprintf@ap:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x16
   657  000116                     	ds	2
   658  000118                     atan2f@iy:
   659                           	callstack 0
   660  000118                     sprintf@f:
   661                           	callstack 0
   662                           
   663                           ; 6 bytes @ 0x18
   664  000118                     	ds	4
   665  00011C                     atan2f@m:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x1C
   669  00011C                     	ds	4
   670  000120                     ??_MPU6050_Read:
   671                           
   672                           ; 1 bytes @ 0x20
   673  000120                     	ds	4
   674  000124                     MPU6050_Read@buffer:
   675                           	callstack 0
   676                           
   677                           ; 40 bytes @ 0x24
   678  000124                     	ds	40
   679  00014C                     MPU6050_Read@AZ:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x4C
   683  00014C                     	ds	4
   684  000150                     MPU6050_Read@GX:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x50
   688  000150                     	ds	4
   689  000154                     MPU6050_Read@GZ:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x54
   693  000154                     	ds	4
   694  000158                     _MPU6050_Read$2611:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x58
   698  000158                     	ds	4
   699  00015C                     _MPU6050_Read$2612:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x5C
   703  00015C                     	ds	4
   704  000160                     MPU6050_Read@Ax:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x60
   708  000160                     	ds	2
   709  000162                     MPU6050_Read@Ay:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x62
   713  000162                     	ds	2
   714  000164                     MPU6050_Read@Az:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x64
   718  000164                     	ds	2
   719  000166                     MPU6050_Read@Gx:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x66
   723  000166                     	ds	2
   724  000168                     MPU6050_Read@Gy:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x68
   728  000168                     	ds	2
   729  00016A                     MPU6050_Read@Gz:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x6A
   733  00016A                     	ds	2
   734  00016C                     MPU6050_Read@T:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x6C
   738  00016C                     	ds	2
   739  00016E                     MPU6050_Read@AX:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x6E
   743  00016E                     	ds	4
   744  000172                     MPU6050_Read@AY:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x72
   748  000172                     	ds	4
   749  000176                     MPU6050_Read@roll:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x76
   753  000176                     	ds	4
   754  00017A                     MPU6050_Read@pitch:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x7A
   758  00017A                     	ds	4
   759  00017E                     MPU6050_Read@elapsedTime:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x7E
   763  00017E                     	ds	4
   764  000182                     _MPU6050_Read$2613:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x82
   768  000182                     	ds	4
   769  000186                     _MPU6050_Read$2614:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x86
   773  000186                     	ds	4
   774  00018A                     _MPU6050_Read$2615:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x8A
   778  00018A                     	ds	4
   779  00018E                     _MPU6050_Read$2616:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x8E
   783  00018E                     	ds	4
   784  000192                     _MPU6050_Read$2617:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x92
   788  000192                     	ds	4
   789  000196                     MPU6050_Read@accAngleX:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0x96
   793  000196                     	ds	4
   794  00019A                     MPU6050_Read@accAngleY:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x9A
   798  00019A                     	ds	4
   799  00019E                     ??_main:
   800                           
   801                           ; 1 bytes @ 0x9E
   802  00019E                     	ds	2
   803  0001A0                     main@i:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0xA0
   807  0001A0                     	ds	2
   808                           
   809                           	psect	cstackBANK0
   810  000060                     __pcstackBANK0:
   811                           	callstack 0
   812  000060                     ___flmul@sign:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x0
   816  000060                     	ds	1
   817  000061                     ___flmul@aexp:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x1
   821  000061                     	ds	1
   822  000062                     ___flmul@grs:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x2
   826  000062                     	ds	4
   827  000066                     ___flmul@bexp:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x6
   831  000066                     	ds	1
   832  000067                     ___flmul@prod:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x7
   836  000067                     	ds	4
   837  00006B                     ___flmul@temp:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0xB
   841  00006B                     	ds	2
   842  00006D                     ??___fladd:
   843  00006D                     ??___flge:
   844                           
   845                           ; 1 bytes @ 0xD
   846  00006D                     	ds	4
   847  000071                     ___fladd@signs:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x11
   851  000071                     	ds	1
   852  000072                     ___fladd@aexp:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x12
   856  000072                     	ds	1
   857  000073                     ___fladd@bexp:
   858                           	callstack 0
   859                           
   860                           ; 1 bytes @ 0x13
   861  000073                     	ds	1
   862  000074                     ___fladd@grs:
   863                           	callstack 0
   864                           
   865                           ; 1 bytes @ 0x14
   866  000074                     	ds	1
   867  000075                     ?___flsub:
   868                           	callstack 0
   869  000075                     ___flsub@b:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x15
   873  000075                     	ds	4
   874  000079                     ___flsub@a:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x19
   878  000079                     	ds	4
   879  00007D                     ?___fldiv:
   880                           	callstack 0
   881  00007D                     ?___fltol:
   882                           	callstack 0
   883  00007D                     ___fltol@f1:
   884                           	callstack 0
   885  00007D                     ___fldiv@b:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x1D
   889  00007D                     	ds	4
   890  000081                     ??___fltol:
   891  000081                     ___fldiv@a:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x21
   895  000081                     	ds	4
   896  000085                     ??___fldiv:
   897  000085                     Servo1@angle:
   898                           	callstack 0
   899  000085                     Servo2@angle:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x25
   903  000085                     	ds	2
   904  000087                     ??_Servo1:
   905  000087                     ??_Servo2:
   906                           
   907                           ; 1 bytes @ 0x27
   908  000087                     	ds	2
   909  000089                     ___fldiv@rem:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x29
   913  000089                     	ds	4
   914  00008D                     ___fldiv@sign:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x2D
   918  00008D                     	ds	1
   919  00008E                     ___fldiv@new_exp:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x2E
   923  00008E                     	ds	1
   924  00008F                     Servo1@temp:
   925                           	callstack 0
   926  00008F                     Servo2@temp:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x2F
   930  00008F                     	ds	1
   931  000090                     ___fldiv@grs:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x30
   935  000090                     	ds	4
   936  000094                     ___fldiv@bexp:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x34
   940  000094                     	ds	1
   941  000095                     ___fldiv@aexp:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x35
   945  000095                     	ds	1
   946  000096                     ?_fabsf:
   947                           	callstack 0
   948  000096                     ?_floorf:
   949                           	callstack 0
   950  000096                     fabsf@x:
   951                           	callstack 0
   952  000096                     floorf@x:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x36
   956  000096                     	ds	4
   957  00009A                     ??_floorf:
   958  00009A                     fabsf@u:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x3A
   962  00009A                     	ds	4
   963  00009E                     ?_atanf:
   964                           	callstack 0
   965  00009E                     atanf@x:
   966                           	callstack 0
   967                           
   968                           ; 4 bytes @ 0x3E
   969  00009E                     	ds	2
   970  0000A0                     floorf@m:
   971                           	callstack 0
   972                           
   973                           ; 4 bytes @ 0x40
   974  0000A0                     	ds	2
   975  0000A2                     ??_atanf:
   976                           
   977                           ; 1 bytes @ 0x42
   978  0000A2                     	ds	2
   979  0000A4                     floorf@e:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x44
   983  0000A4                     	ds	2
   984  0000A6                     atanf@__xc8_float_word:
   985                           	callstack 0
   986  0000A6                     floorf@u:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x46
   990  0000A6                     	ds	4
   991  0000AA                     ?_efgtoa:
   992                           	callstack 0
   993  0000AA                     efgtoa@fp:
   994                           	callstack 0
   995  0000AA                     _atanf$2622:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x4A
   999  0000AA                     	ds	2
  1000  0000AC                     efgtoa@f:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x4C
  1004  0000AC                     	ds	2
  1005  0000AE                     _atanf$2624:
  1006                           	callstack 0
  1007                           
  1008                           ; 4 bytes @ 0x4E
  1009  0000AE                     	ds	2
  1010  0000B0                     efgtoa@c:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x50
  1014  0000B0                     	ds	1
  1015  0000B1                     ??_efgtoa:
  1016                           
  1017                           ; 1 bytes @ 0x51
  1018  0000B1                     	ds	1
  1019  0000B2                     _atanf$2625:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x52
  1023  0000B2                     	ds	4
  1024  0000B6                     _efgtoa$2243:
  1025                           	callstack 0
  1026  0000B6                     atanf@s1:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x56
  1030  0000B6                     	ds	2
  1031  0000B8                     _efgtoa$2244:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x58
  1035  0000B8                     	ds	2
  1036  0000BA                     _efgtoa$2249:
  1037                           	callstack 0
  1038  0000BA                     atanf@s2:
  1039                           	callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x5A
  1042  0000BA                     	ds	2
  1043  0000BC                     _efgtoa$2253:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x5C
  1047  0000BC                     	ds	2
  1048  0000BE                     _efgtoa$2254:
  1049                           	callstack 0
  1050  0000BE                     atanf@sign:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x5E
  1054  0000BE                     	ds	2
  1055  0000C0                     _efgtoa$2255:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x60
  1059  0000C0                     	ds	2
  1060  0000C2                     efgtoa@t:
  1061                           	callstack 0
  1062  0000C2                     _atanf$2621:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x62
  1066  0000C2                     	ds	2
  1067  0000C4                     efgtoa@pp:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x64
  1071  0000C4                     	ds	2
  1072  0000C6                     efgtoa@ne:
  1073                           	callstack 0
  1074  0000C6                     _atanf$2623:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x66
  1078  0000C6                     	ds	2
  1079  0000C8                     efgtoa@m:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x68
  1083  0000C8                     	ds	2
  1084  0000CA                     atanf@w:
  1085                           	callstack 0
  1086  0000CA                     efgtoa@ou:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x6A
  1090  0000CA                     	ds	4
  1091  0000CE                     atanf@id:
  1092                           	callstack 0
  1093  0000CE                     efgtoa@d:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x6E
  1097  0000CE                     	ds	2
  1098  0000D0                     efgtoa@sign:
  1099                           	callstack 0
  1100  0000D0                     atanf@z:
  1101                           	callstack 0
  1102                           
  1103                           ; 4 bytes @ 0x70
  1104  0000D0                     	ds	2
  1105  0000D2                     efgtoa@p:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x72
  1109  0000D2                     	ds	2
  1110  0000D4                     efgtoa@w:
  1111                           	callstack 0
  1112  0000D4                     atanf@ix:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x74
  1116  0000D4                     	ds	2
  1117  0000D6                     efgtoa@nmode:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x76
  1121  0000D6                     	ds	1
  1122  0000D7                     efgtoa@mode:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x77
  1126  0000D7                     	ds	1
  1127  0000D8                     ?_atan2f:
  1128                           	callstack 0
  1129  0000D8                     atan2f@y:
  1130                           	callstack 0
  1131  0000D8                     efgtoa@h:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x78
  1135  0000D8                     	ds	4
  1136  0000DC                     atan2f@x:
  1137                           	callstack 0
  1138  0000DC                     efgtoa@l:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x7C
  1142  0000DC                     	ds	4
  1143  0000E0                     ??_atan2f:
  1144  0000E0                     efgtoa@i:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x80
  1148  0000E0                     	ds	2
  1149  0000E2                     efgtoa@g:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x82
  1153  0000E2                     	ds	4
  1154  0000E6                     efgtoa@e:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x86
  1158  0000E6                     	ds	2
  1159  0000E8                     efgtoa@n:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x88
  1163  0000E8                     	ds	2
  1164  0000EA                     efgtoa@u:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x8A
  1168  0000EA                     	ds	4
  1169  0000EE                     ?_vfpfcnvrt:
  1170                           	callstack 0
  1171  0000EE                     vfpfcnvrt@fp:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x8E
  1175  0000EE                     	ds	2
  1176  0000F0                     vfpfcnvrt@fmt:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x90
  1180  0000F0                     	ds	2
  1181  0000F2                     vfpfcnvrt@ap:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x92
  1185  0000F2                     	ds	2
  1186  0000F4                     ??_vfpfcnvrt:
  1187                           
  1188                           ; 1 bytes @ 0x94
  1189  0000F4                     	ds	4
  1190  0000F8                     ?_vfprintf:
  1191                           	callstack 0
  1192  0000F8                     vfprintf@fp:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x98
  1196  0000F8                     	ds	2
  1197  0000FA                     vfprintf@fmt:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x9A
  1201  0000FA                     	ds	2
  1202  0000FC                     vfprintf@ap:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x9C
  1206  0000FC                     	ds	2
  1207                           
  1208                           	psect	cstackCOMRAM
  1209  000001                     __pcstackCOMRAM:
  1210                           	callstack 0
  1211  000001                     ??_CCP1handler:
  1212  000001                     ??_CCP4handler:
  1213  000001                     
  1214                           ; 1 bytes @ 0x0
  1215  000001                     	ds	12
  1216  00000D                     CCP1handler@CCPRT:
  1217                           	callstack 0
  1218  00000D                     CCP4handler@CCPRT:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0xC
  1222  00000D                     	ds	4
  1223  000011                     ??_LoPriISR:
  1224                           
  1225                           ; 1 bytes @ 0x10
  1226  000011                     	ds	3
  1227  000014                     ??_I2C_Master_Wait:
  1228  000014                     ?___fpclassifyf:
  1229                           	callstack 0
  1230  000014                     ?_strlen:
  1231                           	callstack 0
  1232  000014                     ?_isupper:
  1233                           	callstack 0
  1234  000014                     ?_isdigit:
  1235                           	callstack 0
  1236  000014                     ?_strncmp:
  1237                           	callstack 0
  1238  000014                     ?_isspace:
  1239                           	callstack 0
  1240  000014                     ?___wmul:
  1241                           	callstack 0
  1242  000014                     ?___awdiv:
  1243                           	callstack 0
  1244  000014                     ?___awmod:
  1245                           	callstack 0
  1246  000014                     ?___lmul:
  1247                           	callstack 0
  1248  000014                     ?___lldiv:
  1249                           	callstack 0
  1250  000014                     ?___flneg:
  1251                           	callstack 0
  1252  000014                     ?___xxtofl:
  1253                           	callstack 0
  1254  000014                     I2C_Read@ACK_NACK:
  1255                           	callstack 0
  1256  000014                     UART_Write@data:
  1257                           	callstack 0
  1258  000014                     ___wmul@multiplier:
  1259                           	callstack 0
  1260  000014                     ___awdiv@dividend:
  1261                           	callstack 0
  1262  000014                     ___awmod@dividend:
  1263                           	callstack 0
  1264  000014                     isdigit@c:
  1265                           	callstack 0
  1266  000014                     isspace@c:
  1267                           	callstack 0
  1268  000014                     isupper@c:
  1269                           	callstack 0
  1270  000014                     fputc@c:
  1271                           	callstack 0
  1272  000014                     strcpy@dest:
  1273                           	callstack 0
  1274  000014                     strlen@s:
  1275                           	callstack 0
  1276  000014                     strncmp@_l:
  1277                           	callstack 0
  1278  000014                     ___lmul@multiplier:
  1279                           	callstack 0
  1280  000014                     ___lldiv@dividend:
  1281                           	callstack 0
  1282  000014                     ___fleq@ff1:
  1283                           	callstack 0
  1284  000014                     ___flneg@f1:
  1285                           	callstack 0
  1286  000014                     ___xxtofl@val:
  1287                           	callstack 0
  1288  000014                     ___fpclassifyf@x:
  1289                           	callstack 0
  1290                           
  1291                           ; 4 bytes @ 0x13
  1292  000014                     	ds	1
  1293  000015                     I2C_Master_Write@data:
  1294                           	callstack 0
  1295  000015                     I2C_Read@Data:
  1296                           	callstack 0
  1297  000015                     UART_Write_String@buf:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x14
  1301  000015                     	ds	1
  1302  000016                     ??_isupper:
  1303  000016                     ??_isdigit:
  1304  000016                     ??_isspace:
  1305  000016                     I2C_Start@add:
  1306                           	callstack 0
  1307  000016                     ___wmul@multiplicand:
  1308                           	callstack 0
  1309  000016                     ___awdiv@divisor:
  1310                           	callstack 0
  1311  000016                     ___awmod@divisor:
  1312                           	callstack 0
  1313  000016                     fputc@fp:
  1314                           	callstack 0
  1315  000016                     strcpy@src:
  1316                           	callstack 0
  1317  000016                     strlen@a:
  1318                           	callstack 0
  1319  000016                     strncmp@_r:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0x15
  1323  000016                     	ds	1
  1324  000017                     ??_Initial:
  1325  000017                     UART_Write_String@i:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x16
  1329  000017                     	ds	1
  1330  000018                     ??___fpclassifyf:
  1331  000018                     ??_fputc:
  1332  000018                     ??_strcpy:
  1333  000018                     ??___xxtofl:
  1334  000018                     ___awdiv@counter:
  1335                           	callstack 0
  1336  000018                     ___awmod@counter:
  1337                           	callstack 0
  1338  000018                     ___wmul@product:
  1339                           	callstack 0
  1340  000018                     strncmp@n:
  1341                           	callstack 0
  1342  000018                     ___lmul@multiplicand:
  1343                           	callstack 0
  1344  000018                     ___lldiv@divisor:
  1345                           	callstack 0
  1346  000018                     ___fleq@ff2:
  1347                           	callstack 0
  1348                           
  1349                           ; 4 bytes @ 0x17
  1350  000018                     	ds	1
  1351  000019                     ___awdiv@sign:
  1352                           	callstack 0
  1353  000019                     ___awmod@sign:
  1354                           	callstack 0
  1355                           
  1356                           ; 1 bytes @ 0x18
  1357  000019                     	ds	1
  1358  00001A                     ??_strncmp:
  1359  00001A                     ?_tolower:
  1360                           	callstack 0
  1361  00001A                     _isspace$2326:
  1362                           	callstack 0
  1363  00001A                     ___awdiv@quotient:
  1364                           	callstack 0
  1365  00001A                     strcpy@s:
  1366                           	callstack 0
  1367  00001A                     tolower@c:
  1368                           	callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x19
  1371  00001A                     	ds	1
  1372  00001B                     ?_atoi:
  1373                           	callstack 0
  1374  00001B                     atoi@s:
  1375                           	callstack 0
  1376  00001B                     strncmp@l:
  1377                           	callstack 0
  1378                           
  1379                           ; 2 bytes @ 0x1A
  1380  00001B                     	ds	1
  1381  00001C                     ??_tolower:
  1382  00001C                     ??___fleq:
  1383  00001C                     ___xxtofl@sign:
  1384                           	callstack 0
  1385  00001C                     ___fpclassifyf@e:
  1386                           	callstack 0
  1387  00001C                     strcpy@d:
  1388                           	callstack 0
  1389  00001C                     ___lmul@product:
  1390                           	callstack 0
  1391  00001C                     ___lldiv@quotient:
  1392                           	callstack 0
  1393                           
  1394                           ; 4 bytes @ 0x1B
  1395  00001C                     	ds	1
  1396  00001D                     ??_atoi:
  1397  00001D                     ___xxtofl@exp:
  1398                           	callstack 0
  1399  00001D                     fputs@s:
  1400                           	callstack 0
  1401  00001D                     strncmp@r:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x1C
  1405  00001D                     	ds	1
  1406  00001E                     ___xxtofl@arg:
  1407                           	callstack 0
  1408  00001E                     ___fpclassifyf@u:
  1409                           	callstack 0
  1410                           
  1411                           ; 4 bytes @ 0x1D
  1412  00001E                     	ds	1
  1413  00001F                     fputs@fp:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x1E
  1417  00001F                     	ds	1
  1418  000020                     ___lldiv@counter:
  1419                           	callstack 0
  1420  000020                     _tolower$2390:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x1F
  1424  000020                     	ds	1
  1425  000021                     ?_map:
  1426                           	callstack 0
  1427  000021                     fputs@c:
  1428                           	callstack 0
  1429  000021                     map@value:
  1430                           	callstack 0
  1431  000021                     atoi@neg:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x20
  1435  000021                     	ds	1
  1436  000022                     ?___flmul:
  1437                           	callstack 0
  1438  000022                     fputs@i:
  1439                           	callstack 0
  1440  000022                     ___flmul@b:
  1441                           	callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x21
  1444  000022                     	ds	1
  1445  000023                     map@valuemin:
  1446                           	callstack 0
  1447  000023                     _atoi$2295:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x22
  1451  000023                     	ds	1
  1452  000024                     ?_pad:
  1453                           	callstack 0
  1454  000024                     pad@fp:
  1455                           	callstack 0
  1456                           
  1457                           ; 2 bytes @ 0x23
  1458  000024                     	ds	1
  1459  000025                     map@valuemax:
  1460                           	callstack 0
  1461  000025                     _atoi$2297:
  1462                           	callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x24
  1465  000025                     	ds	1
  1466  000026                     pad@buf:
  1467                           	callstack 0
  1468  000026                     ___flmul@a:
  1469                           	callstack 0
  1470                           
  1471                           ; 4 bytes @ 0x25
  1472  000026                     	ds	1
  1473  000027                     _atoi$2296:
  1474                           	callstack 0
  1475  000027                     map@newmin:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x26
  1479  000027                     	ds	1
  1480  000028                     pad@p:
  1481                           	callstack 0
  1482  000028                     atoi@n:
  1483                           	callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x27
  1486  000028                     	ds	1
  1487  000029                     map@newmax:
  1488                           	callstack 0
  1489                           
  1490                           ; 2 bytes @ 0x28
  1491  000029                     	ds	1
  1492  00002A                     ??___flmul:
  1493  00002A                     ??_pad:
  1494                           
  1495                           ; 1 bytes @ 0x29
  1496  00002A                     	ds	1
  1497  00002B                     ??_map:
  1498  00002B                     pad@i:
  1499                           	callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x2A
  1502  00002B                     	ds	2
  1503  00002D                     pad@w:
  1504                           	callstack 0
  1505  00002D                     map@second:
  1506                           	callstack 0
  1507                           
  1508                           ; 4 bytes @ 0x2C
  1509  00002D                     	ds	1
  1510  00002E                     ?___fladd:
  1511                           	callstack 0
  1512  00002E                     ___flge@ff1:
  1513                           	callstack 0
  1514  00002E                     ___fladd@b:
  1515                           	callstack 0
  1516                           
  1517                           ; 4 bytes @ 0x2D
  1518  00002E                     	ds	3
  1519  000031                     map@first:
  1520                           	callstack 0
  1521                           
  1522                           ; 2 bytes @ 0x30
  1523  000031                     	ds	1
  1524  000032                     ___flge@ff2:
  1525                           	callstack 0
  1526  000032                     ___fladd@a:
  1527                           	callstack 0
  1528                           
  1529                           ; 4 bytes @ 0x31
  1530  000032                     	ds	1
  1531  000033                     map@third:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x32
  1535  000033                     	ds	3
  1536  000036                     ___fltol@sign1:
  1537                           	callstack 0
  1538                           
  1539                           ; 1 bytes @ 0x35
  1540  000036                     	ds	1
  1541  000037                     ___fltol@exp1:
  1542                           	callstack 0
  1543                           
  1544                           ; 1 bytes @ 0x36
  1545  000037                     	ds	1
  1546  000038                     
  1547                           ; 1 bytes @ 0x37
  1548 ;;
  1549 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1550 ;;
  1551 ;; *************** function _main *****************
  1552 ;; Defined at:
  1553 ;;		line 70 in file "Le_Jason_Project.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  i               2  160[BANK1 ] int 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;Total ram usage:        4 bytes
  1572 ;; Hardware stack levels required when called: 12
  1573 ;; This function calls:
  1574 ;;		_Initial
  1575 ;;		_MPU6050_Read
  1576 ;;		_Servo1
  1577 ;;		_Servo2
  1578 ;; This function is called by:
  1579 ;;		Startup code after reset
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text0
  1584  005EB2                     __ptext0:
  1585                           	callstack 0
  1586  005EB2                     _main:
  1587                           	callstack 19
  1588  005EB2                     
  1589                           ;Le_Jason_Project.c: 71:     LATC = 0x00;
  1590  005EB2  EC1D  F029         	call	_Initial	;wreg free
  1591                           
  1592                           ;Le_Jason_Project.c: 72:     TRISD = 0x00;
  1593  005EB6  0E00               	movlw	0
  1594  005EB8  0100               	movlb	0	; () banked
  1595  005EBA  6F86               	movwf	(Servo1@angle+1)& (0+255),b
  1596  005EBC  0E2D               	movlw	45
  1597  005EBE  6F85               	movwf	Servo1@angle& (0+255),b
  1598  005EC0  ECCF  F02D         	call	_Servo1	;wreg free
  1599                           
  1600                           ;Le_Jason_Project.c: 73:     LATD = 0x00;
  1601  005EC4  0E00               	movlw	0
  1602  005EC6  0100               	movlb	0	; () banked
  1603  005EC8  6F86               	movwf	(Servo2@angle+1)& (0+255),b
  1604  005ECA  0E2D               	movlw	45
  1605  005ECC  6F85               	movwf	Servo2@angle& (0+255),b
  1606  005ECE  EC7C  F02D         	call	_Servo2	;wreg free
  1607  005ED2                     l8040:
  1608                           
  1609                           ;Le_Jason_Project.c: 75:     LATE = 0x00;
  1610  005ED2  0E00               	movlw	0
  1611  005ED4  0101               	movlb	1	; () banked
  1612  005ED6  6FA1               	movwf	(main@i+1)& (0+255),b
  1613  005ED8  0EB4               	movlw	180
  1614  005EDA  6FA0               	movwf	main@i& (0+255),b
  1615  005EDC                     l8046:
  1616                           
  1617                           ; BSR set to: 1
  1618                           ;Le_Jason_Project.c: 78:     RCONbits.IPEN = 1;
  1619  005EDC  EC9D  F00E         	call	_MPU6050_Read	;wreg free
  1620  005EE0                     
  1621                           ;Le_Jason_Project.c: 79:     INTCONbits.GIEL = 1;
  1622  005EE0  0E02               	movlw	2
  1623  005EE2  0101               	movlb	1	; () banked
  1624  005EE4  6F9F               	movwf	(??_main+1)& (0+255),b
  1625  005EE6  0E04               	movlw	4
  1626  005EE8  6F9E               	movwf	??_main& (0+255),b
  1627  005EEA  0EBA               	movlw	186
  1628  005EEC                     u8587:
  1629  005EEC  2EE8               	decfsz	wreg,f,c
  1630  005EEE  D7FE               	bra	u8587
  1631  005EF0  2F9E               	decfsz	??_main& (0+255),f,b
  1632  005EF2  D7FC               	bra	u8587
  1633  005EF4  2F9F               	decfsz	(??_main+1)& (0+255),f,b
  1634  005EF6  D7FA               	bra	u8587
  1635  005EF8  F000               	nop	
  1636  005EFA                     
  1637                           ;Le_Jason_Project.c: 80:     INTCONbits.GIEH = 1;
  1638  005EFA  0101               	movlb	1	; () banked
  1639  005EFC  07A0               	decf	main@i& (0+255),f,b
  1640  005EFE  A0D8               	btfss	status,0,c
  1641  005F00  07A1               	decf	(main@i+1)& (0+255),f,b
  1642  005F02                     
  1643                           ; BSR set to: 1
  1644  005F02  BFA1               	btfsc	(main@i+1)& (0+255),7,b
  1645  005F04  EF88  F02F         	goto	u8570
  1646  005F08  EF86  F02F         	goto	u8571
  1647  005F0C                     u8571:
  1648  005F0C  EF6E  F02F         	goto	l8046
  1649  005F10                     u8570:
  1650  005F10  EF69  F02F         	goto	l8040
  1651  005F14  EF51  F000         	goto	start
  1652  005F18                     __end_of_main:
  1653                           	callstack 0
  1654                           
  1655 ;; *************** function _MPU6050_Read *****************
  1656 ;; Defined at:
  1657 ;;		line 427 in file "Le_Jason_Project.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  buffer         40   36[BANK1 ] unsigned char [40]
  1662 ;;  accAngleY       4  154[BANK1 ] float 
  1663 ;;  accAngleX       4  150[BANK1 ] float 
  1664 ;;  elapsedTime     4  126[BANK1 ] float 
  1665 ;;  pitch           4  122[BANK1 ] float 
  1666 ;;  roll            4  118[BANK1 ] float 
  1667 ;;  AY              4  114[BANK1 ] float 
  1668 ;;  AX              4  110[BANK1 ] float 
  1669 ;;  GZ              4   84[BANK1 ] float 
  1670 ;;  GX              4   80[BANK1 ] float 
  1671 ;;  AZ              4   76[BANK1 ] float 
  1672 ;;  t               4    0        float 
  1673 ;;  GY              4    0        float 
  1674 ;;  T               2  108[BANK1 ] int 
  1675 ;;  Gz              2  106[BANK1 ] int 
  1676 ;;  Gy              2  104[BANK1 ] int 
  1677 ;;  Gx              2  102[BANK1 ] int 
  1678 ;;  Az              2  100[BANK1 ] int 
  1679 ;;  Ay              2   98[BANK1 ] int 
  1680 ;;  Ax              2   96[BANK1 ] int 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         0       0     122       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:         0       0     126       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:      126 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 11
  1697 ;; This function calls:
  1698 ;;		_I2C_Master_Stop
  1699 ;;		_I2C_Master_Write
  1700 ;;		_I2C_Read
  1701 ;;		_I2C_Start
  1702 ;;		_Servo1
  1703 ;;		_Servo2
  1704 ;;		_UART_Write_String
  1705 ;;		___fladd
  1706 ;;		___fldiv
  1707 ;;		___flmul
  1708 ;;		___flneg
  1709 ;;		___flsub
  1710 ;;		___fltol
  1711 ;;		___xxtofl
  1712 ;;		_atan2f
  1713 ;;		_sprintf
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text1
  1720  001D3A                     __ptext1:
  1721                           	callstack 0
  1722  001D3A                     _MPU6050_Read:
  1723                           	callstack 19
  1724  001D3A                     
  1725                           ;Le_Jason_Project.c: 428:     Gz = ((int)I2C_Read(0)<<8) | (int)I2C_Read(1);;Le_Jason_Pr
      +                          oject.c: 429:     I2C_Master_Stop();;Le_Jason_Project.c: 430: ;Le_Jason_Project.c: 431: 
      +                              AX = (float)Ax/16384.0;;Le_Jason_Project.c: 432:     AY = (float)Ay/16384.0;
  1726  001D3A  50CE               	movf	206,w,c	;volatile
  1727  001D3C  6E14               	movwf	___xxtofl@val^0,c
  1728  001D3E  6A15               	clrf	(___xxtofl@val+1)^0,c
  1729  001D40  6A16               	clrf	(___xxtofl@val+2)^0,c
  1730  001D42  6A17               	clrf	(___xxtofl@val+3)^0,c
  1731  001D44  0E00               	movlw	0
  1732  001D46  ECF9  F025         	call	___xxtofl
  1733  001D4A  C014  F032         	movff	?___xxtofl,___fladd@a
  1734  001D4E  C015  F033         	movff	?___xxtofl+1,___fladd@a+1
  1735  001D52  C016  F034         	movff	?___xxtofl+2,___fladd@a+2
  1736  001D56  C017  F035         	movff	?___xxtofl+3,___fladd@a+3
  1737  001D5A  0E00               	movlw	0
  1738  001D5C  6E26               	movwf	___flmul@a^0,c
  1739  001D5E  0E00               	movlw	0
  1740  001D60  6E27               	movwf	(___flmul@a+1)^0,c
  1741  001D62  0E80               	movlw	128
  1742  001D64  6E28               	movwf	(___flmul@a+2)^0,c
  1743  001D66  0E43               	movlw	67
  1744  001D68  6E29               	movwf	(___flmul@a+3)^0,c
  1745  001D6A  50CF               	movf	207,w,c	;volatile
  1746  001D6C  6E14               	movwf	___xxtofl@val^0,c
  1747  001D6E  6A15               	clrf	(___xxtofl@val+1)^0,c
  1748  001D70  6A16               	clrf	(___xxtofl@val+2)^0,c
  1749  001D72  6A17               	clrf	(___xxtofl@val+3)^0,c
  1750  001D74  0E00               	movlw	0
  1751  001D76  ECF9  F025         	call	___xxtofl
  1752  001D7A  C014  F022         	movff	?___xxtofl,___flmul@b
  1753  001D7E  C015  F023         	movff	?___xxtofl+1,___flmul@b+1
  1754  001D82  C016  F024         	movff	?___xxtofl+2,___flmul@b+2
  1755  001D86  C017  F025         	movff	?___xxtofl+3,___flmul@b+3
  1756  001D8A  EC0A  F021         	call	___flmul	;wreg free
  1757  001D8E  C022  F02E         	movff	?___flmul,___fladd@b
  1758  001D92  C023  F02F         	movff	?___flmul+1,___fladd@b+1
  1759  001D96  C024  F030         	movff	?___flmul+2,___fladd@b+2
  1760  001D9A  C025  F031         	movff	?___flmul+3,___fladd@b+3
  1761  001D9E  EC57  F01C         	call	___fladd	;wreg free
  1762  001DA2  C02E  F158         	movff	?___fladd,_MPU6050_Read$2611
  1763  001DA6  C02F  F159         	movff	?___fladd+1,_MPU6050_Read$2611+1
  1764  001DAA  C030  F15A         	movff	?___fladd+2,_MPU6050_Read$2611+2
  1765  001DAE  C031  F15B         	movff	?___fladd+3,_MPU6050_Read$2611+3
  1766                           
  1767                           ;Le_Jason_Project.c: 428:     Gz = ((int)I2C_Read(0)<<8) | (int)I2C_Read(1);;Le_Jason_Pr
      +                          oject.c: 429:     I2C_Master_Stop();;Le_Jason_Project.c: 430: ;Le_Jason_Project.c: 431: 
      +                              AX = (float)Ax/16384.0;;Le_Jason_Project.c: 432:     AY = (float)Ay/16384.0;
  1768  001DB2  0EBD               	movlw	189
  1769  001DB4  6E26               	movwf	___flmul@a^0,c
  1770  001DB6  0E37               	movlw	55
  1771  001DB8  6E27               	movwf	(___flmul@a+1)^0,c
  1772  001DBA  0E86               	movlw	134
  1773  001DBC  6E28               	movwf	(___flmul@a+2)^0,c
  1774  001DBE  0E34               	movlw	52
  1775  001DC0  6E29               	movwf	(___flmul@a+3)^0,c
  1776  001DC2  C158  F022         	movff	_MPU6050_Read$2611,___flmul@b
  1777  001DC6  C159  F023         	movff	_MPU6050_Read$2611+1,___flmul@b+1
  1778  001DCA  C15A  F024         	movff	_MPU6050_Read$2611+2,___flmul@b+2
  1779  001DCE  C15B  F025         	movff	_MPU6050_Read$2611+3,___flmul@b+3
  1780  001DD2  EC0A  F021         	call	___flmul	;wreg free
  1781  001DD6  C022  F032         	movff	?___flmul,___fladd@a
  1782  001DDA  C023  F033         	movff	?___flmul+1,___fladd@a+1
  1783  001DDE  C024  F034         	movff	?___flmul+2,___fladd@a+2
  1784  001DE2  C025  F035         	movff	?___flmul+3,___fladd@a+3
  1785  001DE6  0EBD               	movlw	189
  1786  001DE8  6E26               	movwf	___flmul@a^0,c
  1787  001DEA  0E37               	movlw	55
  1788  001DEC  6E27               	movwf	(___flmul@a+1)^0,c
  1789  001DEE  0E86               	movlw	134
  1790  001DF0  6E28               	movwf	(___flmul@a+2)^0,c
  1791  001DF2  0E3C               	movlw	60
  1792  001DF4  6E29               	movwf	(___flmul@a+3)^0,c
  1793  001DF6  C1BA  F014         	movff	_time0counter,___xxtofl@val
  1794  001DFA  C1BB  F015         	movff	_time0counter+1,___xxtofl@val+1
  1795  001DFE  C1BC  F016         	movff	_time0counter+2,___xxtofl@val+2
  1796  001E02  C1BD  F017         	movff	_time0counter+3,___xxtofl@val+3
  1797  001E06  0E00               	movlw	0
  1798  001E08  ECF9  F025         	call	___xxtofl
  1799  001E0C  C014  F022         	movff	?___xxtofl,___flmul@b
  1800  001E10  C015  F023         	movff	?___xxtofl+1,___flmul@b+1
  1801  001E14  C016  F024         	movff	?___xxtofl+2,___flmul@b+2
  1802  001E18  C017  F025         	movff	?___xxtofl+3,___flmul@b+3
  1803  001E1C  EC0A  F021         	call	___flmul	;wreg free
  1804  001E20  C022  F02E         	movff	?___flmul,___fladd@b
  1805  001E24  C023  F02F         	movff	?___flmul+1,___fladd@b+1
  1806  001E28  C024  F030         	movff	?___flmul+2,___fladd@b+2
  1807  001E2C  C025  F031         	movff	?___flmul+3,___fladd@b+3
  1808  001E30  EC57  F01C         	call	___fladd	;wreg free
  1809  001E34  C02E  F15C         	movff	?___fladd,_MPU6050_Read$2612
  1810  001E38  C02F  F15D         	movff	?___fladd+1,_MPU6050_Read$2612+1
  1811  001E3C  C030  F15E         	movff	?___fladd+2,_MPU6050_Read$2612+2
  1812  001E40  C031  F15F         	movff	?___fladd+3,_MPU6050_Read$2612+3
  1813                           
  1814                           ;Le_Jason_Project.c: 428:     Gz = ((int)I2C_Read(0)<<8) | (int)I2C_Read(1);;Le_Jason_Pr
      +                          oject.c: 429:     I2C_Master_Stop();;Le_Jason_Project.c: 430: ;Le_Jason_Project.c: 431: 
      +                              AX = (float)Ax/16384.0;;Le_Jason_Project.c: 432:     AY = (float)Ay/16384.0;
  1815  001E44  C15C  F022         	movff	_MPU6050_Read$2612,___flmul@b
  1816  001E48  C15D  F023         	movff	_MPU6050_Read$2612+1,___flmul@b+1
  1817  001E4C  C15E  F024         	movff	_MPU6050_Read$2612+2,___flmul@b+2
  1818  001E50  C15F  F025         	movff	_MPU6050_Read$2612+3,___flmul@b+3
  1819  001E54  0E00               	movlw	0
  1820  001E56  6E26               	movwf	___flmul@a^0,c
  1821  001E58  0E00               	movlw	0
  1822  001E5A  6E27               	movwf	(___flmul@a+1)^0,c
  1823  001E5C  0E7A               	movlw	122
  1824  001E5E  6E28               	movwf	(___flmul@a+2)^0,c
  1825  001E60  0E44               	movlw	68
  1826  001E62  6E29               	movwf	(___flmul@a+3)^0,c
  1827  001E64  EC0A  F021         	call	___flmul	;wreg free
  1828  001E68  C022  F1B6         	movff	?___flmul,_CurrentTime
  1829  001E6C  C023  F1B7         	movff	?___flmul+1,_CurrentTime+1
  1830  001E70  C024  F1B8         	movff	?___flmul+2,_CurrentTime+2
  1831  001E74  C025  F1B9         	movff	?___flmul+3,_CurrentTime+3
  1832  001E78                     
  1833                           ;Le_Jason_Project.c: 433:     AZ = (float)Az/16384.0;
  1834  001E78  C1B2  F079         	movff	_previousTime,___flsub@a
  1835  001E7C  C1B3  F07A         	movff	_previousTime+1,___flsub@a+1
  1836  001E80  C1B4  F07B         	movff	_previousTime+2,___flsub@a+2
  1837  001E84  C1B5  F07C         	movff	_previousTime+3,___flsub@a+3
  1838  001E88  C1B6  F075         	movff	_CurrentTime,___flsub@b
  1839  001E8C  C1B7  F076         	movff	_CurrentTime+1,___flsub@b+1
  1840  001E90  C1B8  F077         	movff	_CurrentTime+2,___flsub@b+2
  1841  001E94  C1B9  F078         	movff	_CurrentTime+3,___flsub@b+3
  1842  001E98  EC3E  F030         	call	___flsub	;wreg free
  1843  001E9C  C075  F07D         	movff	?___flsub,___fldiv@b
  1844  001EA0  C076  F07E         	movff	?___flsub+1,___fldiv@b+1
  1845  001EA4  C077  F07F         	movff	?___flsub+2,___fldiv@b+2
  1846  001EA8  C078  F080         	movff	?___flsub+3,___fldiv@b+3
  1847  001EAC  0E00               	movlw	0
  1848  001EAE  0100               	movlb	0	; () banked
  1849  001EB0  6F81               	movwf	___fldiv@a& (0+255),b
  1850  001EB2  0E00               	movlw	0
  1851  001EB4  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  1852  001EB6  0E7A               	movlw	122
  1853  001EB8  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  1854  001EBA  0E44               	movlw	68
  1855  001EBC  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  1856  001EBE  EC20  F023         	call	___fldiv	;wreg free
  1857  001EC2  C07D  F17E         	movff	?___fldiv,MPU6050_Read@elapsedTime
  1858  001EC6  C07E  F17F         	movff	?___fldiv+1,MPU6050_Read@elapsedTime+1
  1859  001ECA  C07F  F180         	movff	?___fldiv+2,MPU6050_Read@elapsedTime+2
  1860  001ECE  C080  F181         	movff	?___fldiv+3,MPU6050_Read@elapsedTime+3
  1861  001ED2                     
  1862                           ;Le_Jason_Project.c: 434:     GX = (float)Gx/131.0;
  1863  001ED2  C1B6  F1B2         	movff	_CurrentTime,_previousTime
  1864  001ED6  C1B7  F1B3         	movff	_CurrentTime+1,_previousTime+1
  1865  001EDA  C1B8  F1B4         	movff	_CurrentTime+2,_previousTime+2
  1866  001EDE  C1B9  F1B5         	movff	_CurrentTime+3,_previousTime+3
  1867  001EE2                     
  1868                           ;Le_Jason_Project.c: 435:     GY = (float)Gy/131.0;
  1869  001EE2  0ED0               	movlw	208
  1870  001EE4  ECAF  F031         	call	_I2C_Start
  1871  001EE8                     
  1872                           ;Le_Jason_Project.c: 436:     GZ = (float)Gz/131.0;
  1873  001EE8  0E3B               	movlw	59
  1874  001EEA  EC77  F031         	call	_I2C_Master_Write
  1875  001EEE                     
  1876                           ;Le_Jason_Project.c: 437:     t = ((float)T/340.00)+36.53;
  1877  001EEE  ECBF  F031         	call	_I2C_Master_Stop	;wreg free
  1878  001EF2  0ED1               	movlw	209
  1879  001EF4  ECAF  F031         	call	_I2C_Start
  1880  001EF8  0E00               	movlw	0
  1881  001EFA  EC62  F030         	call	_I2C_Read
  1882  001EFE  0E00               	movlw	0
  1883  001F00  EC62  F030         	call	_I2C_Read
  1884  001F04  0101               	movlb	1	; () banked
  1885  001F06  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1886  001F08  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1887  001F0A  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1888  001F0C  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1889  001F0E  0E00               	movlw	0
  1890  001F10  EC62  F030         	call	_I2C_Read
  1891  001F14  0101               	movlb	1	; () banked
  1892  001F16  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1893  001F18  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1894  001F1A  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1895  001F1C  6F60               	movwf	MPU6050_Read@Ax& (0+255),b
  1896  001F1E  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1897  001F20  6F61               	movwf	(MPU6050_Read@Ax+1)& (0+255),b
  1898  001F22                     
  1899                           ; BSR set to: 1
  1900  001F22  0E00               	movlw	0
  1901  001F24  EC62  F030         	call	_I2C_Read
  1902  001F28  0101               	movlb	1	; () banked
  1903  001F2A  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1904  001F2C  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1905  001F2E  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1906  001F30  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1907  001F32  0E00               	movlw	0
  1908  001F34  EC62  F030         	call	_I2C_Read
  1909  001F38  0101               	movlb	1	; () banked
  1910  001F3A  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1911  001F3C  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1912  001F3E  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1913  001F40  6F62               	movwf	MPU6050_Read@Ay& (0+255),b
  1914  001F42  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1915  001F44  6F63               	movwf	(MPU6050_Read@Ay+1)& (0+255),b
  1916  001F46                     
  1917                           ; BSR set to: 1
  1918  001F46  0E00               	movlw	0
  1919  001F48  EC62  F030         	call	_I2C_Read
  1920  001F4C  0101               	movlb	1	; () banked
  1921  001F4E  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1922  001F50  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1923  001F52  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1924  001F54  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1925  001F56  0E00               	movlw	0
  1926  001F58  EC62  F030         	call	_I2C_Read
  1927  001F5C  0101               	movlb	1	; () banked
  1928  001F5E  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1929  001F60  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1930  001F62  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1931  001F64  6F64               	movwf	MPU6050_Read@Az& (0+255),b
  1932  001F66  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1933  001F68  6F65               	movwf	(MPU6050_Read@Az+1)& (0+255),b
  1934  001F6A                     
  1935                           ; BSR set to: 1
  1936  001F6A  0E00               	movlw	0
  1937  001F6C  EC62  F030         	call	_I2C_Read
  1938  001F70  0101               	movlb	1	; () banked
  1939  001F72  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1940  001F74  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1941  001F76  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1942  001F78  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1943  001F7A  0E00               	movlw	0
  1944  001F7C  EC62  F030         	call	_I2C_Read
  1945  001F80  0101               	movlb	1	; () banked
  1946  001F82  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1947  001F84  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1948  001F86  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1949  001F88  6F6C               	movwf	MPU6050_Read@T& (0+255),b
  1950  001F8A  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1951  001F8C  6F6D               	movwf	(MPU6050_Read@T+1)& (0+255),b
  1952  001F8E                     
  1953                           ; BSR set to: 1
  1954  001F8E  0E00               	movlw	0
  1955  001F90  EC62  F030         	call	_I2C_Read
  1956  001F94  0101               	movlb	1	; () banked
  1957  001F96  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1958  001F98  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1959  001F9A  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1960  001F9C  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1961  001F9E  0E00               	movlw	0
  1962  001FA0  EC62  F030         	call	_I2C_Read
  1963  001FA4  0101               	movlb	1	; () banked
  1964  001FA6  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1965  001FA8  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1966  001FAA  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1967  001FAC  6F66               	movwf	MPU6050_Read@Gx& (0+255),b
  1968  001FAE  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1969  001FB0  6F67               	movwf	(MPU6050_Read@Gx+1)& (0+255),b
  1970  001FB2                     
  1971                           ; BSR set to: 1
  1972  001FB2  0E00               	movlw	0
  1973  001FB4  EC62  F030         	call	_I2C_Read
  1974  001FB8  0101               	movlb	1	; () banked
  1975  001FBA  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1976  001FBC  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1977  001FBE  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1978  001FC0  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1979  001FC2  0E00               	movlw	0
  1980  001FC4  EC62  F030         	call	_I2C_Read
  1981  001FC8  0101               	movlb	1	; () banked
  1982  001FCA  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  1983  001FCC  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  1984  001FCE  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  1985  001FD0  6F68               	movwf	MPU6050_Read@Gy& (0+255),b
  1986  001FD2  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  1987  001FD4  6F69               	movwf	(MPU6050_Read@Gy+1)& (0+255),b
  1988  001FD6                     
  1989                           ; BSR set to: 1
  1990  001FD6  0E00               	movlw	0
  1991  001FD8  EC62  F030         	call	_I2C_Read
  1992  001FDC  0101               	movlb	1	; () banked
  1993  001FDE  6F20               	movwf	??_MPU6050_Read& (0+255),b
  1994  001FE0  5120               	movf	??_MPU6050_Read& (0+255),w,b
  1995  001FE2  6F22               	movwf	(??_MPU6050_Read+2)& (0+255),b
  1996  001FE4  6B21               	clrf	(??_MPU6050_Read+1)& (0+255),b
  1997  001FE6  0E01               	movlw	1
  1998  001FE8  EC62  F030         	call	_I2C_Read
  1999  001FEC  0101               	movlb	1	; () banked
  2000  001FEE  6F23               	movwf	(??_MPU6050_Read+3)& (0+255),b
  2001  001FF0  5123               	movf	(??_MPU6050_Read+3)& (0+255),w,b
  2002  001FF2  1121               	iorwf	(??_MPU6050_Read+1)& (0+255),w,b
  2003  001FF4  6F6A               	movwf	MPU6050_Read@Gz& (0+255),b
  2004  001FF6  5122               	movf	(??_MPU6050_Read+2)& (0+255),w,b
  2005  001FF8  6F6B               	movwf	(MPU6050_Read@Gz+1)& (0+255),b
  2006  001FFA                     
  2007                           ; BSR set to: 1
  2008  001FFA  ECBF  F031         	call	_I2C_Master_Stop	;wreg free
  2009  001FFE  C160  F014         	movff	MPU6050_Read@Ax,___xxtofl@val
  2010  002002  C161  F015         	movff	MPU6050_Read@Ax+1,___xxtofl@val+1
  2011  002006  0E00               	movlw	0
  2012  002008  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  2013  00200A  0EFF               	movlw	-1
  2014  00200C  6E16               	movwf	(___xxtofl@val+2)^0,c
  2015  00200E  6E17               	movwf	(___xxtofl@val+3)^0,c
  2016  002010  0E01               	movlw	1
  2017  002012  ECF9  F025         	call	___xxtofl
  2018  002016  C014  F07D         	movff	?___xxtofl,___fldiv@b
  2019  00201A  C015  F07E         	movff	?___xxtofl+1,___fldiv@b+1
  2020  00201E  C016  F07F         	movff	?___xxtofl+2,___fldiv@b+2
  2021  002022  C017  F080         	movff	?___xxtofl+3,___fldiv@b+3
  2022  002026  0E00               	movlw	0
  2023  002028  0100               	movlb	0	; () banked
  2024  00202A  6F81               	movwf	___fldiv@a& (0+255),b
  2025  00202C  0E00               	movlw	0
  2026  00202E  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2027  002030  0E80               	movlw	128
  2028  002032  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2029  002034  0E46               	movlw	70
  2030  002036  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2031  002038  EC20  F023         	call	___fldiv	;wreg free
  2032  00203C  C07D  F16E         	movff	?___fldiv,MPU6050_Read@AX
  2033  002040  C07E  F16F         	movff	?___fldiv+1,MPU6050_Read@AX+1
  2034  002044  C07F  F170         	movff	?___fldiv+2,MPU6050_Read@AX+2
  2035  002048  C080  F171         	movff	?___fldiv+3,MPU6050_Read@AX+3
  2036  00204C  C162  F014         	movff	MPU6050_Read@Ay,___xxtofl@val
  2037  002050  C163  F015         	movff	MPU6050_Read@Ay+1,___xxtofl@val+1
  2038  002054  0E00               	movlw	0
  2039  002056  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  2040  002058  0EFF               	movlw	-1
  2041  00205A  6E16               	movwf	(___xxtofl@val+2)^0,c
  2042  00205C  6E17               	movwf	(___xxtofl@val+3)^0,c
  2043  00205E  0E01               	movlw	1
  2044  002060  ECF9  F025         	call	___xxtofl
  2045  002064  C014  F07D         	movff	?___xxtofl,___fldiv@b
  2046  002068  C015  F07E         	movff	?___xxtofl+1,___fldiv@b+1
  2047  00206C  C016  F07F         	movff	?___xxtofl+2,___fldiv@b+2
  2048  002070  C017  F080         	movff	?___xxtofl+3,___fldiv@b+3
  2049  002074  0E00               	movlw	0
  2050  002076  0100               	movlb	0	; () banked
  2051  002078  6F81               	movwf	___fldiv@a& (0+255),b
  2052  00207A  0E00               	movlw	0
  2053  00207C  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2054  00207E  0E80               	movlw	128
  2055  002080  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2056  002082  0E46               	movlw	70
  2057  002084  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2058  002086  EC20  F023         	call	___fldiv	;wreg free
  2059  00208A  C07D  F172         	movff	?___fldiv,MPU6050_Read@AY
  2060  00208E  C07E  F173         	movff	?___fldiv+1,MPU6050_Read@AY+1
  2061  002092  C07F  F174         	movff	?___fldiv+2,MPU6050_Read@AY+2
  2062  002096  C080  F175         	movff	?___fldiv+3,MPU6050_Read@AY+3
  2063  00209A  C164  F014         	movff	MPU6050_Read@Az,___xxtofl@val
  2064  00209E  C165  F015         	movff	MPU6050_Read@Az+1,___xxtofl@val+1
  2065  0020A2  0E00               	movlw	0
  2066  0020A4  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  2067  0020A6  0EFF               	movlw	-1
  2068  0020A8  6E16               	movwf	(___xxtofl@val+2)^0,c
  2069  0020AA  6E17               	movwf	(___xxtofl@val+3)^0,c
  2070  0020AC  0E01               	movlw	1
  2071  0020AE  ECF9  F025         	call	___xxtofl
  2072  0020B2  C014  F07D         	movff	?___xxtofl,___fldiv@b
  2073  0020B6  C015  F07E         	movff	?___xxtofl+1,___fldiv@b+1
  2074  0020BA  C016  F07F         	movff	?___xxtofl+2,___fldiv@b+2
  2075  0020BE  C017  F080         	movff	?___xxtofl+3,___fldiv@b+3
  2076  0020C2  0E00               	movlw	0
  2077  0020C4  0100               	movlb	0	; () banked
  2078  0020C6  6F81               	movwf	___fldiv@a& (0+255),b
  2079  0020C8  0E00               	movlw	0
  2080  0020CA  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2081  0020CC  0E80               	movlw	128
  2082  0020CE  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2083  0020D0  0E46               	movlw	70
  2084  0020D2  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2085  0020D4  EC20  F023         	call	___fldiv	;wreg free
  2086  0020D8  C07D  F14C         	movff	?___fldiv,MPU6050_Read@AZ
  2087  0020DC  C07E  F14D         	movff	?___fldiv+1,MPU6050_Read@AZ+1
  2088  0020E0  C07F  F14E         	movff	?___fldiv+2,MPU6050_Read@AZ+2
  2089  0020E4  C080  F14F         	movff	?___fldiv+3,MPU6050_Read@AZ+3
  2090  0020E8  C166  F014         	movff	MPU6050_Read@Gx,___xxtofl@val
  2091  0020EC  C167  F015         	movff	MPU6050_Read@Gx+1,___xxtofl@val+1
  2092  0020F0  0E00               	movlw	0
  2093  0020F2  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  2094  0020F4  0EFF               	movlw	-1
  2095  0020F6  6E16               	movwf	(___xxtofl@val+2)^0,c
  2096  0020F8  6E17               	movwf	(___xxtofl@val+3)^0,c
  2097  0020FA  0E01               	movlw	1
  2098  0020FC  ECF9  F025         	call	___xxtofl
  2099  002100  C014  F07D         	movff	?___xxtofl,___fldiv@b
  2100  002104  C015  F07E         	movff	?___xxtofl+1,___fldiv@b+1
  2101  002108  C016  F07F         	movff	?___xxtofl+2,___fldiv@b+2
  2102  00210C  C017  F080         	movff	?___xxtofl+3,___fldiv@b+3
  2103  002110  0E00               	movlw	0
  2104  002112  0100               	movlb	0	; () banked
  2105  002114  6F81               	movwf	___fldiv@a& (0+255),b
  2106  002116  0E00               	movlw	0
  2107  002118  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2108  00211A  0E03               	movlw	3
  2109  00211C  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2110  00211E  0E43               	movlw	67
  2111  002120  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2112  002122  EC20  F023         	call	___fldiv	;wreg free
  2113  002126  C07D  F150         	movff	?___fldiv,MPU6050_Read@GX
  2114  00212A  C07E  F151         	movff	?___fldiv+1,MPU6050_Read@GX+1
  2115  00212E  C07F  F152         	movff	?___fldiv+2,MPU6050_Read@GX+2
  2116  002132  C080  F153         	movff	?___fldiv+3,MPU6050_Read@GX+3
  2117  002136  C168  F014         	movff	MPU6050_Read@Gy,___xxtofl@val
  2118  00213A  C169  F015         	movff	MPU6050_Read@Gy+1,___xxtofl@val+1
  2119  00213E  0E00               	movlw	0
  2120  002140  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  2121  002142  0EFF               	movlw	-1
  2122  002144  6E16               	movwf	(___xxtofl@val+2)^0,c
  2123  002146  6E17               	movwf	(___xxtofl@val+3)^0,c
  2124  002148  0E01               	movlw	1
  2125  00214A  ECF9  F025         	call	___xxtofl
  2126  00214E  C014  F07D         	movff	?___xxtofl,___fldiv@b
  2127  002152  C015  F07E         	movff	?___xxtofl+1,___fldiv@b+1
  2128  002156  C016  F07F         	movff	?___xxtofl+2,___fldiv@b+2
  2129  00215A  C017  F080         	movff	?___xxtofl+3,___fldiv@b+3
  2130  00215E  0E00               	movlw	0
  2131  002160  0100               	movlb	0	; () banked
  2132  002162  6F81               	movwf	___fldiv@a& (0+255),b
  2133  002164  0E00               	movlw	0
  2134  002166  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2135  002168  0E03               	movlw	3
  2136  00216A  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2137  00216C  0E43               	movlw	67
  2138  00216E  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2139  002170  EC20  F023         	call	___fldiv	;wreg free
  2140  002174  C16A  F014         	movff	MPU6050_Read@Gz,___xxtofl@val
  2141  002178  C16B  F015         	movff	MPU6050_Read@Gz+1,___xxtofl@val+1
  2142  00217C  0E00               	movlw	0
  2143  00217E  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  2144  002180  0EFF               	movlw	-1
  2145  002182  6E16               	movwf	(___xxtofl@val+2)^0,c
  2146  002184  6E17               	movwf	(___xxtofl@val+3)^0,c
  2147  002186  0E01               	movlw	1
  2148  002188  ECF9  F025         	call	___xxtofl
  2149  00218C  C014  F07D         	movff	?___xxtofl,___fldiv@b
  2150  002190  C015  F07E         	movff	?___xxtofl+1,___fldiv@b+1
  2151  002194  C016  F07F         	movff	?___xxtofl+2,___fldiv@b+2
  2152  002198  C017  F080         	movff	?___xxtofl+3,___fldiv@b+3
  2153  00219C  0E00               	movlw	0
  2154  00219E  0100               	movlb	0	; () banked
  2155  0021A0  6F81               	movwf	___fldiv@a& (0+255),b
  2156  0021A2  0E00               	movlw	0
  2157  0021A4  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2158  0021A6  0E03               	movlw	3
  2159  0021A8  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2160  0021AA  0E43               	movlw	67
  2161  0021AC  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2162  0021AE  EC20  F023         	call	___fldiv	;wreg free
  2163  0021B2  C07D  F154         	movff	?___fldiv,MPU6050_Read@GZ
  2164  0021B6  C07E  F155         	movff	?___fldiv+1,MPU6050_Read@GZ+1
  2165  0021BA  C07F  F156         	movff	?___fldiv+2,MPU6050_Read@GZ+2
  2166  0021BE  C080  F157         	movff	?___fldiv+3,MPU6050_Read@GZ+3
  2167  0021C2  0E00               	movlw	0
  2168  0021C4  0100               	movlb	0	; () banked
  2169  0021C6  6F81               	movwf	___fldiv@a& (0+255),b
  2170  0021C8  0E00               	movlw	0
  2171  0021CA  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2172  0021CC  0EAA               	movlw	170
  2173  0021CE  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2174  0021D0  0E43               	movlw	67
  2175  0021D2  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2176  0021D4  C16C  F014         	movff	MPU6050_Read@T,___xxtofl@val
  2177  0021D8  C16D  F015         	movff	MPU6050_Read@T+1,___xxtofl@val+1
  2178  0021DC  0E00               	movlw	0
  2179  0021DE  BE15               	btfsc	(___xxtofl@val+1)^0,7,c
  2180  0021E0  0EFF               	movlw	-1
  2181  0021E2  6E16               	movwf	(___xxtofl@val+2)^0,c
  2182  0021E4  6E17               	movwf	(___xxtofl@val+3)^0,c
  2183  0021E6  0E01               	movlw	1
  2184  0021E8  ECF9  F025         	call	___xxtofl
  2185  0021EC  C014  F07D         	movff	?___xxtofl,___fldiv@b
  2186  0021F0  C015  F07E         	movff	?___xxtofl+1,___fldiv@b+1
  2187  0021F4  C016  F07F         	movff	?___xxtofl+2,___fldiv@b+2
  2188  0021F8  C017  F080         	movff	?___xxtofl+3,___fldiv@b+3
  2189  0021FC  EC20  F023         	call	___fldiv	;wreg free
  2190  002200  C07D  F02E         	movff	?___fldiv,___fladd@b
  2191  002204  C07E  F02F         	movff	?___fldiv+1,___fladd@b+1
  2192  002208  C07F  F030         	movff	?___fldiv+2,___fladd@b+2
  2193  00220C  C080  F031         	movff	?___fldiv+3,___fladd@b+3
  2194  002210  0EB8               	movlw	184
  2195  002212  6E32               	movwf	___fladd@a^0,c
  2196  002214  0E1E               	movlw	30
  2197  002216  6E33               	movwf	(___fladd@a+1)^0,c
  2198  002218  0E12               	movlw	18
  2199  00221A  6E34               	movwf	(___fladd@a+2)^0,c
  2200  00221C  0E42               	movlw	66
  2201  00221E  6E35               	movwf	(___fladd@a+3)^0,c
  2202  002220  EC57  F01C         	call	___fladd	;wreg free
  2203  002224                     
  2204                           ;Le_Jason_Project.c: 480:       accAngleX=(-atan2f(AX/9.8,-AY/9.8)/2/3.141592654*360)+1.
      +                          9;
  2205  002224  0ECD               	movlw	205
  2206  002226  0100               	movlb	0	; () banked
  2207  002228  6F81               	movwf	___fldiv@a& (0+255),b
  2208  00222A  0ECC               	movlw	204
  2209  00222C  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2210  00222E  0E1C               	movlw	28
  2211  002230  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2212  002232  0E41               	movlw	65
  2213  002234  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2214  002236  C172  F014         	movff	MPU6050_Read@AY,___flneg@f1
  2215  00223A  C173  F015         	movff	MPU6050_Read@AY+1,___flneg@f1+1
  2216  00223E  C174  F016         	movff	MPU6050_Read@AY+2,___flneg@f1+2
  2217  002242  C175  F017         	movff	MPU6050_Read@AY+3,___flneg@f1+3
  2218  002246  ECFF  F030         	call	___flneg	;wreg free
  2219  00224A  C014  F07D         	movff	?___flneg,___fldiv@b
  2220  00224E  C015  F07E         	movff	?___flneg+1,___fldiv@b+1
  2221  002252  C016  F07F         	movff	?___flneg+2,___fldiv@b+2
  2222  002256  C017  F080         	movff	?___flneg+3,___fldiv@b+3
  2223  00225A  EC20  F023         	call	___fldiv	;wreg free
  2224  00225E  C07D  F182         	movff	?___fldiv,_MPU6050_Read$2613
  2225  002262  C07E  F183         	movff	?___fldiv+1,_MPU6050_Read$2613+1
  2226  002266  C07F  F184         	movff	?___fldiv+2,_MPU6050_Read$2613+2
  2227  00226A  C080  F185         	movff	?___fldiv+3,_MPU6050_Read$2613+3
  2228  00226E                     
  2229                           ;Le_Jason_Project.c: 480:       accAngleX=(-atan2f(AX/9.8,-AY/9.8)/2/3.141592654*360)+1.
      +                          9;
  2230  00226E  0ECD               	movlw	205
  2231  002270  0100               	movlb	0	; () banked
  2232  002272  6F81               	movwf	___fldiv@a& (0+255),b
  2233  002274  0ECC               	movlw	204
  2234  002276  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2235  002278  0E1C               	movlw	28
  2236  00227A  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2237  00227C  0E41               	movlw	65
  2238  00227E  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2239  002280  C16E  F07D         	movff	MPU6050_Read@AX,___fldiv@b
  2240  002284  C16F  F07E         	movff	MPU6050_Read@AX+1,___fldiv@b+1
  2241  002288  C170  F07F         	movff	MPU6050_Read@AX+2,___fldiv@b+2
  2242  00228C  C171  F080         	movff	MPU6050_Read@AX+3,___fldiv@b+3
  2243  002290  EC20  F023         	call	___fldiv	;wreg free
  2244  002294  C07D  F186         	movff	?___fldiv,_MPU6050_Read$2614
  2245  002298  C07E  F187         	movff	?___fldiv+1,_MPU6050_Read$2614+1
  2246  00229C  C07F  F188         	movff	?___fldiv+2,_MPU6050_Read$2614+2
  2247  0022A0  C080  F189         	movff	?___fldiv+3,_MPU6050_Read$2614+3
  2248  0022A4                     
  2249                           ;Le_Jason_Project.c: 480:       accAngleX=(-atan2f(AX/9.8,-AY/9.8)/2/3.141592654*360)+1.
      +                          9;
  2250  0022A4  C182  F0DC         	movff	_MPU6050_Read$2613,atan2f@x
  2251  0022A8  C183  F0DD         	movff	_MPU6050_Read$2613+1,atan2f@x+1
  2252  0022AC  C184  F0DE         	movff	_MPU6050_Read$2613+2,atan2f@x+2
  2253  0022B0  C185  F0DF         	movff	_MPU6050_Read$2613+3,atan2f@x+3
  2254  0022B4  C186  F0D8         	movff	_MPU6050_Read$2614,atan2f@y
  2255  0022B8  C187  F0D9         	movff	_MPU6050_Read$2614+1,atan2f@y+1
  2256  0022BC  C188  F0DA         	movff	_MPU6050_Read$2614+2,atan2f@y+2
  2257  0022C0  C189  F0DB         	movff	_MPU6050_Read$2614+3,atan2f@y+3
  2258  0022C4  ECA4  F018         	call	_atan2f	;wreg free
  2259  0022C8  C0D8  F18A         	movff	?_atan2f,_MPU6050_Read$2615
  2260  0022CC  C0D9  F18B         	movff	?_atan2f+1,_MPU6050_Read$2615+1
  2261  0022D0  C0DA  F18C         	movff	?_atan2f+2,_MPU6050_Read$2615+2
  2262  0022D4  C0DB  F18D         	movff	?_atan2f+3,_MPU6050_Read$2615+3
  2263  0022D8                     
  2264                           ;Le_Jason_Project.c: 480:       accAngleX=(-atan2f(AX/9.8,-AY/9.8)/2/3.141592654*360)+1.
      +                          9;
  2265  0022D8  0E00               	movlw	0
  2266  0022DA  0100               	movlb	0	; () banked
  2267  0022DC  6F81               	movwf	___fldiv@a& (0+255),b
  2268  0022DE  0E00               	movlw	0
  2269  0022E0  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2270  0022E2  0E00               	movlw	0
  2271  0022E4  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2272  0022E6  0E40               	movlw	64
  2273  0022E8  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2274  0022EA  C18A  F014         	movff	_MPU6050_Read$2615,___flneg@f1
  2275  0022EE  C18B  F015         	movff	_MPU6050_Read$2615+1,___flneg@f1+1
  2276  0022F2  C18C  F016         	movff	_MPU6050_Read$2615+2,___flneg@f1+2
  2277  0022F6  C18D  F017         	movff	_MPU6050_Read$2615+3,___flneg@f1+3
  2278  0022FA  ECFF  F030         	call	___flneg	;wreg free
  2279  0022FE  C014  F07D         	movff	?___flneg,___fldiv@b
  2280  002302  C015  F07E         	movff	?___flneg+1,___fldiv@b+1
  2281  002306  C016  F07F         	movff	?___flneg+2,___fldiv@b+2
  2282  00230A  C017  F080         	movff	?___flneg+3,___fldiv@b+3
  2283  00230E  EC20  F023         	call	___fldiv	;wreg free
  2284  002312  C07D  F18E         	movff	?___fldiv,_MPU6050_Read$2616
  2285  002316  C07E  F18F         	movff	?___fldiv+1,_MPU6050_Read$2616+1
  2286  00231A  C07F  F190         	movff	?___fldiv+2,_MPU6050_Read$2616+2
  2287  00231E  C080  F191         	movff	?___fldiv+3,_MPU6050_Read$2616+3
  2288  002322                     
  2289                           ;Le_Jason_Project.c: 480:       accAngleX=(-atan2f(AX/9.8,-AY/9.8)/2/3.141592654*360)+1.
      +                          9;
  2290  002322  0E00               	movlw	0
  2291  002324  6E26               	movwf	___flmul@a^0,c
  2292  002326  0E00               	movlw	0
  2293  002328  6E27               	movwf	(___flmul@a+1)^0,c
  2294  00232A  0EB4               	movlw	180
  2295  00232C  6E28               	movwf	(___flmul@a+2)^0,c
  2296  00232E  0E43               	movlw	67
  2297  002330  6E29               	movwf	(___flmul@a+3)^0,c
  2298  002332  0EDB               	movlw	219
  2299  002334  0100               	movlb	0	; () banked
  2300  002336  6F81               	movwf	___fldiv@a& (0+255),b
  2301  002338  0E0F               	movlw	15
  2302  00233A  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2303  00233C  0E49               	movlw	73
  2304  00233E  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2305  002340  0E40               	movlw	64
  2306  002342  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2307  002344  C18E  F07D         	movff	_MPU6050_Read$2616,___fldiv@b
  2308  002348  C18F  F07E         	movff	_MPU6050_Read$2616+1,___fldiv@b+1
  2309  00234C  C190  F07F         	movff	_MPU6050_Read$2616+2,___fldiv@b+2
  2310  002350  C191  F080         	movff	_MPU6050_Read$2616+3,___fldiv@b+3
  2311  002354  EC20  F023         	call	___fldiv	;wreg free
  2312  002358  C07D  F022         	movff	?___fldiv,___flmul@b
  2313  00235C  C07E  F023         	movff	?___fldiv+1,___flmul@b+1
  2314  002360  C07F  F024         	movff	?___fldiv+2,___flmul@b+2
  2315  002364  C080  F025         	movff	?___fldiv+3,___flmul@b+3
  2316  002368  EC0A  F021         	call	___flmul	;wreg free
  2317  00236C  C022  F02E         	movff	?___flmul,___fladd@b
  2318  002370  C023  F02F         	movff	?___flmul+1,___fladd@b+1
  2319  002374  C024  F030         	movff	?___flmul+2,___fladd@b+2
  2320  002378  C025  F031         	movff	?___flmul+3,___fladd@b+3
  2321  00237C  0E33               	movlw	51
  2322  00237E  6E32               	movwf	___fladd@a^0,c
  2323  002380  0E33               	movlw	51
  2324  002382  6E33               	movwf	(___fladd@a+1)^0,c
  2325  002384  0EF3               	movlw	243
  2326  002386  6E34               	movwf	(___fladd@a+2)^0,c
  2327  002388  0E3F               	movlw	63
  2328  00238A  6E35               	movwf	(___fladd@a+3)^0,c
  2329  00238C  EC57  F01C         	call	___fladd	;wreg free
  2330  002390  C02E  F196         	movff	?___fladd,MPU6050_Read@accAngleX
  2331  002394  C02F  F197         	movff	?___fladd+1,MPU6050_Read@accAngleX+1
  2332  002398  C030  F198         	movff	?___fladd+2,MPU6050_Read@accAngleX+2
  2333  00239C  C031  F199         	movff	?___fladd+3,MPU6050_Read@accAngleX+3
  2334  0023A0                     
  2335                           ;Le_Jason_Project.c: 482:      accAngleY = (-atan2f(-AZ/9.8,-AY/9.8)/2/3.141592654*360)-
      +                          1.9;
  2336  0023A0  0ECD               	movlw	205
  2337  0023A2  0100               	movlb	0	; () banked
  2338  0023A4  6F81               	movwf	___fldiv@a& (0+255),b
  2339  0023A6  0ECC               	movlw	204
  2340  0023A8  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2341  0023AA  0E1C               	movlw	28
  2342  0023AC  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2343  0023AE  0E41               	movlw	65
  2344  0023B0  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2345  0023B2  C172  F014         	movff	MPU6050_Read@AY,___flneg@f1
  2346  0023B6  C173  F015         	movff	MPU6050_Read@AY+1,___flneg@f1+1
  2347  0023BA  C174  F016         	movff	MPU6050_Read@AY+2,___flneg@f1+2
  2348  0023BE  C175  F017         	movff	MPU6050_Read@AY+3,___flneg@f1+3
  2349  0023C2  ECFF  F030         	call	___flneg	;wreg free
  2350  0023C6  C014  F07D         	movff	?___flneg,___fldiv@b
  2351  0023CA  C015  F07E         	movff	?___flneg+1,___fldiv@b+1
  2352  0023CE  C016  F07F         	movff	?___flneg+2,___fldiv@b+2
  2353  0023D2  C017  F080         	movff	?___flneg+3,___fldiv@b+3
  2354  0023D6  EC20  F023         	call	___fldiv	;wreg free
  2355  0023DA  C07D  F182         	movff	?___fldiv,_MPU6050_Read$2613
  2356  0023DE  C07E  F183         	movff	?___fldiv+1,_MPU6050_Read$2613+1
  2357  0023E2  C07F  F184         	movff	?___fldiv+2,_MPU6050_Read$2613+2
  2358  0023E6  C080  F185         	movff	?___fldiv+3,_MPU6050_Read$2613+3
  2359  0023EA                     
  2360                           ;Le_Jason_Project.c: 482:      accAngleY = (-atan2f(-AZ/9.8,-AY/9.8)/2/3.141592654*360)-
      +                          1.9;
  2361  0023EA  0ECD               	movlw	205
  2362  0023EC  0100               	movlb	0	; () banked
  2363  0023EE  6F81               	movwf	___fldiv@a& (0+255),b
  2364  0023F0  0ECC               	movlw	204
  2365  0023F2  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2366  0023F4  0E1C               	movlw	28
  2367  0023F6  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2368  0023F8  0E41               	movlw	65
  2369  0023FA  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2370  0023FC  C14C  F014         	movff	MPU6050_Read@AZ,___flneg@f1
  2371  002400  C14D  F015         	movff	MPU6050_Read@AZ+1,___flneg@f1+1
  2372  002404  C14E  F016         	movff	MPU6050_Read@AZ+2,___flneg@f1+2
  2373  002408  C14F  F017         	movff	MPU6050_Read@AZ+3,___flneg@f1+3
  2374  00240C  ECFF  F030         	call	___flneg	;wreg free
  2375  002410  C014  F07D         	movff	?___flneg,___fldiv@b
  2376  002414  C015  F07E         	movff	?___flneg+1,___fldiv@b+1
  2377  002418  C016  F07F         	movff	?___flneg+2,___fldiv@b+2
  2378  00241C  C017  F080         	movff	?___flneg+3,___fldiv@b+3
  2379  002420  EC20  F023         	call	___fldiv	;wreg free
  2380  002424  C07D  F186         	movff	?___fldiv,_MPU6050_Read$2614
  2381  002428  C07E  F187         	movff	?___fldiv+1,_MPU6050_Read$2614+1
  2382  00242C  C07F  F188         	movff	?___fldiv+2,_MPU6050_Read$2614+2
  2383  002430  C080  F189         	movff	?___fldiv+3,_MPU6050_Read$2614+3
  2384  002434                     
  2385                           ;Le_Jason_Project.c: 482:      accAngleY = (-atan2f(-AZ/9.8,-AY/9.8)/2/3.141592654*360)-
      +                          1.9;
  2386  002434  C182  F0DC         	movff	_MPU6050_Read$2613,atan2f@x
  2387  002438  C183  F0DD         	movff	_MPU6050_Read$2613+1,atan2f@x+1
  2388  00243C  C184  F0DE         	movff	_MPU6050_Read$2613+2,atan2f@x+2
  2389  002440  C185  F0DF         	movff	_MPU6050_Read$2613+3,atan2f@x+3
  2390  002444  C186  F0D8         	movff	_MPU6050_Read$2614,atan2f@y
  2391  002448  C187  F0D9         	movff	_MPU6050_Read$2614+1,atan2f@y+1
  2392  00244C  C188  F0DA         	movff	_MPU6050_Read$2614+2,atan2f@y+2
  2393  002450  C189  F0DB         	movff	_MPU6050_Read$2614+3,atan2f@y+3
  2394  002454  ECA4  F018         	call	_atan2f	;wreg free
  2395  002458  C0D8  F18A         	movff	?_atan2f,_MPU6050_Read$2615
  2396  00245C  C0D9  F18B         	movff	?_atan2f+1,_MPU6050_Read$2615+1
  2397  002460  C0DA  F18C         	movff	?_atan2f+2,_MPU6050_Read$2615+2
  2398  002464  C0DB  F18D         	movff	?_atan2f+3,_MPU6050_Read$2615+3
  2399  002468                     
  2400                           ;Le_Jason_Project.c: 482:      accAngleY = (-atan2f(-AZ/9.8,-AY/9.8)/2/3.141592654*360)-
      +                          1.9;
  2401  002468  0E00               	movlw	0
  2402  00246A  0100               	movlb	0	; () banked
  2403  00246C  6F81               	movwf	___fldiv@a& (0+255),b
  2404  00246E  0E00               	movlw	0
  2405  002470  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2406  002472  0E00               	movlw	0
  2407  002474  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2408  002476  0E40               	movlw	64
  2409  002478  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2410  00247A  C18A  F014         	movff	_MPU6050_Read$2615,___flneg@f1
  2411  00247E  C18B  F015         	movff	_MPU6050_Read$2615+1,___flneg@f1+1
  2412  002482  C18C  F016         	movff	_MPU6050_Read$2615+2,___flneg@f1+2
  2413  002486  C18D  F017         	movff	_MPU6050_Read$2615+3,___flneg@f1+3
  2414  00248A  ECFF  F030         	call	___flneg	;wreg free
  2415  00248E  C014  F07D         	movff	?___flneg,___fldiv@b
  2416  002492  C015  F07E         	movff	?___flneg+1,___fldiv@b+1
  2417  002496  C016  F07F         	movff	?___flneg+2,___fldiv@b+2
  2418  00249A  C017  F080         	movff	?___flneg+3,___fldiv@b+3
  2419  00249E  EC20  F023         	call	___fldiv	;wreg free
  2420  0024A2  C07D  F18E         	movff	?___fldiv,_MPU6050_Read$2616
  2421  0024A6  C07E  F18F         	movff	?___fldiv+1,_MPU6050_Read$2616+1
  2422  0024AA  C07F  F190         	movff	?___fldiv+2,_MPU6050_Read$2616+2
  2423  0024AE  C080  F191         	movff	?___fldiv+3,_MPU6050_Read$2616+3
  2424  0024B2                     
  2425                           ;Le_Jason_Project.c: 482:      accAngleY = (-atan2f(-AZ/9.8,-AY/9.8)/2/3.141592654*360)-
      +                          1.9;
  2426  0024B2  0E00               	movlw	0
  2427  0024B4  6E26               	movwf	___flmul@a^0,c
  2428  0024B6  0E00               	movlw	0
  2429  0024B8  6E27               	movwf	(___flmul@a+1)^0,c
  2430  0024BA  0EB4               	movlw	180
  2431  0024BC  6E28               	movwf	(___flmul@a+2)^0,c
  2432  0024BE  0E43               	movlw	67
  2433  0024C0  6E29               	movwf	(___flmul@a+3)^0,c
  2434  0024C2  0EDB               	movlw	219
  2435  0024C4  0100               	movlb	0	; () banked
  2436  0024C6  6F81               	movwf	___fldiv@a& (0+255),b
  2437  0024C8  0E0F               	movlw	15
  2438  0024CA  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  2439  0024CC  0E49               	movlw	73
  2440  0024CE  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  2441  0024D0  0E40               	movlw	64
  2442  0024D2  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  2443  0024D4  C18E  F07D         	movff	_MPU6050_Read$2616,___fldiv@b
  2444  0024D8  C18F  F07E         	movff	_MPU6050_Read$2616+1,___fldiv@b+1
  2445  0024DC  C190  F07F         	movff	_MPU6050_Read$2616+2,___fldiv@b+2
  2446  0024E0  C191  F080         	movff	_MPU6050_Read$2616+3,___fldiv@b+3
  2447  0024E4  EC20  F023         	call	___fldiv	;wreg free
  2448  0024E8  C07D  F022         	movff	?___fldiv,___flmul@b
  2449  0024EC  C07E  F023         	movff	?___fldiv+1,___flmul@b+1
  2450  0024F0  C07F  F024         	movff	?___fldiv+2,___flmul@b+2
  2451  0024F4  C080  F025         	movff	?___fldiv+3,___flmul@b+3
  2452  0024F8  EC0A  F021         	call	___flmul	;wreg free
  2453  0024FC  C022  F02E         	movff	?___flmul,___fladd@b
  2454  002500  C023  F02F         	movff	?___flmul+1,___fladd@b+1
  2455  002504  C024  F030         	movff	?___flmul+2,___fladd@b+2
  2456  002508  C025  F031         	movff	?___flmul+3,___fladd@b+3
  2457  00250C  0E33               	movlw	51
  2458  00250E  6E32               	movwf	___fladd@a^0,c
  2459  002510  0E33               	movlw	51
  2460  002512  6E33               	movwf	(___fladd@a+1)^0,c
  2461  002514  0EF3               	movlw	243
  2462  002516  6E34               	movwf	(___fladd@a+2)^0,c
  2463  002518  0EBF               	movlw	191
  2464  00251A  6E35               	movwf	(___fladd@a+3)^0,c
  2465  00251C  EC57  F01C         	call	___fladd	;wreg free
  2466  002520  C02E  F19A         	movff	?___fladd,MPU6050_Read@accAngleY
  2467  002524  C02F  F19B         	movff	?___fladd+1,MPU6050_Read@accAngleY+1
  2468  002528  C030  F19C         	movff	?___fladd+2,MPU6050_Read@accAngleY+2
  2469  00252C  C031  F19D         	movff	?___fladd+3,MPU6050_Read@accAngleY+3
  2470  002530                     
  2471                           ;Le_Jason_Project.c: 483:     GyroAngleX = GX*elapsedTime;
  2472  002530  C150  F022         	movff	MPU6050_Read@GX,___flmul@b
  2473  002534  C151  F023         	movff	MPU6050_Read@GX+1,___flmul@b+1
  2474  002538  C152  F024         	movff	MPU6050_Read@GX+2,___flmul@b+2
  2475  00253C  C153  F025         	movff	MPU6050_Read@GX+3,___flmul@b+3
  2476  002540  C17E  F026         	movff	MPU6050_Read@elapsedTime,___flmul@a
  2477  002544  C17F  F027         	movff	MPU6050_Read@elapsedTime+1,___flmul@a+1
  2478  002548  C180  F028         	movff	MPU6050_Read@elapsedTime+2,___flmul@a+2
  2479  00254C  C181  F029         	movff	MPU6050_Read@elapsedTime+3,___flmul@a+3
  2480  002550  EC0A  F021         	call	___flmul	;wreg free
  2481  002554  C022  F1C4         	movff	?___flmul,_GyroAngleX
  2482  002558  C023  F1C5         	movff	?___flmul+1,_GyroAngleX+1
  2483  00255C  C024  F1C6         	movff	?___flmul+2,_GyroAngleX+2
  2484  002560  C025  F1C7         	movff	?___flmul+3,_GyroAngleX+3
  2485  002564                     
  2486                           ;Le_Jason_Project.c: 484:     GyroAngleY = -GZ*elapsedTime;
  2487  002564  C154  F014         	movff	MPU6050_Read@GZ,___flneg@f1
  2488  002568  C155  F015         	movff	MPU6050_Read@GZ+1,___flneg@f1+1
  2489  00256C  C156  F016         	movff	MPU6050_Read@GZ+2,___flneg@f1+2
  2490  002570  C157  F017         	movff	MPU6050_Read@GZ+3,___flneg@f1+3
  2491  002574  ECFF  F030         	call	___flneg	;wreg free
  2492  002578  C014  F022         	movff	?___flneg,___flmul@b
  2493  00257C  C015  F023         	movff	?___flneg+1,___flmul@b+1
  2494  002580  C016  F024         	movff	?___flneg+2,___flmul@b+2
  2495  002584  C017  F025         	movff	?___flneg+3,___flmul@b+3
  2496  002588  C17E  F026         	movff	MPU6050_Read@elapsedTime,___flmul@a
  2497  00258C  C17F  F027         	movff	MPU6050_Read@elapsedTime+1,___flmul@a+1
  2498  002590  C180  F028         	movff	MPU6050_Read@elapsedTime+2,___flmul@a+2
  2499  002594  C181  F029         	movff	MPU6050_Read@elapsedTime+3,___flmul@a+3
  2500  002598  EC0A  F021         	call	___flmul	;wreg free
  2501  00259C  C022  F1C0         	movff	?___flmul,_GyroAngleY
  2502  0025A0  C023  F1C1         	movff	?___flmul+1,_GyroAngleY+1
  2503  0025A4  C024  F1C2         	movff	?___flmul+2,_GyroAngleY+2
  2504  0025A8  C025  F1C3         	movff	?___flmul+3,_GyroAngleY+3
  2505  0025AC                     
  2506                           ;Le_Jason_Project.c: 486:     roll = 0.96*(GyroAngleX + accAngleX) + 0.04*accAngleX;
  2507  0025AC  0E8F               	movlw	143
  2508  0025AE  6E26               	movwf	___flmul@a^0,c
  2509  0025B0  0EC2               	movlw	194
  2510  0025B2  6E27               	movwf	(___flmul@a+1)^0,c
  2511  0025B4  0E75               	movlw	117
  2512  0025B6  6E28               	movwf	(___flmul@a+2)^0,c
  2513  0025B8  0E3F               	movlw	63
  2514  0025BA  6E29               	movwf	(___flmul@a+3)^0,c
  2515  0025BC  C196  F032         	movff	MPU6050_Read@accAngleX,___fladd@a
  2516  0025C0  C197  F033         	movff	MPU6050_Read@accAngleX+1,___fladd@a+1
  2517  0025C4  C198  F034         	movff	MPU6050_Read@accAngleX+2,___fladd@a+2
  2518  0025C8  C199  F035         	movff	MPU6050_Read@accAngleX+3,___fladd@a+3
  2519  0025CC  C1C4  F02E         	movff	_GyroAngleX,___fladd@b
  2520  0025D0  C1C5  F02F         	movff	_GyroAngleX+1,___fladd@b+1
  2521  0025D4  C1C6  F030         	movff	_GyroAngleX+2,___fladd@b+2
  2522  0025D8  C1C7  F031         	movff	_GyroAngleX+3,___fladd@b+3
  2523  0025DC  EC57  F01C         	call	___fladd	;wreg free
  2524  0025E0  C02E  F022         	movff	?___fladd,___flmul@b
  2525  0025E4  C02F  F023         	movff	?___fladd+1,___flmul@b+1
  2526  0025E8  C030  F024         	movff	?___fladd+2,___flmul@b+2
  2527  0025EC  C031  F025         	movff	?___fladd+3,___flmul@b+3
  2528  0025F0  EC0A  F021         	call	___flmul	;wreg free
  2529  0025F4  C022  F192         	movff	?___flmul,_MPU6050_Read$2617
  2530  0025F8  C023  F193         	movff	?___flmul+1,_MPU6050_Read$2617+1
  2531  0025FC  C024  F194         	movff	?___flmul+2,_MPU6050_Read$2617+2
  2532  002600  C025  F195         	movff	?___flmul+3,_MPU6050_Read$2617+3
  2533  002604                     
  2534                           ;Le_Jason_Project.c: 486:     roll = 0.96*(GyroAngleX + accAngleX) + 0.04*accAngleX;
  2535  002604  C192  F02E         	movff	_MPU6050_Read$2617,___fladd@b
  2536  002608  C193  F02F         	movff	_MPU6050_Read$2617+1,___fladd@b+1
  2537  00260C  C194  F030         	movff	_MPU6050_Read$2617+2,___fladd@b+2
  2538  002610  C195  F031         	movff	_MPU6050_Read$2617+3,___fladd@b+3
  2539  002614  0E0A               	movlw	10
  2540  002616  6E26               	movwf	___flmul@a^0,c
  2541  002618  0ED7               	movlw	215
  2542  00261A  6E27               	movwf	(___flmul@a+1)^0,c
  2543  00261C  0E23               	movlw	35
  2544  00261E  6E28               	movwf	(___flmul@a+2)^0,c
  2545  002620  0E3D               	movlw	61
  2546  002622  6E29               	movwf	(___flmul@a+3)^0,c
  2547  002624  C196  F022         	movff	MPU6050_Read@accAngleX,___flmul@b
  2548  002628  C197  F023         	movff	MPU6050_Read@accAngleX+1,___flmul@b+1
  2549  00262C  C198  F024         	movff	MPU6050_Read@accAngleX+2,___flmul@b+2
  2550  002630  C199  F025         	movff	MPU6050_Read@accAngleX+3,___flmul@b+3
  2551  002634  EC0A  F021         	call	___flmul	;wreg free
  2552  002638  C022  F032         	movff	?___flmul,___fladd@a
  2553  00263C  C023  F033         	movff	?___flmul+1,___fladd@a+1
  2554  002640  C024  F034         	movff	?___flmul+2,___fladd@a+2
  2555  002644  C025  F035         	movff	?___flmul+3,___fladd@a+3
  2556  002648  EC57  F01C         	call	___fladd	;wreg free
  2557  00264C  C02E  F176         	movff	?___fladd,MPU6050_Read@roll
  2558  002650  C02F  F177         	movff	?___fladd+1,MPU6050_Read@roll+1
  2559  002654  C030  F178         	movff	?___fladd+2,MPU6050_Read@roll+2
  2560  002658  C031  F179         	movff	?___fladd+3,MPU6050_Read@roll+3
  2561  00265C                     
  2562                           ;Le_Jason_Project.c: 487:     pitch = 0.96*(GyroAngleY+ accAngleY) + 0.04*accAngleY;
  2563  00265C  0E8F               	movlw	143
  2564  00265E  6E26               	movwf	___flmul@a^0,c
  2565  002660  0EC2               	movlw	194
  2566  002662  6E27               	movwf	(___flmul@a+1)^0,c
  2567  002664  0E75               	movlw	117
  2568  002666  6E28               	movwf	(___flmul@a+2)^0,c
  2569  002668  0E3F               	movlw	63
  2570  00266A  6E29               	movwf	(___flmul@a+3)^0,c
  2571  00266C  C19A  F032         	movff	MPU6050_Read@accAngleY,___fladd@a
  2572  002670  C19B  F033         	movff	MPU6050_Read@accAngleY+1,___fladd@a+1
  2573  002674  C19C  F034         	movff	MPU6050_Read@accAngleY+2,___fladd@a+2
  2574  002678  C19D  F035         	movff	MPU6050_Read@accAngleY+3,___fladd@a+3
  2575  00267C  C1C0  F02E         	movff	_GyroAngleY,___fladd@b
  2576  002680  C1C1  F02F         	movff	_GyroAngleY+1,___fladd@b+1
  2577  002684  C1C2  F030         	movff	_GyroAngleY+2,___fladd@b+2
  2578  002688  C1C3  F031         	movff	_GyroAngleY+3,___fladd@b+3
  2579  00268C  EC57  F01C         	call	___fladd	;wreg free
  2580  002690  C02E  F022         	movff	?___fladd,___flmul@b
  2581  002694  C02F  F023         	movff	?___fladd+1,___flmul@b+1
  2582  002698  C030  F024         	movff	?___fladd+2,___flmul@b+2
  2583  00269C  C031  F025         	movff	?___fladd+3,___flmul@b+3
  2584  0026A0  EC0A  F021         	call	___flmul	;wreg free
  2585  0026A4  C022  F192         	movff	?___flmul,_MPU6050_Read$2617
  2586  0026A8  C023  F193         	movff	?___flmul+1,_MPU6050_Read$2617+1
  2587  0026AC  C024  F194         	movff	?___flmul+2,_MPU6050_Read$2617+2
  2588  0026B0  C025  F195         	movff	?___flmul+3,_MPU6050_Read$2617+3
  2589  0026B4                     
  2590                           ;Le_Jason_Project.c: 487:     pitch = 0.96*(GyroAngleY+ accAngleY) + 0.04*accAngleY;
  2591  0026B4  C192  F02E         	movff	_MPU6050_Read$2617,___fladd@b
  2592  0026B8  C193  F02F         	movff	_MPU6050_Read$2617+1,___fladd@b+1
  2593  0026BC  C194  F030         	movff	_MPU6050_Read$2617+2,___fladd@b+2
  2594  0026C0  C195  F031         	movff	_MPU6050_Read$2617+3,___fladd@b+3
  2595  0026C4  0E0A               	movlw	10
  2596  0026C6  6E26               	movwf	___flmul@a^0,c
  2597  0026C8  0ED7               	movlw	215
  2598  0026CA  6E27               	movwf	(___flmul@a+1)^0,c
  2599  0026CC  0E23               	movlw	35
  2600  0026CE  6E28               	movwf	(___flmul@a+2)^0,c
  2601  0026D0  0E3D               	movlw	61
  2602  0026D2  6E29               	movwf	(___flmul@a+3)^0,c
  2603  0026D4  C19A  F022         	movff	MPU6050_Read@accAngleY,___flmul@b
  2604  0026D8  C19B  F023         	movff	MPU6050_Read@accAngleY+1,___flmul@b+1
  2605  0026DC  C19C  F024         	movff	MPU6050_Read@accAngleY+2,___flmul@b+2
  2606  0026E0  C19D  F025         	movff	MPU6050_Read@accAngleY+3,___flmul@b+3
  2607  0026E4  EC0A  F021         	call	___flmul	;wreg free
  2608  0026E8  C022  F032         	movff	?___flmul,___fladd@a
  2609  0026EC  C023  F033         	movff	?___flmul+1,___fladd@a+1
  2610  0026F0  C024  F034         	movff	?___flmul+2,___fladd@a+2
  2611  0026F4  C025  F035         	movff	?___flmul+3,___fladd@a+3
  2612  0026F8  EC57  F01C         	call	___fladd	;wreg free
  2613  0026FC  C02E  F17A         	movff	?___fladd,MPU6050_Read@pitch
  2614  002700  C02F  F17B         	movff	?___fladd+1,MPU6050_Read@pitch+1
  2615  002704  C030  F17C         	movff	?___fladd+2,MPU6050_Read@pitch+2
  2616  002708  C031  F17D         	movff	?___fladd+3,MPU6050_Read@pitch+3
  2617  00270C                     
  2618                           ;Le_Jason_Project.c: 489:     sprintf(buffer," roll = %.2f \t",roll);
  2619  00270C  0E24               	movlw	low MPU6050_Read@buffer
  2620  00270E  0101               	movlb	1	; () banked
  2621  002710  6F0E               	movwf	sprintf@s& (0+255),b
  2622  002712  0E01               	movlw	high MPU6050_Read@buffer
  2623  002714  6F0F               	movwf	(sprintf@s+1)& (0+255),b
  2624  002716  0EB6               	movlw	low STR_1
  2625  002718  6F10               	movwf	sprintf@fmt& (0+255),b
  2626  00271A  0E10               	movlw	high STR_1
  2627  00271C  6F11               	movwf	(sprintf@fmt+1)& (0+255),b
  2628  00271E  C176  F112         	movff	MPU6050_Read@roll,?_sprintf+4
  2629  002722  C177  F113         	movff	MPU6050_Read@roll+1,?_sprintf+5
  2630  002726  C178  F114         	movff	MPU6050_Read@roll+2,?_sprintf+6
  2631  00272A  C179  F115         	movff	MPU6050_Read@roll+3,?_sprintf+7
  2632  00272E  ECEB  F02F         	call	_sprintf	;wreg free
  2633  002732                     
  2634                           ;Le_Jason_Project.c: 490:     UART_Write_String(buffer);
  2635  002732  0E24               	movlw	low MPU6050_Read@buffer
  2636  002734  6E15               	movwf	UART_Write_String@buf^0,c
  2637  002736  0E01               	movlw	high MPU6050_Read@buffer
  2638  002738  6E16               	movwf	(UART_Write_String@buf+1)^0,c
  2639  00273A  ECA7  F030         	call	_UART_Write_String	;wreg free
  2640  00273E                     
  2641                           ;Le_Jason_Project.c: 491:     sprintf(buffer," pitch = %.2f \t",pitch);
  2642  00273E  0E24               	movlw	low MPU6050_Read@buffer
  2643  002740  0101               	movlb	1	; () banked
  2644  002742  6F0E               	movwf	sprintf@s& (0+255),b
  2645  002744  0E01               	movlw	high MPU6050_Read@buffer
  2646  002746  6F0F               	movwf	(sprintf@s+1)& (0+255),b
  2647  002748  0EA6               	movlw	low STR_2
  2648  00274A  6F10               	movwf	sprintf@fmt& (0+255),b
  2649  00274C  0E10               	movlw	high STR_2
  2650  00274E  6F11               	movwf	(sprintf@fmt+1)& (0+255),b
  2651  002750  C17A  F112         	movff	MPU6050_Read@pitch,?_sprintf+4
  2652  002754  C17B  F113         	movff	MPU6050_Read@pitch+1,?_sprintf+5
  2653  002758  C17C  F114         	movff	MPU6050_Read@pitch+2,?_sprintf+6
  2654  00275C  C17D  F115         	movff	MPU6050_Read@pitch+3,?_sprintf+7
  2655  002760  ECEB  F02F         	call	_sprintf	;wreg free
  2656  002764                     
  2657                           ;Le_Jason_Project.c: 492:     UART_Write_String(buffer);
  2658  002764  0E24               	movlw	low MPU6050_Read@buffer
  2659  002766  6E15               	movwf	UART_Write_String@buf^0,c
  2660  002768  0E01               	movlw	high MPU6050_Read@buffer
  2661  00276A  6E16               	movwf	(UART_Write_String@buf+1)^0,c
  2662  00276C  ECA7  F030         	call	_UART_Write_String	;wreg free
  2663  002770                     
  2664                           ;Le_Jason_Project.c: 493:     sprintf(buffer," elapsedTime = %.2f \t",AX);
  2665  002770  0E24               	movlw	low MPU6050_Read@buffer
  2666  002772  0101               	movlb	1	; () banked
  2667  002774  6F0E               	movwf	sprintf@s& (0+255),b
  2668  002776  0E01               	movlw	high MPU6050_Read@buffer
  2669  002778  6F0F               	movwf	(sprintf@s+1)& (0+255),b
  2670  00277A  0E3D               	movlw	low STR_3
  2671  00277C  6F10               	movwf	sprintf@fmt& (0+255),b
  2672  00277E  0E10               	movlw	high STR_3
  2673  002780  6F11               	movwf	(sprintf@fmt+1)& (0+255),b
  2674  002782  C16E  F112         	movff	MPU6050_Read@AX,?_sprintf+4
  2675  002786  C16F  F113         	movff	MPU6050_Read@AX+1,?_sprintf+5
  2676  00278A  C170  F114         	movff	MPU6050_Read@AX+2,?_sprintf+6
  2677  00278E  C171  F115         	movff	MPU6050_Read@AX+3,?_sprintf+7
  2678  002792  ECEB  F02F         	call	_sprintf	;wreg free
  2679  002796                     
  2680                           ;Le_Jason_Project.c: 494:     UART_Write_String(buffer);
  2681  002796  0E24               	movlw	low MPU6050_Read@buffer
  2682  002798  6E15               	movwf	UART_Write_String@buf^0,c
  2683  00279A  0E01               	movlw	high MPU6050_Read@buffer
  2684  00279C  6E16               	movwf	(UART_Write_String@buf+1)^0,c
  2685  00279E  ECA7  F030         	call	_UART_Write_String	;wreg free
  2686  0027A2                     
  2687                           ;Le_Jason_Project.c: 495:     sprintf(buffer," GyroAngleX = %.2f \t",GyroAngleX);
  2688  0027A2  0E24               	movlw	low MPU6050_Read@buffer
  2689  0027A4  0101               	movlb	1	; () banked
  2690  0027A6  6F0E               	movwf	sprintf@s& (0+255),b
  2691  0027A8  0E01               	movlw	high MPU6050_Read@buffer
  2692  0027AA  6F0F               	movwf	(sprintf@s+1)& (0+255),b
  2693  0027AC  0E53               	movlw	low STR_4
  2694  0027AE  6F10               	movwf	sprintf@fmt& (0+255),b
  2695  0027B0  0E10               	movlw	high STR_4
  2696  0027B2  6F11               	movwf	(sprintf@fmt+1)& (0+255),b
  2697  0027B4  C1C4  F112         	movff	_GyroAngleX,?_sprintf+4
  2698  0027B8  C1C5  F113         	movff	_GyroAngleX+1,?_sprintf+5
  2699  0027BC  C1C6  F114         	movff	_GyroAngleX+2,?_sprintf+6
  2700  0027C0  C1C7  F115         	movff	_GyroAngleX+3,?_sprintf+7
  2701  0027C4  ECEB  F02F         	call	_sprintf	;wreg free
  2702  0027C8                     
  2703                           ;Le_Jason_Project.c: 496:     UART_Write_String(buffer);
  2704  0027C8  0E24               	movlw	low MPU6050_Read@buffer
  2705  0027CA  6E15               	movwf	UART_Write_String@buf^0,c
  2706  0027CC  0E01               	movlw	high MPU6050_Read@buffer
  2707  0027CE  6E16               	movwf	(UART_Write_String@buf+1)^0,c
  2708  0027D0  ECA7  F030         	call	_UART_Write_String	;wreg free
  2709  0027D4                     
  2710                           ;Le_Jason_Project.c: 497:     sprintf(buffer," GyroAngleY = %.2f \t",GyroAngleY);
  2711  0027D4  0E24               	movlw	low MPU6050_Read@buffer
  2712  0027D6  0101               	movlb	1	; () banked
  2713  0027D8  6F0E               	movwf	sprintf@s& (0+255),b
  2714  0027DA  0E01               	movlw	high MPU6050_Read@buffer
  2715  0027DC  6F0F               	movwf	(sprintf@s+1)& (0+255),b
  2716  0027DE  0E68               	movlw	low STR_5
  2717  0027E0  6F10               	movwf	sprintf@fmt& (0+255),b
  2718  0027E2  0E10               	movlw	high STR_5
  2719  0027E4  6F11               	movwf	(sprintf@fmt+1)& (0+255),b
  2720  0027E6  C1C0  F112         	movff	_GyroAngleY,?_sprintf+4
  2721  0027EA  C1C1  F113         	movff	_GyroAngleY+1,?_sprintf+5
  2722  0027EE  C1C2  F114         	movff	_GyroAngleY+2,?_sprintf+6
  2723  0027F2  C1C3  F115         	movff	_GyroAngleY+3,?_sprintf+7
  2724  0027F6  ECEB  F02F         	call	_sprintf	;wreg free
  2725  0027FA                     
  2726                           ;Le_Jason_Project.c: 498:     UART_Write_String(buffer);
  2727  0027FA  0E24               	movlw	low MPU6050_Read@buffer
  2728  0027FC  6E15               	movwf	UART_Write_String@buf^0,c
  2729  0027FE  0E01               	movlw	high MPU6050_Read@buffer
  2730  002800  6E16               	movwf	(UART_Write_String@buf+1)^0,c
  2731  002802  ECA7  F030         	call	_UART_Write_String	;wreg free
  2732  002806                     
  2733                           ;Le_Jason_Project.c: 499:     sprintf(buffer," accAngleX = %.2f \t",accAngleX);
  2734  002806  0E24               	movlw	low MPU6050_Read@buffer
  2735  002808  0101               	movlb	1	; () banked
  2736  00280A  6F0E               	movwf	sprintf@s& (0+255),b
  2737  00280C  0E01               	movlw	high MPU6050_Read@buffer
  2738  00280E  6F0F               	movwf	(sprintf@s+1)& (0+255),b
  2739  002810  0E92               	movlw	low STR_6
  2740  002812  6F10               	movwf	sprintf@fmt& (0+255),b
  2741  002814  0E10               	movlw	high STR_6
  2742  002816  6F11               	movwf	(sprintf@fmt+1)& (0+255),b
  2743  002818  C196  F112         	movff	MPU6050_Read@accAngleX,?_sprintf+4
  2744  00281C  C197  F113         	movff	MPU6050_Read@accAngleX+1,?_sprintf+5
  2745  002820  C198  F114         	movff	MPU6050_Read@accAngleX+2,?_sprintf+6
  2746  002824  C199  F115         	movff	MPU6050_Read@accAngleX+3,?_sprintf+7
  2747  002828  ECEB  F02F         	call	_sprintf	;wreg free
  2748  00282C                     
  2749                           ;Le_Jason_Project.c: 500:     UART_Write_String(buffer);
  2750  00282C  0E24               	movlw	low MPU6050_Read@buffer
  2751  00282E  6E15               	movwf	UART_Write_String@buf^0,c
  2752  002830  0E01               	movlw	high MPU6050_Read@buffer
  2753  002832  6E16               	movwf	(UART_Write_String@buf+1)^0,c
  2754  002834  ECA7  F030         	call	_UART_Write_String	;wreg free
  2755  002838                     
  2756                           ;Le_Jason_Project.c: 501:     sprintf(buffer," accAngleY = %.2f \r\n",accAngleY);
  2757  002838  0E24               	movlw	low MPU6050_Read@buffer
  2758  00283A  0101               	movlb	1	; () banked
  2759  00283C  6F0E               	movwf	sprintf@s& (0+255),b
  2760  00283E  0E01               	movlw	high MPU6050_Read@buffer
  2761  002840  6F0F               	movwf	(sprintf@s+1)& (0+255),b
  2762  002842  0E7D               	movlw	low STR_7
  2763  002844  6F10               	movwf	sprintf@fmt& (0+255),b
  2764  002846  0E10               	movlw	high STR_7
  2765  002848  6F11               	movwf	(sprintf@fmt+1)& (0+255),b
  2766  00284A  C19A  F112         	movff	MPU6050_Read@accAngleY,?_sprintf+4
  2767  00284E  C19B  F113         	movff	MPU6050_Read@accAngleY+1,?_sprintf+5
  2768  002852  C19C  F114         	movff	MPU6050_Read@accAngleY+2,?_sprintf+6
  2769  002856  C19D  F115         	movff	MPU6050_Read@accAngleY+3,?_sprintf+7
  2770  00285A  ECEB  F02F         	call	_sprintf	;wreg free
  2771  00285E                     
  2772                           ;Le_Jason_Project.c: 502:     UART_Write_String(buffer);
  2773  00285E  0E24               	movlw	low MPU6050_Read@buffer
  2774  002860  6E15               	movwf	UART_Write_String@buf^0,c
  2775  002862  0E01               	movlw	high MPU6050_Read@buffer
  2776  002864  6E16               	movwf	(UART_Write_String@buf+1)^0,c
  2777  002866  ECA7  F030         	call	_UART_Write_String	;wreg free
  2778  00286A                     
  2779                           ;Le_Jason_Project.c: 504:     Servo1(90.0-roll);
  2780  00286A  C176  F079         	movff	MPU6050_Read@roll,___flsub@a
  2781  00286E  C177  F07A         	movff	MPU6050_Read@roll+1,___flsub@a+1
  2782  002872  C178  F07B         	movff	MPU6050_Read@roll+2,___flsub@a+2
  2783  002876  C179  F07C         	movff	MPU6050_Read@roll+3,___flsub@a+3
  2784  00287A  0E00               	movlw	0
  2785  00287C  0100               	movlb	0	; () banked
  2786  00287E  6F75               	movwf	___flsub@b& (0+255),b
  2787  002880  0E00               	movlw	0
  2788  002882  6F76               	movwf	(___flsub@b+1)& (0+255),b
  2789  002884  0EB4               	movlw	180
  2790  002886  6F77               	movwf	(___flsub@b+2)& (0+255),b
  2791  002888  0E42               	movlw	66
  2792  00288A  6F78               	movwf	(___flsub@b+3)& (0+255),b
  2793  00288C  EC3E  F030         	call	___flsub	;wreg free
  2794  002890  C075  F07D         	movff	?___flsub,___fltol@f1
  2795  002894  C076  F07E         	movff	?___flsub+1,___fltol@f1+1
  2796  002898  C077  F07F         	movff	?___flsub+2,___fltol@f1+2
  2797  00289C  C078  F080         	movff	?___flsub+3,___fltol@f1+3
  2798  0028A0  ECB0  F029         	call	___fltol	;wreg free
  2799  0028A4  C07D  F085         	movff	?___fltol,Servo1@angle
  2800  0028A8  C07E  F086         	movff	?___fltol+1,Servo1@angle+1
  2801  0028AC  ECCF  F02D         	call	_Servo1	;wreg free
  2802  0028B0                     
  2803                           ;Le_Jason_Project.c: 505:     Servo2(90.0-pitch);
  2804  0028B0  C17A  F079         	movff	MPU6050_Read@pitch,___flsub@a
  2805  0028B4  C17B  F07A         	movff	MPU6050_Read@pitch+1,___flsub@a+1
  2806  0028B8  C17C  F07B         	movff	MPU6050_Read@pitch+2,___flsub@a+2
  2807  0028BC  C17D  F07C         	movff	MPU6050_Read@pitch+3,___flsub@a+3
  2808  0028C0  0E00               	movlw	0
  2809  0028C2  0100               	movlb	0	; () banked
  2810  0028C4  6F75               	movwf	___flsub@b& (0+255),b
  2811  0028C6  0E00               	movlw	0
  2812  0028C8  6F76               	movwf	(___flsub@b+1)& (0+255),b
  2813  0028CA  0EB4               	movlw	180
  2814  0028CC  6F77               	movwf	(___flsub@b+2)& (0+255),b
  2815  0028CE  0E42               	movlw	66
  2816  0028D0  6F78               	movwf	(___flsub@b+3)& (0+255),b
  2817  0028D2  EC3E  F030         	call	___flsub	;wreg free
  2818  0028D6  C075  F07D         	movff	?___flsub,___fltol@f1
  2819  0028DA  C076  F07E         	movff	?___flsub+1,___fltol@f1+1
  2820  0028DE  C077  F07F         	movff	?___flsub+2,___fltol@f1+2
  2821  0028E2  C078  F080         	movff	?___flsub+3,___fltol@f1+3
  2822  0028E6  ECB0  F029         	call	___fltol	;wreg free
  2823  0028EA  C07D  F085         	movff	?___fltol,Servo2@angle
  2824  0028EE  C07E  F086         	movff	?___fltol+1,Servo2@angle+1
  2825  0028F2  EC7C  F02D         	call	_Servo2	;wreg free
  2826  0028F6  0012               	return		;funcret
  2827  0028F8                     __end_of_MPU6050_Read:
  2828                           	callstack 0
  2829                           
  2830 ;; *************** function _sprintf *****************
  2831 ;; Defined at:
  2832 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  s               2   14[BANK1 ] PTR unsigned char 
  2835 ;;		 -> MPU6050_Read@buffer(40), 
  2836 ;;  fmt             2   16[BANK1 ] PTR const unsigned char 
  2837 ;;		 -> STR_7(21), STR_6(20), STR_5(21), STR_4(21), 
  2838 ;;		 -> STR_3(22), STR_2(16), STR_1(15), 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  f               6   24[BANK1 ] struct _IO_FILE
  2841 ;;  ap              2   22[BANK1 ] PTR void [1]
  2842 ;;		 -> ?_sprintf(2), 
  2843 ;;  ret             2    0        int 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  2   14[BANK1 ] int 
  2846 ;; Registers used:
  2847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2853 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;Total ram usage:       16 bytes
  2858 ;; Hardware stack levels used: 1
  2859 ;; Hardware stack levels required when called: 10
  2860 ;; This function calls:
  2861 ;;		_vfprintf
  2862 ;; This function is called by:
  2863 ;;		_MPU6050_Read
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text2
  2868  005FD6                     __ptext2:
  2869                           	callstack 0
  2870  005FD6                     _sprintf:
  2871                           	callstack 19
  2872  005FD6  0E12               	movlw	low (?_sprintf+4)
  2873  005FD8  0101               	movlb	1	; () banked
  2874  005FDA  6F16               	movwf	sprintf@ap& (0+255),b
  2875  005FDC  0E01               	movlw	high (?_sprintf+4)
  2876  005FDE  6F17               	movwf	(sprintf@ap+1)& (0+255),b
  2877  005FE0  C10E  F118         	movff	sprintf@s,sprintf@f
  2878  005FE4  C10F  F119         	movff	sprintf@s+1,sprintf@f+1
  2879  005FE8                     
  2880                           ; BSR set to: 1
  2881  005FE8  0E00               	movlw	0
  2882  005FEA  6F1B               	movwf	(sprintf@f+3)& (0+255),b
  2883  005FEC  0E00               	movlw	0
  2884  005FEE  6F1A               	movwf	(sprintf@f+2)& (0+255),b
  2885  005FF0                     
  2886                           ; BSR set to: 1
  2887  005FF0  0E00               	movlw	0
  2888  005FF2  6F1D               	movwf	(sprintf@f+5)& (0+255),b
  2889  005FF4  0E00               	movlw	0
  2890  005FF6  6F1C               	movwf	(sprintf@f+4)& (0+255),b
  2891  005FF8                     
  2892                           ; BSR set to: 1
  2893  005FF8  0E18               	movlw	low sprintf@f
  2894  005FFA  0100               	movlb	0	; () banked
  2895  005FFC  6FF8               	movwf	vfprintf@fp& (0+255),b
  2896  005FFE  0E01               	movlw	high sprintf@f
  2897  006000  6FF9               	movwf	(vfprintf@fp+1)& (0+255),b
  2898  006002  C110  F0FA         	movff	sprintf@fmt,vfprintf@fmt
  2899  006006  C111  F0FB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2900  00600A  0E16               	movlw	low sprintf@ap
  2901  00600C  6FFC               	movwf	vfprintf@ap& (0+255),b
  2902  00600E  0E01               	movlw	high sprintf@ap
  2903  006010  6FFD               	movwf	(vfprintf@ap+1)& (0+255),b
  2904  006012  ECED  F02E         	call	_vfprintf	;wreg free
  2905  006016  0101               	movlb	1	; () banked
  2906  006018  511A               	movf	(sprintf@f+2)& (0+255),w,b
  2907  00601A  250E               	addwf	sprintf@s& (0+255),w,b
  2908  00601C  6ED9               	movwf	fsr2l,c
  2909  00601E  511B               	movf	(sprintf@f+3)& (0+255),w,b
  2910  006020  210F               	addwfc	(sprintf@s+1)& (0+255),w,b
  2911  006022  6EDA               	movwf	fsr2h,c
  2912  006024  0E00               	movlw	0
  2913  006026  6EDF               	movwf	indf2,c
  2914  006028                     
  2915                           ; BSR set to: 1
  2916  006028  0012               	return		;funcret
  2917  00602A                     __end_of_sprintf:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function _vfprintf *****************
  2921 ;; Defined at:
  2922 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  fp              2  152[BANK0 ] PTR struct _IO_FILE
  2925 ;;		 -> sprintf@f(6), 
  2926 ;;  fmt             2  154[BANK0 ] PTR const unsigned char 
  2927 ;;		 -> STR_7(21), STR_6(20), STR_5(21), STR_4(21), 
  2928 ;;		 -> STR_3(22), STR_2(16), STR_1(15), 
  2929 ;;  ap              2  156[BANK0 ] PTR PTR void 
  2930 ;;		 -> sprintf@ap(2), 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  cfmt            2   12[BANK1 ] PTR unsigned char 
  2933 ;;		 -> STR_7(21), STR_6(20), STR_5(21), STR_4(21), 
  2934 ;;		 -> STR_3(22), STR_2(16), STR_1(15), 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2  152[BANK0 ] int 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2944 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;Total ram usage:        8 bytes
  2949 ;; Hardware stack levels used: 1
  2950 ;; Hardware stack levels required when called: 9
  2951 ;; This function calls:
  2952 ;;		_vfpfcnvrt
  2953 ;; This function is called by:
  2954 ;;		_sprintf
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text3
  2959  005DDA                     __ptext3:
  2960                           	callstack 0
  2961  005DDA                     _vfprintf:
  2962                           	callstack 19
  2963  005DDA                     
  2964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2965  005DDA  C0FA  F10C         	movff	vfprintf@fmt,vfprintf@cfmt
  2966  005DDE  C0FB  F10D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2967  005DE2                     
  2968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2969  005DE2  0E00               	movlw	0
  2970  005DE4  0101               	movlb	1	; () banked
  2971  005DE6  6FBF               	movwf	(_nout+1)& (0+255),b
  2972  005DE8  0E00               	movlw	0
  2973  005DEA  6FBE               	movwf	_nout& (0+255),b
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2976  005DEC  EF0F  F02F         	goto	l7716
  2977  005DF0                     l7714:
  2978                           
  2979                           ; BSR set to: 1
  2980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2981  005DF0  C0F8  F0EE         	movff	vfprintf@fp,vfpfcnvrt@fp
  2982  005DF4  C0F9  F0EF         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2983  005DF8  0E0C               	movlw	low vfprintf@cfmt
  2984  005DFA  0100               	movlb	0	; () banked
  2985  005DFC  6FF0               	movwf	vfpfcnvrt@fmt& (0+255),b
  2986  005DFE  0E01               	movlw	high vfprintf@cfmt
  2987  005E00  6FF1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2988  005E02  C0FC  F0F2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2989  005E06  C0FD  F0F3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2990  005E0A  ECB8  F01E         	call	_vfpfcnvrt	;wreg free
  2991  005E0E  0100               	movlb	0	; () banked
  2992  005E10  51EE               	movf	?_vfpfcnvrt& (0+255),w,b
  2993  005E12  0101               	movlb	1	; () banked
  2994  005E14  27BE               	addwf	_nout& (0+255),f,b
  2995  005E16  0100               	movlb	0	; () banked
  2996  005E18  51EF               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2997  005E1A  0101               	movlb	1	; () banked
  2998  005E1C  23BF               	addwfc	(_nout+1)& (0+255),f,b
  2999  005E1E                     l7716:
  3000                           
  3001                           ; BSR set to: 1
  3002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3003  005E1E  C10C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3004  005E22  C10D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3005  005E26                     	if	0	;tblptru may be non-zero
  3006  005E26                     	endif
  3007  005E26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3008  005E26  0E00               	movlw	low (__mediumconst shr (0+16))
  3009  005E28  6EF8               	movwf	tblptru,c
  3010  005E2A                     	endif
  3011  005E2A  0008               	tblrd		*
  3012  005E2C  50F5               	movf	tablat,w,c
  3013  005E2E  0900               	iorlw	0
  3014  005E30  A4D8               	btfss	status,2,c
  3015  005E32  EF1D  F02F         	goto	u8411
  3016  005E36  EF1F  F02F         	goto	u8410
  3017  005E3A                     u8411:
  3018  005E3A  EFF8  F02E         	goto	l7714
  3019  005E3E                     u8410:
  3020  005E3E                     
  3021                           ; BSR set to: 1
  3022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3023  005E3E  C1BE  F0F8         	movff	_nout,?_vfprintf
  3024  005E42  C1BF  F0F9         	movff	_nout+1,?_vfprintf+1
  3025  005E46                     
  3026                           ; BSR set to: 1
  3027  005E46  0012               	return		;funcret
  3028  005E48                     __end_of_vfprintf:
  3029                           	callstack 0
  3030                           
  3031 ;; *************** function _vfpfcnvrt *****************
  3032 ;; Defined at:
  3033 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  fp              2  142[BANK0 ] PTR struct _IO_FILE
  3036 ;;		 -> sprintf@f(6), 
  3037 ;;  fmt             2  144[BANK0 ] PTR PTR unsigned char 
  3038 ;;		 -> vfprintf@cfmt(2), 
  3039 ;;  ap              2  146[BANK0 ] PTR PTR void 
  3040 ;;		 -> sprintf@ap(2), 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  llu             8    0        unsigned long long 
  3043 ;;  ll              8    0        long long 
  3044 ;;  f               4    4[BANK1 ] long long 
  3045 ;;  ct              3    8[BANK1 ] unsigned char [3]
  3046 ;;  vp              3    0        PTR void 
  3047 ;;  cp              3    0        PTR unsigned char 
  3048 ;;  i               2    0        int 
  3049 ;;  done            2    0        int 
  3050 ;;  c               1   11[BANK1 ] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  2  142[BANK0 ] int 
  3053 ;; Registers used:
  3054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3060 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Totals:         0      10      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;Total ram usage:       22 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; Hardware stack levels required when called: 8
  3067 ;; This function calls:
  3068 ;;		_atoi
  3069 ;;		_efgtoa
  3070 ;;		_fputc
  3071 ;;		_isdigit
  3072 ;;		_isupper
  3073 ;;		_strncmp
  3074 ;;		_tolower
  3075 ;; This function is called by:
  3076 ;;		_vfprintf
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text4
  3081  003D70                     __ptext4:
  3082                           	callstack 0
  3083  003D70                     _vfpfcnvrt:
  3084                           	callstack 19
  3085  003D70                     
  3086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3087  003D70  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3088  003D74  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3089  003D78  CFDE FFF6          	movff	postinc2,tblptrl
  3090  003D7C  CFDD FFF7          	movff	postdec2,tblptrh
  3091  003D80                     	if	0	;tblptru may be non-zero
  3092  003D80                     	endif
  3093  003D80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3094  003D80  0E00               	movlw	low (__mediumconst shr (0+16))
  3095  003D82  6EF8               	movwf	tblptru,c
  3096  003D84                     	endif
  3097  003D84  0008               	tblrd		*
  3098  003D86  50F5               	movf	tablat,w,c
  3099  003D88  0A25               	xorlw	37
  3100  003D8A  A4D8               	btfss	status,2,c
  3101  003D8C  EFCA  F01E         	goto	u8161
  3102  003D90  EFCC  F01E         	goto	u8160
  3103  003D94                     u8161:
  3104  003D94  EFEC  F020         	goto	l7614
  3105  003D98                     u8160:
  3106  003D98                     
  3107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3108  003D98  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3109  003D9C  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3110  003DA0  2ADE               	incf	postinc2,f,c
  3111  003DA2  0E00               	movlw	0
  3112  003DA4  22DD               	addwfc	postdec2,f,c
  3113  003DA6                     
  3114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3115  003DA6  0E00               	movlw	0
  3116  003DA8  6E39               	movwf	(_width+1)^0,c
  3117  003DAA  0E00               	movlw	0
  3118  003DAC  6E38               	movwf	_width^0,c
  3119  003DAE  C038  F03C         	movff	_width,_flags
  3120  003DB2  C039  F03D         	movff	_width+1,_flags+1
  3121  003DB6                     
  3122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3123  003DB6  683A               	setf	_prec^0,c
  3124  003DB8  683B               	setf	(_prec+1)^0,c
  3125  003DBA                     
  3126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3127  003DBA  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3128  003DBE  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3129  003DC2  CFDE FFF6          	movff	postinc2,tblptrl
  3130  003DC6  CFDD FFF7          	movff	postdec2,tblptrh
  3131  003DCA                     	if	0	;tblptru may be non-zero
  3132  003DCA                     	endif
  3133  003DCA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3134  003DCA  0E00               	movlw	low (__mediumconst shr (0+16))
  3135  003DCC  6EF8               	movwf	tblptru,c
  3136  003DCE                     	endif
  3137  003DCE  0008               	tblrd		*
  3138  003DD0  50F5               	movf	tablat,w,c
  3139  003DD2  0A2E               	xorlw	46
  3140  003DD4  A4D8               	btfss	status,2,c
  3141  003DD6  EFEF  F01E         	goto	u8171
  3142  003DDA  EFF1  F01E         	goto	u8170
  3143  003DDE                     u8171:
  3144  003DDE  EF74  F01F         	goto	l7560
  3145  003DE2                     u8170:
  3146  003DE2                     
  3147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3148  003DE2  0E00               	movlw	0
  3149  003DE4  6E3B               	movwf	(_prec+1)^0,c
  3150  003DE6  0E00               	movlw	0
  3151  003DE8  6E3A               	movwf	_prec^0,c
  3152  003DEA                     
  3153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3154  003DEA  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3155  003DEE  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3156  003DF2  2ADE               	incf	postinc2,f,c
  3157  003DF4  0E00               	movlw	0
  3158  003DF6  22DD               	addwfc	postdec2,f,c
  3159  003DF8                     
  3160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3161  003DF8  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3162  003DFC  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3163  003E00  CFDE FFF6          	movff	postinc2,tblptrl
  3164  003E04  CFDD FFF7          	movff	postdec2,tblptrh
  3165  003E08                     	if	0	;tblptru may be non-zero
  3166  003E08                     	endif
  3167  003E08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3168  003E08  0E00               	movlw	low (__mediumconst shr (0+16))
  3169  003E0A  6EF8               	movwf	tblptru,c
  3170  003E0C                     	endif
  3171  003E0C  0008               	tblrd		*
  3172  003E0E  50F5               	movf	tablat,w,c
  3173  003E10  0A2A               	xorlw	42
  3174  003E12  A4D8               	btfss	status,2,c
  3175  003E14  EF0E  F01F         	goto	u8181
  3176  003E18  EF10  F01F         	goto	u8180
  3177  003E1C                     u8181:
  3178  003E1C  EF2D  F01F         	goto	l7550
  3179  003E20                     u8180:
  3180  003E20                     
  3181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3182  003E20  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3183  003E24  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3184  003E28  2ADE               	incf	postinc2,f,c
  3185  003E2A  0E00               	movlw	0
  3186  003E2C  22DD               	addwfc	postdec2,f,c
  3187                           
  3188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3189  003E2E  C0F2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3190  003E32  C0F3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3191  003E36  CFDF F0F4          	movff	indf2,??_vfpfcnvrt
  3192  003E3A  0E02               	movlw	2
  3193  003E3C  26DE               	addwf	postinc2,f,c
  3194  003E3E  CFDF F0F5          	movff	indf2,??_vfpfcnvrt+1
  3195  003E42  0E00               	movlw	0
  3196  003E44  22DD               	addwfc	postdec2,f,c
  3197  003E46  C0F4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3198  003E4A  C0F5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3199  003E4E  CFDE F03A          	movff	postinc2,_prec
  3200  003E52  CFDD F03B          	movff	postdec2,_prec+1
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3203  003E56  EF74  F01F         	goto	l7560
  3204  003E5A                     l7550:
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3207  003E5A  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3208  003E5E  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3209  003E62  CFDE F01B          	movff	postinc2,atoi@s
  3210  003E66  CFDD F01C          	movff	postdec2,atoi@s+1
  3211  003E6A  ECD3  F026         	call	_atoi	;wreg free
  3212  003E6E  C01B  F03A         	movff	?_atoi,_prec
  3213  003E72  C01C  F03B         	movff	?_atoi+1,_prec+1
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3216  003E76  EF44  F01F         	goto	l7554
  3217  003E7A                     l7552:
  3218                           
  3219                           ; BSR set to: 1
  3220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3221  003E7A  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3222  003E7E  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3223  003E82  2ADE               	incf	postinc2,f,c
  3224  003E84  0E00               	movlw	0
  3225  003E86  22DD               	addwfc	postdec2,f,c
  3226  003E88                     l7554:
  3227  003E88  0ED0               	movlw	208
  3228  003E8A  0100               	movlb	0	; () banked
  3229  003E8C  6FF4               	movwf	??_vfpfcnvrt& (0+255),b
  3230  003E8E  0EFF               	movlw	255
  3231  003E90  6FF5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3232  003E92  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3233  003E96  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3234  003E9A  CFDE FFF6          	movff	postinc2,tblptrl
  3235  003E9E  CFDD FFF7          	movff	postdec2,tblptrh
  3236  003EA2                     	if	0	;tblptru may be non-zero
  3237  003EA2                     	endif
  3238  003EA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3239  003EA2  0E00               	movlw	low (__mediumconst shr (0+16))
  3240  003EA4  6EF8               	movwf	tblptru,c
  3241  003EA6                     	endif
  3242  003EA6  0008               	tblrd		*
  3243  003EA8  50F5               	movf	tablat,w,c
  3244  003EAA  6FF6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3245  003EAC  6BF7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3246  003EAE  51F4               	movf	??_vfpfcnvrt& (0+255),w,b
  3247  003EB0  27F6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3248  003EB2  51F5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3249  003EB4  23F7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3250  003EB6  51F7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3251  003EB8  E10A               	bnz	u8190
  3252  003EBA  0E0A               	movlw	10
  3253  003EBC  5DF6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3254  003EBE  A0D8               	btfss	status,0,c
  3255  003EC0  EF64  F01F         	goto	u8191
  3256  003EC4  EF67  F01F         	goto	u8190
  3257  003EC8                     u8191:
  3258  003EC8  0E01               	movlw	1
  3259  003ECA  EF68  F01F         	goto	u8200
  3260  003ECE                     u8190:
  3261  003ECE  0E00               	movlw	0
  3262  003ED0                     u8200:
  3263  003ED0  0101               	movlb	1	; () banked
  3264  003ED2  6F00               	movwf	_vfpfcnvrt$2269& (0+255),b
  3265  003ED4  6B01               	clrf	(_vfpfcnvrt$2269+1)& (0+255),b
  3266  003ED6                     
  3267                           ; BSR set to: 1
  3268  003ED6  5100               	movf	_vfpfcnvrt$2269& (0+255),w,b
  3269  003ED8  1101               	iorwf	(_vfpfcnvrt$2269+1)& (0+255),w,b
  3270  003EDA  A4D8               	btfss	status,2,c
  3271  003EDC  EF72  F01F         	goto	u8211
  3272  003EE0  EF74  F01F         	goto	u8210
  3273  003EE4                     u8211:
  3274  003EE4  EF3D  F01F         	goto	l7552
  3275  003EE8                     u8210:
  3276  003EE8                     l7560:
  3277                           
  3278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3279  003EE8  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3280  003EEC  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3281  003EF0  CFDE FFF6          	movff	postinc2,tblptrl
  3282  003EF4  CFDD FFF7          	movff	postdec2,tblptrh
  3283  003EF8                     	if	0	;tblptru may be non-zero
  3284  003EF8                     	endif
  3285  003EF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3286  003EF8  0E00               	movlw	low (__mediumconst shr (0+16))
  3287  003EFA  6EF8               	movwf	tblptru,c
  3288  003EFC                     	endif
  3289  003EFC  0008               	tblrd		*
  3290  003EFE  50F5               	movf	tablat,w,c
  3291  003F00  6E1A               	movwf	tolower@c^0,c
  3292  003F02  6A1B               	clrf	(tolower@c+1)^0,c
  3293  003F04  EC8C  F02F         	call	_tolower	;wreg free
  3294  003F08  501A               	movf	?_tolower^0,w,c
  3295  003F0A  0101               	movlb	1	; () banked
  3296  003F0C  6F08               	movwf	vfpfcnvrt@ct& (0+255),b
  3297  003F0E                     
  3298                           ; BSR set to: 1
  3299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3300  003F0E  5108               	movf	vfpfcnvrt@ct& (0+255),w,b
  3301  003F10  B4D8               	btfsc	status,2,c
  3302  003F12  EF8D  F01F         	goto	u8221
  3303  003F16  EF8F  F01F         	goto	u8220
  3304  003F1A                     u8221:
  3305  003F1A  EFCF  F01F         	goto	l7570
  3306  003F1E                     u8220:
  3307  003F1E                     
  3308                           ; BSR set to: 1
  3309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3310  003F1E  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3311  003F22  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3312  003F26  CFDE F0F4          	movff	postinc2,??_vfpfcnvrt
  3313  003F2A  CFDD F0F5          	movff	postdec2,??_vfpfcnvrt+1
  3314  003F2E  0E01               	movlw	1
  3315  003F30  0100               	movlb	0	; () banked
  3316  003F32  27F4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3317  003F34  0E00               	movlw	0
  3318  003F36  23F5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3319  003F38  C0F4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3320  003F3C  C0F5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3321  003F40                     	if	0	;tblptru may be non-zero
  3322  003F40                     	endif
  3323  003F40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3324  003F40  0E00               	movlw	low (__mediumconst shr (0+16))
  3325  003F42  6EF8               	movwf	tblptru,c
  3326  003F44                     	endif
  3327  003F44  0008               	tblrd		*
  3328  003F46  50F5               	movf	tablat,w,c
  3329  003F48  6E1A               	movwf	tolower@c^0,c
  3330  003F4A  6A1B               	clrf	(tolower@c+1)^0,c
  3331  003F4C  EC8C  F02F         	call	_tolower	;wreg free
  3332  003F50  501A               	movf	?_tolower^0,w,c
  3333  003F52  0101               	movlb	1	; () banked
  3334  003F54  6F09               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3335  003F56                     
  3336                           ; BSR set to: 1
  3337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3338  003F56  5109               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3339  003F58  B4D8               	btfsc	status,2,c
  3340  003F5A  EFB1  F01F         	goto	u8231
  3341  003F5E  EFB3  F01F         	goto	u8230
  3342  003F62                     u8231:
  3343  003F62  EFCF  F01F         	goto	l7570
  3344  003F66                     u8230:
  3345  003F66                     
  3346                           ; BSR set to: 1
  3347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3348  003F66  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3349  003F6A  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3350  003F6E  CFDE F0F4          	movff	postinc2,??_vfpfcnvrt
  3351  003F72  CFDD F0F5          	movff	postdec2,??_vfpfcnvrt+1
  3352  003F76  0E02               	movlw	2
  3353  003F78  0100               	movlb	0	; () banked
  3354  003F7A  27F4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3355  003F7C  0E00               	movlw	0
  3356  003F7E  23F5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3357  003F80  C0F4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3358  003F84  C0F5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3359  003F88                     	if	0	;tblptru may be non-zero
  3360  003F88                     	endif
  3361  003F88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3362  003F88  0E00               	movlw	low (__mediumconst shr (0+16))
  3363  003F8A  6EF8               	movwf	tblptru,c
  3364  003F8C                     	endif
  3365  003F8C  0008               	tblrd		*
  3366  003F8E  50F5               	movf	tablat,w,c
  3367  003F90  6E1A               	movwf	tolower@c^0,c
  3368  003F92  6A1B               	clrf	(tolower@c+1)^0,c
  3369  003F94  EC8C  F02F         	call	_tolower	;wreg free
  3370  003F98  501A               	movf	?_tolower^0,w,c
  3371  003F9A  0101               	movlb	1	; () banked
  3372  003F9C  6F0A               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3373  003F9E                     l7570:
  3374                           
  3375                           ; BSR set to: 1
  3376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3377  003F9E  0E66               	movlw	102
  3378  003FA0  1908               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3379  003FA2  A4D8               	btfss	status,2,c
  3380  003FA4  EFD6  F01F         	goto	u8241
  3381  003FA8  EFD8  F01F         	goto	u8240
  3382  003FAC                     u8241:
  3383  003FAC  EF1A  F020         	goto	l7582
  3384  003FB0                     u8240:
  3385  003FB0                     
  3386                           ; BSR set to: 1
  3387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3388  003FB0  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3389  003FB4  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3390  003FB8  CFDE FFF6          	movff	postinc2,tblptrl
  3391  003FBC  CFDD FFF7          	movff	postdec2,tblptrh
  3392  003FC0                     	if	0	;tblptru may be non-zero
  3393  003FC0                     	endif
  3394  003FC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3395  003FC0  0E00               	movlw	low (__mediumconst shr (0+16))
  3396  003FC2  6EF8               	movwf	tblptru,c
  3397  003FC4                     	endif
  3398  003FC4  0008               	tblrd		*
  3399  003FC6  CFF5 F10B          	movff	tablat,vfpfcnvrt@c
  3400  003FCA                     
  3401                           ; BSR set to: 1
  3402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3403  003FCA  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3404  003FCE  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3405  003FD2  2ADE               	incf	postinc2,f,c
  3406  003FD4  0E00               	movlw	0
  3407  003FD6  22DD               	addwfc	postdec2,f,c
  3408  003FD8                     
  3409                           ; BSR set to: 1
  3410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3411  003FD8  C0F2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3412  003FDC  C0F3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3413  003FE0  CFDF F0F4          	movff	indf2,??_vfpfcnvrt
  3414  003FE4  0E04               	movlw	4
  3415  003FE6  26DE               	addwf	postinc2,f,c
  3416  003FE8  CFDF F0F5          	movff	indf2,??_vfpfcnvrt+1
  3417  003FEC  0E00               	movlw	0
  3418  003FEE  22DD               	addwfc	postdec2,f,c
  3419  003FF0  C0F4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3420  003FF4  C0F5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3421  003FF8  CFDE F104          	movff	postinc2,vfpfcnvrt@f
  3422  003FFC  CFDE F105          	movff	postinc2,vfpfcnvrt@f+1
  3423  004000  CFDE F106          	movff	postinc2,vfpfcnvrt@f+2
  3424  004004  CFDE F107          	movff	postinc2,vfpfcnvrt@f+3
  3425  004008                     l7578:
  3426                           
  3427                           ; BSR set to: 1
  3428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3429  004008  C0EE  F0AA         	movff	vfpfcnvrt@fp,efgtoa@fp
  3430  00400C  C0EF  F0AB         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3431  004010  C104  F0AC         	movff	vfpfcnvrt@f,efgtoa@f
  3432  004014  C105  F0AD         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3433  004018  C106  F0AE         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3434  00401C  C107  F0AF         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3435  004020  C10B  F0B0         	movff	vfpfcnvrt@c,efgtoa@c
  3436  004024  EC6D  F008         	call	_efgtoa	;wreg free
  3437  004028  C0AA  F0EE         	movff	?_efgtoa,?_vfpfcnvrt
  3438  00402C  C0AB  F0EF         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3439  004030  EF09  F021         	goto	l1265
  3440  004034                     l7582:
  3441                           
  3442                           ; BSR set to: 1
  3443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3444  004034  0E08               	movlw	low vfpfcnvrt@ct
  3445  004036  6E14               	movwf	strncmp@_l^0,c
  3446  004038  0E01               	movlw	high vfpfcnvrt@ct
  3447  00403A  6E15               	movwf	(strncmp@_l+1)^0,c
  3448  00403C  0ED5               	movlw	low STR_16
  3449  00403E  6E16               	movwf	strncmp@_r^0,c
  3450  004040  0E10               	movlw	high STR_16
  3451  004042  6E17               	movwf	(strncmp@_r+1)^0,c
  3452  004044  0E00               	movlw	0
  3453  004046  6E19               	movwf	(strncmp@n+1)^0,c
  3454  004048  0E02               	movlw	2
  3455  00404A  6E18               	movwf	strncmp@n^0,c
  3456  00404C  EC36  F02B         	call	_strncmp	;wreg free
  3457  004050  5014               	movf	?_strncmp^0,w,c
  3458  004052  1015               	iorwf	(?_strncmp+1)^0,w,c
  3459  004054  A4D8               	btfss	status,2,c
  3460  004056  EF2F  F020         	goto	u8251
  3461  00405A  EF31  F020         	goto	u8250
  3462  00405E                     u8251:
  3463  00405E  EFB2  F020         	goto	l7598
  3464  004062                     u8250:
  3465  004062                     
  3466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3467  004062  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3468  004066  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3469  00406A  CFDE F0F4          	movff	postinc2,??_vfpfcnvrt
  3470  00406E  CFDD F0F5          	movff	postdec2,??_vfpfcnvrt+1
  3471  004072  0E01               	movlw	1
  3472  004074  0100               	movlb	0	; () banked
  3473  004076  27F4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3474  004078  0E00               	movlw	0
  3475  00407A  23F5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3476  00407C  C0F4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3477  004080  C0F5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3478  004084                     	if	0	;tblptru may be non-zero
  3479  004084                     	endif
  3480  004084                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3481  004084  0E00               	movlw	low (__mediumconst shr (0+16))
  3482  004086  6EF8               	movwf	tblptru,c
  3483  004088                     	endif
  3484  004088  0008               	tblrd		*
  3485  00408A  CFF5 F10B          	movff	tablat,vfpfcnvrt@c
  3486  00408E  0EBF               	movlw	191
  3487  004090  6FF4               	movwf	??_vfpfcnvrt& (0+255),b
  3488  004092  0EFF               	movlw	255
  3489  004094  6FF5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3490  004096  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3491  00409A  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3492  00409E  CFDE FFF6          	movff	postinc2,tblptrl
  3493  0040A2  CFDD FFF7          	movff	postdec2,tblptrh
  3494  0040A6                     	if	0	;tblptru may be non-zero
  3495  0040A6                     	endif
  3496  0040A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3497  0040A6  0E00               	movlw	low (__mediumconst shr (0+16))
  3498  0040A8  6EF8               	movwf	tblptru,c
  3499  0040AA                     	endif
  3500  0040AA  0008               	tblrd		*
  3501  0040AC  50F5               	movf	tablat,w,c
  3502  0040AE  6FF6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3503  0040B0  6BF7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3504  0040B2  51F4               	movf	??_vfpfcnvrt& (0+255),w,b
  3505  0040B4  27F6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3506  0040B6  51F5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3507  0040B8  23F7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3508  0040BA  51F7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3509  0040BC  E10A               	bnz	u8260
  3510  0040BE  0E1A               	movlw	26
  3511  0040C0  5DF6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3512  0040C2  A0D8               	btfss	status,0,c
  3513  0040C4  EF66  F020         	goto	u8261
  3514  0040C8  EF69  F020         	goto	u8260
  3515  0040CC                     u8261:
  3516  0040CC  0E01               	movlw	1
  3517  0040CE  EF6A  F020         	goto	u8270
  3518  0040D2                     u8260:
  3519  0040D2  0E00               	movlw	0
  3520  0040D4                     u8270:
  3521  0040D4  0101               	movlb	1	; () banked
  3522  0040D6  6F02               	movwf	_vfpfcnvrt$2273& (0+255),b
  3523  0040D8  6B03               	clrf	(_vfpfcnvrt$2273+1)& (0+255),b
  3524  0040DA                     
  3525                           ; BSR set to: 1
  3526  0040DA  5102               	movf	_vfpfcnvrt$2273& (0+255),w,b
  3527  0040DC  1103               	iorwf	(_vfpfcnvrt$2273+1)& (0+255),w,b
  3528  0040DE  B4D8               	btfsc	status,2,c
  3529  0040E0  EF74  F020         	goto	u8281
  3530  0040E4  EF76  F020         	goto	u8280
  3531  0040E8                     u8281:
  3532  0040E8  EF90  F020         	goto	l7592
  3533  0040EC                     u8280:
  3534  0040EC                     
  3535                           ; BSR set to: 1
  3536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3537  0040EC  C0F2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3538  0040F0  C0F3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3539  0040F4  CFDF F0F4          	movff	indf2,??_vfpfcnvrt
  3540  0040F8  0E04               	movlw	4
  3541  0040FA  26DE               	addwf	postinc2,f,c
  3542  0040FC  CFDF F0F5          	movff	indf2,??_vfpfcnvrt+1
  3543  004100  0E00               	movlw	0
  3544  004102  22DD               	addwfc	postdec2,f,c
  3545  004104  C0F4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3546  004108  C0F5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3547  00410C  CFDE F104          	movff	postinc2,vfpfcnvrt@f
  3548  004110  CFDE F105          	movff	postinc2,vfpfcnvrt@f+1
  3549  004114  CFDE F106          	movff	postinc2,vfpfcnvrt@f+2
  3550  004118  CFDE F107          	movff	postinc2,vfpfcnvrt@f+3
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3553  00411C  EFA8  F020         	goto	l1272
  3554  004120                     l7592:
  3555                           
  3556                           ; BSR set to: 1
  3557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3558  004120  C0F2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3559  004124  C0F3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3560  004128  CFDF F0F4          	movff	indf2,??_vfpfcnvrt
  3561  00412C  0E04               	movlw	4
  3562  00412E  26DE               	addwf	postinc2,f,c
  3563  004130  CFDF F0F5          	movff	indf2,??_vfpfcnvrt+1
  3564  004134  0E00               	movlw	0
  3565  004136  22DD               	addwfc	postdec2,f,c
  3566  004138  C0F4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3567  00413C  C0F5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3568  004140  CFDE F104          	movff	postinc2,vfpfcnvrt@f
  3569  004144  CFDE F105          	movff	postinc2,vfpfcnvrt@f+1
  3570  004148  CFDE F106          	movff	postinc2,vfpfcnvrt@f+2
  3571  00414C  CFDE F107          	movff	postinc2,vfpfcnvrt@f+3
  3572  004150                     l1272:
  3573                           
  3574                           ; BSR set to: 1
  3575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3576  004150  0E02               	movlw	2
  3577  004152  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3578  004156  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3579  00415A  26DE               	addwf	postinc2,f,c
  3580  00415C  0E00               	movlw	0
  3581  00415E  22DD               	addwfc	postdec2,f,c
  3582  004160  EF04  F020         	goto	l7578
  3583  004164                     l7598:
  3584                           
  3585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3586  004164  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3587  004168  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3588  00416C  CFDE FFF6          	movff	postinc2,tblptrl
  3589  004170  CFDD FFF7          	movff	postdec2,tblptrh
  3590  004174                     	if	0	;tblptru may be non-zero
  3591  004174                     	endif
  3592  004174                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3593  004174  0E00               	movlw	low (__mediumconst shr (0+16))
  3594  004176  6EF8               	movwf	tblptru,c
  3595  004178                     	endif
  3596  004178  0008               	tblrd		*
  3597  00417A  50F5               	movf	tablat,w,c
  3598  00417C  0A25               	xorlw	37
  3599  00417E  A4D8               	btfss	status,2,c
  3600  004180  EFC4  F020         	goto	u8291
  3601  004184  EFC6  F020         	goto	u8290
  3602  004188                     u8291:
  3603  004188  EFDE  F020         	goto	l7608
  3604  00418C                     u8290:
  3605  00418C                     
  3606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3607  00418C  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3608  004190  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3609  004194  2ADE               	incf	postinc2,f,c
  3610  004196  0E00               	movlw	0
  3611  004198  22DD               	addwfc	postdec2,f,c
  3612  00419A                     
  3613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3614  00419A  0E00               	movlw	0
  3615  00419C  6E15               	movwf	(fputc@c+1)^0,c
  3616  00419E  0E25               	movlw	37
  3617  0041A0  6E14               	movwf	fputc@c^0,c
  3618  0041A2  C0EE  F016         	movff	vfpfcnvrt@fp,fputc@fp
  3619  0041A6  C0EF  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3620  0041AA  ECA7  F02B         	call	_fputc	;wreg free
  3621  0041AE                     l7604:
  3622                           
  3623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3624  0041AE  0E00               	movlw	0
  3625  0041B0  0100               	movlb	0	; () banked
  3626  0041B2  6FEF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3627  0041B4  0E01               	movlw	1
  3628  0041B6  6FEE               	movwf	?_vfpfcnvrt& (0+255),b
  3629  0041B8  EF09  F021         	goto	l1265
  3630  0041BC                     l7608:
  3631                           
  3632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3633  0041BC  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3634  0041C0  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3635  0041C4  2ADE               	incf	postinc2,f,c
  3636  0041C6  0E00               	movlw	0
  3637  0041C8  22DD               	addwfc	postdec2,f,c
  3638  0041CA                     
  3639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3640  0041CA  0E00               	movlw	0
  3641  0041CC  0100               	movlb	0	; () banked
  3642  0041CE  6FEF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3643  0041D0  0E00               	movlw	0
  3644  0041D2  6FEE               	movwf	?_vfpfcnvrt& (0+255),b
  3645  0041D4  EF09  F021         	goto	l1265
  3646  0041D8                     l7614:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3649  0041D8  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3650  0041DC  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3651  0041E0  CFDE FFF6          	movff	postinc2,tblptrl
  3652  0041E4  CFDD FFF7          	movff	postdec2,tblptrh
  3653  0041E8                     	if	0	;tblptru may be non-zero
  3654  0041E8                     	endif
  3655  0041E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3656  0041E8  0E00               	movlw	low (__mediumconst shr (0+16))
  3657  0041EA  6EF8               	movwf	tblptru,c
  3658  0041EC                     	endif
  3659  0041EC  0008               	tblrd		*
  3660  0041EE  50F5               	movf	tablat,w,c
  3661  0041F0  6E14               	movwf	fputc@c^0,c
  3662  0041F2  6A15               	clrf	(fputc@c+1)^0,c
  3663  0041F4  C0EE  F016         	movff	vfpfcnvrt@fp,fputc@fp
  3664  0041F8  C0EF  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3665  0041FC  ECA7  F02B         	call	_fputc	;wreg free
  3666  004200                     
  3667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3668  004200  C0F0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3669  004204  C0F1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3670  004208  2ADE               	incf	postinc2,f,c
  3671  00420A  0E00               	movlw	0
  3672  00420C  22DD               	addwfc	postdec2,f,c
  3673  00420E  EFD7  F020         	goto	l7604
  3674  004212                     l1265:
  3675  004212  0012               	return		;funcret
  3676  004214                     __end_of_vfpfcnvrt:
  3677                           	callstack 0
  3678                           
  3679 ;; *************** function _strncmp *****************
  3680 ;; Defined at:
  3681 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  3684 ;;		 -> vfpfcnvrt@ct(3), 
  3685 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  3686 ;;		 -> STR_18(3), 
  3687 ;;  n               2   23[COMRAM] unsigned int 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  r               2   28[COMRAM] PTR const unsigned char 
  3690 ;;		 -> STR_18(3), 
  3691 ;;  l               2   26[COMRAM] PTR const unsigned char 
  3692 ;;		 -> vfpfcnvrt@ct(3), 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  2   19[COMRAM] int 
  3695 ;; Registers used:
  3696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3702 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;Total ram usage:       11 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 3
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_vfpfcnvrt
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text5
  3717  00566C                     __ptext5:
  3718                           	callstack 0
  3719  00566C                     _strncmp:
  3720                           	callstack 23
  3721  00566C  C014  F01B         	movff	strncmp@_l,strncmp@l
  3722  005670  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  3723  005674  C016  F01D         	movff	strncmp@_r,strncmp@r
  3724  005678  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  3725  00567C  0618               	decf	strncmp@n^0,f,c
  3726  00567E  A0D8               	btfss	status,0,c
  3727  005680  0619               	decf	(strncmp@n+1)^0,f,c
  3728  005682  2818               	incf	strncmp@n^0,w,c
  3729  005684  E106               	bnz	u8111
  3730  005686  2819               	incf	(strncmp@n+1)^0,w,c
  3731  005688  A4D8               	btfss	status,2,c
  3732  00568A  EF49  F02B         	goto	u8111
  3733  00568E  EF4B  F02B         	goto	u8110
  3734  005692                     u8111:
  3735  005692  EF58  F02B         	goto	l7512
  3736  005696                     u8110:
  3737  005696  0E00               	movlw	0
  3738  005698  6E15               	movwf	(?_strncmp+1)^0,c
  3739  00569A  0E00               	movlw	0
  3740  00569C  6E14               	movwf	?_strncmp^0,c
  3741  00569E  EFA6  F02B         	goto	l1382
  3742  0056A2                     l7510:
  3743  0056A2  4A1B               	infsnz	strncmp@l^0,f,c
  3744  0056A4  2A1C               	incf	(strncmp@l+1)^0,f,c
  3745  0056A6  4A1D               	infsnz	strncmp@r^0,f,c
  3746  0056A8  2A1E               	incf	(strncmp@r+1)^0,f,c
  3747  0056AA  0618               	decf	strncmp@n^0,f,c
  3748  0056AC  A0D8               	btfss	status,0,c
  3749  0056AE  0619               	decf	(strncmp@n+1)^0,f,c
  3750  0056B0                     l7512:
  3751  0056B0  C01B  FFD9         	movff	strncmp@l,fsr2l
  3752  0056B4  C01C  FFDA         	movff	strncmp@l+1,fsr2h
  3753  0056B8  50DF               	movf	indf2,w,c
  3754  0056BA  B4D8               	btfsc	status,2,c
  3755  0056BC  EF62  F02B         	goto	u8121
  3756  0056C0  EF64  F02B         	goto	u8120
  3757  0056C4                     u8121:
  3758  0056C4  EF93  F02B         	goto	l7520
  3759  0056C8                     u8120:
  3760  0056C8  C01D  FFF6         	movff	strncmp@r,tblptrl
  3761  0056CC  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  3762  0056D0                     	if	0	;tblptru may be non-zero
  3763  0056D0                     	endif
  3764  0056D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3765  0056D0  0E00               	movlw	low (__mediumconst shr (0+16))
  3766  0056D2  6EF8               	movwf	tblptru,c
  3767  0056D4                     	endif
  3768  0056D4  0008               	tblrd		*
  3769  0056D6  50F5               	movf	tablat,w,c
  3770  0056D8  0900               	iorlw	0
  3771  0056DA  B4D8               	btfsc	status,2,c
  3772  0056DC  EF72  F02B         	goto	u8131
  3773  0056E0  EF74  F02B         	goto	u8130
  3774  0056E4                     u8131:
  3775  0056E4  EF93  F02B         	goto	l7520
  3776  0056E8                     u8130:
  3777  0056E8  5018               	movf	strncmp@n^0,w,c
  3778  0056EA  1019               	iorwf	(strncmp@n+1)^0,w,c
  3779  0056EC  B4D8               	btfsc	status,2,c
  3780  0056EE  EF7B  F02B         	goto	u8141
  3781  0056F2  EF7D  F02B         	goto	u8140
  3782  0056F6                     u8141:
  3783  0056F6  EF93  F02B         	goto	l7520
  3784  0056FA                     u8140:
  3785  0056FA  C01B  FFD9         	movff	strncmp@l,fsr2l
  3786  0056FE  C01C  FFDA         	movff	strncmp@l+1,fsr2h
  3787  005702  50DF               	movf	indf2,w,c
  3788  005704  6E1A               	movwf	??_strncmp^0,c
  3789  005706  C01D  FFF6         	movff	strncmp@r,tblptrl
  3790  00570A  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  3791  00570E                     	if	0	;tblptru may be non-zero
  3792  00570E                     	endif
  3793  00570E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3794  00570E  0E00               	movlw	low (__mediumconst shr (0+16))
  3795  005710  6EF8               	movwf	tblptru,c
  3796  005712                     	endif
  3797  005712  0008               	tblrd		*
  3798  005714  50F5               	movf	tablat,w,c
  3799  005716  181A               	xorwf	??_strncmp^0,w,c
  3800  005718  B4D8               	btfsc	status,2,c
  3801  00571A  EF91  F02B         	goto	u8151
  3802  00571E  EF93  F02B         	goto	u8150
  3803  005722                     u8151:
  3804  005722  EF51  F02B         	goto	l7510
  3805  005726                     u8150:
  3806  005726                     l7520:
  3807  005726  C01B  FFD9         	movff	strncmp@l,fsr2l
  3808  00572A  C01C  FFDA         	movff	strncmp@l+1,fsr2h
  3809  00572E  50DF               	movf	indf2,w,c
  3810  005730  6E1A               	movwf	??_strncmp^0,c
  3811  005732  C01D  FFF6         	movff	strncmp@r,tblptrl
  3812  005736  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  3813  00573A                     	if	0	;tblptru may be non-zero
  3814  00573A                     	endif
  3815  00573A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3816  00573A  0E00               	movlw	low (__mediumconst shr (0+16))
  3817  00573C  6EF8               	movwf	tblptru,c
  3818  00573E                     	endif
  3819  00573E  0008               	tblrd		*
  3820  005740  50F5               	movf	tablat,w,c
  3821  005742  5C1A               	subwf	??_strncmp^0,w,c
  3822  005744  6E14               	movwf	?_strncmp^0,c
  3823  005746  6A15               	clrf	(?_strncmp+1)^0,c
  3824  005748  A0D8               	btfss	status,0,c
  3825  00574A  0615               	decf	(?_strncmp+1)^0,f,c
  3826  00574C                     l1382:
  3827  00574C  0012               	return		;funcret
  3828  00574E                     __end_of_strncmp:
  3829                           	callstack 0
  3830                           
  3831 ;; *************** function _efgtoa *****************
  3832 ;; Defined at:
  3833 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  3836 ;;		 -> sprintf@f(6), 
  3837 ;;  f               4   76[BANK0 ] PTR struct _IO_FILE
  3838 ;;  c               1   80[BANK0 ] unsigned char 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  u               4  138[BANK0 ] unsigned char 
  3841 ;;  g               4  130[BANK0 ] unsigned char 
  3842 ;;  l               4  124[BANK0 ] unsigned char 
  3843 ;;  h               4  120[BANK0 ] unsigned char 
  3844 ;;  ou              4  106[BANK0 ] unsigned char 
  3845 ;;  n               2  136[BANK0 ] int 
  3846 ;;  e               2  134[BANK0 ] int 
  3847 ;;  i               2  128[BANK0 ] int 
  3848 ;;  w               2  116[BANK0 ] int 
  3849 ;;  p               2  114[BANK0 ] int 
  3850 ;;  sign            2  112[BANK0 ] int 
  3851 ;;  d               2  110[BANK0 ] int 
  3852 ;;  m               2  104[BANK0 ] int 
  3853 ;;  ne              2  102[BANK0 ] int 
  3854 ;;  pp              2  100[BANK0 ] int 
  3855 ;;  t               2   98[BANK0 ] int 
  3856 ;;  mode            1  119[BANK0 ] unsigned char 
  3857 ;;  nmode           1  118[BANK0 ] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  2   74[BANK0 ] int 
  3860 ;; Registers used:
  3861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3867 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;Total ram usage:       68 bytes
  3872 ;; Hardware stack levels used: 1
  3873 ;; Hardware stack levels required when called: 7
  3874 ;; This function calls:
  3875 ;;		___awdiv
  3876 ;;		___awmod
  3877 ;;		___fladd
  3878 ;;		___fldiv
  3879 ;;		___fleq
  3880 ;;		___flge
  3881 ;;		___flmul
  3882 ;;		___flneg
  3883 ;;		___flsub
  3884 ;;		___fltol
  3885 ;;		___fpclassifyf
  3886 ;;		_floorf
  3887 ;;		_isupper
  3888 ;;		_pad
  3889 ;;		_strcpy
  3890 ;;		_tolower
  3891 ;; This function is called by:
  3892 ;;		_vfpfcnvrt
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text6
  3897  0010DA                     __ptext6:
  3898                           	callstack 0
  3899  0010DA                     _efgtoa:
  3900                           	callstack 19
  3901  0010DA                     
  3902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3903  0010DA  0E00               	movlw	0
  3904  0010DC  0100               	movlb	0	; () banked
  3905  0010DE  6FD1               	movwf	(efgtoa@sign+1)& (0+255),b
  3906  0010E0  0E00               	movlw	0
  3907  0010E2  6FD0               	movwf	efgtoa@sign& (0+255),b
  3908  0010E4                     
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3911  0010E4  C0AC  F0E2         	movff	efgtoa@f,efgtoa@g
  3912  0010E8  C0AD  F0E3         	movff	efgtoa@f+1,efgtoa@g+1
  3913  0010EC  C0AE  F0E4         	movff	efgtoa@f+2,efgtoa@g+2
  3914  0010F0  C0AF  F0E5         	movff	efgtoa@f+3,efgtoa@g+3
  3915  0010F4                     
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3918  0010F4  BFE5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3919  0010F6  EF81  F008         	goto	u7500
  3920  0010FA  EF7F  F008         	goto	u7501
  3921  0010FE                     u7501:
  3922  0010FE  EF97  F008         	goto	l7164
  3923  001102                     u7500:
  3924  001102                     
  3925                           ; BSR set to: 0
  3926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3927  001102  0E00               	movlw	0
  3928  001104  6FD1               	movwf	(efgtoa@sign+1)& (0+255),b
  3929  001106  0E01               	movlw	1
  3930  001108  6FD0               	movwf	efgtoa@sign& (0+255),b
  3931  00110A                     
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3934  00110A  C0E2  F014         	movff	efgtoa@g,___flneg@f1
  3935  00110E  C0E3  F015         	movff	efgtoa@g+1,___flneg@f1+1
  3936  001112  C0E4  F016         	movff	efgtoa@g+2,___flneg@f1+2
  3937  001116  C0E5  F017         	movff	efgtoa@g+3,___flneg@f1+3
  3938  00111A  ECFF  F030         	call	___flneg	;wreg free
  3939  00111E  C014  F0E2         	movff	?___flneg,efgtoa@g
  3940  001122  C015  F0E3         	movff	?___flneg+1,efgtoa@g+1
  3941  001126  C016  F0E4         	movff	?___flneg+2,efgtoa@g+2
  3942  00112A  C017  F0E5         	movff	?___flneg+3,efgtoa@g+3
  3943  00112E                     l7164:
  3944                           
  3945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3946  00112E  0E00               	movlw	0
  3947  001130  0100               	movlb	0	; () banked
  3948  001132  6FE9               	movwf	(efgtoa@n+1)& (0+255),b
  3949  001134  0E00               	movlw	0
  3950  001136  6FE8               	movwf	efgtoa@n& (0+255),b
  3951  001138                     
  3952                           ; BSR set to: 0
  3953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3954  001138  C038  F0D4         	movff	_width,efgtoa@w
  3955  00113C  C039  F0D5         	movff	_width+1,efgtoa@w+1
  3956  001140                     
  3957                           ; BSR set to: 0
  3958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3959  001140  51D0               	movf	efgtoa@sign& (0+255),w,b
  3960  001142  11D1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3961  001144  A4D8               	btfss	status,2,c
  3962  001146  EFA7  F008         	goto	u7511
  3963  00114A  EFA9  F008         	goto	u7510
  3964  00114E                     u7511:
  3965  00114E  EFB0  F008         	goto	l7172
  3966  001152                     u7510:
  3967  001152                     
  3968                           ; BSR set to: 0
  3969  001152  A43C               	btfss	_flags^0,2,c
  3970  001154  EFAE  F008         	goto	u7521
  3971  001158  EFB0  F008         	goto	u7520
  3972  00115C                     u7521:
  3973  00115C  EFCA  F008         	goto	l7184
  3974  001160                     u7520:
  3975  001160                     l7172:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3979  001160  51D0               	movf	efgtoa@sign& (0+255),w,b
  3980  001162  11D1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3981  001164  A4D8               	btfss	status,2,c
  3982  001166  EFB7  F008         	goto	u7531
  3983  00116A  EFB9  F008         	goto	u7530
  3984  00116E                     u7531:
  3985  00116E  EFBF  F008         	goto	l7176
  3986  001172                     u7530:
  3987  001172                     
  3988                           ; BSR set to: 0
  3989  001172  0E00               	movlw	0
  3990  001174  6FB7               	movwf	(_efgtoa$2243+1)& (0+255),b
  3991  001176  0E2B               	movlw	43
  3992  001178  6FB6               	movwf	_efgtoa$2243& (0+255),b
  3993  00117A  EFC3  F008         	goto	l7178
  3994  00117E                     l7176:
  3995                           
  3996                           ; BSR set to: 0
  3997  00117E  0E00               	movlw	0
  3998  001180  6FB7               	movwf	(_efgtoa$2243+1)& (0+255),b
  3999  001182  0E2D               	movlw	45
  4000  001184  6FB6               	movwf	_efgtoa$2243& (0+255),b
  4001  001186                     l7178:
  4002                           
  4003                           ; BSR set to: 0
  4004  001186  C0B6  F200         	movff	_efgtoa$2243,_dbuf
  4005  00118A                     
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4008  00118A  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  4009  00118C  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  4010  00118E                     
  4011                           ; BSR set to: 0
  4012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4013  00118E  07D4               	decf	efgtoa@w& (0+255),f,b
  4014  001190  A0D8               	btfss	status,0,c
  4015  001192  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  4016  001194                     l7184:
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4020  001194  C0E2  F014         	movff	efgtoa@g,___fpclassifyf@x
  4021  001198  C0E3  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4022  00119C  C0E4  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4023  0011A0  C0E5  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4024  0011A4  ECB7  F02A         	call	___fpclassifyf	;wreg free
  4025  0011A8  0414               	decf	?___fpclassifyf^0,w,c
  4026  0011AA  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4027  0011AC  A4D8               	btfss	status,2,c
  4028  0011AE  EFDB  F008         	goto	u7541
  4029  0011B2  EFDD  F008         	goto	u7540
  4030  0011B6                     u7541:
  4031  0011B6  EF34  F009         	goto	l7202
  4032  0011BA                     u7540:
  4033  0011BA  0EBF               	movlw	191
  4034  0011BC  0100               	movlb	0	; () banked
  4035  0011BE  6FB1               	movwf	??_efgtoa& (0+255),b
  4036  0011C0  0EFF               	movlw	255
  4037  0011C2  6FB2               	movwf	(??_efgtoa+1)& (0+255),b
  4038  0011C4  51B0               	movf	efgtoa@c& (0+255),w,b
  4039  0011C6  6FB3               	movwf	(??_efgtoa+2)& (0+255),b
  4040  0011C8  6BB4               	clrf	(??_efgtoa+3)& (0+255),b
  4041  0011CA  51B1               	movf	??_efgtoa& (0+255),w,b
  4042  0011CC  27B3               	addwf	(??_efgtoa+2)& (0+255),f,b
  4043  0011CE  51B2               	movf	(??_efgtoa+1)& (0+255),w,b
  4044  0011D0  23B4               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4045  0011D2  51B4               	movf	(??_efgtoa+3)& (0+255),w,b
  4046  0011D4  E10A               	bnz	u7550
  4047  0011D6  0E1A               	movlw	26
  4048  0011D8  5DB3               	subwf	(??_efgtoa+2)& (0+255),w,b
  4049  0011DA  A0D8               	btfss	status,0,c
  4050  0011DC  EFF2  F008         	goto	u7551
  4051  0011E0  EFF5  F008         	goto	u7550
  4052  0011E4                     u7551:
  4053  0011E4  0E01               	movlw	1
  4054  0011E6  EFF6  F008         	goto	u7560
  4055  0011EA                     u7550:
  4056  0011EA  0E00               	movlw	0
  4057  0011EC                     u7560:
  4058  0011EC  6FB8               	movwf	_efgtoa$2244& (0+255),b
  4059  0011EE  6BB9               	clrf	(_efgtoa$2244+1)& (0+255),b
  4060  0011F0                     
  4061                           ; BSR set to: 0
  4062  0011F0  51B8               	movf	_efgtoa$2244& (0+255),w,b
  4063  0011F2  11B9               	iorwf	(_efgtoa$2244+1)& (0+255),w,b
  4064  0011F4  B4D8               	btfsc	status,2,c
  4065  0011F6  EFFF  F008         	goto	u7571
  4066  0011FA  EF01  F009         	goto	u7570
  4067  0011FE                     u7571:
  4068  0011FE  EF0F  F009         	goto	l7194
  4069  001202                     u7570:
  4070  001202                     
  4071                           ; BSR set to: 0
  4072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4073  001202  0E00               	movlw	low _dbuf
  4074  001204  25E8               	addwf	efgtoa@n& (0+255),w,b
  4075  001206  6E14               	movwf	strcpy@dest^0,c
  4076  001208  0E02               	movlw	high _dbuf
  4077  00120A  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4078  00120C  6E15               	movwf	(strcpy@dest+1)^0,c
  4079  00120E  0EC5               	movlw	low STR_8
  4080  001210  6E16               	movwf	strcpy@src^0,c
  4081  001212  0E10               	movlw	high STR_8
  4082  001214  6E17               	movwf	(strcpy@src+1)^0,c
  4083  001216  ECBC  F02F         	call	_strcpy	;wreg free
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4086  00121A  EF1B  F009         	goto	l7196
  4087  00121E                     l7194:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4091  00121E  0E00               	movlw	low _dbuf
  4092  001220  25E8               	addwf	efgtoa@n& (0+255),w,b
  4093  001222  6E14               	movwf	strcpy@dest^0,c
  4094  001224  0E02               	movlw	high _dbuf
  4095  001226  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4096  001228  6E15               	movwf	(strcpy@dest+1)^0,c
  4097  00122A  0ECD               	movlw	low STR_9
  4098  00122C  6E16               	movwf	strcpy@src^0,c
  4099  00122E  0E10               	movlw	high STR_9
  4100  001230  6E17               	movwf	(strcpy@src+1)^0,c
  4101  001232  ECBC  F02F         	call	_strcpy	;wreg free
  4102  001236                     l7196:
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4105  001236  0100               	movlb	0	; () banked
  4106  001238  0EFD               	movlw	253
  4107  00123A  27D4               	addwf	efgtoa@w& (0+255),f,b
  4108  00123C  0EFF               	movlw	255
  4109  00123E  23D5               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4110  001240                     l7198:
  4111                           
  4112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4113  001240  C0AA  F024         	movff	efgtoa@fp,pad@fp
  4114  001244  C0AB  F025         	movff	efgtoa@fp+1,pad@fp+1
  4115  001248  0E00               	movlw	low _dbuf
  4116  00124A  6E26               	movwf	pad@buf^0,c
  4117  00124C  0E02               	movlw	high _dbuf
  4118  00124E  6E27               	movwf	(pad@buf+1)^0,c
  4119  001250  C0D4  F028         	movff	efgtoa@w,pad@p
  4120  001254  C0D5  F029         	movff	efgtoa@w+1,pad@p+1
  4121  001258  EC6E  F02C         	call	_pad	;wreg free
  4122  00125C  C024  F0AA         	movff	?_pad,?_efgtoa
  4123  001260  C025  F0AB         	movff	?_pad+1,?_efgtoa+1
  4124  001264  EF9C  F00E         	goto	l1173
  4125  001268                     l7202:
  4126                           
  4127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4128  001268  C0E2  F014         	movff	efgtoa@g,___fpclassifyf@x
  4129  00126C  C0E3  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4130  001270  C0E4  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4131  001274  C0E5  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4132  001278  ECB7  F02A         	call	___fpclassifyf	;wreg free
  4133  00127C  5014               	movf	?___fpclassifyf^0,w,c
  4134  00127E  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4135  001280  A4D8               	btfss	status,2,c
  4136  001282  EF45  F009         	goto	u7581
  4137  001286  EF47  F009         	goto	u7580
  4138  00128A                     u7581:
  4139  00128A  EF87  F009         	goto	l7220
  4140  00128E                     u7580:
  4141  00128E  0EBF               	movlw	191
  4142  001290  0100               	movlb	0	; () banked
  4143  001292  6FB1               	movwf	??_efgtoa& (0+255),b
  4144  001294  0EFF               	movlw	255
  4145  001296  6FB2               	movwf	(??_efgtoa+1)& (0+255),b
  4146  001298  51B0               	movf	efgtoa@c& (0+255),w,b
  4147  00129A  6FB3               	movwf	(??_efgtoa+2)& (0+255),b
  4148  00129C  6BB4               	clrf	(??_efgtoa+3)& (0+255),b
  4149  00129E  51B1               	movf	??_efgtoa& (0+255),w,b
  4150  0012A0  27B3               	addwf	(??_efgtoa+2)& (0+255),f,b
  4151  0012A2  51B2               	movf	(??_efgtoa+1)& (0+255),w,b
  4152  0012A4  23B4               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4153  0012A6  51B4               	movf	(??_efgtoa+3)& (0+255),w,b
  4154  0012A8  E10A               	bnz	u7590
  4155  0012AA  0E1A               	movlw	26
  4156  0012AC  5DB3               	subwf	(??_efgtoa+2)& (0+255),w,b
  4157  0012AE  A0D8               	btfss	status,0,c
  4158  0012B0  EF5C  F009         	goto	u7591
  4159  0012B4  EF5F  F009         	goto	u7590
  4160  0012B8                     u7591:
  4161  0012B8  0E01               	movlw	1
  4162  0012BA  EF60  F009         	goto	u7600
  4163  0012BE                     u7590:
  4164  0012BE  0E00               	movlw	0
  4165  0012C0                     u7600:
  4166  0012C0  6FBA               	movwf	_efgtoa$2249& (0+255),b
  4167  0012C2  6BBB               	clrf	(_efgtoa$2249+1)& (0+255),b
  4168  0012C4                     
  4169                           ; BSR set to: 0
  4170  0012C4  51BA               	movf	_efgtoa$2249& (0+255),w,b
  4171  0012C6  11BB               	iorwf	(_efgtoa$2249+1)& (0+255),w,b
  4172  0012C8  B4D8               	btfsc	status,2,c
  4173  0012CA  EF69  F009         	goto	u7611
  4174  0012CE  EF6B  F009         	goto	u7610
  4175  0012D2                     u7611:
  4176  0012D2  EF79  F009         	goto	l7212
  4177  0012D6                     u7610:
  4178  0012D6                     
  4179                           ; BSR set to: 0
  4180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4181  0012D6  0E00               	movlw	low _dbuf
  4182  0012D8  25E8               	addwf	efgtoa@n& (0+255),w,b
  4183  0012DA  6E14               	movwf	strcpy@dest^0,c
  4184  0012DC  0E02               	movlw	high _dbuf
  4185  0012DE  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4186  0012E0  6E15               	movwf	(strcpy@dest+1)^0,c
  4187  0012E2  0EC9               	movlw	low STR_12
  4188  0012E4  6E16               	movwf	strcpy@src^0,c
  4189  0012E6  0E10               	movlw	high STR_12
  4190  0012E8  6E17               	movwf	(strcpy@src+1)^0,c
  4191  0012EA  ECBC  F02F         	call	_strcpy	;wreg free
  4192                           
  4193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4194  0012EE  EF1B  F009         	goto	l7196
  4195  0012F2                     l7212:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4199  0012F2  0E00               	movlw	low _dbuf
  4200  0012F4  25E8               	addwf	efgtoa@n& (0+255),w,b
  4201  0012F6  6E14               	movwf	strcpy@dest^0,c
  4202  0012F8  0E02               	movlw	high _dbuf
  4203  0012FA  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4204  0012FC  6E15               	movwf	(strcpy@dest+1)^0,c
  4205  0012FE  0ED1               	movlw	low STR_13
  4206  001300  6E16               	movwf	strcpy@src^0,c
  4207  001302  0E10               	movlw	high STR_13
  4208  001304  6E17               	movwf	(strcpy@src+1)^0,c
  4209  001306  ECBC  F02F         	call	_strcpy	;wreg free
  4210  00130A  EF1B  F009         	goto	l7196
  4211  00130E                     l7220:
  4212                           
  4213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4214  00130E  0E00               	movlw	0
  4215  001310  0100               	movlb	0	; () banked
  4216  001312  6FEA               	movwf	efgtoa@u& (0+255),b
  4217  001314  0E00               	movlw	0
  4218  001316  6FEB               	movwf	(efgtoa@u+1)& (0+255),b
  4219  001318  0E80               	movlw	128
  4220  00131A  6FEC               	movwf	(efgtoa@u+2)& (0+255),b
  4221  00131C  0E3F               	movlw	63
  4222  00131E  6FED               	movwf	(efgtoa@u+3)& (0+255),b
  4223                           
  4224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4225  001320  0E00               	movlw	0
  4226  001322  6FE7               	movwf	(efgtoa@e+1)& (0+255),b
  4227  001324  0E00               	movlw	0
  4228  001326  6FE6               	movwf	efgtoa@e& (0+255),b
  4229  001328                     
  4230                           ; BSR set to: 0
  4231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4232  001328  C0E2  F014         	movff	efgtoa@g,___fleq@ff1
  4233  00132C  C0E3  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4234  001330  C0E4  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4235  001334  C0E5  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4236  001338  0E00               	movlw	0
  4237  00133A  6E18               	movwf	___fleq@ff2^0,c
  4238  00133C  0E00               	movlw	0
  4239  00133E  6E19               	movwf	(___fleq@ff2+1)^0,c
  4240  001340  0E00               	movlw	0
  4241  001342  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4242  001344  0E00               	movlw	0
  4243  001346  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4244  001348  EC27  F02D         	call	___fleq	;wreg free
  4245  00134C  B0D8               	btfsc	status,0,c
  4246  00134E  EFAB  F009         	goto	u7621
  4247  001352  EFAD  F009         	goto	u7620
  4248  001356                     u7621:
  4249  001356  EF31  F00A         	goto	l7238
  4250  00135A                     u7620:
  4251  00135A  EFCC  F009         	goto	l7230
  4252  00135E                     l7226:
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4255  00135E  C0EA  F022         	movff	efgtoa@u,___flmul@b
  4256  001362  C0EB  F023         	movff	efgtoa@u+1,___flmul@b+1
  4257  001366  C0EC  F024         	movff	efgtoa@u+2,___flmul@b+2
  4258  00136A  C0ED  F025         	movff	efgtoa@u+3,___flmul@b+3
  4259  00136E  0E00               	movlw	0
  4260  001370  6E26               	movwf	___flmul@a^0,c
  4261  001372  0E00               	movlw	0
  4262  001374  6E27               	movwf	(___flmul@a+1)^0,c
  4263  001376  0E20               	movlw	32
  4264  001378  6E28               	movwf	(___flmul@a+2)^0,c
  4265  00137A  0E41               	movlw	65
  4266  00137C  6E29               	movwf	(___flmul@a+3)^0,c
  4267  00137E  EC0A  F021         	call	___flmul	;wreg free
  4268  001382  C022  F0EA         	movff	?___flmul,efgtoa@u
  4269  001386  C023  F0EB         	movff	?___flmul+1,efgtoa@u+1
  4270  00138A  C024  F0EC         	movff	?___flmul+2,efgtoa@u+2
  4271  00138E  C025  F0ED         	movff	?___flmul+3,efgtoa@u+3
  4272  001392                     
  4273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4274  001392  0100               	movlb	0	; () banked
  4275  001394  4BE6               	infsnz	efgtoa@e& (0+255),f,b
  4276  001396  2BE7               	incf	(efgtoa@e+1)& (0+255),f,b
  4277  001398                     l7230:
  4278                           
  4279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4280  001398  C0E2  F02E         	movff	efgtoa@g,___flge@ff1
  4281  00139C  C0E3  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  4282  0013A0  C0E4  F030         	movff	efgtoa@g+2,___flge@ff1+2
  4283  0013A4  C0E5  F031         	movff	efgtoa@g+3,___flge@ff1+3
  4284  0013A8  0E00               	movlw	0
  4285  0013AA  6E26               	movwf	___flmul@a^0,c
  4286  0013AC  0E00               	movlw	0
  4287  0013AE  6E27               	movwf	(___flmul@a+1)^0,c
  4288  0013B0  0E20               	movlw	32
  4289  0013B2  6E28               	movwf	(___flmul@a+2)^0,c
  4290  0013B4  0E41               	movlw	65
  4291  0013B6  6E29               	movwf	(___flmul@a+3)^0,c
  4292  0013B8  C0EA  F022         	movff	efgtoa@u,___flmul@b
  4293  0013BC  C0EB  F023         	movff	efgtoa@u+1,___flmul@b+1
  4294  0013C0  C0EC  F024         	movff	efgtoa@u+2,___flmul@b+2
  4295  0013C4  C0ED  F025         	movff	efgtoa@u+3,___flmul@b+3
  4296  0013C8  EC0A  F021         	call	___flmul	;wreg free
  4297  0013CC  C022  F032         	movff	?___flmul,___flge@ff2
  4298  0013D0  C023  F033         	movff	?___flmul+1,___flge@ff2+1
  4299  0013D4  C024  F034         	movff	?___flmul+2,___flge@ff2+2
  4300  0013D8  C025  F035         	movff	?___flmul+3,___flge@ff2+3
  4301  0013DC  EC34  F02A         	call	___flge	;wreg free
  4302  0013E0  B0D8               	btfsc	status,0,c
  4303  0013E2  EFF5  F009         	goto	u7631
  4304  0013E6  EFF7  F009         	goto	u7630
  4305  0013EA                     u7631:
  4306  0013EA  EFAF  F009         	goto	l7226
  4307  0013EE                     u7630:
  4308  0013EE  EF18  F00A         	goto	l7236
  4309  0013F2                     l7232:
  4310                           
  4311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4312  0013F2  C0EA  F07D         	movff	efgtoa@u,___fldiv@b
  4313  0013F6  C0EB  F07E         	movff	efgtoa@u+1,___fldiv@b+1
  4314  0013FA  C0EC  F07F         	movff	efgtoa@u+2,___fldiv@b+2
  4315  0013FE  C0ED  F080         	movff	efgtoa@u+3,___fldiv@b+3
  4316  001402  0E00               	movlw	0
  4317  001404  0100               	movlb	0	; () banked
  4318  001406  6F81               	movwf	___fldiv@a& (0+255),b
  4319  001408  0E00               	movlw	0
  4320  00140A  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  4321  00140C  0E20               	movlw	32
  4322  00140E  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  4323  001410  0E41               	movlw	65
  4324  001412  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  4325  001414  EC20  F023         	call	___fldiv	;wreg free
  4326  001418  C07D  F0EA         	movff	?___fldiv,efgtoa@u
  4327  00141C  C07E  F0EB         	movff	?___fldiv+1,efgtoa@u+1
  4328  001420  C07F  F0EC         	movff	?___fldiv+2,efgtoa@u+2
  4329  001424  C080  F0ED         	movff	?___fldiv+3,efgtoa@u+3
  4330  001428                     
  4331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4332  001428  0100               	movlb	0	; () banked
  4333  00142A  07E6               	decf	efgtoa@e& (0+255),f,b
  4334  00142C  A0D8               	btfss	status,0,c
  4335  00142E  07E7               	decf	(efgtoa@e+1)& (0+255),f,b
  4336  001430                     l7236:
  4337                           
  4338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4339  001430  C0E2  F02E         	movff	efgtoa@g,___flge@ff1
  4340  001434  C0E3  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  4341  001438  C0E4  F030         	movff	efgtoa@g+2,___flge@ff1+2
  4342  00143C  C0E5  F031         	movff	efgtoa@g+3,___flge@ff1+3
  4343  001440  C0EA  F032         	movff	efgtoa@u,___flge@ff2
  4344  001444  C0EB  F033         	movff	efgtoa@u+1,___flge@ff2+1
  4345  001448  C0EC  F034         	movff	efgtoa@u+2,___flge@ff2+2
  4346  00144C  C0ED  F035         	movff	efgtoa@u+3,___flge@ff2+3
  4347  001450  EC34  F02A         	call	___flge	;wreg free
  4348  001454  A0D8               	btfss	status,0,c
  4349  001456  EF2F  F00A         	goto	u7641
  4350  00145A  EF31  F00A         	goto	u7640
  4351  00145E                     u7641:
  4352  00145E  EFF9  F009         	goto	l7232
  4353  001462                     u7640:
  4354  001462                     l7238:
  4355                           
  4356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4357  001462  C0B0  F01A         	movff	efgtoa@c,tolower@c
  4358  001466  6A1B               	clrf	(tolower@c+1)^0,c
  4359  001468  EC8C  F02F         	call	_tolower	;wreg free
  4360  00146C  501A               	movf	?_tolower^0,w,c
  4361  00146E  0100               	movlb	0	; () banked
  4362  001470  6FD7               	movwf	efgtoa@mode& (0+255),b
  4363  001472                     
  4364                           ; BSR set to: 0
  4365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4366  001472  C0D7  F0D6         	movff	efgtoa@mode,efgtoa@nmode
  4367  001476                     
  4368                           ; BSR set to: 0
  4369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4370  001476  0E67               	movlw	103
  4371  001478  19D7               	xorwf	efgtoa@mode& (0+255),w,b
  4372  00147A  A4D8               	btfss	status,2,c
  4373  00147C  EF42  F00A         	goto	u7651
  4374  001480  EF44  F00A         	goto	u7650
  4375  001484                     u7651:
  4376  001484  EF6A  F00A         	goto	l7252
  4377  001488                     u7650:
  4378  001488                     
  4379                           ; BSR set to: 0
  4380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4381  001488  503A               	movf	_prec^0,w,c
  4382  00148A  103B               	iorwf	(_prec+1)^0,w,c
  4383  00148C  A4D8               	btfss	status,2,c
  4384  00148E  EF4B  F00A         	goto	u7661
  4385  001492  EF4D  F00A         	goto	u7660
  4386  001496                     u7661:
  4387  001496  EF51  F00A         	goto	l7248
  4388  00149A                     u7660:
  4389  00149A                     
  4390                           ; BSR set to: 0
  4391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4392  00149A  0E00               	movlw	0
  4393  00149C  6E3B               	movwf	(_prec+1)^0,c
  4394  00149E  0E01               	movlw	1
  4395  0014A0  6E3A               	movwf	_prec^0,c
  4396  0014A2                     l7248:
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4400  0014A2  BE3B               	btfsc	(_prec+1)^0,7,c
  4401  0014A4  EF5E  F00A         	goto	u7670
  4402  0014A8  503B               	movf	(_prec+1)^0,w,c
  4403  0014AA  E106               	bnz	u7671
  4404  0014AC  043A               	decf	_prec^0,w,c
  4405  0014AE  B0D8               	btfsc	status,0,c
  4406  0014B0  EF5C  F00A         	goto	u7671
  4407  0014B4  EF5E  F00A         	goto	u7670
  4408  0014B8                     u7671:
  4409  0014B8  EF64  F00A         	goto	l1191
  4410  0014BC                     u7670:
  4411  0014BC                     l7250:
  4412                           
  4413                           ; BSR set to: 0
  4414  0014BC  0E00               	movlw	0
  4415  0014BE  6FD3               	movwf	(efgtoa@p+1)& (0+255),b
  4416  0014C0  0E06               	movlw	6
  4417  0014C2  6FD2               	movwf	efgtoa@p& (0+255),b
  4418  0014C4  EF73  F00A         	goto	l7258
  4419  0014C8                     l1191:
  4420                           
  4421                           ; BSR set to: 0
  4422  0014C8  C03A  F0D2         	movff	_prec,efgtoa@p
  4423  0014CC  C03B  F0D3         	movff	_prec+1,efgtoa@p+1
  4424  0014D0  EF73  F00A         	goto	l7258
  4425  0014D4                     l7252:
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4429  0014D4  BE3B               	btfsc	(_prec+1)^0,7,c
  4430  0014D6  EF6F  F00A         	goto	u7681
  4431  0014DA  EF71  F00A         	goto	u7680
  4432  0014DE                     u7681:
  4433  0014DE  EF5E  F00A         	goto	l7250
  4434  0014E2                     u7680:
  4435  0014E2  EF64  F00A         	goto	l1191
  4436  0014E6                     l7258:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4440  0014E6  0E67               	movlw	103
  4441  0014E8  19D7               	xorwf	efgtoa@mode& (0+255),w,b
  4442  0014EA  A4D8               	btfss	status,2,c
  4443  0014EC  EF7A  F00A         	goto	u7691
  4444  0014F0  EF7C  F00A         	goto	u7690
  4445  0014F4                     u7691:
  4446  0014F4  EFAB  F00A         	goto	l7268
  4447  0014F8                     u7690:
  4448  0014F8                     
  4449                           ; BSR set to: 0
  4450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4451  0014F8  AFE7               	btfss	(efgtoa@e+1)& (0+255),7,b
  4452  0014FA  EF8A  F00A         	goto	u7700
  4453  0014FE  0EFC               	movlw	252
  4454  001500  5DE6               	subwf	efgtoa@e& (0+255),w,b
  4455  001502  0EFF               	movlw	255
  4456  001504  59E7               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4457  001506  A0D8               	btfss	status,0,c
  4458  001508  EF88  F00A         	goto	u7701
  4459  00150C  EF8A  F00A         	goto	u7700
  4460  001510                     u7701:
  4461  001510  EFA9  F00A         	goto	l7266
  4462  001514                     u7700:
  4463  001514                     
  4464                           ; BSR set to: 0
  4465  001514  0EFF               	movlw	255
  4466  001516  6FB1               	movwf	??_efgtoa& (0+255),b
  4467  001518  0EFF               	movlw	255
  4468  00151A  6FB2               	movwf	(??_efgtoa+1)& (0+255),b
  4469  00151C  C0D2  F0B3         	movff	efgtoa@p,??_efgtoa+2
  4470  001520  C0D3  F0B4         	movff	efgtoa@p+1,??_efgtoa+3
  4471  001524  51B1               	movf	??_efgtoa& (0+255),w,b
  4472  001526  27B3               	addwf	(??_efgtoa+2)& (0+255),f,b
  4473  001528  51B2               	movf	(??_efgtoa+1)& (0+255),w,b
  4474  00152A  23B4               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4475  00152C  51E6               	movf	efgtoa@e& (0+255),w,b
  4476  00152E  5DB3               	subwf	(??_efgtoa+2)& (0+255),w,b
  4477  001530  51B4               	movf	(??_efgtoa+3)& (0+255),w,b
  4478  001532  0A80               	xorlw	128
  4479  001534  6FB5               	movwf	(??_efgtoa+4)& (0+255),b
  4480  001536  51E7               	movf	(efgtoa@e+1)& (0+255),w,b
  4481  001538  0A80               	xorlw	128
  4482  00153A  59B5               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4483  00153C  A0D8               	btfss	status,0,c
  4484  00153E  EFA3  F00A         	goto	u7711
  4485  001542  EFA5  F00A         	goto	u7710
  4486  001546                     u7711:
  4487  001546  EFA9  F00A         	goto	l7266
  4488  00154A                     u7710:
  4489  00154A                     
  4490                           ; BSR set to: 0
  4491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4492  00154A  0E66               	movlw	102
  4493  00154C  6FD6               	movwf	efgtoa@nmode& (0+255),b
  4494                           
  4495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4496  00154E  EFAB  F00A         	goto	l7268
  4497  001552                     l7266:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4501  001552  0E65               	movlw	101
  4502  001554  6FD6               	movwf	efgtoa@nmode& (0+255),b
  4503  001556                     l7268:
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4507  001556  C0D2  F0C8         	movff	efgtoa@p,efgtoa@m
  4508  00155A  C0D3  F0C9         	movff	efgtoa@p+1,efgtoa@m+1
  4509  00155E                     
  4510                           ; BSR set to: 0
  4511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4512  00155E  0E67               	movlw	103
  4513  001560  19D7               	xorwf	efgtoa@mode& (0+255),w,b
  4514  001562  A4D8               	btfss	status,2,c
  4515  001564  EFB6  F00A         	goto	u7721
  4516  001568  EFB8  F00A         	goto	u7720
  4517  00156C                     u7721:
  4518  00156C  EFC8  F00A         	goto	l7276
  4519  001570                     u7720:
  4520  001570                     
  4521                           ; BSR set to: 0
  4522  001570  0E66               	movlw	102
  4523  001572  19D6               	xorwf	efgtoa@nmode& (0+255),w,b
  4524  001574  A4D8               	btfss	status,2,c
  4525  001576  EFBF  F00A         	goto	u7731
  4526  00157A  EFC1  F00A         	goto	u7730
  4527  00157E                     u7731:
  4528  00157E  EFCA  F00A         	goto	l7278
  4529  001582                     u7730:
  4530  001582                     
  4531                           ; BSR set to: 0
  4532  001582  BFE7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4533  001584  EFC8  F00A         	goto	u7740
  4534  001588  EFC6  F00A         	goto	u7741
  4535  00158C                     u7741:
  4536  00158C  EFCA  F00A         	goto	l7278
  4537  001590                     u7740:
  4538  001590                     l7276:
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4542  001590  4BC8               	infsnz	efgtoa@m& (0+255),f,b
  4543  001592  2BC9               	incf	(efgtoa@m+1)& (0+255),f,b
  4544  001594                     l7278:
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4548  001594  0E66               	movlw	102
  4549  001596  19D6               	xorwf	efgtoa@nmode& (0+255),w,b
  4550  001598  A4D8               	btfss	status,2,c
  4551  00159A  EFD1  F00A         	goto	u7751
  4552  00159E  EFD3  F00A         	goto	u7750
  4553  0015A2                     u7751:
  4554  0015A2  EFF3  F00A         	goto	l7288
  4555  0015A6                     u7750:
  4556  0015A6                     
  4557                           ; BSR set to: 0
  4558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4559  0015A6  BFE7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4560  0015A8  EFDA  F00A         	goto	u7760
  4561  0015AC  EFD8  F00A         	goto	u7761
  4562  0015B0                     u7761:
  4563  0015B0  EFE6  F00A         	goto	l7284
  4564  0015B4                     u7760:
  4565  0015B4                     
  4566                           ; BSR set to: 0
  4567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4568  0015B4  0E00               	movlw	0
  4569  0015B6  6FEA               	movwf	efgtoa@u& (0+255),b
  4570  0015B8  0E00               	movlw	0
  4571  0015BA  6FEB               	movwf	(efgtoa@u+1)& (0+255),b
  4572  0015BC  0E80               	movlw	128
  4573  0015BE  6FEC               	movwf	(efgtoa@u+2)& (0+255),b
  4574  0015C0  0E3F               	movlw	63
  4575  0015C2  6FED               	movwf	(efgtoa@u+3)& (0+255),b
  4576                           
  4577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4578  0015C4  0E00               	movlw	0
  4579  0015C6  6FE7               	movwf	(efgtoa@e+1)& (0+255),b
  4580  0015C8  0E00               	movlw	0
  4581  0015CA  6FE6               	movwf	efgtoa@e& (0+255),b
  4582  0015CC                     l7284:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4586  0015CC  0E67               	movlw	103
  4587  0015CE  19D7               	xorwf	efgtoa@mode& (0+255),w,b
  4588  0015D0  B4D8               	btfsc	status,2,c
  4589  0015D2  EFED  F00A         	goto	u7771
  4590  0015D6  EFEF  F00A         	goto	u7770
  4591  0015DA                     u7771:
  4592  0015DA  EFF3  F00A         	goto	l7288
  4593  0015DE                     u7770:
  4594  0015DE                     
  4595                           ; BSR set to: 0
  4596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4597  0015DE  51E6               	movf	efgtoa@e& (0+255),w,b
  4598  0015E0  27C8               	addwf	efgtoa@m& (0+255),f,b
  4599  0015E2  51E7               	movf	(efgtoa@e+1)& (0+255),w,b
  4600  0015E4  23C9               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4601  0015E6                     l7288:
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4605  0015E6  0E00               	movlw	0
  4606  0015E8  6FE1               	movwf	(efgtoa@i+1)& (0+255),b
  4607  0015EA  0E00               	movlw	0
  4608  0015EC  6FE0               	movwf	efgtoa@i& (0+255),b
  4609  0015EE                     
  4610                           ; BSR set to: 0
  4611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4612  0015EE  C0E2  F0D8         	movff	efgtoa@g,efgtoa@h
  4613  0015F2  C0E3  F0D9         	movff	efgtoa@g+1,efgtoa@h+1
  4614  0015F6  C0E4  F0DA         	movff	efgtoa@g+2,efgtoa@h+2
  4615  0015FA  C0E5  F0DB         	movff	efgtoa@g+3,efgtoa@h+3
  4616  0015FE                     
  4617                           ; BSR set to: 0
  4618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4619  0015FE  C0EA  F0CA         	movff	efgtoa@u,efgtoa@ou
  4620  001602  C0EB  F0CB         	movff	efgtoa@u+1,efgtoa@ou+1
  4621  001606  C0EC  F0CC         	movff	efgtoa@u+2,efgtoa@ou+2
  4622  00160A  C0ED  F0CD         	movff	efgtoa@u+3,efgtoa@ou+3
  4623                           
  4624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4625  00160E  EF85  F00B         	goto	l7302
  4626  001612                     l7294:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4630  001612  C0D8  F07D         	movff	efgtoa@h,___fldiv@b
  4631  001616  C0D9  F07E         	movff	efgtoa@h+1,___fldiv@b+1
  4632  00161A  C0DA  F07F         	movff	efgtoa@h+2,___fldiv@b+2
  4633  00161E  C0DB  F080         	movff	efgtoa@h+3,___fldiv@b+3
  4634  001622  C0EA  F081         	movff	efgtoa@u,___fldiv@a
  4635  001626  C0EB  F082         	movff	efgtoa@u+1,___fldiv@a+1
  4636  00162A  C0EC  F083         	movff	efgtoa@u+2,___fldiv@a+2
  4637  00162E  C0ED  F084         	movff	efgtoa@u+3,___fldiv@a+3
  4638  001632  EC20  F023         	call	___fldiv	;wreg free
  4639  001636  C07D  F096         	movff	?___fldiv,floorf@x
  4640  00163A  C07E  F097         	movff	?___fldiv+1,floorf@x+1
  4641  00163E  C07F  F098         	movff	?___fldiv+2,floorf@x+2
  4642  001642  C080  F099         	movff	?___fldiv+3,floorf@x+3
  4643  001646  ECEE  F024         	call	_floorf	;wreg free
  4644  00164A  C096  F0DC         	movff	?_floorf,efgtoa@l
  4645  00164E  C097  F0DD         	movff	?_floorf+1,efgtoa@l+1
  4646  001652  C098  F0DE         	movff	?_floorf+2,efgtoa@l+2
  4647  001656  C099  F0DF         	movff	?_floorf+3,efgtoa@l+3
  4648                           
  4649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4650  00165A  C0DC  F07D         	movff	efgtoa@l,___fltol@f1
  4651  00165E  C0DD  F07E         	movff	efgtoa@l+1,___fltol@f1+1
  4652  001662  C0DE  F07F         	movff	efgtoa@l+2,___fltol@f1+2
  4653  001666  C0DF  F080         	movff	efgtoa@l+3,___fltol@f1+3
  4654  00166A  ECB0  F029         	call	___fltol	;wreg free
  4655  00166E  C07D  F0CE         	movff	?___fltol,efgtoa@d
  4656  001672  C07E  F0CF         	movff	?___fltol+1,efgtoa@d+1
  4657  001676                     
  4658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4659  001676  C0D8  F075         	movff	efgtoa@h,___flsub@b
  4660  00167A  C0D9  F076         	movff	efgtoa@h+1,___flsub@b+1
  4661  00167E  C0DA  F077         	movff	efgtoa@h+2,___flsub@b+2
  4662  001682  C0DB  F078         	movff	efgtoa@h+3,___flsub@b+3
  4663  001686  C0EA  F026         	movff	efgtoa@u,___flmul@a
  4664  00168A  C0EB  F027         	movff	efgtoa@u+1,___flmul@a+1
  4665  00168E  C0EC  F028         	movff	efgtoa@u+2,___flmul@a+2
  4666  001692  C0ED  F029         	movff	efgtoa@u+3,___flmul@a+3
  4667  001696  C0DC  F022         	movff	efgtoa@l,___flmul@b
  4668  00169A  C0DD  F023         	movff	efgtoa@l+1,___flmul@b+1
  4669  00169E  C0DE  F024         	movff	efgtoa@l+2,___flmul@b+2
  4670  0016A2  C0DF  F025         	movff	efgtoa@l+3,___flmul@b+3
  4671  0016A6  EC0A  F021         	call	___flmul	;wreg free
  4672  0016AA  C022  F079         	movff	?___flmul,___flsub@a
  4673  0016AE  C023  F07A         	movff	?___flmul+1,___flsub@a+1
  4674  0016B2  C024  F07B         	movff	?___flmul+2,___flsub@a+2
  4675  0016B6  C025  F07C         	movff	?___flmul+3,___flsub@a+3
  4676  0016BA  EC3E  F030         	call	___flsub	;wreg free
  4677  0016BE  C075  F0D8         	movff	?___flsub,efgtoa@h
  4678  0016C2  C076  F0D9         	movff	?___flsub+1,efgtoa@h+1
  4679  0016C6  C077  F0DA         	movff	?___flsub+2,efgtoa@h+2
  4680  0016CA  C078  F0DB         	movff	?___flsub+3,efgtoa@h+3
  4681  0016CE                     
  4682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4683  0016CE  C0EA  F07D         	movff	efgtoa@u,___fldiv@b
  4684  0016D2  C0EB  F07E         	movff	efgtoa@u+1,___fldiv@b+1
  4685  0016D6  C0EC  F07F         	movff	efgtoa@u+2,___fldiv@b+2
  4686  0016DA  C0ED  F080         	movff	efgtoa@u+3,___fldiv@b+3
  4687  0016DE  0E00               	movlw	0
  4688  0016E0  0100               	movlb	0	; () banked
  4689  0016E2  6F81               	movwf	___fldiv@a& (0+255),b
  4690  0016E4  0E00               	movlw	0
  4691  0016E6  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  4692  0016E8  0E20               	movlw	32
  4693  0016EA  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  4694  0016EC  0E41               	movlw	65
  4695  0016EE  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  4696  0016F0  EC20  F023         	call	___fldiv	;wreg free
  4697  0016F4  C07D  F0EA         	movff	?___fldiv,efgtoa@u
  4698  0016F8  C07E  F0EB         	movff	?___fldiv+1,efgtoa@u+1
  4699  0016FC  C07F  F0EC         	movff	?___fldiv+2,efgtoa@u+2
  4700  001700  C080  F0ED         	movff	?___fldiv+3,efgtoa@u+3
  4701  001704                     
  4702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4703  001704  0100               	movlb	0	; () banked
  4704  001706  4BE0               	infsnz	efgtoa@i& (0+255),f,b
  4705  001708  2BE1               	incf	(efgtoa@i+1)& (0+255),f,b
  4706  00170A                     l7302:
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4710  00170A  51C8               	movf	efgtoa@m& (0+255),w,b
  4711  00170C  5DE0               	subwf	efgtoa@i& (0+255),w,b
  4712  00170E  51E1               	movf	(efgtoa@i+1)& (0+255),w,b
  4713  001710  0A80               	xorlw	128
  4714  001712  6FB1               	movwf	??_efgtoa& (0+255),b
  4715  001714  51C9               	movf	(efgtoa@m+1)& (0+255),w,b
  4716  001716  0A80               	xorlw	128
  4717  001718  59B1               	subwfb	??_efgtoa& (0+255),w,b
  4718  00171A  A0D8               	btfss	status,0,c
  4719  00171C  EF92  F00B         	goto	u7781
  4720  001720  EF94  F00B         	goto	u7780
  4721  001724                     u7781:
  4722  001724  EF09  F00B         	goto	l7294
  4723  001728                     u7780:
  4724  001728                     
  4725                           ; BSR set to: 0
  4726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4727  001728  C0EA  F022         	movff	efgtoa@u,___flmul@b
  4728  00172C  C0EB  F023         	movff	efgtoa@u+1,___flmul@b+1
  4729  001730  C0EC  F024         	movff	efgtoa@u+2,___flmul@b+2
  4730  001734  C0ED  F025         	movff	efgtoa@u+3,___flmul@b+3
  4731  001738  0E00               	movlw	0
  4732  00173A  6E26               	movwf	___flmul@a^0,c
  4733  00173C  0E00               	movlw	0
  4734  00173E  6E27               	movwf	(___flmul@a+1)^0,c
  4735  001740  0EA0               	movlw	160
  4736  001742  6E28               	movwf	(___flmul@a+2)^0,c
  4737  001744  0E40               	movlw	64
  4738  001746  6E29               	movwf	(___flmul@a+3)^0,c
  4739  001748  EC0A  F021         	call	___flmul	;wreg free
  4740  00174C  C022  F0DC         	movff	?___flmul,efgtoa@l
  4741  001750  C023  F0DD         	movff	?___flmul+1,efgtoa@l+1
  4742  001754  C024  F0DE         	movff	?___flmul+2,efgtoa@l+2
  4743  001758  C025  F0DF         	movff	?___flmul+3,efgtoa@l+3
  4744  00175C                     
  4745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4746  00175C  C0D8  F02E         	movff	efgtoa@h,___flge@ff1
  4747  001760  C0D9  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  4748  001764  C0DA  F030         	movff	efgtoa@h+2,___flge@ff1+2
  4749  001768  C0DB  F031         	movff	efgtoa@h+3,___flge@ff1+3
  4750  00176C  C0DC  F032         	movff	efgtoa@l,___flge@ff2
  4751  001770  C0DD  F033         	movff	efgtoa@l+1,___flge@ff2+1
  4752  001774  C0DE  F034         	movff	efgtoa@l+2,___flge@ff2+2
  4753  001778  C0DF  F035         	movff	efgtoa@l+3,___flge@ff2+3
  4754  00177C  EC34  F02A         	call	___flge	;wreg free
  4755  001780  B0D8               	btfsc	status,0,c
  4756  001782  EFC5  F00B         	goto	u7791
  4757  001786  EFC7  F00B         	goto	u7790
  4758  00178A                     u7791:
  4759  00178A  EFD2  F00B         	goto	l7310
  4760  00178E                     u7790:
  4761  00178E                     
  4762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4763  00178E  0E00               	movlw	0
  4764  001790  0100               	movlb	0	; () banked
  4765  001792  6FDC               	movwf	efgtoa@l& (0+255),b
  4766  001794  0E00               	movlw	0
  4767  001796  6FDD               	movwf	(efgtoa@l+1)& (0+255),b
  4768  001798  0E00               	movlw	0
  4769  00179A  6FDE               	movwf	(efgtoa@l+2)& (0+255),b
  4770  00179C  0E00               	movlw	0
  4771  00179E  6FDF               	movwf	(efgtoa@l+3)& (0+255),b
  4772                           
  4773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4774  0017A0  EFFB  F00B         	goto	l7316
  4775  0017A4                     l7310:
  4776                           
  4777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4778  0017A4  C0D8  F014         	movff	efgtoa@h,___fleq@ff1
  4779  0017A8  C0D9  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  4780  0017AC  C0DA  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  4781  0017B0  C0DB  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  4782  0017B4  C0DC  F018         	movff	efgtoa@l,___fleq@ff2
  4783  0017B8  C0DD  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  4784  0017BC  C0DE  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  4785  0017C0  C0DF  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  4786  0017C4  EC27  F02D         	call	___fleq	;wreg free
  4787  0017C8  A0D8               	btfss	status,0,c
  4788  0017CA  EFE9  F00B         	goto	u7801
  4789  0017CE  EFEB  F00B         	goto	u7800
  4790  0017D2                     u7801:
  4791  0017D2  EFFB  F00B         	goto	l7316
  4792  0017D6                     u7800:
  4793  0017D6  0100               	movlb	0	; () banked
  4794  0017D8  B1CE               	btfsc	efgtoa@d& (0+255),0,b
  4795  0017DA  EFF1  F00B         	goto	u7811
  4796  0017DE  EFF3  F00B         	goto	u7810
  4797  0017E2                     u7811:
  4798  0017E2  EFFB  F00B         	goto	l7316
  4799  0017E6                     u7810:
  4800  0017E6                     
  4801                           ; BSR set to: 0
  4802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4803  0017E6  0E00               	movlw	0
  4804  0017E8  6FDC               	movwf	efgtoa@l& (0+255),b
  4805  0017EA  0E00               	movlw	0
  4806  0017EC  6FDD               	movwf	(efgtoa@l+1)& (0+255),b
  4807  0017EE  0E00               	movlw	0
  4808  0017F0  6FDE               	movwf	(efgtoa@l+2)& (0+255),b
  4809  0017F2  0E00               	movlw	0
  4810  0017F4  6FDF               	movwf	(efgtoa@l+3)& (0+255),b
  4811  0017F6                     l7316:
  4812                           
  4813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4814  0017F6  C0E2  F02E         	movff	efgtoa@g,___fladd@b
  4815  0017FA  C0E3  F02F         	movff	efgtoa@g+1,___fladd@b+1
  4816  0017FE  C0E4  F030         	movff	efgtoa@g+2,___fladd@b+2
  4817  001802  C0E5  F031         	movff	efgtoa@g+3,___fladd@b+3
  4818  001806  C0DC  F032         	movff	efgtoa@l,___fladd@a
  4819  00180A  C0DD  F033         	movff	efgtoa@l+1,___fladd@a+1
  4820  00180E  C0DE  F034         	movff	efgtoa@l+2,___fladd@a+2
  4821  001812  C0DF  F035         	movff	efgtoa@l+3,___fladd@a+3
  4822  001816  EC57  F01C         	call	___fladd	;wreg free
  4823  00181A  C02E  F0D8         	movff	?___fladd,efgtoa@h
  4824  00181E  C02F  F0D9         	movff	?___fladd+1,efgtoa@h+1
  4825  001822  C030  F0DA         	movff	?___fladd+2,efgtoa@h+2
  4826  001826  C031  F0DB         	movff	?___fladd+3,efgtoa@h+3
  4827  00182A                     
  4828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4829  00182A  C0D8  F02E         	movff	efgtoa@h,___flge@ff1
  4830  00182E  C0D9  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  4831  001832  C0DA  F030         	movff	efgtoa@h+2,___flge@ff1+2
  4832  001836  C0DB  F031         	movff	efgtoa@h+3,___flge@ff1+3
  4833  00183A  0E00               	movlw	0
  4834  00183C  6E26               	movwf	___flmul@a^0,c
  4835  00183E  0E00               	movlw	0
  4836  001840  6E27               	movwf	(___flmul@a+1)^0,c
  4837  001842  0E20               	movlw	32
  4838  001844  6E28               	movwf	(___flmul@a+2)^0,c
  4839  001846  0E41               	movlw	65
  4840  001848  6E29               	movwf	(___flmul@a+3)^0,c
  4841  00184A  C0CA  F022         	movff	efgtoa@ou,___flmul@b
  4842  00184E  C0CB  F023         	movff	efgtoa@ou+1,___flmul@b+1
  4843  001852  C0CC  F024         	movff	efgtoa@ou+2,___flmul@b+2
  4844  001856  C0CD  F025         	movff	efgtoa@ou+3,___flmul@b+3
  4845  00185A  EC0A  F021         	call	___flmul	;wreg free
  4846  00185E  C022  F032         	movff	?___flmul,___flge@ff2
  4847  001862  C023  F033         	movff	?___flmul+1,___flge@ff2+1
  4848  001866  C024  F034         	movff	?___flmul+2,___flge@ff2+2
  4849  00186A  C025  F035         	movff	?___flmul+3,___flge@ff2+3
  4850  00186E  EC34  F02A         	call	___flge	;wreg free
  4851  001872  A0D8               	btfss	status,0,c
  4852  001874  EF3E  F00C         	goto	u7821
  4853  001878  EF40  F00C         	goto	u7820
  4854  00187C                     u7821:
  4855  00187C  EF69  F00C         	goto	l7328
  4856  001880                     u7820:
  4857  001880                     
  4858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4859  001880  0100               	movlb	0	; () banked
  4860  001882  4BE6               	infsnz	efgtoa@e& (0+255),f,b
  4861  001884  2BE7               	incf	(efgtoa@e+1)& (0+255),f,b
  4862  001886                     
  4863                           ; BSR set to: 0
  4864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4865  001886  C0CA  F022         	movff	efgtoa@ou,___flmul@b
  4866  00188A  C0CB  F023         	movff	efgtoa@ou+1,___flmul@b+1
  4867  00188E  C0CC  F024         	movff	efgtoa@ou+2,___flmul@b+2
  4868  001892  C0CD  F025         	movff	efgtoa@ou+3,___flmul@b+3
  4869  001896  0E00               	movlw	0
  4870  001898  6E26               	movwf	___flmul@a^0,c
  4871  00189A  0E00               	movlw	0
  4872  00189C  6E27               	movwf	(___flmul@a+1)^0,c
  4873  00189E  0E20               	movlw	32
  4874  0018A0  6E28               	movwf	(___flmul@a+2)^0,c
  4875  0018A2  0E41               	movlw	65
  4876  0018A4  6E29               	movwf	(___flmul@a+3)^0,c
  4877  0018A6  EC0A  F021         	call	___flmul	;wreg free
  4878  0018AA  C022  F0CA         	movff	?___flmul,efgtoa@ou
  4879  0018AE  C023  F0CB         	movff	?___flmul+1,efgtoa@ou+1
  4880  0018B2  C024  F0CC         	movff	?___flmul+2,efgtoa@ou+2
  4881  0018B6  C025  F0CD         	movff	?___flmul+3,efgtoa@ou+3
  4882  0018BA                     
  4883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4884  0018BA  0E66               	movlw	102
  4885  0018BC  0100               	movlb	0	; () banked
  4886  0018BE  19D6               	xorwf	efgtoa@nmode& (0+255),w,b
  4887  0018C0  A4D8               	btfss	status,2,c
  4888  0018C2  EF65  F00C         	goto	u7831
  4889  0018C6  EF67  F00C         	goto	u7830
  4890  0018CA                     u7831:
  4891  0018CA  EF69  F00C         	goto	l7328
  4892  0018CE                     u7830:
  4893  0018CE                     
  4894                           ; BSR set to: 0
  4895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4896  0018CE  4BC8               	infsnz	efgtoa@m& (0+255),f,b
  4897  0018D0  2BC9               	incf	(efgtoa@m+1)& (0+255),f,b
  4898  0018D2                     l7328:
  4899                           
  4900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4901  0018D2  C0CA  F0EA         	movff	efgtoa@ou,efgtoa@u
  4902  0018D6  C0CB  F0EB         	movff	efgtoa@ou+1,efgtoa@u+1
  4903  0018DA  C0CC  F0EC         	movff	efgtoa@ou+2,efgtoa@u+2
  4904  0018DE  C0CD  F0ED         	movff	efgtoa@ou+3,efgtoa@u+3
  4905  0018E2                     
  4906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4907  0018E2  0E65               	movlw	101
  4908  0018E4  0100               	movlb	0	; () banked
  4909  0018E6  19D6               	xorwf	efgtoa@nmode& (0+255),w,b
  4910  0018E8  B4D8               	btfsc	status,2,c
  4911  0018EA  EF79  F00C         	goto	u7841
  4912  0018EE  EF7B  F00C         	goto	u7840
  4913  0018F2                     u7841:
  4914  0018F2  EF81  F00C         	goto	l7334
  4915  0018F6                     u7840:
  4916  0018F6                     
  4917                           ; BSR set to: 0
  4918  0018F6  C0E6  F0C6         	movff	efgtoa@e,efgtoa@ne
  4919  0018FA  C0E7  F0C7         	movff	efgtoa@e+1,efgtoa@ne+1
  4920  0018FE  EF85  F00C         	goto	l1219
  4921  001902                     l7334:
  4922                           
  4923                           ; BSR set to: 0
  4924  001902  0E00               	movlw	0
  4925  001904  6FC7               	movwf	(efgtoa@ne+1)& (0+255),b
  4926  001906  0E00               	movlw	0
  4927  001908  6FC6               	movwf	efgtoa@ne& (0+255),b
  4928  00190A                     l1219:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4932  00190A  0E00               	movlw	0
  4933  00190C  6FC5               	movwf	(efgtoa@pp+1)& (0+255),b
  4934  00190E  0E00               	movlw	0
  4935  001910  6FC4               	movwf	efgtoa@pp& (0+255),b
  4936                           
  4937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4938  001912  0E00               	movlw	0
  4939  001914  6FC3               	movwf	(efgtoa@t+1)& (0+255),b
  4940  001916  0E00               	movlw	0
  4941  001918  6FC2               	movwf	efgtoa@t& (0+255),b
  4942                           
  4943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4944  00191A  0E00               	movlw	0
  4945  00191C  6FE1               	movwf	(efgtoa@i+1)& (0+255),b
  4946  00191E  0E00               	movlw	0
  4947  001920  6FE0               	movwf	efgtoa@i& (0+255),b
  4948                           
  4949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4950  001922  EF82  F00D         	goto	l7384
  4951  001926                     l7336:
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4955  001926  C0D8  F07D         	movff	efgtoa@h,___fldiv@b
  4956  00192A  C0D9  F07E         	movff	efgtoa@h+1,___fldiv@b+1
  4957  00192E  C0DA  F07F         	movff	efgtoa@h+2,___fldiv@b+2
  4958  001932  C0DB  F080         	movff	efgtoa@h+3,___fldiv@b+3
  4959  001936  C0EA  F081         	movff	efgtoa@u,___fldiv@a
  4960  00193A  C0EB  F082         	movff	efgtoa@u+1,___fldiv@a+1
  4961  00193E  C0EC  F083         	movff	efgtoa@u+2,___fldiv@a+2
  4962  001942  C0ED  F084         	movff	efgtoa@u+3,___fldiv@a+3
  4963  001946  EC20  F023         	call	___fldiv	;wreg free
  4964  00194A  C07D  F096         	movff	?___fldiv,floorf@x
  4965  00194E  C07E  F097         	movff	?___fldiv+1,floorf@x+1
  4966  001952  C07F  F098         	movff	?___fldiv+2,floorf@x+2
  4967  001956  C080  F099         	movff	?___fldiv+3,floorf@x+3
  4968  00195A  ECEE  F024         	call	_floorf	;wreg free
  4969  00195E  C096  F0DC         	movff	?_floorf,efgtoa@l
  4970  001962  C097  F0DD         	movff	?_floorf+1,efgtoa@l+1
  4971  001966  C098  F0DE         	movff	?_floorf+2,efgtoa@l+2
  4972  00196A  C099  F0DF         	movff	?_floorf+3,efgtoa@l+3
  4973                           
  4974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4975  00196E  C0DC  F07D         	movff	efgtoa@l,___fltol@f1
  4976  001972  C0DD  F07E         	movff	efgtoa@l+1,___fltol@f1+1
  4977  001976  C0DE  F07F         	movff	efgtoa@l+2,___fltol@f1+2
  4978  00197A  C0DF  F080         	movff	efgtoa@l+3,___fltol@f1+3
  4979  00197E  ECB0  F029         	call	___fltol	;wreg free
  4980  001982  C07D  F0CE         	movff	?___fltol,efgtoa@d
  4981  001986  C07E  F0CF         	movff	?___fltol+1,efgtoa@d+1
  4982  00198A                     
  4983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4984  00198A  B83C               	btfsc	_flags^0,4,c
  4985  00198C  EFCA  F00C         	goto	u7851
  4986  001990  EFCC  F00C         	goto	u7850
  4987  001994                     u7851:
  4988  001994  EFEA  F00C         	goto	l7348
  4989  001998                     u7850:
  4990  001998  0100               	movlb	0	; () banked
  4991  00199A  51CE               	movf	efgtoa@d& (0+255),w,b
  4992  00199C  11CF               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4993  00199E  A4D8               	btfss	status,2,c
  4994  0019A0  EFD4  F00C         	goto	u7861
  4995  0019A4  EFD6  F00C         	goto	u7860
  4996  0019A8                     u7861:
  4997  0019A8  EFEA  F00C         	goto	l7348
  4998  0019AC                     u7860:
  4999  0019AC                     
  5000                           ; BSR set to: 0
  5001  0019AC  0E67               	movlw	103
  5002  0019AE  19D7               	xorwf	efgtoa@mode& (0+255),w,b
  5003  0019B0  A4D8               	btfss	status,2,c
  5004  0019B2  EFDD  F00C         	goto	u7871
  5005  0019B6  EFDF  F00C         	goto	u7870
  5006  0019BA                     u7871:
  5007  0019BA  EFEA  F00C         	goto	l7348
  5008  0019BE                     u7870:
  5009  0019BE                     
  5010                           ; BSR set to: 0
  5011  0019BE  BFC7               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5012  0019C0  EFE6  F00C         	goto	u7880
  5013  0019C4  EFE4  F00C         	goto	u7881
  5014  0019C8                     u7881:
  5015  0019C8  EFEA  F00C         	goto	l7348
  5016  0019CC                     u7880:
  5017  0019CC                     
  5018                           ; BSR set to: 0
  5019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5020  0019CC  4BC2               	infsnz	efgtoa@t& (0+255),f,b
  5021  0019CE  2BC3               	incf	(efgtoa@t+1)& (0+255),f,b
  5022                           
  5023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5024  0019D0  EF35  F00D         	goto	l7376
  5025  0019D4                     l7348:
  5026                           
  5027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5028  0019D4  0100               	movlb	0	; () banked
  5029  0019D6  51C4               	movf	efgtoa@pp& (0+255),w,b
  5030  0019D8  11C5               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5031  0019DA  A4D8               	btfss	status,2,c
  5032  0019DC  EFF2  F00C         	goto	u7891
  5033  0019E0  EFF4  F00C         	goto	u7890
  5034  0019E4                     u7891:
  5035  0019E4  EF1E  F00D         	goto	l7368
  5036  0019E8                     u7890:
  5037  0019E8                     
  5038                           ; BSR set to: 0
  5039  0019E8  BFC7               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5040  0019EA  EFFB  F00C         	goto	u7900
  5041  0019EE  EFF9  F00C         	goto	u7901
  5042  0019F2                     u7901:
  5043  0019F2  EF1E  F00D         	goto	l7368
  5044  0019F6                     u7900:
  5045  0019F6                     
  5046                           ; BSR set to: 0
  5047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5048  0019F6  0E00               	movlw	low _dbuf
  5049  0019F8  25E8               	addwf	efgtoa@n& (0+255),w,b
  5050  0019FA  6ED9               	movwf	fsr2l,c
  5051  0019FC  0E02               	movlw	high _dbuf
  5052  0019FE  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5053  001A00  6EDA               	movwf	fsr2h,c
  5054  001A02  0E2E               	movlw	46
  5055  001A04  6EDF               	movwf	indf2,c
  5056  001A06                     
  5057                           ; BSR set to: 0
  5058  001A06  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  5059  001A08  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  5060  001A0A                     
  5061                           ; BSR set to: 0
  5062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5063  001A0A  07D4               	decf	efgtoa@w& (0+255),f,b
  5064  001A0C  A0D8               	btfss	status,0,c
  5065  001A0E  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  5066  001A10                     
  5067                           ; BSR set to: 0
  5068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5069  001A10  0E00               	movlw	0
  5070  001A12  6FC5               	movwf	(efgtoa@pp+1)& (0+255),b
  5071  001A14  0E01               	movlw	1
  5072  001A16  6FC4               	movwf	efgtoa@pp& (0+255),b
  5073  001A18  EF1E  F00D         	goto	l7368
  5074  001A1C                     l7360:
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5078  001A1C  0E00               	movlw	low _dbuf
  5079  001A1E  25E8               	addwf	efgtoa@n& (0+255),w,b
  5080  001A20  6ED9               	movwf	fsr2l,c
  5081  001A22  0E02               	movlw	high _dbuf
  5082  001A24  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5083  001A26  6EDA               	movwf	fsr2h,c
  5084  001A28  0E30               	movlw	48
  5085  001A2A  6EDF               	movwf	indf2,c
  5086  001A2C                     
  5087                           ; BSR set to: 0
  5088  001A2C  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  5089  001A2E  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  5090  001A30                     
  5091                           ; BSR set to: 0
  5092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5093  001A30  07D4               	decf	efgtoa@w& (0+255),f,b
  5094  001A32  A0D8               	btfss	status,0,c
  5095  001A34  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  5096  001A36                     
  5097                           ; BSR set to: 0
  5098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5099  001A36  07C2               	decf	efgtoa@t& (0+255),f,b
  5100  001A38  A0D8               	btfss	status,0,c
  5101  001A3A  07C3               	decf	(efgtoa@t+1)& (0+255),f,b
  5102  001A3C                     l7368:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5106  001A3C  51C2               	movf	efgtoa@t& (0+255),w,b
  5107  001A3E  11C3               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5108  001A40  A4D8               	btfss	status,2,c
  5109  001A42  EF25  F00D         	goto	u7911
  5110  001A46  EF27  F00D         	goto	u7910
  5111  001A4A                     u7911:
  5112  001A4A  EF0E  F00D         	goto	l7360
  5113  001A4E                     u7910:
  5114  001A4E                     
  5115                           ; BSR set to: 0
  5116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5117  001A4E  0E00               	movlw	low _dbuf
  5118  001A50  25E8               	addwf	efgtoa@n& (0+255),w,b
  5119  001A52  6ED9               	movwf	fsr2l,c
  5120  001A54  0E02               	movlw	high _dbuf
  5121  001A56  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5122  001A58  6EDA               	movwf	fsr2h,c
  5123  001A5A  51CE               	movf	efgtoa@d& (0+255),w,b
  5124  001A5C  0F30               	addlw	48
  5125  001A5E  6EDF               	movwf	indf2,c
  5126  001A60                     
  5127                           ; BSR set to: 0
  5128  001A60  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  5129  001A62  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  5130  001A64                     
  5131                           ; BSR set to: 0
  5132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5133  001A64  07D4               	decf	efgtoa@w& (0+255),f,b
  5134  001A66  A0D8               	btfss	status,0,c
  5135  001A68  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  5136  001A6A                     l7376:
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5140  001A6A  C0D8  F075         	movff	efgtoa@h,___flsub@b
  5141  001A6E  C0D9  F076         	movff	efgtoa@h+1,___flsub@b+1
  5142  001A72  C0DA  F077         	movff	efgtoa@h+2,___flsub@b+2
  5143  001A76  C0DB  F078         	movff	efgtoa@h+3,___flsub@b+3
  5144  001A7A  C0EA  F026         	movff	efgtoa@u,___flmul@a
  5145  001A7E  C0EB  F027         	movff	efgtoa@u+1,___flmul@a+1
  5146  001A82  C0EC  F028         	movff	efgtoa@u+2,___flmul@a+2
  5147  001A86  C0ED  F029         	movff	efgtoa@u+3,___flmul@a+3
  5148  001A8A  C0DC  F022         	movff	efgtoa@l,___flmul@b
  5149  001A8E  C0DD  F023         	movff	efgtoa@l+1,___flmul@b+1
  5150  001A92  C0DE  F024         	movff	efgtoa@l+2,___flmul@b+2
  5151  001A96  C0DF  F025         	movff	efgtoa@l+3,___flmul@b+3
  5152  001A9A  EC0A  F021         	call	___flmul	;wreg free
  5153  001A9E  C022  F079         	movff	?___flmul,___flsub@a
  5154  001AA2  C023  F07A         	movff	?___flmul+1,___flsub@a+1
  5155  001AA6  C024  F07B         	movff	?___flmul+2,___flsub@a+2
  5156  001AAA  C025  F07C         	movff	?___flmul+3,___flsub@a+3
  5157  001AAE  EC3E  F030         	call	___flsub	;wreg free
  5158  001AB2  C075  F0D8         	movff	?___flsub,efgtoa@h
  5159  001AB6  C076  F0D9         	movff	?___flsub+1,efgtoa@h+1
  5160  001ABA  C077  F0DA         	movff	?___flsub+2,efgtoa@h+2
  5161  001ABE  C078  F0DB         	movff	?___flsub+3,efgtoa@h+3
  5162  001AC2                     
  5163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5164  001AC2  C0EA  F07D         	movff	efgtoa@u,___fldiv@b
  5165  001AC6  C0EB  F07E         	movff	efgtoa@u+1,___fldiv@b+1
  5166  001ACA  C0EC  F07F         	movff	efgtoa@u+2,___fldiv@b+2
  5167  001ACE  C0ED  F080         	movff	efgtoa@u+3,___fldiv@b+3
  5168  001AD2  0E00               	movlw	0
  5169  001AD4  0100               	movlb	0	; () banked
  5170  001AD6  6F81               	movwf	___fldiv@a& (0+255),b
  5171  001AD8  0E00               	movlw	0
  5172  001ADA  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  5173  001ADC  0E20               	movlw	32
  5174  001ADE  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  5175  001AE0  0E41               	movlw	65
  5176  001AE2  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  5177  001AE4  EC20  F023         	call	___fldiv	;wreg free
  5178  001AE8  C07D  F0EA         	movff	?___fldiv,efgtoa@u
  5179  001AEC  C07E  F0EB         	movff	?___fldiv+1,efgtoa@u+1
  5180  001AF0  C07F  F0EC         	movff	?___fldiv+2,efgtoa@u+2
  5181  001AF4  C080  F0ED         	movff	?___fldiv+3,efgtoa@u+3
  5182  001AF8                     
  5183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5184  001AF8  0100               	movlb	0	; () banked
  5185  001AFA  07C6               	decf	efgtoa@ne& (0+255),f,b
  5186  001AFC  A0D8               	btfss	status,0,c
  5187  001AFE  07C7               	decf	(efgtoa@ne+1)& (0+255),f,b
  5188  001B00                     
  5189                           ; BSR set to: 0
  5190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5191  001B00  4BE0               	infsnz	efgtoa@i& (0+255),f,b
  5192  001B02  2BE1               	incf	(efgtoa@i+1)& (0+255),f,b
  5193  001B04                     l7384:
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5197  001B04  51C8               	movf	efgtoa@m& (0+255),w,b
  5198  001B06  5DE0               	subwf	efgtoa@i& (0+255),w,b
  5199  001B08  51E1               	movf	(efgtoa@i+1)& (0+255),w,b
  5200  001B0A  0A80               	xorlw	128
  5201  001B0C  6FB1               	movwf	??_efgtoa& (0+255),b
  5202  001B0E  51C9               	movf	(efgtoa@m+1)& (0+255),w,b
  5203  001B10  0A80               	xorlw	128
  5204  001B12  59B1               	subwfb	??_efgtoa& (0+255),w,b
  5205  001B14  B0D8               	btfsc	status,0,c
  5206  001B16  EF8F  F00D         	goto	u7921
  5207  001B1A  EF91  F00D         	goto	u7920
  5208  001B1E                     u7921:
  5209  001B1E  EF9F  F00D         	goto	l7388
  5210  001B22                     u7920:
  5211  001B22                     
  5212                           ; BSR set to: 0
  5213  001B22  BFE9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5214  001B24  EF9D  F00D         	goto	u7931
  5215  001B28  51E9               	movf	(efgtoa@n+1)& (0+255),w,b
  5216  001B2A  E109               	bnz	u7930
  5217  001B2C  0E4B               	movlw	75
  5218  001B2E  5DE8               	subwf	efgtoa@n& (0+255),w,b
  5219  001B30  A0D8               	btfss	status,0,c
  5220  001B32  EF9D  F00D         	goto	u7931
  5221  001B36  EF9F  F00D         	goto	u7930
  5222  001B3A                     u7931:
  5223  001B3A  EF93  F00C         	goto	l7336
  5224  001B3E                     u7930:
  5225  001B3E                     l7388:
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5229  001B3E  51C4               	movf	efgtoa@pp& (0+255),w,b
  5230  001B40  11C5               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5231  001B42  A4D8               	btfss	status,2,c
  5232  001B44  EFA6  F00D         	goto	u7941
  5233  001B48  EFA8  F00D         	goto	u7940
  5234  001B4C                     u7941:
  5235  001B4C  EFB9  F00D         	goto	l7396
  5236  001B50                     u7940:
  5237  001B50                     
  5238                           ; BSR set to: 0
  5239  001B50  A83C               	btfss	_flags^0,4,c
  5240  001B52  EFAD  F00D         	goto	u7951
  5241  001B56  EFAF  F00D         	goto	u7950
  5242  001B5A                     u7951:
  5243  001B5A  EFB9  F00D         	goto	l7396
  5244  001B5E                     u7950:
  5245  001B5E                     
  5246                           ; BSR set to: 0
  5247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5248  001B5E  0E00               	movlw	low _dbuf
  5249  001B60  25E8               	addwf	efgtoa@n& (0+255),w,b
  5250  001B62  6ED9               	movwf	fsr2l,c
  5251  001B64  0E02               	movlw	high _dbuf
  5252  001B66  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5253  001B68  6EDA               	movwf	fsr2h,c
  5254  001B6A  0E2E               	movlw	46
  5255  001B6C  6EDF               	movwf	indf2,c
  5256  001B6E                     
  5257                           ; BSR set to: 0
  5258  001B6E  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  5259  001B70  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  5260  001B72                     l7396:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5264  001B72  0E00               	movlw	low _dbuf
  5265  001B74  25E8               	addwf	efgtoa@n& (0+255),w,b
  5266  001B76  6ED9               	movwf	fsr2l,c
  5267  001B78  0E02               	movlw	high _dbuf
  5268  001B7A  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5269  001B7C  6EDA               	movwf	fsr2h,c
  5270  001B7E  0E00               	movlw	0
  5271  001B80  6EDF               	movwf	indf2,c
  5272  001B82                     
  5273                           ; BSR set to: 0
  5274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5275  001B82  0E65               	movlw	101
  5276  001B84  19D6               	xorwf	efgtoa@nmode& (0+255),w,b
  5277  001B86  A4D8               	btfss	status,2,c
  5278  001B88  EFC8  F00D         	goto	u7961
  5279  001B8C  EFCA  F00D         	goto	u7960
  5280  001B90                     u7961:
  5281  001B90  EF20  F009         	goto	l7198
  5282  001B94                     u7960:
  5283  001B94                     
  5284                           ; BSR set to: 0
  5285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5286  001B94  0E00               	movlw	0
  5287  001B96  6FE1               	movwf	(efgtoa@i+1)& (0+255),b
  5288  001B98  0E4F               	movlw	79
  5289  001B9A  6FE0               	movwf	efgtoa@i& (0+255),b
  5290  001B9C                     
  5291                           ; BSR set to: 0
  5292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5293  001B9C  0E00               	movlw	low _dbuf
  5294  001B9E  25E0               	addwf	efgtoa@i& (0+255),w,b
  5295  001BA0  6ED9               	movwf	fsr2l,c
  5296  001BA2  0E02               	movlw	high _dbuf
  5297  001BA4  21E1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5298  001BA6  6EDA               	movwf	fsr2h,c
  5299  001BA8  0E00               	movlw	0
  5300  001BAA  6EDF               	movwf	indf2,c
  5301  001BAC                     
  5302                           ; BSR set to: 0
  5303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5304  001BAC  0E00               	movlw	0
  5305  001BAE  6FD1               	movwf	(efgtoa@sign+1)& (0+255),b
  5306  001BB0  0E00               	movlw	0
  5307  001BB2  6FD0               	movwf	efgtoa@sign& (0+255),b
  5308  001BB4                     
  5309                           ; BSR set to: 0
  5310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5311  001BB4  BFE7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5312  001BB6  EFE1  F00D         	goto	u7970
  5313  001BBA  EFDF  F00D         	goto	u7971
  5314  001BBE                     u7971:
  5315  001BBE  EFE9  F00D         	goto	l7412
  5316  001BC2                     u7970:
  5317  001BC2                     
  5318                           ; BSR set to: 0
  5319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5320  001BC2  0E00               	movlw	0
  5321  001BC4  6FD1               	movwf	(efgtoa@sign+1)& (0+255),b
  5322  001BC6  0E01               	movlw	1
  5323  001BC8  6FD0               	movwf	efgtoa@sign& (0+255),b
  5324  001BCA                     
  5325                           ; BSR set to: 0
  5326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5327  001BCA  6DE6               	negf	efgtoa@e& (0+255),b
  5328  001BCC  1FE7               	comf	(efgtoa@e+1)& (0+255),f,b
  5329  001BCE  B0D8               	btfsc	status,0,c
  5330  001BD0  2BE7               	incf	(efgtoa@e+1)& (0+255),f,b
  5331  001BD2                     l7412:
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5335  001BD2  0E00               	movlw	0
  5336  001BD4  6FD3               	movwf	(efgtoa@p+1)& (0+255),b
  5337  001BD6  0E02               	movlw	2
  5338  001BD8  6FD2               	movwf	efgtoa@p& (0+255),b
  5339                           
  5340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5341  001BDA  EF1A  F00E         	goto	l7424
  5342  001BDE                     l7414:
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5346  001BDE  07E0               	decf	efgtoa@i& (0+255),f,b
  5347  001BE0  A0D8               	btfss	status,0,c
  5348  001BE2  07E1               	decf	(efgtoa@i+1)& (0+255),f,b
  5349  001BE4                     
  5350                           ; BSR set to: 0
  5351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5352  001BE4  0E00               	movlw	low _dbuf
  5353  001BE6  25E0               	addwf	efgtoa@i& (0+255),w,b
  5354  001BE8  6ED9               	movwf	fsr2l,c
  5355  001BEA  0E02               	movlw	high _dbuf
  5356  001BEC  21E1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5357  001BEE  6EDA               	movwf	fsr2h,c
  5358  001BF0  C0E6  F014         	movff	efgtoa@e,___awmod@dividend
  5359  001BF4  C0E7  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  5360  001BF8  0E00               	movlw	0
  5361  001BFA  6E17               	movwf	(___awmod@divisor+1)^0,c
  5362  001BFC  0E0A               	movlw	10
  5363  001BFE  6E16               	movwf	___awmod@divisor^0,c
  5364  001C00  ECCF  F02C         	call	___awmod	;wreg free
  5365  001C04  5014               	movf	?___awmod^0,w,c
  5366  001C06  0F30               	addlw	48
  5367  001C08  6EDF               	movwf	indf2,c
  5368  001C0A                     
  5369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5370  001C0A  C0E6  F014         	movff	efgtoa@e,___awdiv@dividend
  5371  001C0E  C0E7  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  5372  001C12  0E00               	movlw	0
  5373  001C14  6E17               	movwf	(___awdiv@divisor+1)^0,c
  5374  001C16  0E0A               	movlw	10
  5375  001C18  6E16               	movwf	___awdiv@divisor^0,c
  5376  001C1A  EC0C  F02C         	call	___awdiv	;wreg free
  5377  001C1E  C014  F0E6         	movff	?___awdiv,efgtoa@e
  5378  001C22  C015  F0E7         	movff	?___awdiv+1,efgtoa@e+1
  5379  001C26                     
  5380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5381  001C26  0100               	movlb	0	; () banked
  5382  001C28  07D2               	decf	efgtoa@p& (0+255),f,b
  5383  001C2A  A0D8               	btfss	status,0,c
  5384  001C2C  07D3               	decf	(efgtoa@p+1)& (0+255),f,b
  5385  001C2E                     
  5386                           ; BSR set to: 0
  5387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5388  001C2E  07D4               	decf	efgtoa@w& (0+255),f,b
  5389  001C30  A0D8               	btfss	status,0,c
  5390  001C32  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  5391  001C34                     l7424:
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5395  001C34  51E6               	movf	efgtoa@e& (0+255),w,b
  5396  001C36  11E7               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5397  001C38  A4D8               	btfss	status,2,c
  5398  001C3A  EF21  F00E         	goto	u7981
  5399  001C3E  EF23  F00E         	goto	u7980
  5400  001C42                     u7981:
  5401  001C42  EFEF  F00D         	goto	l7414
  5402  001C46                     u7980:
  5403  001C46                     
  5404                           ; BSR set to: 0
  5405  001C46  BFD3               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5406  001C48  EF30  F00E         	goto	u7990
  5407  001C4C  51D3               	movf	(efgtoa@p+1)& (0+255),w,b
  5408  001C4E  E106               	bnz	u7991
  5409  001C50  05D2               	decf	efgtoa@p& (0+255),w,b
  5410  001C52  B0D8               	btfsc	status,0,c
  5411  001C54  EF2E  F00E         	goto	u7991
  5412  001C58  EF30  F00E         	goto	u7990
  5413  001C5C                     u7991:
  5414  001C5C  EFEF  F00D         	goto	l7414
  5415  001C60                     u7990:
  5416  001C60                     
  5417                           ; BSR set to: 0
  5418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5419  001C60  07E0               	decf	efgtoa@i& (0+255),f,b
  5420  001C62  A0D8               	btfss	status,0,c
  5421  001C64  07E1               	decf	(efgtoa@i+1)& (0+255),f,b
  5422  001C66                     
  5423                           ; BSR set to: 0
  5424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5425  001C66  51D0               	movf	efgtoa@sign& (0+255),w,b
  5426  001C68  11D1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5427  001C6A  A4D8               	btfss	status,2,c
  5428  001C6C  EF3A  F00E         	goto	u8001
  5429  001C70  EF3C  F00E         	goto	u8000
  5430  001C74                     u8001:
  5431  001C74  EF42  F00E         	goto	l7434
  5432  001C78                     u8000:
  5433  001C78                     
  5434                           ; BSR set to: 0
  5435  001C78  0E00               	movlw	0
  5436  001C7A  6FBD               	movwf	(_efgtoa$2253+1)& (0+255),b
  5437  001C7C  0E2B               	movlw	43
  5438  001C7E  6FBC               	movwf	_efgtoa$2253& (0+255),b
  5439  001C80  EF46  F00E         	goto	l7436
  5440  001C84                     l7434:
  5441                           
  5442                           ; BSR set to: 0
  5443  001C84  0E00               	movlw	0
  5444  001C86  6FBD               	movwf	(_efgtoa$2253+1)& (0+255),b
  5445  001C88  0E2D               	movlw	45
  5446  001C8A  6FBC               	movwf	_efgtoa$2253& (0+255),b
  5447  001C8C                     l7436:
  5448                           
  5449                           ; BSR set to: 0
  5450  001C8C  0E00               	movlw	low _dbuf
  5451  001C8E  25E0               	addwf	efgtoa@i& (0+255),w,b
  5452  001C90  6ED9               	movwf	fsr2l,c
  5453  001C92  0E02               	movlw	high _dbuf
  5454  001C94  21E1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5455  001C96  6EDA               	movwf	fsr2h,c
  5456  001C98  C0BC  FFDF         	movff	_efgtoa$2253,indf2
  5457  001C9C                     
  5458                           ; BSR set to: 0
  5459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5460  001C9C  07D4               	decf	efgtoa@w& (0+255),f,b
  5461  001C9E  A0D8               	btfss	status,0,c
  5462  001CA0  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  5463  001CA2                     
  5464                           ; BSR set to: 0
  5465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5466  001CA2  07E0               	decf	efgtoa@i& (0+255),f,b
  5467  001CA4  A0D8               	btfss	status,0,c
  5468  001CA6  07E1               	decf	(efgtoa@i+1)& (0+255),f,b
  5469  001CA8                     
  5470                           ; BSR set to: 0
  5471  001CA8  0EBF               	movlw	191
  5472  001CAA  6FB1               	movwf	??_efgtoa& (0+255),b
  5473  001CAC  0EFF               	movlw	255
  5474  001CAE  6FB2               	movwf	(??_efgtoa+1)& (0+255),b
  5475  001CB0  51B0               	movf	efgtoa@c& (0+255),w,b
  5476  001CB2  6FB3               	movwf	(??_efgtoa+2)& (0+255),b
  5477  001CB4  6BB4               	clrf	(??_efgtoa+3)& (0+255),b
  5478  001CB6  51B1               	movf	??_efgtoa& (0+255),w,b
  5479  001CB8  27B3               	addwf	(??_efgtoa+2)& (0+255),f,b
  5480  001CBA  51B2               	movf	(??_efgtoa+1)& (0+255),w,b
  5481  001CBC  23B4               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5482  001CBE  51B4               	movf	(??_efgtoa+3)& (0+255),w,b
  5483  001CC0  E10A               	bnz	u8010
  5484  001CC2  0E1A               	movlw	26
  5485  001CC4  5DB3               	subwf	(??_efgtoa+2)& (0+255),w,b
  5486  001CC6  A0D8               	btfss	status,0,c
  5487  001CC8  EF68  F00E         	goto	u8011
  5488  001CCC  EF6B  F00E         	goto	u8010
  5489  001CD0                     u8011:
  5490  001CD0  0E01               	movlw	1
  5491  001CD2  EF6C  F00E         	goto	u8020
  5492  001CD6                     u8010:
  5493  001CD6  0E00               	movlw	0
  5494  001CD8                     u8020:
  5495  001CD8  6FC0               	movwf	_efgtoa$2255& (0+255),b
  5496  001CDA  6BC1               	clrf	(_efgtoa$2255+1)& (0+255),b
  5497  001CDC                     
  5498                           ; BSR set to: 0
  5499  001CDC  51C0               	movf	_efgtoa$2255& (0+255),w,b
  5500  001CDE  11C1               	iorwf	(_efgtoa$2255+1)& (0+255),w,b
  5501  001CE0  A4D8               	btfss	status,2,c
  5502  001CE2  EF75  F00E         	goto	u8031
  5503  001CE6  EF77  F00E         	goto	u8030
  5504  001CEA                     u8031:
  5505  001CEA  EF7D  F00E         	goto	l7450
  5506  001CEE                     u8030:
  5507  001CEE                     
  5508                           ; BSR set to: 0
  5509  001CEE  0E00               	movlw	0
  5510  001CF0  6FBF               	movwf	(_efgtoa$2254+1)& (0+255),b
  5511  001CF2  0E65               	movlw	101
  5512  001CF4  6FBE               	movwf	_efgtoa$2254& (0+255),b
  5513  001CF6  EF81  F00E         	goto	l7452
  5514  001CFA                     l7450:
  5515                           
  5516                           ; BSR set to: 0
  5517  001CFA  0E00               	movlw	0
  5518  001CFC  6FBF               	movwf	(_efgtoa$2254+1)& (0+255),b
  5519  001CFE  0E45               	movlw	69
  5520  001D00  6FBE               	movwf	_efgtoa$2254& (0+255),b
  5521  001D02                     l7452:
  5522                           
  5523                           ; BSR set to: 0
  5524  001D02  0E00               	movlw	low _dbuf
  5525  001D04  25E0               	addwf	efgtoa@i& (0+255),w,b
  5526  001D06  6ED9               	movwf	fsr2l,c
  5527  001D08  0E02               	movlw	high _dbuf
  5528  001D0A  21E1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5529  001D0C  6EDA               	movwf	fsr2h,c
  5530  001D0E  C0BE  FFDF         	movff	_efgtoa$2254,indf2
  5531  001D12                     
  5532                           ; BSR set to: 0
  5533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5534  001D12  07D4               	decf	efgtoa@w& (0+255),f,b
  5535  001D14  A0D8               	btfss	status,0,c
  5536  001D16  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  5537  001D18                     
  5538                           ; BSR set to: 0
  5539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5540  001D18  0E00               	movlw	low _dbuf
  5541  001D1A  25E8               	addwf	efgtoa@n& (0+255),w,b
  5542  001D1C  6E14               	movwf	strcpy@dest^0,c
  5543  001D1E  0E02               	movlw	high _dbuf
  5544  001D20  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5545  001D22  6E15               	movwf	(strcpy@dest+1)^0,c
  5546  001D24  0E00               	movlw	low _dbuf
  5547  001D26  25E0               	addwf	efgtoa@i& (0+255),w,b
  5548  001D28  6E16               	movwf	strcpy@src^0,c
  5549  001D2A  0E02               	movlw	high _dbuf
  5550  001D2C  21E1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5551  001D2E  6E17               	movwf	(strcpy@src+1)^0,c
  5552  001D30  ECBC  F02F         	call	_strcpy	;wreg free
  5553  001D34  EF20  F009         	goto	l7198
  5554  001D38                     l1173:
  5555  001D38  0012               	return		;funcret
  5556  001D3A                     __end_of_efgtoa:
  5557                           	callstack 0
  5558                           
  5559 ;; *************** function _tolower *****************
  5560 ;; Defined at:
  5561 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  c               2   25[COMRAM] int 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  2   25[COMRAM] int 
  5568 ;; Registers used:
  5569 ;;		wreg, status,2, status,0
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5579 ;;Total ram usage:        8 bytes
  5580 ;; Hardware stack levels used: 1
  5581 ;; Hardware stack levels required when called: 4
  5582 ;; This function calls:
  5583 ;;		_isupper
  5584 ;; This function is called by:
  5585 ;;		_efgtoa
  5586 ;;		_vfpfcnvrt
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text7
  5591  005F18                     __ptext7:
  5592                           	callstack 0
  5593  005F18                     _tolower:
  5594                           	callstack 22
  5595  005F18  0EBF               	movlw	191
  5596  005F1A  6E1C               	movwf	??_tolower^0,c
  5597  005F1C  0EFF               	movlw	255
  5598  005F1E  6E1D               	movwf	(??_tolower+1)^0,c
  5599  005F20  C01A  F01E         	movff	tolower@c,??_tolower+2
  5600  005F24  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  5601  005F28  501C               	movf	??_tolower^0,w,c
  5602  005F2A  261E               	addwf	(??_tolower+2)^0,f,c
  5603  005F2C  501D               	movf	(??_tolower+1)^0,w,c
  5604  005F2E  221F               	addwfc	(??_tolower+3)^0,f,c
  5605  005F30  501F               	movf	(??_tolower+3)^0,w,c
  5606  005F32  E10A               	bnz	u7330
  5607  005F34  0E1A               	movlw	26
  5608  005F36  5C1E               	subwf	(??_tolower+2)^0,w,c
  5609  005F38  A0D8               	btfss	status,0,c
  5610  005F3A  EFA1  F02F         	goto	u7331
  5611  005F3E  EFA4  F02F         	goto	u7330
  5612  005F42                     u7331:
  5613  005F42  0E01               	movlw	1
  5614  005F44  EFA5  F02F         	goto	u7340
  5615  005F48                     u7330:
  5616  005F48  0E00               	movlw	0
  5617  005F4A                     u7340:
  5618  005F4A  6E20               	movwf	_tolower$2390^0,c
  5619  005F4C  6A21               	clrf	(_tolower$2390+1)^0,c
  5620  005F4E  5020               	movf	_tolower$2390^0,w,c
  5621  005F50  1021               	iorwf	(_tolower$2390+1)^0,w,c
  5622  005F52  B4D8               	btfsc	status,2,c
  5623  005F54  EFAE  F02F         	goto	u7351
  5624  005F58  EFB0  F02F         	goto	u7350
  5625  005F5C                     u7351:
  5626  005F5C  EFB7  F02F         	goto	l1392
  5627  005F60                     u7350:
  5628  005F60  0E20               	movlw	32
  5629  005F62  101A               	iorwf	tolower@c^0,w,c
  5630  005F64  6E1A               	movwf	?_tolower^0,c
  5631  005F66  501B               	movf	(tolower@c+1)^0,w,c
  5632  005F68  6E1B               	movwf	(?_tolower+1)^0,c
  5633  005F6A  EFBB  F02F         	goto	l1397
  5634  005F6E                     l1392:
  5635  005F6E  C01A  F01A         	movff	tolower@c,?_tolower
  5636  005F72  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  5637  005F76                     l1397:
  5638  005F76  0012               	return		;funcret
  5639  005F78                     __end_of_tolower:
  5640                           	callstack 0
  5641                           
  5642 ;; *************** function _isupper *****************
  5643 ;; Defined at:
  5644 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  c               2   19[COMRAM] int 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  2   19[COMRAM] int 
  5651 ;; Registers used:
  5652 ;;		wreg, status,2, status,0
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;Total ram usage:        6 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; Hardware stack levels required when called: 3
  5665 ;; This function calls:
  5666 ;;		Nothing
  5667 ;; This function is called by:
  5668 ;;		_efgtoa
  5669 ;;		_vfpfcnvrt
  5670 ;;		_tolower
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text8
  5675  00618E                     __ptext8:
  5676                           	callstack 0
  5677  00618E                     _isupper:
  5678                           	callstack 22
  5679  00618E  0EBF               	movlw	191
  5680  006190  6E16               	movwf	??_isupper^0,c
  5681  006192  0EFF               	movlw	255
  5682  006194  6E17               	movwf	(??_isupper+1)^0,c
  5683  006196  C014  F018         	movff	isupper@c,??_isupper+2
  5684  00619A  C015  F019         	movff	isupper@c+1,??_isupper+3
  5685  00619E  5016               	movf	??_isupper^0,w,c
  5686  0061A0  2618               	addwf	(??_isupper+2)^0,f,c
  5687  0061A2  5017               	movf	(??_isupper+1)^0,w,c
  5688  0061A4  2219               	addwfc	(??_isupper+3)^0,f,c
  5689  0061A6  5019               	movf	(??_isupper+3)^0,w,c
  5690  0061A8  E10A               	bnz	u6480
  5691  0061AA  0E1A               	movlw	26
  5692  0061AC  5C18               	subwf	(??_isupper+2)^0,w,c
  5693  0061AE  A0D8               	btfss	status,0,c
  5694  0061B0  EFDC  F030         	goto	u6481
  5695  0061B4  EFDF  F030         	goto	u6480
  5696  0061B8                     u6481:
  5697  0061B8  0E01               	movlw	1
  5698  0061BA  EFE0  F030         	goto	u6490
  5699  0061BE                     u6480:
  5700  0061BE  0E00               	movlw	0
  5701  0061C0                     u6490:
  5702  0061C0  6E14               	movwf	?_isupper^0,c
  5703  0061C2  6A15               	clrf	(?_isupper+1)^0,c
  5704  0061C4  0012               	return		;funcret
  5705  0061C6                     __end_of_isupper:
  5706                           	callstack 0
  5707                           
  5708 ;; *************** function _strcpy *****************
  5709 ;; Defined at:
  5710 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;  dest            2   19[COMRAM] PTR unsigned char 
  5713 ;;		 -> dbuf(80), 
  5714 ;;  src             2   21[COMRAM] PTR const unsigned char 
  5715 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  5716 ;;		 -> dbuf(80), 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;  d               2   27[COMRAM] PTR unsigned char 
  5719 ;;		 -> dbuf(80), 
  5720 ;;  s               2   25[COMRAM] PTR const unsigned char 
  5721 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  5722 ;;		 -> dbuf(80), 
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  2   19[COMRAM] PTR unsigned char 
  5725 ;; Registers used:
  5726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;Total ram usage:       10 bytes
  5737 ;; Hardware stack levels used: 1
  5738 ;; Hardware stack levels required when called: 3
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_efgtoa
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text9
  5747  005F78                     __ptext9:
  5748                           	callstack 0
  5749  005F78                     _strcpy:
  5750                           	callstack 22
  5751  005F78  C016  F01A         	movff	strcpy@src,strcpy@s
  5752  005F7C  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  5753  005F80  C014  F01C         	movff	strcpy@dest,strcpy@d
  5754  005F84  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  5755  005F88                     l7098:
  5756  005F88  501A               	movf	strcpy@s^0,w,c
  5757  005F8A  6E18               	movwf	??_strcpy^0,c
  5758  005F8C  501B               	movf	(strcpy@s+1)^0,w,c
  5759  005F8E  6E19               	movwf	(??_strcpy+1)^0,c
  5760  005F90  4A1A               	infsnz	strcpy@s^0,f,c
  5761  005F92  2A1B               	incf	(strcpy@s+1)^0,f,c
  5762  005F94  C018  FFF6         	movff	??_strcpy,tblptrl
  5763  005F98  C019  FFF7         	movff	??_strcpy+1,tblptrh
  5764  005F9C  0E00               	movlw	low (__smallconst shr (0+16))
  5765  005F9E  6EF8               	movwf	tblptru,c
  5766  005FA0  C01C  FFD9         	movff	strcpy@d,fsr2l
  5767  005FA4  C01D  FFDA         	movff	strcpy@d+1,fsr2h
  5768  005FA8  4A1C               	infsnz	strcpy@d^0,f,c
  5769  005FAA  2A1D               	incf	(strcpy@d+1)^0,f,c
  5770  005FAC  0E0F               	movlw	(high __ramtop+-1)
  5771  005FAE  64F7               	cpfsgt	tblptrh,c
  5772  005FB0  D003               	bra	u7317
  5773  005FB2  0008               	tblrd		*
  5774  005FB4  50F5               	movf	tablat,w,c
  5775  005FB6  D005               	bra	u7310
  5776  005FB8                     u7317:
  5777  005FB8  CFF6 FFE1          	movff	tblptrl,fsr1l
  5778  005FBC  CFF7 FFE2          	movff	tblptrh,fsr1h
  5779  005FC0  50E7               	movf	indf1,w,c
  5780  005FC2                     u7310:
  5781  005FC2  6EDF               	movwf	indf2,c
  5782  005FC4  50DF               	movf	indf2,w,c
  5783  005FC6  A4D8               	btfss	status,2,c
  5784  005FC8  EFE8  F02F         	goto	u7321
  5785  005FCC  EFEA  F02F         	goto	u7320
  5786  005FD0                     u7321:
  5787  005FD0  EFC4  F02F         	goto	l7098
  5788  005FD4                     u7320:
  5789  005FD4  0012               	return		;funcret
  5790  005FD6                     __end_of_strcpy:
  5791                           	callstack 0
  5792                           
  5793 ;; *************** function _pad *****************
  5794 ;; Defined at:
  5795 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  5798 ;;		 -> sprintf@f(6), 
  5799 ;;  buf             2   37[COMRAM] PTR unsigned char 
  5800 ;;		 -> dbuf(80), 
  5801 ;;  p               2   39[COMRAM] int 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  w               2   44[COMRAM] int 
  5804 ;;  i               2   42[COMRAM] int 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  2   35[COMRAM] int 
  5807 ;; Registers used:
  5808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5814 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5817 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;Total ram usage:       11 bytes
  5819 ;; Hardware stack levels used: 1
  5820 ;; Hardware stack levels required when called: 6
  5821 ;; This function calls:
  5822 ;;		_fputc
  5823 ;;		_fputs
  5824 ;;		_strlen
  5825 ;; This function is called by:
  5826 ;;		_efgtoa
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           	psect	text10
  5831  0058DC                     __ptext10:
  5832                           	callstack 0
  5833  0058DC                     _pad:
  5834                           	callstack 19
  5835  0058DC                     
  5836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5837  0058DC  A03C               	btfss	_flags^0,0,c
  5838  0058DE  EF73  F02C         	goto	u7271
  5839  0058E2  EF75  F02C         	goto	u7270
  5840  0058E6                     u7271:
  5841  0058E6  EF7F  F02C         	goto	l7078
  5842  0058EA                     u7270:
  5843  0058EA                     
  5844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5845  0058EA  C026  F01D         	movff	pad@buf,fputs@s
  5846  0058EE  C027  F01E         	movff	pad@buf+1,fputs@s+1
  5847  0058F2  C024  F01F         	movff	pad@fp,fputs@fp
  5848  0058F6  C025  F020         	movff	pad@fp+1,fputs@fp+1
  5849  0058FA  EC85  F030         	call	_fputs	;wreg free
  5850  0058FE                     l7078:
  5851                           
  5852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5853  0058FE  BE29               	btfsc	(pad@p+1)^0,7,c
  5854  005900  EF84  F02C         	goto	u7281
  5855  005904  EF86  F02C         	goto	u7280
  5856  005908                     u7281:
  5857  005908  EF8C  F02C         	goto	l7082
  5858  00590C                     u7280:
  5859  00590C  C028  F02D         	movff	pad@p,pad@w
  5860  005910  C029  F02E         	movff	pad@p+1,pad@w+1
  5861  005914  EF90  F02C         	goto	l1150
  5862  005918                     l7082:
  5863  005918  0E00               	movlw	0
  5864  00591A  6E2E               	movwf	(pad@w+1)^0,c
  5865  00591C  0E00               	movlw	0
  5866  00591E  6E2D               	movwf	pad@w^0,c
  5867  005920                     l1150:
  5868                           
  5869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5870  005920  0E00               	movlw	0
  5871  005922  6E2C               	movwf	(pad@i+1)^0,c
  5872  005924  0E00               	movlw	0
  5873  005926  6E2B               	movwf	pad@i^0,c
  5874                           
  5875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5876  005928  EFA2  F02C         	goto	l7088
  5877  00592C                     l7084:
  5878                           
  5879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5880  00592C  0E00               	movlw	0
  5881  00592E  6E15               	movwf	(fputc@c+1)^0,c
  5882  005930  0E20               	movlw	32
  5883  005932  6E14               	movwf	fputc@c^0,c
  5884  005934  C024  F016         	movff	pad@fp,fputc@fp
  5885  005938  C025  F017         	movff	pad@fp+1,fputc@fp+1
  5886  00593C  ECA7  F02B         	call	_fputc	;wreg free
  5887  005940                     
  5888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5889  005940  4A2B               	infsnz	pad@i^0,f,c
  5890  005942  2A2C               	incf	(pad@i+1)^0,f,c
  5891  005944                     l7088:
  5892                           
  5893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5894  005944  502D               	movf	pad@w^0,w,c
  5895  005946  5C2B               	subwf	pad@i^0,w,c
  5896  005948  502C               	movf	(pad@i+1)^0,w,c
  5897  00594A  0A80               	xorlw	128
  5898  00594C  6E2A               	movwf	??_pad^0,c
  5899  00594E  502E               	movf	(pad@w+1)^0,w,c
  5900  005950  0A80               	xorlw	128
  5901  005952  582A               	subwfb	??_pad^0,w,c
  5902  005954  A0D8               	btfss	status,0,c
  5903  005956  EFAF  F02C         	goto	u7291
  5904  00595A  EFB1  F02C         	goto	u7290
  5905  00595E                     u7291:
  5906  00595E  EF96  F02C         	goto	l7084
  5907  005962                     u7290:
  5908  005962                     
  5909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5910  005962  B03C               	btfsc	_flags^0,0,c
  5911  005964  EFB6  F02C         	goto	u7301
  5912  005968  EFB8  F02C         	goto	u7300
  5913  00596C                     u7301:
  5914  00596C  EFC2  F02C         	goto	l7092
  5915  005970                     u7300:
  5916  005970                     
  5917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5918  005970  C026  F01D         	movff	pad@buf,fputs@s
  5919  005974  C027  F01E         	movff	pad@buf+1,fputs@s+1
  5920  005978  C024  F01F         	movff	pad@fp,fputs@fp
  5921  00597C  C025  F020         	movff	pad@fp+1,fputs@fp+1
  5922  005980  EC85  F030         	call	_fputs	;wreg free
  5923  005984                     l7092:
  5924                           
  5925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5926  005984  C026  F014         	movff	pad@buf,strlen@s
  5927  005988  C027  F015         	movff	pad@buf+1,strlen@s+1
  5928  00598C  EC1B  F031         	call	_strlen	;wreg free
  5929  005990  502D               	movf	pad@w^0,w,c
  5930  005992  2414               	addwf	?_strlen^0,w,c
  5931  005994  6E24               	movwf	?_pad^0,c
  5932  005996  502E               	movf	(pad@w+1)^0,w,c
  5933  005998  2015               	addwfc	(?_strlen+1)^0,w,c
  5934  00599A  6E25               	movwf	(?_pad+1)^0,c
  5935  00599C  0012               	return		;funcret
  5936  00599E                     __end_of_pad:
  5937                           	callstack 0
  5938                           
  5939 ;; *************** function _strlen *****************
  5940 ;; Defined at:
  5941 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  s               2   19[COMRAM] PTR const unsigned char 
  5944 ;;		 -> dbuf(80), 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  a               2   21[COMRAM] PTR const unsigned char 
  5947 ;;		 -> dbuf(80), 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  2   19[COMRAM] unsigned int 
  5950 ;; Registers used:
  5951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;Total ram usage:        4 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; Hardware stack levels required when called: 3
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_pad
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text11
  5972  006236                     __ptext11:
  5973                           	callstack 0
  5974  006236                     _strlen:
  5975                           	callstack 21
  5976  006236  C014  F016         	movff	strlen@s,strlen@a
  5977  00623A  C015  F017         	movff	strlen@s+1,strlen@a+1
  5978  00623E  EF23  F031         	goto	l6592
  5979  006242                     l6590:
  5980  006242  4A14               	infsnz	strlen@s^0,f,c
  5981  006244  2A15               	incf	(strlen@s+1)^0,f,c
  5982  006246                     l6592:
  5983  006246  C014  FFD9         	movff	strlen@s,fsr2l
  5984  00624A  C015  FFDA         	movff	strlen@s+1,fsr2h
  5985  00624E  50DF               	movf	indf2,w,c
  5986  006250  A4D8               	btfss	status,2,c
  5987  006252  EF2D  F031         	goto	u6471
  5988  006256  EF2F  F031         	goto	u6470
  5989  00625A                     u6471:
  5990  00625A  EF21  F031         	goto	l6590
  5991  00625E                     u6470:
  5992  00625E  5016               	movf	strlen@a^0,w,c
  5993  006260  5C14               	subwf	strlen@s^0,w,c
  5994  006262  6E14               	movwf	?_strlen^0,c
  5995  006264  5017               	movf	(strlen@a+1)^0,w,c
  5996  006266  5815               	subwfb	(strlen@s+1)^0,w,c
  5997  006268  6E15               	movwf	(?_strlen+1)^0,c
  5998  00626A  0012               	return		;funcret
  5999  00626C                     __end_of_strlen:
  6000                           	callstack 0
  6001                           
  6002 ;; *************** function _fputs *****************
  6003 ;; Defined at:
  6004 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  s               2   28[COMRAM] PTR const unsigned char 
  6007 ;;		 -> dbuf(80), 
  6008 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  6009 ;;		 -> sprintf@f(6), 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;  i               2   33[COMRAM] int 
  6012 ;;  c               1   32[COMRAM] unsigned char 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  2   28[COMRAM] int 
  6015 ;; Registers used:
  6016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6023 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6025 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6026 ;;Total ram usage:        7 bytes
  6027 ;; Hardware stack levels used: 1
  6028 ;; Hardware stack levels required when called: 5
  6029 ;; This function calls:
  6030 ;;		_fputc
  6031 ;; This function is called by:
  6032 ;;		_pad
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           	psect	text12
  6037  00610A                     __ptext12:
  6038                           	callstack 0
  6039  00610A                     _fputs:
  6040                           	callstack 19
  6041  00610A  0E00               	movlw	0
  6042  00610C  6E23               	movwf	(fputs@i+1)^0,c
  6043  00610E  0E00               	movlw	0
  6044  006110  6E22               	movwf	fputs@i^0,c
  6045  006112  EF96  F030         	goto	l6586
  6046  006116                     l6582:
  6047  006116  C021  F014         	movff	fputs@c,fputc@c
  6048  00611A  6A15               	clrf	(fputc@c+1)^0,c
  6049  00611C  C01F  F016         	movff	fputs@fp,fputc@fp
  6050  006120  C020  F017         	movff	fputs@fp+1,fputc@fp+1
  6051  006124  ECA7  F02B         	call	_fputc	;wreg free
  6052  006128  4A22               	infsnz	fputs@i^0,f,c
  6053  00612A  2A23               	incf	(fputs@i+1)^0,f,c
  6054  00612C                     l6586:
  6055  00612C  5022               	movf	fputs@i^0,w,c
  6056  00612E  241D               	addwf	fputs@s^0,w,c
  6057  006130  6ED9               	movwf	fsr2l,c
  6058  006132  5023               	movf	(fputs@i+1)^0,w,c
  6059  006134  201E               	addwfc	(fputs@s+1)^0,w,c
  6060  006136  6EDA               	movwf	fsr2h,c
  6061  006138  50DF               	movf	indf2,w,c
  6062  00613A  6E21               	movwf	fputs@c^0,c
  6063  00613C  5021               	movf	fputs@c^0,w,c
  6064  00613E  A4D8               	btfss	status,2,c
  6065  006140  EFA4  F030         	goto	u6461
  6066  006144  EFA6  F030         	goto	u6460
  6067  006148                     u6461:
  6068  006148  EF8B  F030         	goto	l6582
  6069  00614C                     u6460:
  6070  00614C  0012               	return		;funcret
  6071  00614E                     __end_of_fputs:
  6072                           	callstack 0
  6073                           
  6074 ;; *************** function _fputc *****************
  6075 ;; Defined at:
  6076 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  c               2   19[COMRAM] int 
  6079 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  6080 ;;		 -> sprintf@f(6), 
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;		None
  6083 ;; Return value:  Size  Location     Type
  6084 ;;                  2   19[COMRAM] int 
  6085 ;; Registers used:
  6086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6092 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6095 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6096 ;;Total ram usage:        9 bytes
  6097 ;; Hardware stack levels used: 1
  6098 ;; Hardware stack levels required when called: 4
  6099 ;; This function calls:
  6100 ;;		_putch
  6101 ;; This function is called by:
  6102 ;;		_pad
  6103 ;;		_vfpfcnvrt
  6104 ;;		_fputs
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text13
  6109  00574E                     __ptext13:
  6110                           	callstack 0
  6111  00574E                     _fputc:
  6112                           	callstack 22
  6113  00574E  5016               	movf	fputc@fp^0,w,c
  6114  005750  1017               	iorwf	(fputc@fp+1)^0,w,c
  6115  005752  B4D8               	btfsc	status,2,c
  6116  005754  EFAE  F02B         	goto	u6031
  6117  005758  EFB0  F02B         	goto	u6030
  6118  00575C                     u6031:
  6119  00575C  EFB9  F02B         	goto	l6368
  6120  005760                     u6030:
  6121  005760  5016               	movf	fputc@fp^0,w,c
  6122  005762  1017               	iorwf	(fputc@fp+1)^0,w,c
  6123  005764  A4D8               	btfss	status,2,c
  6124  005766  EFB7  F02B         	goto	u6041
  6125  00576A  EFB9  F02B         	goto	u6040
  6126  00576E                     u6041:
  6127  00576E  EFBE  F02B         	goto	l6370
  6128  005772                     u6040:
  6129  005772                     l6368:
  6130  005772  5014               	movf	fputc@c^0,w,c
  6131  005774  ECC8  F031         	call	_putch
  6132  005778  EF0B  F02C         	goto	l1355
  6133  00577C                     l6370:
  6134  00577C  EE20 F004          	lfsr	2,4
  6135  005780  5016               	movf	fputc@fp^0,w,c
  6136  005782  26D9               	addwf	fsr2l,f,c
  6137  005784  5017               	movf	(fputc@fp+1)^0,w,c
  6138  005786  22DA               	addwfc	fsr2h,f,c
  6139  005788  50DE               	movf	postinc2,w,c
  6140  00578A  10DE               	iorwf	postinc2,w,c
  6141  00578C  B4D8               	btfsc	status,2,c
  6142  00578E  EFCB  F02B         	goto	u6051
  6143  005792  EFCD  F02B         	goto	u6050
  6144  005796                     u6051:
  6145  005796  EFE8  F02B         	goto	l6374
  6146  00579A                     u6050:
  6147  00579A  EE20 F004          	lfsr	2,4
  6148  00579E  5016               	movf	fputc@fp^0,w,c
  6149  0057A0  26D9               	addwf	fsr2l,f,c
  6150  0057A2  5017               	movf	(fputc@fp+1)^0,w,c
  6151  0057A4  22DA               	addwfc	fsr2h,f,c
  6152  0057A6  EE10 F002          	lfsr	1,2
  6153  0057AA  5016               	movf	fputc@fp^0,w,c
  6154  0057AC  26E1               	addwf	fsr1l,f,c
  6155  0057AE  5017               	movf	(fputc@fp+1)^0,w,c
  6156  0057B0  22E2               	addwfc	fsr1h,f,c
  6157  0057B2  50DE               	movf	postinc2,w,c
  6158  0057B4  5CE6               	subwf	postinc1,w,c
  6159  0057B6  50E6               	movf	postinc1,w,c
  6160  0057B8  0A80               	xorlw	128
  6161  0057BA  6E1C               	movwf	(??_fputc+4)^0,c
  6162  0057BC  50DE               	movf	postinc2,w,c
  6163  0057BE  0A80               	xorlw	128
  6164  0057C0  581C               	subwfb	(??_fputc+4)^0,w,c
  6165  0057C2  B0D8               	btfsc	status,0,c
  6166  0057C4  EFE6  F02B         	goto	u6061
  6167  0057C8  EFE8  F02B         	goto	u6060
  6168  0057CC                     u6061:
  6169  0057CC  EF0B  F02C         	goto	l1355
  6170  0057D0                     u6060:
  6171  0057D0                     l6374:
  6172  0057D0  EE20 F002          	lfsr	2,2
  6173  0057D4  5016               	movf	fputc@fp^0,w,c
  6174  0057D6  26D9               	addwf	fsr2l,f,c
  6175  0057D8  5017               	movf	(fputc@fp+1)^0,w,c
  6176  0057DA  22DA               	addwfc	fsr2h,f,c
  6177  0057DC  CFDE F018          	movff	postinc2,??_fputc
  6178  0057E0  CFDD F019          	movff	postdec2,??_fputc+1
  6179  0057E4  C016  FFD9         	movff	fputc@fp,fsr2l
  6180  0057E8  C017  FFDA         	movff	fputc@fp+1,fsr2h
  6181  0057EC  CFDE F01A          	movff	postinc2,??_fputc+2
  6182  0057F0  CFDD F01B          	movff	postdec2,??_fputc+3
  6183  0057F4  5018               	movf	??_fputc^0,w,c
  6184  0057F6  241A               	addwf	(??_fputc+2)^0,w,c
  6185  0057F8  6ED9               	movwf	fsr2l,c
  6186  0057FA  5019               	movf	(??_fputc+1)^0,w,c
  6187  0057FC  201B               	addwfc	(??_fputc+3)^0,w,c
  6188  0057FE  6EDA               	movwf	fsr2h,c
  6189  005800  C014  FFDF         	movff	fputc@c,indf2
  6190  005804  EE20 F002          	lfsr	2,2
  6191  005808  5016               	movf	fputc@fp^0,w,c
  6192  00580A  26D9               	addwf	fsr2l,f,c
  6193  00580C  5017               	movf	(fputc@fp+1)^0,w,c
  6194  00580E  22DA               	addwfc	fsr2h,f,c
  6195  005810  2ADE               	incf	postinc2,f,c
  6196  005812  0E00               	movlw	0
  6197  005814  22DD               	addwfc	postdec2,f,c
  6198  005816                     l1355:
  6199  005816  0012               	return		;funcret
  6200  005818                     __end_of_fputc:
  6201                           	callstack 0
  6202                           
  6203 ;; *************** function _putch *****************
  6204 ;; Defined at:
  6205 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  c               1    wreg     unsigned char 
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;  c               1    0[COMRAM] unsigned char 
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1    wreg      void 
  6212 ;; Registers used:
  6213 ;;		wreg
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;Total ram usage:        0 bytes
  6224 ;; Hardware stack levels used: 1
  6225 ;; Hardware stack levels required when called: 3
  6226 ;; This function calls:
  6227 ;;		Nothing
  6228 ;; This function is called by:
  6229 ;;		_fputc
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text14
  6234  006390                     __ptext14:
  6235                           	callstack 0
  6236  006390                     _putch:
  6237                           	callstack 22
  6238  006390  0012               	return		;funcret
  6239  006392                     __end_of_putch:
  6240                           	callstack 0
  6241                           
  6242 ;; *************** function _floorf *****************
  6243 ;; Defined at:
  6244 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  x               4   54[BANK0 ] float 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  u               4   70[BANK0 ] struct .
  6249 ;;  m               4   64[BANK0 ] unsigned long 
  6250 ;;  e               2   68[BANK0 ] int 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  4   54[BANK0 ] float 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6260 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;Total ram usage:       20 bytes
  6265 ;; Hardware stack levels used: 1
  6266 ;; Hardware stack levels required when called: 3
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_efgtoa
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text15
  6275  0049DC                     __ptext15:
  6276                           	callstack 0
  6277  0049DC                     _floorf:
  6278                           	callstack 22
  6279  0049DC  C1A2  F0A6         	movff	floorf@F527,floorf@u
  6280  0049E0  C1A3  F0A7         	movff	floorf@F527+1,floorf@u+1
  6281  0049E4  C1A4  F0A8         	movff	floorf@F527+2,floorf@u+2
  6282  0049E8  C1A5  F0A9         	movff	floorf@F527+3,floorf@u+3
  6283  0049EC  C096  F0A6         	movff	floorf@x,floorf@u
  6284  0049F0  C097  F0A7         	movff	floorf@x+1,floorf@u+1
  6285  0049F4  C098  F0A8         	movff	floorf@x+2,floorf@u+2
  6286  0049F8  C099  F0A9         	movff	floorf@x+3,floorf@u+3
  6287  0049FC  0E81               	movlw	129
  6288  0049FE  0100               	movlb	0	; () banked
  6289  004A00  6F9A               	movwf	??_floorf& (0+255),b
  6290  004A02  0EFF               	movlw	255
  6291  004A04  6F9B               	movwf	(??_floorf+1)& (0+255),b
  6292  004A06  C0A6  F09C         	movff	floorf@u,??_floorf+2
  6293  004A0A  C0A7  F09D         	movff	floorf@u+1,??_floorf+3
  6294  004A0E  C0A8  F09E         	movff	floorf@u+2,??_floorf+4
  6295  004A12  C0A9  F09F         	movff	floorf@u+3,??_floorf+5
  6296  004A16  0E18               	movlw	24
  6297  004A18  EF13  F025         	goto	u7360
  6298  004A1C                     u7365:
  6299  004A1C  90D8               	bcf	status,0,c
  6300  004A1E  339F               	rrcf	(??_floorf+5)& (0+255),f,b
  6301  004A20  339E               	rrcf	(??_floorf+4)& (0+255),f,b
  6302  004A22  339D               	rrcf	(??_floorf+3)& (0+255),f,b
  6303  004A24  339C               	rrcf	(??_floorf+2)& (0+255),f,b
  6304  004A26                     u7360:
  6305  004A26  2EE8               	decfsz	wreg,f,c
  6306  004A28  EF0E  F025         	goto	u7365
  6307  004A2C  519C               	movf	(??_floorf+2)& (0+255),w,b
  6308  004A2E  259A               	addwf	??_floorf& (0+255),w,b
  6309  004A30  6FA4               	movwf	floorf@e& (0+255),b
  6310  004A32  0E00               	movlw	0
  6311  004A34  219B               	addwfc	(??_floorf+1)& (0+255),w,b
  6312  004A36  6FA5               	movwf	(floorf@e+1)& (0+255),b
  6313  004A38  BFA5               	btfsc	(floorf@e+1)& (0+255),7,b
  6314  004A3A  EF28  F025         	goto	u7371
  6315  004A3E  51A5               	movf	(floorf@e+1)& (0+255),w,b
  6316  004A40  E109               	bnz	u7370
  6317  004A42  0E17               	movlw	23
  6318  004A44  5DA4               	subwf	floorf@e& (0+255),w,b
  6319  004A46  A0D8               	btfss	status,0,c
  6320  004A48  EF28  F025         	goto	u7371
  6321  004A4C  EF2A  F025         	goto	u7370
  6322  004A50                     u7371:
  6323  004A50  EF34  F025         	goto	l7116
  6324  004A54                     u7370:
  6325  004A54                     l7114:
  6326                           
  6327                           ; BSR set to: 0
  6328  004A54  C096  F096         	movff	floorf@x,?_floorf
  6329  004A58  C097  F097         	movff	floorf@x+1,?_floorf+1
  6330  004A5C  C098  F098         	movff	floorf@x+2,?_floorf+2
  6331  004A60  C099  F099         	movff	floorf@x+3,?_floorf+3
  6332  004A64  EFF8  F025         	goto	l1316
  6333  004A68                     l7116:
  6334                           
  6335                           ; BSR set to: 0
  6336  004A68  BFA5               	btfsc	(floorf@e+1)& (0+255),7,b
  6337  004A6A  EF39  F025         	goto	u7381
  6338  004A6E  EF3B  F025         	goto	u7380
  6339  004A72                     u7381:
  6340  004A72  EFAC  F025         	goto	l7126
  6341  004A76                     u7380:
  6342  004A76                     
  6343                           ; BSR set to: 0
  6344  004A76  C0A4  F09A         	movff	floorf@e,??_floorf
  6345  004A7A  0EFF               	movlw	255
  6346  004A7C  6F9B               	movwf	(??_floorf+1)& (0+255),b
  6347  004A7E  0EFF               	movlw	255
  6348  004A80  6F9C               	movwf	(??_floorf+2)& (0+255),b
  6349  004A82  0E7F               	movlw	127
  6350  004A84  6F9D               	movwf	(??_floorf+3)& (0+255),b
  6351  004A86  0E00               	movlw	0
  6352  004A88  6F9E               	movwf	(??_floorf+4)& (0+255),b
  6353  004A8A                     u7395:
  6354  004A8A  679A               	tstfsz	??_floorf& (0+255),b
  6355  004A8C  EF4A  F025         	goto	u7396
  6356  004A90  EF52  F025         	goto	u7397
  6357  004A94                     u7396:
  6358  004A94  359E               	rlcf	(??_floorf+4)& (0+255),w,b
  6359  004A96  339E               	rrcf	(??_floorf+4)& (0+255),f,b
  6360  004A98  339D               	rrcf	(??_floorf+3)& (0+255),f,b
  6361  004A9A  339C               	rrcf	(??_floorf+2)& (0+255),f,b
  6362  004A9C  339B               	rrcf	(??_floorf+1)& (0+255),f,b
  6363  004A9E  2F9A               	decfsz	??_floorf& (0+255),f,b
  6364  004AA0  EF45  F025         	goto	u7395
  6365  004AA4                     u7397:
  6366  004AA4  C09B  F0A0         	movff	??_floorf+1,floorf@m
  6367  004AA8  C09C  F0A1         	movff	??_floorf+2,floorf@m+1
  6368  004AAC  C09D  F0A2         	movff	??_floorf+3,floorf@m+2
  6369  004AB0  C09E  F0A3         	movff	??_floorf+4,floorf@m+3
  6370  004AB4  0100               	movlb	0	; () banked
  6371  004AB6  51A0               	movf	floorf@m& (0+255),w,b
  6372  004AB8  15A6               	andwf	floorf@u& (0+255),w,b
  6373  004ABA  6F9A               	movwf	??_floorf& (0+255),b
  6374  004ABC  51A1               	movf	(floorf@m+1)& (0+255),w,b
  6375  004ABE  15A7               	andwf	(floorf@u+1)& (0+255),w,b
  6376  004AC0  6F9B               	movwf	(??_floorf+1)& (0+255),b
  6377  004AC2  51A2               	movf	(floorf@m+2)& (0+255),w,b
  6378  004AC4  15A8               	andwf	(floorf@u+2)& (0+255),w,b
  6379  004AC6  6F9C               	movwf	(??_floorf+2)& (0+255),b
  6380  004AC8  51A3               	movf	(floorf@m+3)& (0+255),w,b
  6381  004ACA  15A9               	andwf	(floorf@u+3)& (0+255),w,b
  6382  004ACC  6F9D               	movwf	(??_floorf+3)& (0+255),b
  6383  004ACE  519A               	movf	??_floorf& (0+255),w,b
  6384  004AD0  119B               	iorwf	(??_floorf+1)& (0+255),w,b
  6385  004AD2  119C               	iorwf	(??_floorf+2)& (0+255),w,b
  6386  004AD4  119D               	iorwf	(??_floorf+3)& (0+255),w,b
  6387  004AD6  A4D8               	btfss	status,2,c
  6388  004AD8  EF70  F025         	goto	u7401
  6389  004ADC  EF72  F025         	goto	u7400
  6390  004AE0                     u7401:
  6391  004AE0  EF74  F025         	goto	l7122
  6392  004AE4                     u7400:
  6393  004AE4  EF2A  F025         	goto	l7114
  6394  004AE8                     l7122:
  6395                           
  6396                           ; BSR set to: 0
  6397  004AE8  C0A6  F09A         	movff	floorf@u,??_floorf
  6398  004AEC  C0A7  F09B         	movff	floorf@u+1,??_floorf+1
  6399  004AF0  C0A8  F09C         	movff	floorf@u+2,??_floorf+2
  6400  004AF4  C0A9  F09D         	movff	floorf@u+3,??_floorf+3
  6401  004AF8  0E20               	movlw	32
  6402  004AFA  EF84  F025         	goto	u7410
  6403  004AFE                     u7415:
  6404  004AFE  90D8               	bcf	status,0,c
  6405  004B00  339D               	rrcf	(??_floorf+3)& (0+255),f,b
  6406  004B02  339C               	rrcf	(??_floorf+2)& (0+255),f,b
  6407  004B04  339B               	rrcf	(??_floorf+1)& (0+255),f,b
  6408  004B06  339A               	rrcf	??_floorf& (0+255),f,b
  6409  004B08                     u7410:
  6410  004B08  2EE8               	decfsz	wreg,f,c
  6411  004B0A  EF7F  F025         	goto	u7415
  6412  004B0E  519A               	movf	??_floorf& (0+255),w,b
  6413  004B10  119B               	iorwf	(??_floorf+1)& (0+255),w,b
  6414  004B12  119C               	iorwf	(??_floorf+2)& (0+255),w,b
  6415  004B14  119D               	iorwf	(??_floorf+3)& (0+255),w,b
  6416  004B16  B4D8               	btfsc	status,2,c
  6417  004B18  EF90  F025         	goto	u7421
  6418  004B1C  EF92  F025         	goto	u7420
  6419  004B20                     u7421:
  6420  004B20  EF9A  F025         	goto	l1319
  6421  004B24                     u7420:
  6422  004B24                     
  6423                           ; BSR set to: 0
  6424  004B24  51A0               	movf	floorf@m& (0+255),w,b
  6425  004B26  27A6               	addwf	floorf@u& (0+255),f,b
  6426  004B28  51A1               	movf	(floorf@m+1)& (0+255),w,b
  6427  004B2A  23A7               	addwfc	(floorf@u+1)& (0+255),f,b
  6428  004B2C  51A2               	movf	(floorf@m+2)& (0+255),w,b
  6429  004B2E  23A8               	addwfc	(floorf@u+2)& (0+255),f,b
  6430  004B30  51A3               	movf	(floorf@m+3)& (0+255),w,b
  6431  004B32  23A9               	addwfc	(floorf@u+3)& (0+255),f,b
  6432  004B34                     l1319:
  6433                           
  6434                           ; BSR set to: 0
  6435  004B34  1DA0               	comf	floorf@m& (0+255),w,b
  6436  004B36  6F9A               	movwf	??_floorf& (0+255),b
  6437  004B38  1DA1               	comf	(floorf@m+1)& (0+255),w,b
  6438  004B3A  6F9B               	movwf	(??_floorf+1)& (0+255),b
  6439  004B3C  1DA2               	comf	(floorf@m+2)& (0+255),w,b
  6440  004B3E  6F9C               	movwf	(??_floorf+2)& (0+255),b
  6441  004B40  1DA3               	comf	(floorf@m+3)& (0+255),w,b
  6442  004B42  6F9D               	movwf	(??_floorf+3)& (0+255),b
  6443  004B44  519A               	movf	??_floorf& (0+255),w,b
  6444  004B46  17A6               	andwf	floorf@u& (0+255),f,b
  6445  004B48  519B               	movf	(??_floorf+1)& (0+255),w,b
  6446  004B4A  17A7               	andwf	(floorf@u+1)& (0+255),f,b
  6447  004B4C  519C               	movf	(??_floorf+2)& (0+255),w,b
  6448  004B4E  17A8               	andwf	(floorf@u+2)& (0+255),f,b
  6449  004B50  519D               	movf	(??_floorf+3)& (0+255),w,b
  6450  004B52  17A9               	andwf	(floorf@u+3)& (0+255),f,b
  6451  004B54  EFF0  F025         	goto	l7134
  6452  004B58                     l7126:
  6453                           
  6454                           ; BSR set to: 0
  6455  004B58  C0A6  F09A         	movff	floorf@u,??_floorf
  6456  004B5C  C0A7  F09B         	movff	floorf@u+1,??_floorf+1
  6457  004B60  C0A8  F09C         	movff	floorf@u+2,??_floorf+2
  6458  004B64  C0A9  F09D         	movff	floorf@u+3,??_floorf+3
  6459  004B68  0E20               	movlw	32
  6460  004B6A  EFBC  F025         	goto	u7430
  6461  004B6E                     u7435:
  6462  004B6E  90D8               	bcf	status,0,c
  6463  004B70  339D               	rrcf	(??_floorf+3)& (0+255),f,b
  6464  004B72  339C               	rrcf	(??_floorf+2)& (0+255),f,b
  6465  004B74  339B               	rrcf	(??_floorf+1)& (0+255),f,b
  6466  004B76  339A               	rrcf	??_floorf& (0+255),f,b
  6467  004B78                     u7430:
  6468  004B78  2EE8               	decfsz	wreg,f,c
  6469  004B7A  EFB7  F025         	goto	u7435
  6470  004B7E  519A               	movf	??_floorf& (0+255),w,b
  6471  004B80  119B               	iorwf	(??_floorf+1)& (0+255),w,b
  6472  004B82  119C               	iorwf	(??_floorf+2)& (0+255),w,b
  6473  004B84  119D               	iorwf	(??_floorf+3)& (0+255),w,b
  6474  004B86  A4D8               	btfss	status,2,c
  6475  004B88  EFC8  F025         	goto	u7441
  6476  004B8C  EFCA  F025         	goto	u7440
  6477  004B90                     u7441:
  6478  004B90  EFD4  F025         	goto	l7130
  6479  004B94                     u7440:
  6480  004B94                     
  6481                           ; BSR set to: 0
  6482  004B94  0E00               	movlw	0
  6483  004B96  6FA6               	movwf	floorf@u& (0+255),b
  6484  004B98  0E00               	movlw	0
  6485  004B9A  6FA7               	movwf	(floorf@u+1)& (0+255),b
  6486  004B9C  0E00               	movlw	0
  6487  004B9E  6FA8               	movwf	(floorf@u+2)& (0+255),b
  6488  004BA0  0E00               	movlw	0
  6489  004BA2  6FA9               	movwf	(floorf@u+3)& (0+255),b
  6490  004BA4  EFF0  F025         	goto	l7134
  6491  004BA8                     l7130:
  6492                           
  6493                           ; BSR set to: 0
  6494  004BA8  90D8               	bcf	status,0,c
  6495  004BAA  35A6               	rlcf	floorf@u& (0+255),w,b
  6496  004BAC  6F9A               	movwf	??_floorf& (0+255),b
  6497  004BAE  35A7               	rlcf	(floorf@u+1)& (0+255),w,b
  6498  004BB0  6F9B               	movwf	(??_floorf+1)& (0+255),b
  6499  004BB2  35A8               	rlcf	(floorf@u+2)& (0+255),w,b
  6500  004BB4  6F9C               	movwf	(??_floorf+2)& (0+255),b
  6501  004BB6  35A9               	rlcf	(floorf@u+3)& (0+255),w,b
  6502  004BB8  6F9D               	movwf	(??_floorf+3)& (0+255),b
  6503  004BBA  519A               	movf	??_floorf& (0+255),w,b
  6504  004BBC  119B               	iorwf	(??_floorf+1)& (0+255),w,b
  6505  004BBE  119C               	iorwf	(??_floorf+2)& (0+255),w,b
  6506  004BC0  119D               	iorwf	(??_floorf+3)& (0+255),w,b
  6507  004BC2  B4D8               	btfsc	status,2,c
  6508  004BC4  EFE6  F025         	goto	u7451
  6509  004BC8  EFE8  F025         	goto	u7450
  6510  004BCC                     u7451:
  6511  004BCC  EFF0  F025         	goto	l7134
  6512  004BD0                     u7450:
  6513  004BD0                     
  6514                           ; BSR set to: 0
  6515  004BD0  0E00               	movlw	0
  6516  004BD2  6FA6               	movwf	floorf@u& (0+255),b
  6517  004BD4  0E00               	movlw	0
  6518  004BD6  6FA7               	movwf	(floorf@u+1)& (0+255),b
  6519  004BD8  0E80               	movlw	128
  6520  004BDA  6FA8               	movwf	(floorf@u+2)& (0+255),b
  6521  004BDC  0EBF               	movlw	191
  6522  004BDE  6FA9               	movwf	(floorf@u+3)& (0+255),b
  6523  004BE0                     l7134:
  6524                           
  6525                           ; BSR set to: 0
  6526  004BE0  C0A6  F096         	movff	floorf@u,?_floorf
  6527  004BE4  C0A7  F097         	movff	floorf@u+1,?_floorf+1
  6528  004BE8  C0A8  F098         	movff	floorf@u+2,?_floorf+2
  6529  004BEC  C0A9  F099         	movff	floorf@u+3,?_floorf+3
  6530  004BF0                     l1316:
  6531                           
  6532                           ; BSR set to: 0
  6533  004BF0  0012               	return		;funcret
  6534  004BF2                     __end_of_floorf:
  6535                           	callstack 0
  6536                           
  6537 ;; *************** function ___fltol *****************
  6538 ;; Defined at:
  6539 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  f1              4   29[BANK0 ] float 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  exp1            1   54[COMRAM] unsigned char 
  6544 ;;  sign1           1   53[COMRAM] unsigned char 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  4   29[BANK0 ] long 
  6547 ;; Registers used:
  6548 ;;		wreg, status,2, status,0
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6554 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;Total ram usage:       10 bytes
  6559 ;; Hardware stack levels used: 1
  6560 ;; Hardware stack levels required when called: 3
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_MPU6050_Read
  6565 ;;		_efgtoa
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text16
  6570  005360                     __ptext16:
  6571                           	callstack 0
  6572  005360                     ___fltol:
  6573                           	callstack 22
  6574  005360  0100               	movlb	0	; () banked
  6575  005362  357F               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6576  005364  3580               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6577  005366  6E37               	movwf	___fltol@exp1^0,c
  6578  005368  5037               	movf	___fltol@exp1^0,w,c
  6579  00536A  A4D8               	btfss	status,2,c
  6580  00536C  EFBA  F029         	goto	u7131
  6581  005370  EFBC  F029         	goto	u7130
  6582  005374                     u7131:
  6583  005374  EFC6  F029         	goto	l7014
  6584  005378                     u7130:
  6585  005378                     l7010:
  6586                           
  6587                           ; BSR set to: 0
  6588  005378  0E00               	movlw	0
  6589  00537A  6F7D               	movwf	?___fltol& (0+255),b
  6590  00537C  0E00               	movlw	0
  6591  00537E  6F7E               	movwf	(?___fltol+1)& (0+255),b
  6592  005380  0E00               	movlw	0
  6593  005382  6F7F               	movwf	(?___fltol+2)& (0+255),b
  6594  005384  0E00               	movlw	0
  6595  005386  6F80               	movwf	(?___fltol+3)& (0+255),b
  6596  005388  EF33  F02A         	goto	l613
  6597  00538C                     l7014:
  6598                           
  6599                           ; BSR set to: 0
  6600  00538C  C07D  F081         	movff	___fltol@f1,??___fltol
  6601  005390  C07E  F082         	movff	___fltol@f1+1,??___fltol+1
  6602  005394  C07F  F083         	movff	___fltol@f1+2,??___fltol+2
  6603  005398  C080  F084         	movff	___fltol@f1+3,??___fltol+3
  6604  00539C  0E20               	movlw	32
  6605  00539E  EFD6  F029         	goto	u7140
  6606  0053A2                     u7145:
  6607  0053A2  90D8               	bcf	status,0,c
  6608  0053A4  3384               	rrcf	(??___fltol+3)& (0+255),f,b
  6609  0053A6  3383               	rrcf	(??___fltol+2)& (0+255),f,b
  6610  0053A8  3382               	rrcf	(??___fltol+1)& (0+255),f,b
  6611  0053AA  3381               	rrcf	??___fltol& (0+255),f,b
  6612  0053AC                     u7140:
  6613  0053AC  2EE8               	decfsz	wreg,f,c
  6614  0053AE  EFD1  F029         	goto	u7145
  6615  0053B2  5181               	movf	??___fltol& (0+255),w,b
  6616  0053B4  6E36               	movwf	___fltol@sign1^0,c
  6617  0053B6                     
  6618                           ; BSR set to: 0
  6619  0053B6  8F7F               	bsf	(___fltol@f1+2)& (0+255),7,b
  6620  0053B8                     
  6621                           ; BSR set to: 0
  6622  0053B8  0EFF               	movlw	255
  6623  0053BA  177D               	andwf	___fltol@f1& (0+255),f,b
  6624  0053BC  0EFF               	movlw	255
  6625  0053BE  177E               	andwf	(___fltol@f1+1)& (0+255),f,b
  6626  0053C0  0EFF               	movlw	255
  6627  0053C2  177F               	andwf	(___fltol@f1+2)& (0+255),f,b
  6628  0053C4  0E00               	movlw	0
  6629  0053C6  1780               	andwf	(___fltol@f1+3)& (0+255),f,b
  6630  0053C8                     
  6631                           ; BSR set to: 0
  6632  0053C8  0E96               	movlw	150
  6633  0053CA  5E37               	subwf	___fltol@exp1^0,f,c
  6634  0053CC                     
  6635                           ; BSR set to: 0
  6636  0053CC  BE37               	btfsc	___fltol@exp1^0,7,c
  6637  0053CE  EFED  F029         	goto	u7150
  6638  0053D2  EFEB  F029         	goto	u7151
  6639  0053D6                     u7151:
  6640  0053D6  EF03  F02A         	goto	l7034
  6641  0053DA                     u7150:
  6642  0053DA                     
  6643                           ; BSR set to: 0
  6644  0053DA  5037               	movf	___fltol@exp1^0,w,c
  6645  0053DC  0A80               	xorlw	128
  6646  0053DE  0F97               	addlw	151
  6647  0053E0  B0D8               	btfsc	status,0,c
  6648  0053E2  EFF5  F029         	goto	u7161
  6649  0053E6  EFF7  F029         	goto	u7160
  6650  0053EA                     u7161:
  6651  0053EA  EFF9  F029         	goto	l7030
  6652  0053EE                     u7160:
  6653  0053EE  EFBC  F029         	goto	l7010
  6654  0053F2                     l7030:
  6655                           
  6656                           ; BSR set to: 0
  6657  0053F2  90D8               	bcf	status,0,c
  6658  0053F4  3380               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6659  0053F6  337F               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6660  0053F8  337E               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6661  0053FA  337D               	rrcf	___fltol@f1& (0+255),f,b
  6662  0053FC                     
  6663                           ; BSR set to: 0
  6664  0053FC  3E37               	incfsz	___fltol@exp1^0,f,c
  6665  0053FE  EFF9  F029         	goto	l7030
  6666  005402  EF1B  F02A         	goto	l7044
  6667  005406                     l7034:
  6668                           
  6669                           ; BSR set to: 0
  6670  005406  0E1F               	movlw	31
  6671  005408  6437               	cpfsgt	___fltol@exp1^0,c
  6672  00540A  EF09  F02A         	goto	u7171
  6673  00540E  EF0B  F02A         	goto	u7170
  6674  005412                     u7171:
  6675  005412  EF13  F02A         	goto	l7042
  6676  005416                     u7170:
  6677  005416  EFBC  F029         	goto	l7010
  6678  00541A                     l7040:
  6679                           
  6680                           ; BSR set to: 0
  6681  00541A  90D8               	bcf	status,0,c
  6682  00541C  377D               	rlcf	___fltol@f1& (0+255),f,b
  6683  00541E  377E               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6684  005420  377F               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6685  005422  3780               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6686  005424  0637               	decf	___fltol@exp1^0,f,c
  6687  005426                     l7042:
  6688                           
  6689                           ; BSR set to: 0
  6690  005426  5037               	movf	___fltol@exp1^0,w,c
  6691  005428  A4D8               	btfss	status,2,c
  6692  00542A  EF19  F02A         	goto	u7181
  6693  00542E  EF1B  F02A         	goto	u7180
  6694  005432                     u7181:
  6695  005432  EF0D  F02A         	goto	l7040
  6696  005436                     u7180:
  6697  005436                     l7044:
  6698                           
  6699                           ; BSR set to: 0
  6700  005436  5036               	movf	___fltol@sign1^0,w,c
  6701  005438  B4D8               	btfsc	status,2,c
  6702  00543A  EF21  F02A         	goto	u7191
  6703  00543E  EF23  F02A         	goto	u7190
  6704  005442                     u7191:
  6705  005442  EF2B  F02A         	goto	l7048
  6706  005446                     u7190:
  6707  005446                     
  6708                           ; BSR set to: 0
  6709  005446  1F80               	comf	(___fltol@f1+3)& (0+255),f,b
  6710  005448  1F7F               	comf	(___fltol@f1+2)& (0+255),f,b
  6711  00544A  1F7E               	comf	(___fltol@f1+1)& (0+255),f,b
  6712  00544C  6D7D               	negf	___fltol@f1& (0+255),b
  6713  00544E  0E00               	movlw	0
  6714  005450  237E               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6715  005452  237F               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6716  005454  2380               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6717  005456                     l7048:
  6718                           
  6719                           ; BSR set to: 0
  6720  005456  C07D  F07D         	movff	___fltol@f1,?___fltol
  6721  00545A  C07E  F07E         	movff	___fltol@f1+1,?___fltol+1
  6722  00545E  C07F  F07F         	movff	___fltol@f1+2,?___fltol+2
  6723  005462  C080  F080         	movff	___fltol@f1+3,?___fltol+3
  6724  005466                     l613:
  6725                           
  6726                           ; BSR set to: 0
  6727  005466  0012               	return		;funcret
  6728  005468                     __end_of___fltol:
  6729                           	callstack 0
  6730                           
  6731 ;; *************** function ___flge *****************
  6732 ;; Defined at:
  6733 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  ff1             4   45[COMRAM] long 
  6736 ;;  ff2             4   49[COMRAM] long 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;		None
  6739 ;; Return value:  Size  Location     Type
  6740 ;;		None               void
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6748 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;Total ram usage:       12 bytes
  6753 ;; Hardware stack levels used: 1
  6754 ;; Hardware stack levels required when called: 3
  6755 ;; This function calls:
  6756 ;;		Nothing
  6757 ;; This function is called by:
  6758 ;;		_efgtoa
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           	psect	text17
  6763  005468                     __ptext17:
  6764                           	callstack 0
  6765  005468                     ___flge:
  6766                           	callstack 22
  6767  005468  0E00               	movlw	0
  6768  00546A  142E               	andwf	___flge@ff1^0,w,c
  6769  00546C  0100               	movlb	0	; () banked
  6770  00546E  6F6D               	movwf	??___flge& (0+255),b
  6771  005470  0E00               	movlw	0
  6772  005472  142F               	andwf	(___flge@ff1+1)^0,w,c
  6773  005474  6F6E               	movwf	(??___flge+1)& (0+255),b
  6774  005476  0E80               	movlw	128
  6775  005478  1430               	andwf	(___flge@ff1+2)^0,w,c
  6776  00547A  6F6F               	movwf	(??___flge+2)& (0+255),b
  6777  00547C  0E7F               	movlw	127
  6778  00547E  1431               	andwf	(___flge@ff1+3)^0,w,c
  6779  005480  6F70               	movwf	(??___flge+3)& (0+255),b
  6780  005482  516D               	movf	??___flge& (0+255),w,b
  6781  005484  116E               	iorwf	(??___flge+1)& (0+255),w,b
  6782  005486  116F               	iorwf	(??___flge+2)& (0+255),w,b
  6783  005488  1170               	iorwf	(??___flge+3)& (0+255),w,b
  6784  00548A  A4D8               	btfss	status,2,c
  6785  00548C  EF4A  F02A         	goto	u7071
  6786  005490  EF4C  F02A         	goto	u7070
  6787  005494                     u7071:
  6788  005494  EF54  F02A         	goto	l6982
  6789  005498                     u7070:
  6790  005498                     
  6791                           ; BSR set to: 0
  6792  005498  0E00               	movlw	0
  6793  00549A  6E2E               	movwf	___flge@ff1^0,c
  6794  00549C  0E00               	movlw	0
  6795  00549E  6E2F               	movwf	(___flge@ff1+1)^0,c
  6796  0054A0  0E00               	movlw	0
  6797  0054A2  6E30               	movwf	(___flge@ff1+2)^0,c
  6798  0054A4  0E00               	movlw	0
  6799  0054A6  6E31               	movwf	(___flge@ff1+3)^0,c
  6800  0054A8                     l6982:
  6801                           
  6802                           ; BSR set to: 0
  6803  0054A8  0E00               	movlw	0
  6804  0054AA  1432               	andwf	___flge@ff2^0,w,c
  6805  0054AC  6F6D               	movwf	??___flge& (0+255),b
  6806  0054AE  0E00               	movlw	0
  6807  0054B0  1433               	andwf	(___flge@ff2+1)^0,w,c
  6808  0054B2  6F6E               	movwf	(??___flge+1)& (0+255),b
  6809  0054B4  0E80               	movlw	128
  6810  0054B6  1434               	andwf	(___flge@ff2+2)^0,w,c
  6811  0054B8  6F6F               	movwf	(??___flge+2)& (0+255),b
  6812  0054BA  0E7F               	movlw	127
  6813  0054BC  1435               	andwf	(___flge@ff2+3)^0,w,c
  6814  0054BE  6F70               	movwf	(??___flge+3)& (0+255),b
  6815  0054C0  516D               	movf	??___flge& (0+255),w,b
  6816  0054C2  116E               	iorwf	(??___flge+1)& (0+255),w,b
  6817  0054C4  116F               	iorwf	(??___flge+2)& (0+255),w,b
  6818  0054C6  1170               	iorwf	(??___flge+3)& (0+255),w,b
  6819  0054C8  A4D8               	btfss	status,2,c
  6820  0054CA  EF69  F02A         	goto	u7081
  6821  0054CE  EF6B  F02A         	goto	u7080
  6822  0054D2                     u7081:
  6823  0054D2  EF73  F02A         	goto	l6986
  6824  0054D6                     u7080:
  6825  0054D6                     
  6826                           ; BSR set to: 0
  6827  0054D6  0E00               	movlw	0
  6828  0054D8  6E32               	movwf	___flge@ff2^0,c
  6829  0054DA  0E00               	movlw	0
  6830  0054DC  6E33               	movwf	(___flge@ff2+1)^0,c
  6831  0054DE  0E00               	movlw	0
  6832  0054E0  6E34               	movwf	(___flge@ff2+2)^0,c
  6833  0054E2  0E00               	movlw	0
  6834  0054E4  6E35               	movwf	(___flge@ff2+3)^0,c
  6835  0054E6                     l6986:
  6836                           
  6837                           ; BSR set to: 0
  6838  0054E6  AE31               	btfss	(___flge@ff1+3)^0,7,c
  6839  0054E8  EF78  F02A         	goto	u7091
  6840  0054EC  EF7A  F02A         	goto	u7090
  6841  0054F0                     u7091:
  6842  0054F0  EF83  F02A         	goto	l6990
  6843  0054F4                     u7090:
  6844  0054F4                     
  6845                           ; BSR set to: 0
  6846  0054F4  6C2E               	negf	___flge@ff1^0,c
  6847  0054F6  1E2F               	comf	(___flge@ff1+1)^0,f,c
  6848  0054F8  B0D8               	btfsc	status,0,c
  6849  0054FA  2A2F               	incf	(___flge@ff1+1)^0,f,c
  6850  0054FC  1E30               	comf	(___flge@ff1+2)^0,f,c
  6851  0054FE  B0D8               	btfsc	status,0,c
  6852  005500  2A30               	incf	(___flge@ff1+2)^0,f,c
  6853  005502  0E80               	movlw	128
  6854  005504  5631               	subfwb	(___flge@ff1+3)^0,f,c
  6855  005506                     l6990:
  6856                           
  6857                           ; BSR set to: 0
  6858  005506  AE35               	btfss	(___flge@ff2+3)^0,7,c
  6859  005508  EF88  F02A         	goto	u7101
  6860  00550C  EF8A  F02A         	goto	u7100
  6861  005510                     u7101:
  6862  005510  EF93  F02A         	goto	l581
  6863  005514                     u7100:
  6864  005514                     
  6865                           ; BSR set to: 0
  6866  005514  6C32               	negf	___flge@ff2^0,c
  6867  005516  1E33               	comf	(___flge@ff2+1)^0,f,c
  6868  005518  B0D8               	btfsc	status,0,c
  6869  00551A  2A33               	incf	(___flge@ff2+1)^0,f,c
  6870  00551C  1E34               	comf	(___flge@ff2+2)^0,f,c
  6871  00551E  B0D8               	btfsc	status,0,c
  6872  005520  2A34               	incf	(___flge@ff2+2)^0,f,c
  6873  005522  0E80               	movlw	128
  6874  005524  5635               	subfwb	(___flge@ff2+3)^0,f,c
  6875  005526                     l581:
  6876                           
  6877                           ; BSR set to: 0
  6878  005526  0E00               	movlw	0
  6879  005528  1A2E               	xorwf	___flge@ff1^0,f,c
  6880  00552A  0E00               	movlw	0
  6881  00552C  1A2F               	xorwf	(___flge@ff1+1)^0,f,c
  6882  00552E  0E00               	movlw	0
  6883  005530  1A30               	xorwf	(___flge@ff1+2)^0,f,c
  6884  005532  0E80               	movlw	128
  6885  005534  1A31               	xorwf	(___flge@ff1+3)^0,f,c
  6886  005536  0E00               	movlw	0
  6887  005538  1A32               	xorwf	___flge@ff2^0,f,c
  6888  00553A  0E00               	movlw	0
  6889  00553C  1A33               	xorwf	(___flge@ff2+1)^0,f,c
  6890  00553E  0E00               	movlw	0
  6891  005540  1A34               	xorwf	(___flge@ff2+2)^0,f,c
  6892  005542  0E80               	movlw	128
  6893  005544  1A35               	xorwf	(___flge@ff2+3)^0,f,c
  6894  005546  5032               	movf	___flge@ff2^0,w,c
  6895  005548  5C2E               	subwf	___flge@ff1^0,w,c
  6896  00554A  5033               	movf	(___flge@ff2+1)^0,w,c
  6897  00554C  582F               	subwfb	(___flge@ff1+1)^0,w,c
  6898  00554E  5034               	movf	(___flge@ff2+2)^0,w,c
  6899  005550  5830               	subwfb	(___flge@ff1+2)^0,w,c
  6900  005552  5035               	movf	(___flge@ff2+3)^0,w,c
  6901  005554  5831               	subwfb	(___flge@ff1+3)^0,w,c
  6902  005556  B0D8               	btfsc	status,0,c
  6903  005558  EFB0  F02A         	goto	u7111
  6904  00555C  EFB2  F02A         	goto	u7110
  6905  005560                     u7111:
  6906  005560  EFB5  F02A         	goto	l6996
  6907  005564                     u7110:
  6908  005564                     
  6909                           ; BSR set to: 0
  6910  005564  90D8               	bcf	status,0,c
  6911  005566  EFB6  F02A         	goto	l586
  6912  00556A                     l6996:
  6913                           
  6914                           ; BSR set to: 0
  6915  00556A  80D8               	bsf	status,0,c
  6916  00556C                     l586:
  6917                           
  6918                           ; BSR set to: 0
  6919  00556C  0012               	return		;funcret
  6920  00556E                     __end_of___flge:
  6921                           	callstack 0
  6922                           
  6923 ;; *************** function ___fleq *****************
  6924 ;; Defined at:
  6925 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  ff1             4   19[COMRAM] long 
  6928 ;;  ff2             4   23[COMRAM] long 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;		None               void
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6940 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;Total ram usage:       12 bytes
  6945 ;; Hardware stack levels used: 1
  6946 ;; Hardware stack levels required when called: 3
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_efgtoa
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text18
  6955  005A4E                     __ptext18:
  6956                           	callstack 0
  6957  005A4E                     ___fleq:
  6958                           	callstack 22
  6959  005A4E  0E00               	movlw	0
  6960  005A50  1414               	andwf	___fleq@ff1^0,w,c
  6961  005A52  6E1C               	movwf	??___fleq^0,c
  6962  005A54  0E00               	movlw	0
  6963  005A56  1415               	andwf	(___fleq@ff1+1)^0,w,c
  6964  005A58  6E1D               	movwf	(??___fleq+1)^0,c
  6965  005A5A  0E80               	movlw	128
  6966  005A5C  1416               	andwf	(___fleq@ff1+2)^0,w,c
  6967  005A5E  6E1E               	movwf	(??___fleq+2)^0,c
  6968  005A60  0E7F               	movlw	127
  6969  005A62  1417               	andwf	(___fleq@ff1+3)^0,w,c
  6970  005A64  6E1F               	movwf	(??___fleq+3)^0,c
  6971  005A66  501C               	movf	??___fleq^0,w,c
  6972  005A68  101D               	iorwf	(??___fleq+1)^0,w,c
  6973  005A6A  101E               	iorwf	(??___fleq+2)^0,w,c
  6974  005A6C  101F               	iorwf	(??___fleq+3)^0,w,c
  6975  005A6E  A4D8               	btfss	status,2,c
  6976  005A70  EF3C  F02D         	goto	u7041
  6977  005A74  EF3E  F02D         	goto	u7040
  6978  005A78                     u7041:
  6979  005A78  EF46  F02D         	goto	l6966
  6980  005A7C                     u7040:
  6981  005A7C  0E00               	movlw	0
  6982  005A7E  6E14               	movwf	___fleq@ff1^0,c
  6983  005A80  0E00               	movlw	0
  6984  005A82  6E15               	movwf	(___fleq@ff1+1)^0,c
  6985  005A84  0E00               	movlw	0
  6986  005A86  6E16               	movwf	(___fleq@ff1+2)^0,c
  6987  005A88  0E00               	movlw	0
  6988  005A8A  6E17               	movwf	(___fleq@ff1+3)^0,c
  6989  005A8C                     l6966:
  6990  005A8C  0E00               	movlw	0
  6991  005A8E  1418               	andwf	___fleq@ff2^0,w,c
  6992  005A90  6E1C               	movwf	??___fleq^0,c
  6993  005A92  0E00               	movlw	0
  6994  005A94  1419               	andwf	(___fleq@ff2+1)^0,w,c
  6995  005A96  6E1D               	movwf	(??___fleq+1)^0,c
  6996  005A98  0E80               	movlw	128
  6997  005A9A  141A               	andwf	(___fleq@ff2+2)^0,w,c
  6998  005A9C  6E1E               	movwf	(??___fleq+2)^0,c
  6999  005A9E  0E7F               	movlw	127
  7000  005AA0  141B               	andwf	(___fleq@ff2+3)^0,w,c
  7001  005AA2  6E1F               	movwf	(??___fleq+3)^0,c
  7002  005AA4  501C               	movf	??___fleq^0,w,c
  7003  005AA6  101D               	iorwf	(??___fleq+1)^0,w,c
  7004  005AA8  101E               	iorwf	(??___fleq+2)^0,w,c
  7005  005AAA  101F               	iorwf	(??___fleq+3)^0,w,c
  7006  005AAC  A4D8               	btfss	status,2,c
  7007  005AAE  EF5B  F02D         	goto	u7051
  7008  005AB2  EF5D  F02D         	goto	u7050
  7009  005AB6                     u7051:
  7010  005AB6  EF65  F02D         	goto	l6970
  7011  005ABA                     u7050:
  7012  005ABA  0E00               	movlw	0
  7013  005ABC  6E18               	movwf	___fleq@ff2^0,c
  7014  005ABE  0E00               	movlw	0
  7015  005AC0  6E19               	movwf	(___fleq@ff2+1)^0,c
  7016  005AC2  0E00               	movlw	0
  7017  005AC4  6E1A               	movwf	(___fleq@ff2+2)^0,c
  7018  005AC6  0E00               	movlw	0
  7019  005AC8  6E1B               	movwf	(___fleq@ff2+3)^0,c
  7020  005ACA                     l6970:
  7021  005ACA  5018               	movf	___fleq@ff2^0,w,c
  7022  005ACC  1814               	xorwf	___fleq@ff1^0,w,c
  7023  005ACE  E10F               	bnz	u7060
  7024  005AD0  5019               	movf	(___fleq@ff2+1)^0,w,c
  7025  005AD2  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  7026  005AD4  E10C               	bnz	u7060
  7027  005AD6  501A               	movf	(___fleq@ff2+2)^0,w,c
  7028  005AD8  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  7029  005ADA  E109               	bnz	u7060
  7030  005ADC  501B               	movf	(___fleq@ff2+3)^0,w,c
  7031  005ADE  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  7032  005AE0  B4D8               	btfsc	status,2,c
  7033  005AE2  EF75  F02D         	goto	u7061
  7034  005AE6  EF77  F02D         	goto	u7060
  7035  005AEA                     u7061:
  7036  005AEA  EF7A  F02D         	goto	l6974
  7037  005AEE                     u7060:
  7038  005AEE  90D8               	bcf	status,0,c
  7039  005AF0  EF7B  F02D         	goto	l575
  7040  005AF4                     l6974:
  7041  005AF4  80D8               	bsf	status,0,c
  7042  005AF6                     l575:
  7043  005AF6  0012               	return		;funcret
  7044  005AF8                     __end_of___fleq:
  7045                           	callstack 0
  7046                           
  7047 ;; *************** function ___awmod *****************
  7048 ;; Defined at:
  7049 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  dividend        2   19[COMRAM] int 
  7052 ;;  divisor         2   21[COMRAM] int 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  sign            1   24[COMRAM] unsigned char 
  7055 ;;  counter         1   23[COMRAM] unsigned char 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  2   19[COMRAM] int 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7069 ;;Total ram usage:        6 bytes
  7070 ;; Hardware stack levels used: 1
  7071 ;; Hardware stack levels required when called: 3
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		_efgtoa
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text19
  7080  00599E                     __ptext19:
  7081                           	callstack 0
  7082  00599E                     ___awmod:
  7083                           	callstack 22
  7084  00599E  0E00               	movlw	0
  7085  0059A0  6E19               	movwf	___awmod@sign^0,c
  7086  0059A2  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  7087  0059A4  EFD8  F02C         	goto	u6980
  7088  0059A8  EFD6  F02C         	goto	u6981
  7089  0059AC                     u6981:
  7090  0059AC  EFDE  F02C         	goto	l6934
  7091  0059B0                     u6980:
  7092  0059B0  6C14               	negf	___awmod@dividend^0,c
  7093  0059B2  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7094  0059B4  B0D8               	btfsc	status,0,c
  7095  0059B6  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7096  0059B8  0E01               	movlw	1
  7097  0059BA  6E19               	movwf	___awmod@sign^0,c
  7098  0059BC                     l6934:
  7099  0059BC  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  7100  0059BE  EFE5  F02C         	goto	u6990
  7101  0059C2  EFE3  F02C         	goto	u6991
  7102  0059C6                     u6991:
  7103  0059C6  EFE9  F02C         	goto	l6938
  7104  0059CA                     u6990:
  7105  0059CA  6C16               	negf	___awmod@divisor^0,c
  7106  0059CC  1E17               	comf	(___awmod@divisor+1)^0,f,c
  7107  0059CE  B0D8               	btfsc	status,0,c
  7108  0059D0  2A17               	incf	(___awmod@divisor+1)^0,f,c
  7109  0059D2                     l6938:
  7110  0059D2  5016               	movf	___awmod@divisor^0,w,c
  7111  0059D4  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  7112  0059D6  B4D8               	btfsc	status,2,c
  7113  0059D8  EFF0  F02C         	goto	u7001
  7114  0059DC  EFF2  F02C         	goto	u7000
  7115  0059E0                     u7001:
  7116  0059E0  EF16  F02D         	goto	l6954
  7117  0059E4                     u7000:
  7118  0059E4  0E01               	movlw	1
  7119  0059E6  6E18               	movwf	___awmod@counter^0,c
  7120  0059E8  EFFA  F02C         	goto	l6944
  7121  0059EC                     l6942:
  7122  0059EC  90D8               	bcf	status,0,c
  7123  0059EE  3616               	rlcf	___awmod@divisor^0,f,c
  7124  0059F0  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  7125  0059F2  2A18               	incf	___awmod@counter^0,f,c
  7126  0059F4                     l6944:
  7127  0059F4  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  7128  0059F6  EFFF  F02C         	goto	u7011
  7129  0059FA  EF01  F02D         	goto	u7010
  7130  0059FE                     u7011:
  7131  0059FE  EFF6  F02C         	goto	l6942
  7132  005A02                     u7010:
  7133  005A02                     l6946:
  7134  005A02  5016               	movf	___awmod@divisor^0,w,c
  7135  005A04  5C14               	subwf	___awmod@dividend^0,w,c
  7136  005A06  5017               	movf	(___awmod@divisor+1)^0,w,c
  7137  005A08  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  7138  005A0A  A0D8               	btfss	status,0,c
  7139  005A0C  EF0A  F02D         	goto	u7021
  7140  005A10  EF0C  F02D         	goto	u7020
  7141  005A14                     u7021:
  7142  005A14  EF10  F02D         	goto	l6950
  7143  005A18                     u7020:
  7144  005A18  5016               	movf	___awmod@divisor^0,w,c
  7145  005A1A  5E14               	subwf	___awmod@dividend^0,f,c
  7146  005A1C  5017               	movf	(___awmod@divisor+1)^0,w,c
  7147  005A1E  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  7148  005A20                     l6950:
  7149  005A20  90D8               	bcf	status,0,c
  7150  005A22  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  7151  005A24  3216               	rrcf	___awmod@divisor^0,f,c
  7152  005A26  2E18               	decfsz	___awmod@counter^0,f,c
  7153  005A28  EF01  F02D         	goto	l6946
  7154  005A2C                     l6954:
  7155  005A2C  5019               	movf	___awmod@sign^0,w,c
  7156  005A2E  B4D8               	btfsc	status,2,c
  7157  005A30  EF1C  F02D         	goto	u7031
  7158  005A34  EF1E  F02D         	goto	u7030
  7159  005A38                     u7031:
  7160  005A38  EF22  F02D         	goto	l6958
  7161  005A3C                     u7030:
  7162  005A3C  6C14               	negf	___awmod@dividend^0,c
  7163  005A3E  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7164  005A40  B0D8               	btfsc	status,0,c
  7165  005A42  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7166  005A44                     l6958:
  7167  005A44  C014  F014         	movff	___awmod@dividend,?___awmod
  7168  005A48  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  7169  005A4C  0012               	return		;funcret
  7170  005A4E                     __end_of___awmod:
  7171                           	callstack 0
  7172                           
  7173 ;; *************** function ___awdiv *****************
  7174 ;; Defined at:
  7175 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;  dividend        2   19[COMRAM] int 
  7178 ;;  divisor         2   21[COMRAM] int 
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;  quotient        2   25[COMRAM] int 
  7181 ;;  sign            1   24[COMRAM] unsigned char 
  7182 ;;  counter         1   23[COMRAM] unsigned char 
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  2   19[COMRAM] int 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7195 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7196 ;;Total ram usage:        8 bytes
  7197 ;; Hardware stack levels used: 1
  7198 ;; Hardware stack levels required when called: 3
  7199 ;; This function calls:
  7200 ;;		Nothing
  7201 ;; This function is called by:
  7202 ;;		_efgtoa
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text20
  7207  005818                     __ptext20:
  7208                           	callstack 0
  7209  005818                     ___awdiv:
  7210                           	callstack 22
  7211  005818  0E00               	movlw	0
  7212  00581A  6E19               	movwf	___awdiv@sign^0,c
  7213  00581C  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  7214  00581E  EF15  F02C         	goto	u6920
  7215  005822  EF13  F02C         	goto	u6921
  7216  005826                     u6921:
  7217  005826  EF1B  F02C         	goto	l6890
  7218  00582A                     u6920:
  7219  00582A  6C16               	negf	___awdiv@divisor^0,c
  7220  00582C  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  7221  00582E  B0D8               	btfsc	status,0,c
  7222  005830  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  7223  005832  0E01               	movlw	1
  7224  005834  6E19               	movwf	___awdiv@sign^0,c
  7225  005836                     l6890:
  7226  005836  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  7227  005838  EF22  F02C         	goto	u6930
  7228  00583C  EF20  F02C         	goto	u6931
  7229  005840                     u6931:
  7230  005840  EF28  F02C         	goto	l6896
  7231  005844                     u6930:
  7232  005844  6C14               	negf	___awdiv@dividend^0,c
  7233  005846  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  7234  005848  B0D8               	btfsc	status,0,c
  7235  00584A  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  7236  00584C  0E01               	movlw	1
  7237  00584E  1A19               	xorwf	___awdiv@sign^0,f,c
  7238  005850                     l6896:
  7239  005850  0E00               	movlw	0
  7240  005852  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  7241  005854  0E00               	movlw	0
  7242  005856  6E1A               	movwf	___awdiv@quotient^0,c
  7243  005858  5016               	movf	___awdiv@divisor^0,w,c
  7244  00585A  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  7245  00585C  B4D8               	btfsc	status,2,c
  7246  00585E  EF33  F02C         	goto	u6941
  7247  005862  EF35  F02C         	goto	u6940
  7248  005866                     u6941:
  7249  005866  EF5D  F02C         	goto	l6918
  7250  00586A                     u6940:
  7251  00586A  0E01               	movlw	1
  7252  00586C  6E18               	movwf	___awdiv@counter^0,c
  7253  00586E  EF3D  F02C         	goto	l6904
  7254  005872                     l6902:
  7255  005872  90D8               	bcf	status,0,c
  7256  005874  3616               	rlcf	___awdiv@divisor^0,f,c
  7257  005876  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  7258  005878  2A18               	incf	___awdiv@counter^0,f,c
  7259  00587A                     l6904:
  7260  00587A  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  7261  00587C  EF42  F02C         	goto	u6951
  7262  005880  EF44  F02C         	goto	u6950
  7263  005884                     u6951:
  7264  005884  EF39  F02C         	goto	l6902
  7265  005888                     u6950:
  7266  005888                     l6906:
  7267  005888  90D8               	bcf	status,0,c
  7268  00588A  361A               	rlcf	___awdiv@quotient^0,f,c
  7269  00588C  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  7270  00588E  5016               	movf	___awdiv@divisor^0,w,c
  7271  005890  5C14               	subwf	___awdiv@dividend^0,w,c
  7272  005892  5017               	movf	(___awdiv@divisor+1)^0,w,c
  7273  005894  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  7274  005896  A0D8               	btfss	status,0,c
  7275  005898  EF50  F02C         	goto	u6961
  7276  00589C  EF52  F02C         	goto	u6960
  7277  0058A0                     u6961:
  7278  0058A0  EF57  F02C         	goto	l6914
  7279  0058A4                     u6960:
  7280  0058A4  5016               	movf	___awdiv@divisor^0,w,c
  7281  0058A6  5E14               	subwf	___awdiv@dividend^0,f,c
  7282  0058A8  5017               	movf	(___awdiv@divisor+1)^0,w,c
  7283  0058AA  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  7284  0058AC  801A               	bsf	___awdiv@quotient^0,0,c
  7285  0058AE                     l6914:
  7286  0058AE  90D8               	bcf	status,0,c
  7287  0058B0  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  7288  0058B2  3216               	rrcf	___awdiv@divisor^0,f,c
  7289  0058B4  2E18               	decfsz	___awdiv@counter^0,f,c
  7290  0058B6  EF44  F02C         	goto	l6906
  7291  0058BA                     l6918:
  7292  0058BA  5019               	movf	___awdiv@sign^0,w,c
  7293  0058BC  B4D8               	btfsc	status,2,c
  7294  0058BE  EF63  F02C         	goto	u6971
  7295  0058C2  EF65  F02C         	goto	u6970
  7296  0058C6                     u6971:
  7297  0058C6  EF69  F02C         	goto	l6922
  7298  0058CA                     u6970:
  7299  0058CA  6C1A               	negf	___awdiv@quotient^0,c
  7300  0058CC  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  7301  0058CE  B0D8               	btfsc	status,0,c
  7302  0058D0  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  7303  0058D2                     l6922:
  7304  0058D2  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  7305  0058D6  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  7306  0058DA  0012               	return		;funcret
  7307  0058DC                     __end_of___awdiv:
  7308                           	callstack 0
  7309                           
  7310 ;; *************** function _atoi *****************
  7311 ;; Defined at:
  7312 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  s               2   26[COMRAM] PTR const unsigned char 
  7315 ;;		 -> STR_7(21), STR_6(20), STR_5(21), STR_4(21), 
  7316 ;;		 -> STR_3(22), STR_2(16), STR_1(15), 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  n               2   39[COMRAM] int 
  7319 ;;  neg             2   32[COMRAM] int 
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  2   26[COMRAM] int 
  7322 ;; Registers used:
  7323 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;Total ram usage:       15 bytes
  7334 ;; Hardware stack levels used: 1
  7335 ;; Hardware stack levels required when called: 4
  7336 ;; This function calls:
  7337 ;;		___wmul
  7338 ;;		_isdigit
  7339 ;;		_isspace
  7340 ;; This function is called by:
  7341 ;;		_vfpfcnvrt
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text21
  7346  004DA6                     __ptext21:
  7347                           	callstack 0
  7348  004DA6                     _atoi:
  7349                           	callstack 22
  7350  004DA6  0E00               	movlw	0
  7351  004DA8  6E29               	movwf	(atoi@n+1)^0,c
  7352  004DAA  0E00               	movlw	0
  7353  004DAC  6E28               	movwf	atoi@n^0,c
  7354  004DAE  0E00               	movlw	0
  7355  004DB0  6E22               	movwf	(atoi@neg+1)^0,c
  7356  004DB2  0E00               	movlw	0
  7357  004DB4  6E21               	movwf	atoi@neg^0,c
  7358  004DB6  EFDF  F026         	goto	l7466
  7359  004DBA                     l7464:
  7360  004DBA  4A1B               	infsnz	atoi@s^0,f,c
  7361  004DBC  2A1C               	incf	(atoi@s+1)^0,f,c
  7362  004DBE                     l7466:
  7363  004DBE  0E01               	movlw	1
  7364  004DC0  6E27               	movwf	_atoi$2296^0,c
  7365  004DC2  C01B  FFF6         	movff	atoi@s,tblptrl
  7366  004DC6  C01C  FFF7         	movff	atoi@s+1,tblptrh
  7367  004DCA                     	if	0	;tblptru may be non-zero
  7368  004DCA                     	endif
  7369  004DCA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7370  004DCA  0E00               	movlw	low (__mediumconst shr (0+16))
  7371  004DCC  6EF8               	movwf	tblptru,c
  7372  004DCE                     	endif
  7373  004DCE  0008               	tblrd		*
  7374  004DD0  50F5               	movf	tablat,w,c
  7375  004DD2  0A20               	xorlw	32
  7376  004DD4  B4D8               	btfsc	status,2,c
  7377  004DD6  EFEF  F026         	goto	u8041
  7378  004DDA  EFF1  F026         	goto	u8040
  7379  004DDE                     u8041:
  7380  004DDE  EF10  F027         	goto	l7474
  7381  004DE2                     u8040:
  7382  004DE2  0EF7               	movlw	247
  7383  004DE4  6E1D               	movwf	??_atoi^0,c
  7384  004DE6  0EFF               	movlw	255
  7385  004DE8  6E1E               	movwf	(??_atoi+1)^0,c
  7386  004DEA  C01B  FFF6         	movff	atoi@s,tblptrl
  7387  004DEE  C01C  FFF7         	movff	atoi@s+1,tblptrh
  7388  004DF2                     	if	0	;tblptru may be non-zero
  7389  004DF2                     	endif
  7390  004DF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7391  004DF2  0E00               	movlw	low (__mediumconst shr (0+16))
  7392  004DF4  6EF8               	movwf	tblptru,c
  7393  004DF6                     	endif
  7394  004DF6  0008               	tblrd		*
  7395  004DF8  50F5               	movf	tablat,w,c
  7396  004DFA  6E1F               	movwf	(??_atoi+2)^0,c
  7397  004DFC  6A20               	clrf	(??_atoi+3)^0,c
  7398  004DFE  501D               	movf	??_atoi^0,w,c
  7399  004E00  261F               	addwf	(??_atoi+2)^0,f,c
  7400  004E02  501E               	movf	(??_atoi+1)^0,w,c
  7401  004E04  2220               	addwfc	(??_atoi+3)^0,f,c
  7402  004E06  5020               	movf	(??_atoi+3)^0,w,c
  7403  004E08  E109               	bnz	u8050
  7404  004E0A  0E05               	movlw	5
  7405  004E0C  5C1F               	subwf	(??_atoi+2)^0,w,c
  7406  004E0E  A0D8               	btfss	status,0,c
  7407  004E10  EF0C  F027         	goto	u8051
  7408  004E14  EF0E  F027         	goto	u8050
  7409  004E18                     u8051:
  7410  004E18  EF10  F027         	goto	l7474
  7411  004E1C                     u8050:
  7412  004E1C  0E00               	movlw	0
  7413  004E1E  6E27               	movwf	_atoi$2296^0,c
  7414  004E20                     l7474:
  7415  004E20  C027  F023         	movff	_atoi$2296,_atoi$2295
  7416  004E24  6A24               	clrf	(_atoi$2295+1)^0,c
  7417  004E26  5023               	movf	_atoi$2295^0,w,c
  7418  004E28  1024               	iorwf	(_atoi$2295+1)^0,w,c
  7419  004E2A  A4D8               	btfss	status,2,c
  7420  004E2C  EF1A  F027         	goto	u8061
  7421  004E30  EF1C  F027         	goto	u8060
  7422  004E34                     u8061:
  7423  004E34  EFDD  F026         	goto	l7464
  7424  004E38                     u8060:
  7425  004E38  EF26  F027         	goto	l7484
  7426  004E3C                     l7480:
  7427  004E3C  0E00               	movlw	0
  7428  004E3E  6E22               	movwf	(atoi@neg+1)^0,c
  7429  004E40  0E01               	movlw	1
  7430  004E42  6E21               	movwf	atoi@neg^0,c
  7431  004E44                     l7482:
  7432  004E44  4A1B               	infsnz	atoi@s^0,f,c
  7433  004E46  2A1C               	incf	(atoi@s+1)^0,f,c
  7434  004E48  EF5F  F027         	goto	l7490
  7435  004E4C                     l7484:
  7436  004E4C  C01B  FFF6         	movff	atoi@s,tblptrl
  7437  004E50  C01C  FFF7         	movff	atoi@s+1,tblptrh
  7438  004E54                     	if	0	;tblptru may be non-zero
  7439  004E54                     	endif
  7440  004E54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7441  004E54  0E00               	movlw	low (__mediumconst shr (0+16))
  7442  004E56  6EF8               	movwf	tblptru,c
  7443  004E58                     	endif
  7444  004E58  0008               	tblrd		*
  7445  004E5A  50F5               	movf	tablat,w,c
  7446  004E5C  6E1D               	movwf	??_atoi^0,c
  7447  004E5E  6A1E               	clrf	(??_atoi+1)^0,c
  7448                           
  7449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7450                           ; Switch size 1, requested type "simple"
  7451                           ; Number of cases is 1, Range of values is 0 to 0
  7452                           ; switch strategies available:
  7453                           ; Name         Instructions Cycles
  7454                           ; simple_byte            4     3 (average)
  7455                           ;	Chosen strategy is simple_byte
  7456  004E60  501E               	movf	(??_atoi+1)^0,w,c
  7457  004E62  0A00               	xorlw	0	; case 0
  7458  004E64  B4D8               	btfsc	status,2,c
  7459  004E66  EF37  F027         	goto	l8442
  7460  004E6A  EF5F  F027         	goto	l7490
  7461  004E6E                     l8442:
  7462                           
  7463                           ; Switch size 1, requested type "simple"
  7464                           ; Number of cases is 2, Range of values is 43 to 45
  7465                           ; switch strategies available:
  7466                           ; Name         Instructions Cycles
  7467                           ; simple_byte            7     4 (average)
  7468                           ;	Chosen strategy is simple_byte
  7469  004E6E  501D               	movf	??_atoi^0,w,c
  7470  004E70  0A2B               	xorlw	43	; case 43
  7471  004E72  B4D8               	btfsc	status,2,c
  7472  004E74  EF22  F027         	goto	l7482
  7473  004E78  0A06               	xorlw	6	; case 45
  7474  004E7A  B4D8               	btfsc	status,2,c
  7475  004E7C  EF1E  F027         	goto	l7480
  7476  004E80  EF5F  F027         	goto	l7490
  7477  004E84                     l7486:
  7478  004E84  C028  F014         	movff	atoi@n,___wmul@multiplier
  7479  004E88  C029  F015         	movff	atoi@n+1,___wmul@multiplier+1
  7480  004E8C  0E00               	movlw	0
  7481  004E8E  6E17               	movwf	(___wmul@multiplicand+1)^0,c
  7482  004E90  0E0A               	movlw	10
  7483  004E92  6E16               	movwf	___wmul@multiplicand^0,c
  7484  004E94  EC51  F031         	call	___wmul	;wreg free
  7485  004E98  C01B  FFF6         	movff	atoi@s,tblptrl
  7486  004E9C  C01C  FFF7         	movff	atoi@s+1,tblptrh
  7487  004EA0                     	if	0	;tblptru may be non-zero
  7488  004EA0                     	endif
  7489  004EA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7490  004EA0  0E00               	movlw	low (__mediumconst shr (0+16))
  7491  004EA2  6EF8               	movwf	tblptru,c
  7492  004EA4                     	endif
  7493  004EA4  0008               	tblrd		*
  7494  004EA6  50F5               	movf	tablat,w,c
  7495  004EA8  5E14               	subwf	?___wmul^0,f,c
  7496  004EAA  0E00               	movlw	0
  7497  004EAC  5A15               	subwfb	(?___wmul+1)^0,f,c
  7498  004EAE  0E30               	movlw	48
  7499  004EB0  2414               	addwf	?___wmul^0,w,c
  7500  004EB2  6E28               	movwf	atoi@n^0,c
  7501  004EB4  0E00               	movlw	0
  7502  004EB6  2015               	addwfc	(?___wmul+1)^0,w,c
  7503  004EB8  6E29               	movwf	(atoi@n+1)^0,c
  7504  004EBA  EF22  F027         	goto	l7482
  7505  004EBE                     l7490:
  7506  004EBE  0ED0               	movlw	208
  7507  004EC0  6E1D               	movwf	??_atoi^0,c
  7508  004EC2  0EFF               	movlw	255
  7509  004EC4  6E1E               	movwf	(??_atoi+1)^0,c
  7510  004EC6  C01B  FFF6         	movff	atoi@s,tblptrl
  7511  004ECA  C01C  FFF7         	movff	atoi@s+1,tblptrh
  7512  004ECE                     	if	0	;tblptru may be non-zero
  7513  004ECE                     	endif
  7514  004ECE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7515  004ECE  0E00               	movlw	low (__mediumconst shr (0+16))
  7516  004ED0  6EF8               	movwf	tblptru,c
  7517  004ED2                     	endif
  7518  004ED2  0008               	tblrd		*
  7519  004ED4  50F5               	movf	tablat,w,c
  7520  004ED6  6E1F               	movwf	(??_atoi+2)^0,c
  7521  004ED8  6A20               	clrf	(??_atoi+3)^0,c
  7522  004EDA  501D               	movf	??_atoi^0,w,c
  7523  004EDC  261F               	addwf	(??_atoi+2)^0,f,c
  7524  004EDE  501E               	movf	(??_atoi+1)^0,w,c
  7525  004EE0  2220               	addwfc	(??_atoi+3)^0,f,c
  7526  004EE2  5020               	movf	(??_atoi+3)^0,w,c
  7527  004EE4  E10A               	bnz	u8070
  7528  004EE6  0E0A               	movlw	10
  7529  004EE8  5C1F               	subwf	(??_atoi+2)^0,w,c
  7530  004EEA  A0D8               	btfss	status,0,c
  7531  004EEC  EF7A  F027         	goto	u8071
  7532  004EF0  EF7D  F027         	goto	u8070
  7533  004EF4                     u8071:
  7534  004EF4  0E01               	movlw	1
  7535  004EF6  EF7E  F027         	goto	u8080
  7536  004EFA                     u8070:
  7537  004EFA  0E00               	movlw	0
  7538  004EFC                     u8080:
  7539  004EFC  6E25               	movwf	_atoi$2297^0,c
  7540  004EFE  6A26               	clrf	(_atoi$2297+1)^0,c
  7541  004F00  5025               	movf	_atoi$2297^0,w,c
  7542  004F02  1026               	iorwf	(_atoi$2297+1)^0,w,c
  7543  004F04  A4D8               	btfss	status,2,c
  7544  004F06  EF87  F027         	goto	u8091
  7545  004F0A  EF89  F027         	goto	u8090
  7546  004F0E                     u8091:
  7547  004F0E  EF42  F027         	goto	l7486
  7548  004F12                     u8090:
  7549  004F12  5021               	movf	atoi@neg^0,w,c
  7550  004F14  1022               	iorwf	(atoi@neg+1)^0,w,c
  7551  004F16  A4D8               	btfss	status,2,c
  7552  004F18  EF90  F027         	goto	u8101
  7553  004F1C  EF92  F027         	goto	u8100
  7554  004F20                     u8101:
  7555  004F20  EFA0  F027         	goto	l1307
  7556  004F24                     u8100:
  7557  004F24  C028  F01D         	movff	atoi@n,??_atoi
  7558  004F28  C029  F01E         	movff	atoi@n+1,??_atoi+1
  7559  004F2C  1E1D               	comf	??_atoi^0,f,c
  7560  004F2E  1E1E               	comf	(??_atoi+1)^0,f,c
  7561  004F30  4A1D               	infsnz	??_atoi^0,f,c
  7562  004F32  2A1E               	incf	(??_atoi+1)^0,f,c
  7563  004F34  C01D  F01B         	movff	??_atoi,?_atoi
  7564  004F38  C01E  F01C         	movff	??_atoi+1,?_atoi+1
  7565  004F3C  EFA4  F027         	goto	l1310
  7566  004F40                     l1307:
  7567  004F40  C028  F01B         	movff	atoi@n,?_atoi
  7568  004F44  C029  F01C         	movff	atoi@n+1,?_atoi+1
  7569  004F48                     l1310:
  7570  004F48  0012               	return		;funcret
  7571  004F4A                     __end_of_atoi:
  7572                           	callstack 0
  7573                           
  7574 ;; *************** function _isspace *****************
  7575 ;; Defined at:
  7576 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  c               2   19[COMRAM] int 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;		None
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  2   19[COMRAM] int 
  7583 ;; Registers used:
  7584 ;;		wreg, status,2, status,0
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;Total ram usage:        7 bytes
  7595 ;; Hardware stack levels used: 1
  7596 ;; Hardware stack levels required when called: 3
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_atoi
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604                           	psect	text22
  7605  00602A                     __ptext22:
  7606                           	callstack 0
  7607  00602A                     _isspace:
  7608                           	callstack 22
  7609  00602A  0E01               	movlw	1
  7610  00602C  6E1A               	movwf	_isspace$2326^0,c
  7611  00602E  0E20               	movlw	32
  7612  006030  1814               	xorwf	isspace@c^0,w,c
  7613  006032  1015               	iorwf	(isspace@c+1)^0,w,c
  7614  006034  B4D8               	btfsc	status,2,c
  7615  006036  EF1F  F030         	goto	u7481
  7616  00603A  EF21  F030         	goto	u7480
  7617  00603E                     u7481:
  7618  00603E  EF3A  F030         	goto	l7150
  7619  006042                     u7480:
  7620  006042  0EF7               	movlw	247
  7621  006044  6E16               	movwf	??_isspace^0,c
  7622  006046  0EFF               	movlw	255
  7623  006048  6E17               	movwf	(??_isspace+1)^0,c
  7624  00604A  C014  F018         	movff	isspace@c,??_isspace+2
  7625  00604E  C015  F019         	movff	isspace@c+1,??_isspace+3
  7626  006052  5016               	movf	??_isspace^0,w,c
  7627  006054  2618               	addwf	(??_isspace+2)^0,f,c
  7628  006056  5017               	movf	(??_isspace+1)^0,w,c
  7629  006058  2219               	addwfc	(??_isspace+3)^0,f,c
  7630  00605A  5019               	movf	(??_isspace+3)^0,w,c
  7631  00605C  E109               	bnz	u7490
  7632  00605E  0E05               	movlw	5
  7633  006060  5C18               	subwf	(??_isspace+2)^0,w,c
  7634  006062  A0D8               	btfss	status,0,c
  7635  006064  EF36  F030         	goto	u7491
  7636  006068  EF38  F030         	goto	u7490
  7637  00606C                     u7491:
  7638  00606C  EF3A  F030         	goto	l7150
  7639  006070                     u7490:
  7640  006070  0E00               	movlw	0
  7641  006072  6E1A               	movwf	_isspace$2326^0,c
  7642  006074                     l7150:
  7643  006074  C01A  F014         	movff	_isspace$2326,?_isspace
  7644  006078  6A15               	clrf	(?_isspace+1)^0,c
  7645  00607A  0012               	return		;funcret
  7646  00607C                     __end_of_isspace:
  7647                           	callstack 0
  7648                           
  7649 ;; *************** function _isdigit *****************
  7650 ;; Defined at:
  7651 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  c               2   19[COMRAM] int 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  2   19[COMRAM] int 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7667 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;Total ram usage:        6 bytes
  7670 ;; Hardware stack levels used: 1
  7671 ;; Hardware stack levels required when called: 3
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_vfpfcnvrt
  7676 ;;		_atoi
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text23
  7681  0061C6                     __ptext23:
  7682                           	callstack 0
  7683  0061C6                     _isdigit:
  7684                           	callstack 23
  7685  0061C6  0ED0               	movlw	208
  7686  0061C8  6E16               	movwf	??_isdigit^0,c
  7687  0061CA  0EFF               	movlw	255
  7688  0061CC  6E17               	movwf	(??_isdigit+1)^0,c
  7689  0061CE  C014  F018         	movff	isdigit@c,??_isdigit+2
  7690  0061D2  C015  F019         	movff	isdigit@c+1,??_isdigit+3
  7691  0061D6  5016               	movf	??_isdigit^0,w,c
  7692  0061D8  2618               	addwf	(??_isdigit+2)^0,f,c
  7693  0061DA  5017               	movf	(??_isdigit+1)^0,w,c
  7694  0061DC  2219               	addwfc	(??_isdigit+3)^0,f,c
  7695  0061DE  5019               	movf	(??_isdigit+3)^0,w,c
  7696  0061E0  E10A               	bnz	u7460
  7697  0061E2  0E0A               	movlw	10
  7698  0061E4  5C18               	subwf	(??_isdigit+2)^0,w,c
  7699  0061E6  A0D8               	btfss	status,0,c
  7700  0061E8  EFF8  F030         	goto	u7461
  7701  0061EC  EFFB  F030         	goto	u7460
  7702  0061F0                     u7461:
  7703  0061F0  0E01               	movlw	1
  7704  0061F2  EFFC  F030         	goto	u7470
  7705  0061F6                     u7460:
  7706  0061F6  0E00               	movlw	0
  7707  0061F8                     u7470:
  7708  0061F8  6E14               	movwf	?_isdigit^0,c
  7709  0061FA  6A15               	clrf	(?_isdigit+1)^0,c
  7710  0061FC  0012               	return		;funcret
  7711  0061FE                     __end_of_isdigit:
  7712                           	callstack 0
  7713                           
  7714 ;; *************** function ___wmul *****************
  7715 ;; Defined at:
  7716 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;  multiplier      2   19[COMRAM] unsigned int 
  7719 ;;  multiplicand    2   21[COMRAM] unsigned int 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;  product         2   23[COMRAM] unsigned int 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  2   19[COMRAM] unsigned int 
  7724 ;; Registers used:
  7725 ;;		wreg, status,2, status,0, prodl, prodh
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7734 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;Total ram usage:        6 bytes
  7736 ;; Hardware stack levels used: 1
  7737 ;; Hardware stack levels required when called: 3
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_atoi
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text24
  7746  0062A2                     __ptext24:
  7747                           	callstack 0
  7748  0062A2                     ___wmul:
  7749                           	callstack 22
  7750  0062A2  5014               	movf	___wmul@multiplier^0,w,c
  7751  0062A4  0216               	mulwf	___wmul@multiplicand^0,c
  7752  0062A6  CFF3 F018          	movff	prodl,___wmul@product
  7753  0062AA  CFF4 F019          	movff	prodh,___wmul@product+1
  7754  0062AE  5014               	movf	___wmul@multiplier^0,w,c
  7755  0062B0  0217               	mulwf	(___wmul@multiplicand+1)^0,c
  7756  0062B2  50F3               	movf	243,w,c
  7757  0062B4  2619               	addwf	(___wmul@product+1)^0,f,c
  7758  0062B6  5015               	movf	(___wmul@multiplier+1)^0,w,c
  7759  0062B8  0216               	mulwf	___wmul@multiplicand^0,c
  7760  0062BA  50F3               	movf	243,w,c
  7761  0062BC  2619               	addwf	(___wmul@product+1)^0,f,c
  7762  0062BE  C018  F014         	movff	___wmul@product,?___wmul
  7763  0062C2  C019  F015         	movff	___wmul@product+1,?___wmul+1
  7764  0062C6  0012               	return		;funcret
  7765  0062C8                     __end_of___wmul:
  7766                           	callstack 0
  7767                           
  7768 ;; *************** function _atan2f *****************
  7769 ;; Defined at:
  7770 ;;		line 22 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atan2f.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  y               4  120[BANK0 ] float 
  7773 ;;  x               4  124[BANK0 ] float 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  m               4   28[BANK1 ] unsigned long 
  7776 ;;  iy              4   24[BANK1 ] unsigned long 
  7777 ;;  ix              4   20[BANK1 ] unsigned long 
  7778 ;;  z               4   16[BANK1 ] float 
  7779 ;;  __xc8_float_    4   12[BANK1 ] struct .
  7780 ;; Return value:  Size  Location     Type
  7781 ;;                  4  120[BANK0 ] float 
  7782 ;; Registers used:
  7783 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7789 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7790 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7791 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7792 ;;      Totals:         0      24      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7793 ;;Total ram usage:       56 bytes
  7794 ;; Hardware stack levels used: 1
  7795 ;; Hardware stack levels required when called: 6
  7796 ;; This function calls:
  7797 ;;		___fladd
  7798 ;;		___fldiv
  7799 ;;		___flneg
  7800 ;;		___flsub
  7801 ;;		___fpclassifyf
  7802 ;;		_atanf
  7803 ;;		_fabsf
  7804 ;; This function is called by:
  7805 ;;		_MPU6050_Read
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           	psect	text25
  7810  003148                     __ptext25:
  7811                           	callstack 0
  7812  003148                     _atan2f:
  7813                           	callstack 23
  7814  003148  C0DC  F014         	movff	atan2f@x,___fpclassifyf@x
  7815  00314C  C0DD  F015         	movff	atan2f@x+1,___fpclassifyf@x+1
  7816  003150  C0DE  F016         	movff	atan2f@x+2,___fpclassifyf@x+2
  7817  003154  C0DF  F017         	movff	atan2f@x+3,___fpclassifyf@x+3
  7818  003158  ECB7  F02A         	call	___fpclassifyf	;wreg free
  7819  00315C  5014               	movf	?___fpclassifyf^0,w,c
  7820  00315E  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  7821  003160  B4D8               	btfsc	status,2,c
  7822  003162  EFB5  F018         	goto	u8421
  7823  003166  EFB7  F018         	goto	u8420
  7824  00316A                     u8421:
  7825  00316A  EFCA  F018         	goto	l7722
  7826  00316E                     u8420:
  7827  00316E  C0D8  F014         	movff	atan2f@y,___fpclassifyf@x
  7828  003172  C0D9  F015         	movff	atan2f@y+1,___fpclassifyf@x+1
  7829  003176  C0DA  F016         	movff	atan2f@y+2,___fpclassifyf@x+2
  7830  00317A  C0DB  F017         	movff	atan2f@y+3,___fpclassifyf@x+3
  7831  00317E  ECB7  F02A         	call	___fpclassifyf	;wreg free
  7832  003182  5014               	movf	?___fpclassifyf^0,w,c
  7833  003184  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  7834  003186  A4D8               	btfss	status,2,c
  7835  003188  EFC8  F018         	goto	u8431
  7836  00318C  EFCA  F018         	goto	u8430
  7837  003190                     u8431:
  7838  003190  EFE6  F018         	goto	l1004
  7839  003194                     u8430:
  7840  003194                     l7722:
  7841  003194  C0DC  F02E         	movff	atan2f@x,___fladd@b
  7842  003198  C0DD  F02F         	movff	atan2f@x+1,___fladd@b+1
  7843  00319C  C0DE  F030         	movff	atan2f@x+2,___fladd@b+2
  7844  0031A0  C0DF  F031         	movff	atan2f@x+3,___fladd@b+3
  7845  0031A4  C0D8  F032         	movff	atan2f@y,___fladd@a
  7846  0031A8  C0D9  F033         	movff	atan2f@y+1,___fladd@a+1
  7847  0031AC  C0DA  F034         	movff	atan2f@y+2,___fladd@a+2
  7848  0031B0  C0DB  F035         	movff	atan2f@y+3,___fladd@a+3
  7849  0031B4  EC57  F01C         	call	___fladd	;wreg free
  7850  0031B8  C02E  F0D8         	movff	?___fladd,?_atan2f
  7851  0031BC  C02F  F0D9         	movff	?___fladd+1,?_atan2f+1
  7852  0031C0  C030  F0DA         	movff	?___fladd+2,?_atan2f+2
  7853  0031C4  C031  F0DB         	movff	?___fladd+3,?_atan2f+3
  7854  0031C8  EF56  F01C         	goto	l1003
  7855  0031CC                     l1004:
  7856  0031CC  C0DC  F10C         	movff	atan2f@x,atan2f@__xc8_float_word
  7857  0031D0  C0DD  F10D         	movff	atan2f@x+1,atan2f@__xc8_float_word+1
  7858  0031D4  C0DE  F10E         	movff	atan2f@x+2,atan2f@__xc8_float_word+2
  7859  0031D8  C0DF  F10F         	movff	atan2f@x+3,atan2f@__xc8_float_word+3
  7860  0031DC  C10C  F114         	movff	atan2f@__xc8_float_word,atan2f@ix
  7861  0031E0  C10D  F115         	movff	atan2f@__xc8_float_word+1,atan2f@ix+1
  7862  0031E4  C10E  F116         	movff	atan2f@__xc8_float_word+2,atan2f@ix+2
  7863  0031E8  C10F  F117         	movff	atan2f@__xc8_float_word+3,atan2f@ix+3
  7864  0031EC  C0D8  F10C         	movff	atan2f@y,atan2f@__xc8_float_word
  7865  0031F0  C0D9  F10D         	movff	atan2f@y+1,atan2f@__xc8_float_word+1
  7866  0031F4  C0DA  F10E         	movff	atan2f@y+2,atan2f@__xc8_float_word+2
  7867  0031F8  C0DB  F10F         	movff	atan2f@y+3,atan2f@__xc8_float_word+3
  7868  0031FC  C10C  F118         	movff	atan2f@__xc8_float_word,atan2f@iy
  7869  003200  C10D  F119         	movff	atan2f@__xc8_float_word+1,atan2f@iy+1
  7870  003204  C10E  F11A         	movff	atan2f@__xc8_float_word+2,atan2f@iy+2
  7871  003208  C10F  F11B         	movff	atan2f@__xc8_float_word+3,atan2f@iy+3
  7872  00320C  0E80               	movlw	128
  7873  00320E  0101               	movlb	1	; () banked
  7874  003210  1916               	xorwf	(atan2f@ix+2)& (0+255),w,b
  7875  003212  E109               	bnz	u8441
  7876  003214  0E3F               	movlw	63
  7877  003216  1917               	xorwf	(atan2f@ix+3)& (0+255),w,b
  7878  003218  1114               	iorwf	atan2f@ix& (0+255),w,b
  7879  00321A  1115               	iorwf	(atan2f@ix+1)& (0+255),w,b
  7880  00321C  A4D8               	btfss	status,2,c
  7881  00321E  EF13  F019         	goto	u8441
  7882  003222  EF15  F019         	goto	u8440
  7883  003226                     u8441:
  7884  003226  EF29  F019         	goto	l7732
  7885  00322A                     u8440:
  7886  00322A                     
  7887                           ; BSR set to: 1
  7888  00322A  C0D8  F09E         	movff	atan2f@y,atanf@x
  7889  00322E  C0D9  F09F         	movff	atan2f@y+1,atanf@x+1
  7890  003232  C0DA  F0A0         	movff	atan2f@y+2,atanf@x+2
  7891  003236  C0DB  F0A1         	movff	atan2f@y+3,atanf@x+3
  7892  00323A  EC7C  F014         	call	_atanf	;wreg free
  7893  00323E  C09E  F0D8         	movff	?_atanf,?_atan2f
  7894  003242  C09F  F0D9         	movff	?_atanf+1,?_atan2f+1
  7895  003246  C0A0  F0DA         	movff	?_atanf+2,?_atan2f+2
  7896  00324A  C0A1  F0DB         	movff	?_atanf+3,?_atan2f+3
  7897  00324E  EF56  F01C         	goto	l1003
  7898  003252                     l7732:
  7899                           
  7900                           ; BSR set to: 1
  7901  003252  C114  F0E0         	movff	atan2f@ix,??_atan2f
  7902  003256  C115  F0E1         	movff	atan2f@ix+1,??_atan2f+1
  7903  00325A  C116  F0E2         	movff	atan2f@ix+2,??_atan2f+2
  7904  00325E  C117  F0E3         	movff	atan2f@ix+3,??_atan2f+3
  7905  003262  0E1F               	movlw	31
  7906  003264  EF3A  F019         	goto	u8450
  7907  003268                     u8455:
  7908  003268  0100               	movlb	0	; () banked
  7909  00326A  90D8               	bcf	status,0,c
  7910  00326C  33E3               	rrcf	(??_atan2f+3)& (0+255),f,b
  7911  00326E  33E2               	rrcf	(??_atan2f+2)& (0+255),f,b
  7912  003270  33E1               	rrcf	(??_atan2f+1)& (0+255),f,b
  7913  003272  33E0               	rrcf	??_atan2f& (0+255),f,b
  7914  003274                     u8450:
  7915  003274  2EE8               	decfsz	wreg,f,c
  7916  003276  EF34  F019         	goto	u8455
  7917  00327A  0E02               	movlw	2
  7918  00327C  15E0               	andwf	??_atan2f& (0+255),w,b
  7919  00327E  6FE4               	movwf	(??_atan2f+4)& (0+255),b
  7920  003280  0E00               	movlw	0
  7921  003282  15E1               	andwf	(??_atan2f+1)& (0+255),w,b
  7922  003284  6FE5               	movwf	(??_atan2f+5)& (0+255),b
  7923  003286  0E00               	movlw	0
  7924  003288  15E2               	andwf	(??_atan2f+2)& (0+255),w,b
  7925  00328A  6FE6               	movwf	(??_atan2f+6)& (0+255),b
  7926  00328C  0E00               	movlw	0
  7927  00328E  15E3               	andwf	(??_atan2f+3)& (0+255),w,b
  7928  003290  6FE7               	movwf	(??_atan2f+7)& (0+255),b
  7929  003292  C118  F0E8         	movff	atan2f@iy,??_atan2f+8
  7930  003296  C119  F0E9         	movff	atan2f@iy+1,??_atan2f+9
  7931  00329A  C11A  F0EA         	movff	atan2f@iy+2,??_atan2f+10
  7932  00329E  C11B  F0EB         	movff	atan2f@iy+3,??_atan2f+11
  7933  0032A2  0E20               	movlw	32
  7934  0032A4  EF59  F019         	goto	u8460
  7935  0032A8                     u8465:
  7936  0032A8  90D8               	bcf	status,0,c
  7937  0032AA  33EB               	rrcf	(??_atan2f+11)& (0+255),f,b
  7938  0032AC  33EA               	rrcf	(??_atan2f+10)& (0+255),f,b
  7939  0032AE  33E9               	rrcf	(??_atan2f+9)& (0+255),f,b
  7940  0032B0  33E8               	rrcf	(??_atan2f+8)& (0+255),f,b
  7941  0032B2                     u8460:
  7942  0032B2  2EE8               	decfsz	wreg,f,c
  7943  0032B4  EF54  F019         	goto	u8465
  7944  0032B8  0E01               	movlw	1
  7945  0032BA  15E8               	andwf	(??_atan2f+8)& (0+255),w,b
  7946  0032BC  6FEC               	movwf	(??_atan2f+12)& (0+255),b
  7947  0032BE  0E00               	movlw	0
  7948  0032C0  15E9               	andwf	(??_atan2f+9)& (0+255),w,b
  7949  0032C2  6FED               	movwf	(??_atan2f+13)& (0+255),b
  7950  0032C4  0E00               	movlw	0
  7951  0032C6  15EA               	andwf	(??_atan2f+10)& (0+255),w,b
  7952  0032C8  6FEE               	movwf	(??_atan2f+14)& (0+255),b
  7953  0032CA  0E00               	movlw	0
  7954  0032CC  15EB               	andwf	(??_atan2f+11)& (0+255),w,b
  7955  0032CE  6FEF               	movwf	(??_atan2f+15)& (0+255),b
  7956  0032D0  51E4               	movf	(??_atan2f+4)& (0+255),w,b
  7957  0032D2  11EC               	iorwf	(??_atan2f+12)& (0+255),w,b
  7958  0032D4  0101               	movlb	1	; () banked
  7959  0032D6  6F1C               	movwf	atan2f@m& (0+255),b
  7960  0032D8  0100               	movlb	0	; () banked
  7961  0032DA  51E5               	movf	(??_atan2f+5)& (0+255),w,b
  7962  0032DC  11ED               	iorwf	(??_atan2f+13)& (0+255),w,b
  7963  0032DE  0101               	movlb	1	; () banked
  7964  0032E0  6F1D               	movwf	(atan2f@m+1)& (0+255),b
  7965  0032E2  0100               	movlb	0	; () banked
  7966  0032E4  51E6               	movf	(??_atan2f+6)& (0+255),w,b
  7967  0032E6  11EE               	iorwf	(??_atan2f+14)& (0+255),w,b
  7968  0032E8  0101               	movlb	1	; () banked
  7969  0032EA  6F1E               	movwf	(atan2f@m+2)& (0+255),b
  7970  0032EC  0100               	movlb	0	; () banked
  7971  0032EE  51E7               	movf	(??_atan2f+7)& (0+255),w,b
  7972  0032F0  11EF               	iorwf	(??_atan2f+15)& (0+255),w,b
  7973  0032F2  0101               	movlb	1	; () banked
  7974  0032F4  6F1F               	movwf	(atan2f@m+3)& (0+255),b
  7975  0032F6                     
  7976                           ; BSR set to: 1
  7977  0032F6  9F17               	bcf	(atan2f@ix+3)& (0+255),7,b
  7978  0032F8                     
  7979                           ; BSR set to: 1
  7980  0032F8  9F1B               	bcf	(atan2f@iy+3)& (0+255),7,b
  7981  0032FA  5118               	movf	atan2f@iy& (0+255),w,b
  7982  0032FC  1119               	iorwf	(atan2f@iy+1)& (0+255),w,b
  7983  0032FE  111A               	iorwf	(atan2f@iy+2)& (0+255),w,b
  7984  003300  111B               	iorwf	(atan2f@iy+3)& (0+255),w,b
  7985  003302  A4D8               	btfss	status,2,c
  7986  003304  EF86  F019         	goto	u8471
  7987  003308  EF88  F019         	goto	u8470
  7988  00330C                     u8471:
  7989  00330C  EFD9  F019         	goto	l7752
  7990  003310                     u8470:
  7991  003310  EFA8  F019         	goto	l7750
  7992  003314                     l1012:
  7993                           
  7994                           ; BSR set to: 0
  7995  003314  C0D8  F0D8         	movff	atan2f@y,?_atan2f
  7996  003318  C0D9  F0D9         	movff	atan2f@y+1,?_atan2f+1
  7997  00331C  C0DA  F0DA         	movff	atan2f@y+2,?_atan2f+2
  7998  003320  C0DB  F0DB         	movff	atan2f@y+3,?_atan2f+3
  7999  003324  EF56  F01C         	goto	l1003
  8000  003328                     l7740:
  8001                           
  8002                           ; BSR set to: 0
  8003  003328  0EDB               	movlw	219
  8004  00332A  6FD8               	movwf	?_atan2f& (0+255),b
  8005  00332C  0E0F               	movlw	15
  8006  00332E  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8007  003330  0E49               	movlw	73
  8008  003332  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8009  003334  0E40               	movlw	64
  8010  003336  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8011  003338  EF56  F01C         	goto	l1003
  8012  00333C                     l7744:
  8013                           
  8014                           ; BSR set to: 0
  8015  00333C  0EDB               	movlw	219
  8016  00333E  6FD8               	movwf	?_atan2f& (0+255),b
  8017  003340  0E0F               	movlw	15
  8018  003342  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8019  003344  0E49               	movlw	73
  8020  003346  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8021  003348  0EC0               	movlw	192
  8022  00334A  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8023  00334C  EF56  F01C         	goto	l1003
  8024  003350                     l7750:
  8025                           
  8026                           ; BSR set to: 1
  8027  003350  C11C  F0E0         	movff	atan2f@m,??_atan2f
  8028  003354  C11D  F0E1         	movff	atan2f@m+1,??_atan2f+1
  8029  003358  C11E  F0E2         	movff	atan2f@m+2,??_atan2f+2
  8030  00335C  C11F  F0E3         	movff	atan2f@m+3,??_atan2f+3
  8031                           
  8032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8033                           ; Switch size 1, requested type "simple"
  8034                           ; Number of cases is 1, Range of values is 0 to 0
  8035                           ; switch strategies available:
  8036                           ; Name         Instructions Cycles
  8037                           ; simple_byte            4     3 (average)
  8038                           ;	Chosen strategy is simple_byte
  8039  003360  0100               	movlb	0	; () banked
  8040  003362  51E3               	movf	(??_atan2f+3)& (0+255),w,b
  8041  003364  0A00               	xorlw	0	; case 0
  8042  003366  B4D8               	btfsc	status,2,c
  8043  003368  EFD2  F019         	goto	l8446
  8044  00336C  EFD9  F019         	goto	l7752
  8045  003370                     l8444:
  8046                           
  8047                           ; BSR set to: 0
  8048                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8049                           ; Switch size 1, requested type "simple"
  8050                           ; Number of cases is 1, Range of values is 0 to 0
  8051                           ; switch strategies available:
  8052                           ; Name         Instructions Cycles
  8053                           ; simple_byte            4     3 (average)
  8054                           ;	Chosen strategy is simple_byte
  8055  003370  51E1               	movf	(??_atan2f+1)& (0+255),w,b
  8056  003372  0A00               	xorlw	0	; case 0
  8057  003374  B4D8               	btfsc	status,2,c
  8058  003376  EFBF  F019         	goto	l8448
  8059  00337A  EFD9  F019         	goto	l7752
  8060  00337E                     l8448:
  8061                           
  8062                           ; BSR set to: 0
  8063                           ; Switch size 1, requested type "simple"
  8064                           ; Number of cases is 4, Range of values is 0 to 3
  8065                           ; switch strategies available:
  8066                           ; Name         Instructions Cycles
  8067                           ; simple_byte           13     7 (average)
  8068                           ;	Chosen strategy is simple_byte
  8069  00337E  51E0               	movf	??_atan2f& (0+255),w,b
  8070  003380  0A00               	xorlw	0	; case 0
  8071  003382  B4D8               	btfsc	status,2,c
  8072  003384  EF8A  F019         	goto	l1012
  8073  003388  0A01               	xorlw	1	; case 1
  8074  00338A  B4D8               	btfsc	status,2,c
  8075  00338C  EF8A  F019         	goto	l1012
  8076  003390  0A03               	xorlw	3	; case 2
  8077  003392  B4D8               	btfsc	status,2,c
  8078  003394  EF94  F019         	goto	l7740
  8079  003398  0A01               	xorlw	1	; case 3
  8080  00339A  B4D8               	btfsc	status,2,c
  8081  00339C  EF9E  F019         	goto	l7744
  8082  0033A0  EFD9  F019         	goto	l7752
  8083  0033A4                     l8446:
  8084                           
  8085                           ; BSR set to: 0
  8086                           ; Switch size 1, requested type "simple"
  8087                           ; Number of cases is 1, Range of values is 0 to 0
  8088                           ; switch strategies available:
  8089                           ; Name         Instructions Cycles
  8090                           ; simple_byte            4     3 (average)
  8091                           ;	Chosen strategy is simple_byte
  8092  0033A4  51E2               	movf	(??_atan2f+2)& (0+255),w,b
  8093  0033A6  0A00               	xorlw	0	; case 0
  8094  0033A8  B4D8               	btfsc	status,2,c
  8095  0033AA  EFB8  F019         	goto	l8444
  8096  0033AE  EFD9  F019         	goto	l7752
  8097  0033B2                     l7752:
  8098  0033B2  0101               	movlb	1	; () banked
  8099  0033B4  5114               	movf	atan2f@ix& (0+255),w,b
  8100  0033B6  1115               	iorwf	(atan2f@ix+1)& (0+255),w,b
  8101  0033B8  1116               	iorwf	(atan2f@ix+2)& (0+255),w,b
  8102  0033BA  1117               	iorwf	(atan2f@ix+3)& (0+255),w,b
  8103  0033BC  A4D8               	btfss	status,2,c
  8104  0033BE  EFE3  F019         	goto	u8481
  8105  0033C2  EFE5  F019         	goto	u8480
  8106  0033C6                     u8481:
  8107  0033C6  EF02  F01A         	goto	l7762
  8108  0033CA                     u8480:
  8109  0033CA                     
  8110                           ; BSR set to: 1
  8111  0033CA  B11C               	btfsc	atan2f@m& (0+255),0,b
  8112  0033CC  EFEA  F019         	goto	u8491
  8113  0033D0  EFEC  F019         	goto	u8490
  8114  0033D4                     u8491:
  8115  0033D4  EFF7  F019         	goto	l7758
  8116  0033D8                     u8490:
  8117  0033D8                     
  8118                           ; BSR set to: 1
  8119  0033D8  0EDB               	movlw	219
  8120  0033DA  0100               	movlb	0	; () banked
  8121  0033DC  6FD8               	movwf	?_atan2f& (0+255),b
  8122  0033DE  0E0F               	movlw	15
  8123  0033E0  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8124  0033E2  0EC9               	movlw	201
  8125  0033E4  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8126  0033E6  0E3F               	movlw	63
  8127  0033E8  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8128  0033EA  EF56  F01C         	goto	l1003
  8129  0033EE                     l7758:
  8130                           
  8131                           ; BSR set to: 1
  8132  0033EE  0EDB               	movlw	219
  8133  0033F0  0100               	movlb	0	; () banked
  8134  0033F2  6FD8               	movwf	?_atan2f& (0+255),b
  8135  0033F4  0E0F               	movlw	15
  8136  0033F6  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8137  0033F8  0EC9               	movlw	201
  8138  0033FA  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8139  0033FC  0EBF               	movlw	191
  8140  0033FE  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8141  003400  EF56  F01C         	goto	l1003
  8142  003404                     l7762:
  8143                           
  8144                           ; BSR set to: 1
  8145  003404  0E80               	movlw	128
  8146  003406  1916               	xorwf	(atan2f@ix+2)& (0+255),w,b
  8147  003408  E109               	bnz	u8501
  8148  00340A  0E7F               	movlw	127
  8149  00340C  1917               	xorwf	(atan2f@ix+3)& (0+255),w,b
  8150  00340E  1114               	iorwf	atan2f@ix& (0+255),w,b
  8151  003410  1115               	iorwf	(atan2f@ix+1)& (0+255),w,b
  8152  003412  A4D8               	btfss	status,2,c
  8153  003414  EF0E  F01A         	goto	u8501
  8154  003418  EF10  F01A         	goto	u8500
  8155  00341C                     u8501:
  8156  00341C  EFD2  F01A         	goto	l7808
  8157  003420                     u8500:
  8158  003420                     
  8159                           ; BSR set to: 1
  8160  003420  0E80               	movlw	128
  8161  003422  191A               	xorwf	(atan2f@iy+2)& (0+255),w,b
  8162  003424  E109               	bnz	u8511
  8163  003426  0E7F               	movlw	127
  8164  003428  191B               	xorwf	(atan2f@iy+3)& (0+255),w,b
  8165  00342A  1118               	iorwf	atan2f@iy& (0+255),w,b
  8166  00342C  1119               	iorwf	(atan2f@iy+1)& (0+255),w,b
  8167  00342E  A4D8               	btfss	status,2,c
  8168  003430  EF1C  F01A         	goto	u8511
  8169  003434  EF1E  F01A         	goto	u8510
  8170  003438                     u8511:
  8171  003438  EFA1  F01A         	goto	l7806
  8172  00343C                     u8510:
  8173  00343C  EF48  F01A         	goto	l7786
  8174  003440                     l7768:
  8175                           
  8176                           ; BSR set to: 0
  8177  003440  0EDB               	movlw	219
  8178  003442  6FD8               	movwf	?_atan2f& (0+255),b
  8179  003444  0E0F               	movlw	15
  8180  003446  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8181  003448  0E49               	movlw	73
  8182  00344A  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8183  00344C  0E3F               	movlw	63
  8184  00344E  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8185  003450  EF56  F01C         	goto	l1003
  8186  003454                     l7772:
  8187                           
  8188                           ; BSR set to: 0
  8189  003454  0EDB               	movlw	219
  8190  003456  6FD8               	movwf	?_atan2f& (0+255),b
  8191  003458  0E0F               	movlw	15
  8192  00345A  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8193  00345C  0E49               	movlw	73
  8194  00345E  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8195  003460  0EBF               	movlw	191
  8196  003462  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8197  003464  EF56  F01C         	goto	l1003
  8198  003468                     l7776:
  8199                           
  8200                           ; BSR set to: 0
  8201  003468  0EE4               	movlw	228
  8202  00346A  6FD8               	movwf	?_atan2f& (0+255),b
  8203  00346C  0ECB               	movlw	203
  8204  00346E  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8205  003470  0E16               	movlw	22
  8206  003472  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8207  003474  0E40               	movlw	64
  8208  003476  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8209  003478  EF56  F01C         	goto	l1003
  8210  00347C                     l7780:
  8211                           
  8212                           ; BSR set to: 0
  8213  00347C  0EE4               	movlw	228
  8214  00347E  6FD8               	movwf	?_atan2f& (0+255),b
  8215  003480  0ECB               	movlw	203
  8216  003482  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8217  003484  0E16               	movlw	22
  8218  003486  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8219  003488  0EC0               	movlw	192
  8220  00348A  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8221  00348C  EF56  F01C         	goto	l1003
  8222  003490                     l7786:
  8223                           
  8224                           ; BSR set to: 1
  8225  003490  C11C  F0E0         	movff	atan2f@m,??_atan2f
  8226  003494  C11D  F0E1         	movff	atan2f@m+1,??_atan2f+1
  8227  003498  C11E  F0E2         	movff	atan2f@m+2,??_atan2f+2
  8228  00349C  C11F  F0E3         	movff	atan2f@m+3,??_atan2f+3
  8229                           
  8230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8231                           ; Switch size 1, requested type "simple"
  8232                           ; Number of cases is 1, Range of values is 0 to 0
  8233                           ; switch strategies available:
  8234                           ; Name         Instructions Cycles
  8235                           ; simple_byte            4     3 (average)
  8236                           ;	Chosen strategy is simple_byte
  8237  0034A0  0100               	movlb	0	; () banked
  8238  0034A2  51E3               	movf	(??_atan2f+3)& (0+255),w,b
  8239  0034A4  0A00               	xorlw	0	; case 0
  8240  0034A6  B4D8               	btfsc	status,2,c
  8241  0034A8  EF72  F01A         	goto	l8452
  8242  0034AC  EFD2  F01A         	goto	l7808
  8243  0034B0                     l8450:
  8244                           
  8245                           ; BSR set to: 0
  8246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8247                           ; Switch size 1, requested type "simple"
  8248                           ; Number of cases is 1, Range of values is 0 to 0
  8249                           ; switch strategies available:
  8250                           ; Name         Instructions Cycles
  8251                           ; simple_byte            4     3 (average)
  8252                           ;	Chosen strategy is simple_byte
  8253  0034B0  51E1               	movf	(??_atan2f+1)& (0+255),w,b
  8254  0034B2  0A00               	xorlw	0	; case 0
  8255  0034B4  B4D8               	btfsc	status,2,c
  8256  0034B6  EF5F  F01A         	goto	l8454
  8257  0034BA  EFD2  F01A         	goto	l7808
  8258  0034BE                     l8454:
  8259                           
  8260                           ; BSR set to: 0
  8261                           ; Switch size 1, requested type "simple"
  8262                           ; Number of cases is 4, Range of values is 0 to 3
  8263                           ; switch strategies available:
  8264                           ; Name         Instructions Cycles
  8265                           ; simple_byte           13     7 (average)
  8266                           ;	Chosen strategy is simple_byte
  8267  0034BE  51E0               	movf	??_atan2f& (0+255),w,b
  8268  0034C0  0A00               	xorlw	0	; case 0
  8269  0034C2  B4D8               	btfsc	status,2,c
  8270  0034C4  EF20  F01A         	goto	l7768
  8271  0034C8  0A01               	xorlw	1	; case 1
  8272  0034CA  B4D8               	btfsc	status,2,c
  8273  0034CC  EF2A  F01A         	goto	l7772
  8274  0034D0  0A03               	xorlw	3	; case 2
  8275  0034D2  B4D8               	btfsc	status,2,c
  8276  0034D4  EF34  F01A         	goto	l7776
  8277  0034D8  0A01               	xorlw	1	; case 3
  8278  0034DA  B4D8               	btfsc	status,2,c
  8279  0034DC  EF3E  F01A         	goto	l7780
  8280  0034E0  EFD2  F01A         	goto	l7808
  8281  0034E4                     l8452:
  8282                           
  8283                           ; BSR set to: 0
  8284                           ; Switch size 1, requested type "simple"
  8285                           ; Number of cases is 1, Range of values is 0 to 0
  8286                           ; switch strategies available:
  8287                           ; Name         Instructions Cycles
  8288                           ; simple_byte            4     3 (average)
  8289                           ;	Chosen strategy is simple_byte
  8290  0034E4  51E2               	movf	(??_atan2f+2)& (0+255),w,b
  8291  0034E6  0A00               	xorlw	0	; case 0
  8292  0034E8  B4D8               	btfsc	status,2,c
  8293  0034EA  EF58  F01A         	goto	l8450
  8294  0034EE  EFD2  F01A         	goto	l7808
  8295  0034F2                     l7788:
  8296                           
  8297                           ; BSR set to: 0
  8298  0034F2  0E00               	movlw	0
  8299  0034F4  6FD8               	movwf	?_atan2f& (0+255),b
  8300  0034F6  0E00               	movlw	0
  8301  0034F8  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8302  0034FA  0E00               	movlw	0
  8303  0034FC  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8304  0034FE  0E00               	movlw	0
  8305  003500  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8306  003502  EF56  F01C         	goto	l1003
  8307  003506                     l7792:
  8308                           
  8309                           ; BSR set to: 0
  8310  003506  0E00               	movlw	0
  8311  003508  6FD8               	movwf	?_atan2f& (0+255),b
  8312  00350A  0E00               	movlw	0
  8313  00350C  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8314  00350E  0E00               	movlw	0
  8315  003510  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8316  003512  0E80               	movlw	128
  8317  003514  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8318  003516  EF56  F01C         	goto	l1003
  8319  00351A                     l7796:
  8320                           
  8321                           ; BSR set to: 0
  8322  00351A  0EDB               	movlw	219
  8323  00351C  6FD8               	movwf	?_atan2f& (0+255),b
  8324  00351E  0E0F               	movlw	15
  8325  003520  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8326  003522  0E49               	movlw	73
  8327  003524  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8328  003526  0E40               	movlw	64
  8329  003528  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8330  00352A  EF56  F01C         	goto	l1003
  8331  00352E                     l7800:
  8332                           
  8333                           ; BSR set to: 0
  8334  00352E  0EDB               	movlw	219
  8335  003530  6FD8               	movwf	?_atan2f& (0+255),b
  8336  003532  0E0F               	movlw	15
  8337  003534  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8338  003536  0E49               	movlw	73
  8339  003538  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8340  00353A  0EC0               	movlw	192
  8341  00353C  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8342  00353E  EF56  F01C         	goto	l1003
  8343  003542                     l7806:
  8344                           
  8345                           ; BSR set to: 1
  8346  003542  C11C  F0E0         	movff	atan2f@m,??_atan2f
  8347  003546  C11D  F0E1         	movff	atan2f@m+1,??_atan2f+1
  8348  00354A  C11E  F0E2         	movff	atan2f@m+2,??_atan2f+2
  8349  00354E  C11F  F0E3         	movff	atan2f@m+3,??_atan2f+3
  8350                           
  8351                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8352                           ; Switch size 1, requested type "simple"
  8353                           ; Number of cases is 1, Range of values is 0 to 0
  8354                           ; switch strategies available:
  8355                           ; Name         Instructions Cycles
  8356                           ; simple_byte            4     3 (average)
  8357                           ;	Chosen strategy is simple_byte
  8358  003552  0100               	movlb	0	; () banked
  8359  003554  51E3               	movf	(??_atan2f+3)& (0+255),w,b
  8360  003556  0A00               	xorlw	0	; case 0
  8361  003558  B4D8               	btfsc	status,2,c
  8362  00355A  EFCB  F01A         	goto	l8458
  8363  00355E  EFD2  F01A         	goto	l7808
  8364  003562                     l8456:
  8365                           
  8366                           ; BSR set to: 0
  8367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8368                           ; Switch size 1, requested type "simple"
  8369                           ; Number of cases is 1, Range of values is 0 to 0
  8370                           ; switch strategies available:
  8371                           ; Name         Instructions Cycles
  8372                           ; simple_byte            4     3 (average)
  8373                           ;	Chosen strategy is simple_byte
  8374  003562  51E1               	movf	(??_atan2f+1)& (0+255),w,b
  8375  003564  0A00               	xorlw	0	; case 0
  8376  003566  B4D8               	btfsc	status,2,c
  8377  003568  EFB8  F01A         	goto	l8460
  8378  00356C  EFD2  F01A         	goto	l7808
  8379  003570                     l8460:
  8380                           
  8381                           ; BSR set to: 0
  8382                           ; Switch size 1, requested type "simple"
  8383                           ; Number of cases is 4, Range of values is 0 to 3
  8384                           ; switch strategies available:
  8385                           ; Name         Instructions Cycles
  8386                           ; simple_byte           13     7 (average)
  8387                           ;	Chosen strategy is simple_byte
  8388  003570  51E0               	movf	??_atan2f& (0+255),w,b
  8389  003572  0A00               	xorlw	0	; case 0
  8390  003574  B4D8               	btfsc	status,2,c
  8391  003576  EF79  F01A         	goto	l7788
  8392  00357A  0A01               	xorlw	1	; case 1
  8393  00357C  B4D8               	btfsc	status,2,c
  8394  00357E  EF83  F01A         	goto	l7792
  8395  003582  0A03               	xorlw	3	; case 2
  8396  003584  B4D8               	btfsc	status,2,c
  8397  003586  EF8D  F01A         	goto	l7796
  8398  00358A  0A01               	xorlw	1	; case 3
  8399  00358C  B4D8               	btfsc	status,2,c
  8400  00358E  EF97  F01A         	goto	l7800
  8401  003592  EFD2  F01A         	goto	l7808
  8402  003596                     l8458:
  8403                           
  8404                           ; BSR set to: 0
  8405                           ; Switch size 1, requested type "simple"
  8406                           ; Number of cases is 1, Range of values is 0 to 0
  8407                           ; switch strategies available:
  8408                           ; Name         Instructions Cycles
  8409                           ; simple_byte            4     3 (average)
  8410                           ;	Chosen strategy is simple_byte
  8411  003596  51E2               	movf	(??_atan2f+2)& (0+255),w,b
  8412  003598  0A00               	xorlw	0	; case 0
  8413  00359A  B4D8               	btfsc	status,2,c
  8414  00359C  EFB1  F01A         	goto	l8456
  8415  0035A0  EFD2  F01A         	goto	l7808
  8416  0035A4                     l7808:
  8417  0035A4  0E00               	movlw	0
  8418  0035A6  0101               	movlb	1	; () banked
  8419  0035A8  2514               	addwf	atan2f@ix& (0+255),w,b
  8420  0035AA  0100               	movlb	0	; () banked
  8421  0035AC  6FE0               	movwf	??_atan2f& (0+255),b
  8422  0035AE  0E00               	movlw	0
  8423  0035B0  0101               	movlb	1	; () banked
  8424  0035B2  2115               	addwfc	(atan2f@ix+1)& (0+255),w,b
  8425  0035B4  0100               	movlb	0	; () banked
  8426  0035B6  6FE1               	movwf	(??_atan2f+1)& (0+255),b
  8427  0035B8  0E00               	movlw	0
  8428  0035BA  0101               	movlb	1	; () banked
  8429  0035BC  2116               	addwfc	(atan2f@ix+2)& (0+255),w,b
  8430  0035BE  0100               	movlb	0	; () banked
  8431  0035C0  6FE2               	movwf	(??_atan2f+2)& (0+255),b
  8432  0035C2  0E0D               	movlw	13
  8433  0035C4  0101               	movlb	1	; () banked
  8434  0035C6  2117               	addwfc	(atan2f@ix+3)& (0+255),w,b
  8435  0035C8  0100               	movlb	0	; () banked
  8436  0035CA  6FE3               	movwf	(??_atan2f+3)& (0+255),b
  8437  0035CC  0101               	movlb	1	; () banked
  8438  0035CE  5118               	movf	atan2f@iy& (0+255),w,b
  8439  0035D0  0100               	movlb	0	; () banked
  8440  0035D2  5DE0               	subwf	??_atan2f& (0+255),w,b
  8441  0035D4  0101               	movlb	1	; () banked
  8442  0035D6  5119               	movf	(atan2f@iy+1)& (0+255),w,b
  8443  0035D8  0100               	movlb	0	; () banked
  8444  0035DA  59E1               	subwfb	(??_atan2f+1)& (0+255),w,b
  8445  0035DC  0101               	movlb	1	; () banked
  8446  0035DE  511A               	movf	(atan2f@iy+2)& (0+255),w,b
  8447  0035E0  0100               	movlb	0	; () banked
  8448  0035E2  59E2               	subwfb	(??_atan2f+2)& (0+255),w,b
  8449  0035E4  0101               	movlb	1	; () banked
  8450  0035E6  511B               	movf	(atan2f@iy+3)& (0+255),w,b
  8451  0035E8  0100               	movlb	0	; () banked
  8452  0035EA  59E3               	subwfb	(??_atan2f+3)& (0+255),w,b
  8453  0035EC  A0D8               	btfss	status,0,c
  8454  0035EE  EFFB  F01A         	goto	u8521
  8455  0035F2  EFFD  F01A         	goto	u8520
  8456  0035F6                     u8521:
  8457  0035F6  EF0C  F01B         	goto	l1038
  8458  0035FA                     u8520:
  8459  0035FA                     
  8460                           ; BSR set to: 0
  8461  0035FA  0E80               	movlw	128
  8462  0035FC  0101               	movlb	1	; () banked
  8463  0035FE  191A               	xorwf	(atan2f@iy+2)& (0+255),w,b
  8464  003600  E109               	bnz	u8531
  8465  003602  0E7F               	movlw	127
  8466  003604  191B               	xorwf	(atan2f@iy+3)& (0+255),w,b
  8467  003606  1118               	iorwf	atan2f@iy& (0+255),w,b
  8468  003608  1119               	iorwf	(atan2f@iy+1)& (0+255),w,b
  8469  00360A  A4D8               	btfss	status,2,c
  8470  00360C  EF0A  F01B         	goto	u8531
  8471  003610  EF0C  F01B         	goto	u8530
  8472  003614                     u8531:
  8473  003614  EF2A  F01B         	goto	l1036
  8474  003618                     u8530:
  8475  003618                     l1038:
  8476  003618  0101               	movlb	1	; () banked
  8477  00361A  B11C               	btfsc	atan2f@m& (0+255),0,b
  8478  00361C  EF12  F01B         	goto	u8541
  8479  003620  EF14  F01B         	goto	u8540
  8480  003624                     u8541:
  8481  003624  EF1F  F01B         	goto	l7814
  8482  003628                     u8540:
  8483  003628                     
  8484                           ; BSR set to: 1
  8485  003628  0EDB               	movlw	219
  8486  00362A  0100               	movlb	0	; () banked
  8487  00362C  6FD8               	movwf	?_atan2f& (0+255),b
  8488  00362E  0E0F               	movlw	15
  8489  003630  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8490  003632  0EC9               	movlw	201
  8491  003634  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8492  003636  0E3F               	movlw	63
  8493  003638  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8494  00363A  EF56  F01C         	goto	l1003
  8495  00363E                     l7814:
  8496                           
  8497                           ; BSR set to: 1
  8498  00363E  0EDB               	movlw	219
  8499  003640  0100               	movlb	0	; () banked
  8500  003642  6FD8               	movwf	?_atan2f& (0+255),b
  8501  003644  0E0F               	movlw	15
  8502  003646  6FD9               	movwf	(?_atan2f+1)& (0+255),b
  8503  003648  0EC9               	movlw	201
  8504  00364A  6FDA               	movwf	(?_atan2f+2)& (0+255),b
  8505  00364C  0EBF               	movlw	191
  8506  00364E  6FDB               	movwf	(?_atan2f+3)& (0+255),b
  8507  003650  EF56  F01C         	goto	l1003
  8508  003654                     l1036:
  8509                           
  8510                           ; BSR set to: 1
  8511  003654  A31C               	btfss	atan2f@m& (0+255),1,b
  8512  003656  EF2F  F01B         	goto	u8551
  8513  00365A  EF31  F01B         	goto	u8550
  8514  00365E                     u8551:
  8515  00365E  EF66  F01B         	goto	l7822
  8516  003662                     u8550:
  8517  003662                     
  8518                           ; BSR set to: 1
  8519  003662  0E00               	movlw	0
  8520  003664  2518               	addwf	atan2f@iy& (0+255),w,b
  8521  003666  0100               	movlb	0	; () banked
  8522  003668  6FE0               	movwf	??_atan2f& (0+255),b
  8523  00366A  0E00               	movlw	0
  8524  00366C  0101               	movlb	1	; () banked
  8525  00366E  2119               	addwfc	(atan2f@iy+1)& (0+255),w,b
  8526  003670  0100               	movlb	0	; () banked
  8527  003672  6FE1               	movwf	(??_atan2f+1)& (0+255),b
  8528  003674  0E00               	movlw	0
  8529  003676  0101               	movlb	1	; () banked
  8530  003678  211A               	addwfc	(atan2f@iy+2)& (0+255),w,b
  8531  00367A  0100               	movlb	0	; () banked
  8532  00367C  6FE2               	movwf	(??_atan2f+2)& (0+255),b
  8533  00367E  0E0D               	movlw	13
  8534  003680  0101               	movlb	1	; () banked
  8535  003682  211B               	addwfc	(atan2f@iy+3)& (0+255),w,b
  8536  003684  0100               	movlb	0	; () banked
  8537  003686  6FE3               	movwf	(??_atan2f+3)& (0+255),b
  8538  003688  0101               	movlb	1	; () banked
  8539  00368A  5114               	movf	atan2f@ix& (0+255),w,b
  8540  00368C  0100               	movlb	0	; () banked
  8541  00368E  5DE0               	subwf	??_atan2f& (0+255),w,b
  8542  003690  0101               	movlb	1	; () banked
  8543  003692  5115               	movf	(atan2f@ix+1)& (0+255),w,b
  8544  003694  0100               	movlb	0	; () banked
  8545  003696  59E1               	subwfb	(??_atan2f+1)& (0+255),w,b
  8546  003698  0101               	movlb	1	; () banked
  8547  00369A  5116               	movf	(atan2f@ix+2)& (0+255),w,b
  8548  00369C  0100               	movlb	0	; () banked
  8549  00369E  59E2               	subwfb	(??_atan2f+2)& (0+255),w,b
  8550  0036A0  0101               	movlb	1	; () banked
  8551  0036A2  5117               	movf	(atan2f@ix+3)& (0+255),w,b
  8552  0036A4  0100               	movlb	0	; () banked
  8553  0036A6  59E3               	subwfb	(??_atan2f+3)& (0+255),w,b
  8554  0036A8  B0D8               	btfsc	status,0,c
  8555  0036AA  EF59  F01B         	goto	u8561
  8556  0036AE  EF5B  F01B         	goto	u8560
  8557  0036B2                     u8561:
  8558  0036B2  EF66  F01B         	goto	l7822
  8559  0036B6                     u8560:
  8560  0036B6                     
  8561                           ; BSR set to: 0
  8562  0036B6  0E00               	movlw	0
  8563  0036B8  0101               	movlb	1	; () banked
  8564  0036BA  6F10               	movwf	atan2f@z& (0+255),b
  8565  0036BC  0E00               	movlw	0
  8566  0036BE  6F11               	movwf	(atan2f@z+1)& (0+255),b
  8567  0036C0  0E00               	movlw	0
  8568  0036C2  6F12               	movwf	(atan2f@z+2)& (0+255),b
  8569  0036C4  0E00               	movlw	0
  8570  0036C6  6F13               	movwf	(atan2f@z+3)& (0+255),b
  8571  0036C8  EF29  F01C         	goto	l7840
  8572  0036CC                     l7822:
  8573  0036CC  C0D8  F07D         	movff	atan2f@y,___fldiv@b
  8574  0036D0  C0D9  F07E         	movff	atan2f@y+1,___fldiv@b+1
  8575  0036D4  C0DA  F07F         	movff	atan2f@y+2,___fldiv@b+2
  8576  0036D8  C0DB  F080         	movff	atan2f@y+3,___fldiv@b+3
  8577  0036DC  C0DC  F081         	movff	atan2f@x,___fldiv@a
  8578  0036E0  C0DD  F082         	movff	atan2f@x+1,___fldiv@a+1
  8579  0036E4  C0DE  F083         	movff	atan2f@x+2,___fldiv@a+2
  8580  0036E8  C0DF  F084         	movff	atan2f@x+3,___fldiv@a+3
  8581  0036EC  EC20  F023         	call	___fldiv	;wreg free
  8582  0036F0  C07D  F096         	movff	?___fldiv,fabsf@x
  8583  0036F4  C07E  F097         	movff	?___fldiv+1,fabsf@x+1
  8584  0036F8  C07F  F098         	movff	?___fldiv+2,fabsf@x+2
  8585  0036FC  C080  F099         	movff	?___fldiv+3,fabsf@x+3
  8586  003700  EC36  F031         	call	_fabsf	;wreg free
  8587  003704  C096  F100         	movff	?_fabsf,_atan2f$2618
  8588  003708  C097  F101         	movff	?_fabsf+1,_atan2f$2618+1
  8589  00370C  C098  F102         	movff	?_fabsf+2,_atan2f$2618+2
  8590  003710  C099  F103         	movff	?_fabsf+3,_atan2f$2618+3
  8591  003714  C100  F09E         	movff	_atan2f$2618,atanf@x
  8592  003718  C101  F09F         	movff	_atan2f$2618+1,atanf@x+1
  8593  00371C  C102  F0A0         	movff	_atan2f$2618+2,atanf@x+2
  8594  003720  C103  F0A1         	movff	_atan2f$2618+3,atanf@x+3
  8595  003724  EC7C  F014         	call	_atanf	;wreg free
  8596  003728  C09E  F110         	movff	?_atanf,atan2f@z
  8597  00372C  C09F  F111         	movff	?_atanf+1,atan2f@z+1
  8598  003730  C0A0  F112         	movff	?_atanf+2,atan2f@z+2
  8599  003734  C0A1  F113         	movff	?_atanf+3,atan2f@z+3
  8600  003738  EF29  F01C         	goto	l7840
  8601  00373C                     l1046:
  8602                           
  8603                           ; BSR set to: 0
  8604  00373C  C110  F0D8         	movff	atan2f@z,?_atan2f
  8605  003740  C111  F0D9         	movff	atan2f@z+1,?_atan2f+1
  8606  003744  C112  F0DA         	movff	atan2f@z+2,?_atan2f+2
  8607  003748  C113  F0DB         	movff	atan2f@z+3,?_atan2f+3
  8608  00374C  EF56  F01C         	goto	l1003
  8609  003750                     l7826:
  8610                           
  8611                           ; BSR set to: 0
  8612  003750  C110  F014         	movff	atan2f@z,___flneg@f1
  8613  003754  C111  F015         	movff	atan2f@z+1,___flneg@f1+1
  8614  003758  C112  F016         	movff	atan2f@z+2,___flneg@f1+2
  8615  00375C  C113  F017         	movff	atan2f@z+3,___flneg@f1+3
  8616  003760  ECFF  F030         	call	___flneg	;wreg free
  8617  003764  C014  F0D8         	movff	?___flneg,?_atan2f
  8618  003768  C015  F0D9         	movff	?___flneg+1,?_atan2f+1
  8619  00376C  C016  F0DA         	movff	?___flneg+2,?_atan2f+2
  8620  003770  C017  F0DB         	movff	?___flneg+3,?_atan2f+3
  8621  003774  EF56  F01C         	goto	l1003
  8622  003778                     l7830:
  8623                           
  8624                           ; BSR set to: 0
  8625  003778  0E2E               	movlw	46
  8626  00377A  6E32               	movwf	___fladd@a^0,c
  8627  00377C  0EBD               	movlw	189
  8628  00377E  6E33               	movwf	(___fladd@a+1)^0,c
  8629  003780  0EBB               	movlw	187
  8630  003782  6E34               	movwf	(___fladd@a+2)^0,c
  8631  003784  0E33               	movlw	51
  8632  003786  6E35               	movwf	(___fladd@a+3)^0,c
  8633  003788  C110  F02E         	movff	atan2f@z,___fladd@b
  8634  00378C  C111  F02F         	movff	atan2f@z+1,___fladd@b+1
  8635  003790  C112  F030         	movff	atan2f@z+2,___fladd@b+2
  8636  003794  C113  F031         	movff	atan2f@z+3,___fladd@b+3
  8637  003798  EC57  F01C         	call	___fladd	;wreg free
  8638  00379C  C02E  F104         	movff	?___fladd,_atan2f$2619
  8639  0037A0  C02F  F105         	movff	?___fladd+1,_atan2f$2619+1
  8640  0037A4  C030  F106         	movff	?___fladd+2,_atan2f$2619+2
  8641  0037A8  C031  F107         	movff	?___fladd+3,_atan2f$2619+3
  8642  0037AC  0EDB               	movlw	219
  8643  0037AE  0100               	movlb	0	; () banked
  8644  0037B0  6F75               	movwf	___flsub@b& (0+255),b
  8645  0037B2  0E0F               	movlw	15
  8646  0037B4  6F76               	movwf	(___flsub@b+1)& (0+255),b
  8647  0037B6  0E49               	movlw	73
  8648  0037B8  6F77               	movwf	(___flsub@b+2)& (0+255),b
  8649  0037BA  0E40               	movlw	64
  8650  0037BC  6F78               	movwf	(___flsub@b+3)& (0+255),b
  8651  0037BE  C104  F079         	movff	_atan2f$2619,___flsub@a
  8652  0037C2  C105  F07A         	movff	_atan2f$2619+1,___flsub@a+1
  8653  0037C6  C106  F07B         	movff	_atan2f$2619+2,___flsub@a+2
  8654  0037CA  C107  F07C         	movff	_atan2f$2619+3,___flsub@a+3
  8655  0037CE  EC3E  F030         	call	___flsub	;wreg free
  8656  0037D2  C075  F0D8         	movff	?___flsub,?_atan2f
  8657  0037D6  C076  F0D9         	movff	?___flsub+1,?_atan2f+1
  8658  0037DA  C077  F0DA         	movff	?___flsub+2,?_atan2f+2
  8659  0037DE  C078  F0DB         	movff	?___flsub+3,?_atan2f+3
  8660  0037E2  EF56  F01C         	goto	l1003
  8661  0037E6                     l7834:
  8662                           
  8663                           ; BSR set to: 0
  8664  0037E6  0E2E               	movlw	46
  8665  0037E8  6E32               	movwf	___fladd@a^0,c
  8666  0037EA  0EBD               	movlw	189
  8667  0037EC  6E33               	movwf	(___fladd@a+1)^0,c
  8668  0037EE  0EBB               	movlw	187
  8669  0037F0  6E34               	movwf	(___fladd@a+2)^0,c
  8670  0037F2  0E33               	movlw	51
  8671  0037F4  6E35               	movwf	(___fladd@a+3)^0,c
  8672  0037F6  C110  F02E         	movff	atan2f@z,___fladd@b
  8673  0037FA  C111  F02F         	movff	atan2f@z+1,___fladd@b+1
  8674  0037FE  C112  F030         	movff	atan2f@z+2,___fladd@b+2
  8675  003802  C113  F031         	movff	atan2f@z+3,___fladd@b+3
  8676  003806  EC57  F01C         	call	___fladd	;wreg free
  8677  00380A  C02E  F108         	movff	?___fladd,_atan2f$2620
  8678  00380E  C02F  F109         	movff	?___fladd+1,_atan2f$2620+1
  8679  003812  C030  F10A         	movff	?___fladd+2,_atan2f$2620+2
  8680  003816  C031  F10B         	movff	?___fladd+3,_atan2f$2620+3
  8681  00381A  C108  F02E         	movff	_atan2f$2620,___fladd@b
  8682  00381E  C109  F02F         	movff	_atan2f$2620+1,___fladd@b+1
  8683  003822  C10A  F030         	movff	_atan2f$2620+2,___fladd@b+2
  8684  003826  C10B  F031         	movff	_atan2f$2620+3,___fladd@b+3
  8685  00382A  0EDB               	movlw	219
  8686  00382C  6E32               	movwf	___fladd@a^0,c
  8687  00382E  0E0F               	movlw	15
  8688  003830  6E33               	movwf	(___fladd@a+1)^0,c
  8689  003832  0E49               	movlw	73
  8690  003834  6E34               	movwf	(___fladd@a+2)^0,c
  8691  003836  0EC0               	movlw	192
  8692  003838  6E35               	movwf	(___fladd@a+3)^0,c
  8693  00383A  EC57  F01C         	call	___fladd	;wreg free
  8694  00383E  C02E  F0D8         	movff	?___fladd,?_atan2f
  8695  003842  C02F  F0D9         	movff	?___fladd+1,?_atan2f+1
  8696  003846  C030  F0DA         	movff	?___fladd+2,?_atan2f+2
  8697  00384A  C031  F0DB         	movff	?___fladd+3,?_atan2f+3
  8698  00384E  EF56  F01C         	goto	l1003
  8699  003852                     l7840:
  8700  003852  C11C  F0E0         	movff	atan2f@m,??_atan2f
  8701  003856  C11D  F0E1         	movff	atan2f@m+1,??_atan2f+1
  8702  00385A  C11E  F0E2         	movff	atan2f@m+2,??_atan2f+2
  8703  00385E  C11F  F0E3         	movff	atan2f@m+3,??_atan2f+3
  8704                           
  8705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8706                           ; Switch size 1, requested type "simple"
  8707                           ; Number of cases is 1, Range of values is 0 to 0
  8708                           ; switch strategies available:
  8709                           ; Name         Instructions Cycles
  8710                           ; simple_byte            4     3 (average)
  8711                           ;	Chosen strategy is simple_byte
  8712  003862  0100               	movlb	0	; () banked
  8713  003864  51E3               	movf	(??_atan2f+3)& (0+255),w,b
  8714  003866  0A00               	xorlw	0	; case 0
  8715  003868  B4D8               	btfsc	status,2,c
  8716  00386A  EF4F  F01C         	goto	l8464
  8717  00386E  EFF3  F01B         	goto	l7834
  8718  003872                     l8462:
  8719                           
  8720                           ; BSR set to: 0
  8721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8722                           ; Switch size 1, requested type "simple"
  8723                           ; Number of cases is 1, Range of values is 0 to 0
  8724                           ; switch strategies available:
  8725                           ; Name         Instructions Cycles
  8726                           ; simple_byte            4     3 (average)
  8727                           ;	Chosen strategy is simple_byte
  8728  003872  51E1               	movf	(??_atan2f+1)& (0+255),w,b
  8729  003874  0A00               	xorlw	0	; case 0
  8730  003876  B4D8               	btfsc	status,2,c
  8731  003878  EF40  F01C         	goto	l8466
  8732  00387C  EFF3  F01B         	goto	l7834
  8733  003880                     l8466:
  8734                           
  8735                           ; BSR set to: 0
  8736                           ; Switch size 1, requested type "simple"
  8737                           ; Number of cases is 3, Range of values is 0 to 2
  8738                           ; switch strategies available:
  8739                           ; Name         Instructions Cycles
  8740                           ; simple_byte           10     6 (average)
  8741                           ;	Chosen strategy is simple_byte
  8742  003880  51E0               	movf	??_atan2f& (0+255),w,b
  8743  003882  0A00               	xorlw	0	; case 0
  8744  003884  B4D8               	btfsc	status,2,c
  8745  003886  EF9E  F01B         	goto	l1046
  8746  00388A  0A01               	xorlw	1	; case 1
  8747  00388C  B4D8               	btfsc	status,2,c
  8748  00388E  EFA8  F01B         	goto	l7826
  8749  003892  0A03               	xorlw	3	; case 2
  8750  003894  B4D8               	btfsc	status,2,c
  8751  003896  EFBC  F01B         	goto	l7830
  8752  00389A  EFF3  F01B         	goto	l7834
  8753  00389E                     l8464:
  8754                           
  8755                           ; BSR set to: 0
  8756                           ; Switch size 1, requested type "simple"
  8757                           ; Number of cases is 1, Range of values is 0 to 0
  8758                           ; switch strategies available:
  8759                           ; Name         Instructions Cycles
  8760                           ; simple_byte            4     3 (average)
  8761                           ;	Chosen strategy is simple_byte
  8762  00389E  51E2               	movf	(??_atan2f+2)& (0+255),w,b
  8763  0038A0  0A00               	xorlw	0	; case 0
  8764  0038A2  B4D8               	btfsc	status,2,c
  8765  0038A4  EF39  F01C         	goto	l8462
  8766  0038A8  EFF3  F01B         	goto	l7834
  8767  0038AC                     l1003:
  8768  0038AC  0012               	return		;funcret
  8769  0038AE                     __end_of_atan2f:
  8770                           	callstack 0
  8771                           
  8772 ;; *************** function _atanf *****************
  8773 ;; Defined at:
  8774 ;;		line 41 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atanf.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  x               4   62[BANK0 ] float 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  ix              4  116[BANK0 ] unsigned long 
  8779 ;;  z               4  112[BANK0 ] float 
  8780 ;;  w               4  106[BANK0 ] float 
  8781 ;;  sign            4   94[BANK0 ] unsigned long 
  8782 ;;  s2              4   90[BANK0 ] float 
  8783 ;;  s1              4   86[BANK0 ] float 
  8784 ;;  __xc8_float_    4   70[BANK0 ] struct .
  8785 ;;  id              2  110[BANK0 ] int 
  8786 ;; Return value:  Size  Location     Type
  8787 ;;                  4   62[BANK0 ] float 
  8788 ;; Registers used:
  8789 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8790 ;; Tracked objects:
  8791 ;;		On entry : 0/0
  8792 ;;		On exit  : 0/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8795 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8796 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;      Totals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;Total ram usage:       58 bytes
  8800 ;; Hardware stack levels used: 1
  8801 ;; Hardware stack levels required when called: 5
  8802 ;; This function calls:
  8803 ;;		___fladd
  8804 ;;		___fldiv
  8805 ;;		___flmul
  8806 ;;		___flneg
  8807 ;;		___flsub
  8808 ;;		___fpclassifyf
  8809 ;;		_fabsf
  8810 ;; This function is called by:
  8811 ;;		_atan2f
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text26
  8816  0028F8                     __ptext26:
  8817                           	callstack 0
  8818  0028F8                     _atanf:
  8819                           	callstack 23
  8820  0028F8  C09E  F0A6         	movff	atanf@x,atanf@__xc8_float_word
  8821  0028FC  C09F  F0A7         	movff	atanf@x+1,atanf@__xc8_float_word+1
  8822  002900  C0A0  F0A8         	movff	atanf@x+2,atanf@__xc8_float_word+2
  8823  002904  C0A1  F0A9         	movff	atanf@x+3,atanf@__xc8_float_word+3
  8824  002908  C0A6  F0D4         	movff	atanf@__xc8_float_word,atanf@ix
  8825  00290C  C0A7  F0D5         	movff	atanf@__xc8_float_word+1,atanf@ix+1
  8826  002910  C0A8  F0D6         	movff	atanf@__xc8_float_word+2,atanf@ix+2
  8827  002914  C0A9  F0D7         	movff	atanf@__xc8_float_word+3,atanf@ix+3
  8828  002918  C0D4  F0A2         	movff	atanf@ix,??_atanf
  8829  00291C  C0D5  F0A3         	movff	atanf@ix+1,??_atanf+1
  8830  002920  C0D6  F0A4         	movff	atanf@ix+2,??_atanf+2
  8831  002924  C0D7  F0A5         	movff	atanf@ix+3,??_atanf+3
  8832  002928  0E20               	movlw	32
  8833  00292A  EF9D  F014         	goto	u8300
  8834  00292E                     u8305:
  8835  00292E  0100               	movlb	0	; () banked
  8836  002930  90D8               	bcf	status,0,c
  8837  002932  33A5               	rrcf	(??_atanf+3)& (0+255),f,b
  8838  002934  33A4               	rrcf	(??_atanf+2)& (0+255),f,b
  8839  002936  33A3               	rrcf	(??_atanf+1)& (0+255),f,b
  8840  002938  33A2               	rrcf	??_atanf& (0+255),f,b
  8841  00293A                     u8300:
  8842  00293A  2EE8               	decfsz	wreg,f,c
  8843  00293C  EF97  F014         	goto	u8305
  8844  002940  C0A2  F0BE         	movff	??_atanf,atanf@sign
  8845  002944  C0A3  F0BF         	movff	??_atanf+1,atanf@sign+1
  8846  002948  C0A4  F0C0         	movff	??_atanf+2,atanf@sign+2
  8847  00294C  C0A5  F0C1         	movff	??_atanf+3,atanf@sign+3
  8848  002950                     
  8849                           ; BSR set to: 0
  8850  002950  9FD7               	bcf	(atanf@ix+3)& (0+255),7,b
  8851  002952                     
  8852                           ; BSR set to: 0
  8853  002952  0E80               	movlw	128
  8854  002954  5DD6               	subwf	(atanf@ix+2)& (0+255),w,b
  8855  002956  0E4C               	movlw	76
  8856  002958  59D7               	subwfb	(atanf@ix+3)& (0+255),w,b
  8857  00295A  A0D8               	btfss	status,0,c
  8858  00295C  EFB2  F014         	goto	u8311
  8859  002960  EFB4  F014         	goto	u8310
  8860  002964                     u8311:
  8861  002964  EF1F  F015         	goto	l7642
  8862  002968                     u8310:
  8863  002968                     
  8864                           ; BSR set to: 0
  8865  002968  C09E  F014         	movff	atanf@x,___fpclassifyf@x
  8866  00296C  C09F  F015         	movff	atanf@x+1,___fpclassifyf@x+1
  8867  002970  C0A0  F016         	movff	atanf@x+2,___fpclassifyf@x+2
  8868  002974  C0A1  F017         	movff	atanf@x+3,___fpclassifyf@x+3
  8869  002978  ECB7  F02A         	call	___fpclassifyf	;wreg free
  8870  00297C  5014               	movf	?___fpclassifyf^0,w,c
  8871  00297E  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  8872  002980  A4D8               	btfss	status,2,c
  8873  002982  EFC5  F014         	goto	u8321
  8874  002986  EFC7  F014         	goto	u8320
  8875  00298A                     u8321:
  8876  00298A  EFD1  F014         	goto	l7632
  8877  00298E                     u8320:
  8878  00298E                     l7630:
  8879  00298E  C09E  F09E         	movff	atanf@x,?_atanf
  8880  002992  C09F  F09F         	movff	atanf@x+1,?_atanf+1
  8881  002996  C0A0  F0A0         	movff	atanf@x+2,?_atanf+2
  8882  00299A  C0A1  F0A1         	movff	atanf@x+3,?_atanf+3
  8883  00299E  EFA3  F018         	goto	l1078
  8884  0029A2                     l7632:
  8885  0029A2  0E31               	movlw	low (_atanhi+12)
  8886  0029A4  6EF6               	movwf	tblptrl,c
  8887  0029A6  0E10               	movlw	high (_atanhi+12)
  8888  0029A8  6EF7               	movwf	tblptrh,c
  8889  0029AA                     	if	0	;tblptru may be non-zero
  8890  0029AA                     	endif
  8891  0029AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8892  0029AA  0E00               	movlw	low (__mediumconst shr (0+16))
  8893  0029AC  6EF8               	movwf	tblptru,c
  8894  0029AE                     	endif
  8895  0029AE  0009               	tblrd		*+
  8896  0029B0  CFF5 F02E          	movff	tablat,___fladd@b
  8897  0029B4  0009               	tblrd		*+
  8898  0029B6  CFF5 F02F          	movff	tablat,___fladd@b+1
  8899  0029BA  0009               	tblrd		*+
  8900  0029BC  CFF5 F030          	movff	tablat,___fladd@b+2
  8901  0029C0  000A               	tblrd		*-
  8902  0029C2  CFF5 F031          	movff	tablat,___fladd@b+3
  8903  0029C6  0E00               	movlw	0
  8904  0029C8  6E32               	movwf	___fladd@a^0,c
  8905  0029CA  0E00               	movlw	0
  8906  0029CC  6E33               	movwf	(___fladd@a+1)^0,c
  8907  0029CE  0E80               	movlw	128
  8908  0029D0  6E34               	movwf	(___fladd@a+2)^0,c
  8909  0029D2  0E03               	movlw	3
  8910  0029D4  6E35               	movwf	(___fladd@a+3)^0,c
  8911  0029D6  EC57  F01C         	call	___fladd	;wreg free
  8912  0029DA  C02E  F0D0         	movff	?___fladd,atanf@z
  8913  0029DE  C02F  F0D1         	movff	?___fladd+1,atanf@z+1
  8914  0029E2  C030  F0D2         	movff	?___fladd+2,atanf@z+2
  8915  0029E6  C031  F0D3         	movff	?___fladd+3,atanf@z+3
  8916  0029EA  0100               	movlb	0	; () banked
  8917  0029EC  51BE               	movf	atanf@sign& (0+255),w,b
  8918  0029EE  11BF               	iorwf	(atanf@sign+1)& (0+255),w,b
  8919  0029F0  11C0               	iorwf	(atanf@sign+2)& (0+255),w,b
  8920  0029F2  11C1               	iorwf	(atanf@sign+3)& (0+255),w,b
  8921  0029F4  A4D8               	btfss	status,2,c
  8922  0029F6  EFFF  F014         	goto	u8331
  8923  0029FA  EF01  F015         	goto	u8330
  8924  0029FE                     u8331:
  8925  0029FE  EF0B  F015         	goto	l7638
  8926  002A02                     u8330:
  8927  002A02                     l7636:
  8928                           
  8929                           ; BSR set to: 0
  8930  002A02  C0D0  F09E         	movff	atanf@z,?_atanf
  8931  002A06  C0D1  F09F         	movff	atanf@z+1,?_atanf+1
  8932  002A0A  C0D2  F0A0         	movff	atanf@z+2,?_atanf+2
  8933  002A0E  C0D3  F0A1         	movff	atanf@z+3,?_atanf+3
  8934  002A12  EFA3  F018         	goto	l1078
  8935  002A16                     l7638:
  8936                           
  8937                           ; BSR set to: 0
  8938  002A16  C0D0  F014         	movff	atanf@z,___flneg@f1
  8939  002A1A  C0D1  F015         	movff	atanf@z+1,___flneg@f1+1
  8940  002A1E  C0D2  F016         	movff	atanf@z+2,___flneg@f1+2
  8941  002A22  C0D3  F017         	movff	atanf@z+3,___flneg@f1+3
  8942  002A26  ECFF  F030         	call	___flneg	;wreg free
  8943  002A2A  C014  F09E         	movff	?___flneg,?_atanf
  8944  002A2E  C015  F09F         	movff	?___flneg+1,?_atanf+1
  8945  002A32  C016  F0A0         	movff	?___flneg+2,?_atanf+2
  8946  002A36  C017  F0A1         	movff	?___flneg+3,?_atanf+3
  8947  002A3A  EFA3  F018         	goto	l1078
  8948  002A3E                     l7642:
  8949                           
  8950                           ; BSR set to: 0
  8951  002A3E  0EE0               	movlw	224
  8952  002A40  5DD6               	subwf	(atanf@ix+2)& (0+255),w,b
  8953  002A42  0E3E               	movlw	62
  8954  002A44  59D7               	subwfb	(atanf@ix+3)& (0+255),w,b
  8955  002A46  B0D8               	btfsc	status,0,c
  8956  002A48  EF28  F015         	goto	u8341
  8957  002A4C  EF2A  F015         	goto	u8340
  8958  002A50                     u8341:
  8959  002A50  EF3B  F015         	goto	l7648
  8960  002A54                     u8340:
  8961  002A54                     
  8962                           ; BSR set to: 0
  8963  002A54  0E80               	movlw	128
  8964  002A56  5DD6               	subwf	(atanf@ix+2)& (0+255),w,b
  8965  002A58  0E39               	movlw	57
  8966  002A5A  59D7               	subwfb	(atanf@ix+3)& (0+255),w,b
  8967  002A5C  B0D8               	btfsc	status,0,c
  8968  002A5E  EF33  F015         	goto	u8351
  8969  002A62  EF35  F015         	goto	u8350
  8970  002A66                     u8351:
  8971  002A66  EF37  F015         	goto	l1084
  8972  002A6A                     u8350:
  8973  002A6A  EFC7  F014         	goto	l7630
  8974  002A6E                     l1084:
  8975                           
  8976                           ; BSR set to: 0
  8977  002A6E  69CE               	setf	atanf@id& (0+255),b
  8978  002A70  69CF               	setf	(atanf@id+1)& (0+255),b
  8979  002A72  EF7D  F016         	goto	l7672
  8980  002A76                     l7648:
  8981                           
  8982                           ; BSR set to: 0
  8983  002A76  C09E  F096         	movff	atanf@x,fabsf@x
  8984  002A7A  C09F  F097         	movff	atanf@x+1,fabsf@x+1
  8985  002A7E  C0A0  F098         	movff	atanf@x+2,fabsf@x+2
  8986  002A82  C0A1  F099         	movff	atanf@x+3,fabsf@x+3
  8987  002A86  EC36  F031         	call	_fabsf	;wreg free
  8988  002A8A  C096  F09E         	movff	?_fabsf,atanf@x
  8989  002A8E  C097  F09F         	movff	?_fabsf+1,atanf@x+1
  8990  002A92  C098  F0A0         	movff	?_fabsf+2,atanf@x+2
  8991  002A96  C099  F0A1         	movff	?_fabsf+3,atanf@x+3
  8992  002A9A  0E98               	movlw	152
  8993  002A9C  0100               	movlb	0	; () banked
  8994  002A9E  5DD6               	subwf	(atanf@ix+2)& (0+255),w,b
  8995  002AA0  0E3F               	movlw	63
  8996  002AA2  59D7               	subwfb	(atanf@ix+3)& (0+255),w,b
  8997  002AA4  B0D8               	btfsc	status,0,c
  8998  002AA6  EF57  F015         	goto	u8361
  8999  002AAA  EF59  F015         	goto	u8360
  9000  002AAE                     u8361:
  9001  002AAE  EFFE  F015         	goto	l7662
  9002  002AB2                     u8360:
  9003  002AB2                     
  9004                           ; BSR set to: 0
  9005  002AB2  0E30               	movlw	48
  9006  002AB4  5DD6               	subwf	(atanf@ix+2)& (0+255),w,b
  9007  002AB6  0E3F               	movlw	63
  9008  002AB8  59D7               	subwfb	(atanf@ix+3)& (0+255),w,b
  9009  002ABA  B0D8               	btfsc	status,0,c
  9010  002ABC  EF62  F015         	goto	u8371
  9011  002AC0  EF64  F015         	goto	u8370
  9012  002AC4                     u8371:
  9013  002AC4  EFBA  F015         	goto	l7658
  9014  002AC8                     u8370:
  9015  002AC8                     
  9016                           ; BSR set to: 0
  9017  002AC8  0E00               	movlw	0
  9018  002ACA  6FCF               	movwf	(atanf@id+1)& (0+255),b
  9019  002ACC  0E00               	movlw	0
  9020  002ACE  6FCE               	movwf	atanf@id& (0+255),b
  9021  002AD0                     
  9022                           ; BSR set to: 0
  9023  002AD0  0E00               	movlw	0
  9024  002AD2  6E32               	movwf	___fladd@a^0,c
  9025  002AD4  0E00               	movlw	0
  9026  002AD6  6E33               	movwf	(___fladd@a+1)^0,c
  9027  002AD8  0E80               	movlw	128
  9028  002ADA  6E34               	movwf	(___fladd@a+2)^0,c
  9029  002ADC  0EBF               	movlw	191
  9030  002ADE  6E35               	movwf	(___fladd@a+3)^0,c
  9031  002AE0  0E00               	movlw	0
  9032  002AE2  6E26               	movwf	___flmul@a^0,c
  9033  002AE4  0E00               	movlw	0
  9034  002AE6  6E27               	movwf	(___flmul@a+1)^0,c
  9035  002AE8  0E00               	movlw	0
  9036  002AEA  6E28               	movwf	(___flmul@a+2)^0,c
  9037  002AEC  0E40               	movlw	64
  9038  002AEE  6E29               	movwf	(___flmul@a+3)^0,c
  9039  002AF0  C09E  F022         	movff	atanf@x,___flmul@b
  9040  002AF4  C09F  F023         	movff	atanf@x+1,___flmul@b+1
  9041  002AF8  C0A0  F024         	movff	atanf@x+2,___flmul@b+2
  9042  002AFC  C0A1  F025         	movff	atanf@x+3,___flmul@b+3
  9043  002B00  EC0A  F021         	call	___flmul	;wreg free
  9044  002B04  C022  F02E         	movff	?___flmul,___fladd@b
  9045  002B08  C023  F02F         	movff	?___flmul+1,___fladd@b+1
  9046  002B0C  C024  F030         	movff	?___flmul+2,___fladd@b+2
  9047  002B10  C025  F031         	movff	?___flmul+3,___fladd@b+3
  9048  002B14  EC57  F01C         	call	___fladd	;wreg free
  9049  002B18  C02E  F07D         	movff	?___fladd,___fldiv@b
  9050  002B1C  C02F  F07E         	movff	?___fladd+1,___fldiv@b+1
  9051  002B20  C030  F07F         	movff	?___fladd+2,___fldiv@b+2
  9052  002B24  C031  F080         	movff	?___fladd+3,___fldiv@b+3
  9053  002B28  0E00               	movlw	0
  9054  002B2A  6E32               	movwf	___fladd@a^0,c
  9055  002B2C  0E00               	movlw	0
  9056  002B2E  6E33               	movwf	(___fladd@a+1)^0,c
  9057  002B30  0E00               	movlw	0
  9058  002B32  6E34               	movwf	(___fladd@a+2)^0,c
  9059  002B34  0E40               	movlw	64
  9060  002B36  6E35               	movwf	(___fladd@a+3)^0,c
  9061  002B38  C09E  F02E         	movff	atanf@x,___fladd@b
  9062  002B3C  C09F  F02F         	movff	atanf@x+1,___fladd@b+1
  9063  002B40  C0A0  F030         	movff	atanf@x+2,___fladd@b+2
  9064  002B44  C0A1  F031         	movff	atanf@x+3,___fladd@b+3
  9065  002B48  EC57  F01C         	call	___fladd	;wreg free
  9066  002B4C  C02E  F081         	movff	?___fladd,___fldiv@a
  9067  002B50  C02F  F082         	movff	?___fladd+1,___fldiv@a+1
  9068  002B54  C030  F083         	movff	?___fladd+2,___fldiv@a+2
  9069  002B58  C031  F084         	movff	?___fladd+3,___fldiv@a+3
  9070  002B5C  EC20  F023         	call	___fldiv	;wreg free
  9071  002B60  C07D  F09E         	movff	?___fldiv,atanf@x
  9072  002B64  C07E  F09F         	movff	?___fldiv+1,atanf@x+1
  9073  002B68  C07F  F0A0         	movff	?___fldiv+2,atanf@x+2
  9074  002B6C  C080  F0A1         	movff	?___fldiv+3,atanf@x+3
  9075  002B70  EF7D  F016         	goto	l7672
  9076  002B74                     l7658:
  9077                           
  9078                           ; BSR set to: 0
  9079  002B74  0E00               	movlw	0
  9080  002B76  6FCF               	movwf	(atanf@id+1)& (0+255),b
  9081  002B78  0E01               	movlw	1
  9082  002B7A  6FCE               	movwf	atanf@id& (0+255),b
  9083  002B7C                     
  9084                           ; BSR set to: 0
  9085  002B7C  0E00               	movlw	0
  9086  002B7E  6E32               	movwf	___fladd@a^0,c
  9087  002B80  0E00               	movlw	0
  9088  002B82  6E33               	movwf	(___fladd@a+1)^0,c
  9089  002B84  0E80               	movlw	128
  9090  002B86  6E34               	movwf	(___fladd@a+2)^0,c
  9091  002B88  0EBF               	movlw	191
  9092  002B8A  6E35               	movwf	(___fladd@a+3)^0,c
  9093  002B8C  C09E  F02E         	movff	atanf@x,___fladd@b
  9094  002B90  C09F  F02F         	movff	atanf@x+1,___fladd@b+1
  9095  002B94  C0A0  F030         	movff	atanf@x+2,___fladd@b+2
  9096  002B98  C0A1  F031         	movff	atanf@x+3,___fladd@b+3
  9097  002B9C  EC57  F01C         	call	___fladd	;wreg free
  9098  002BA0  C02E  F07D         	movff	?___fladd,___fldiv@b
  9099  002BA4  C02F  F07E         	movff	?___fladd+1,___fldiv@b+1
  9100  002BA8  C030  F07F         	movff	?___fladd+2,___fldiv@b+2
  9101  002BAC  C031  F080         	movff	?___fladd+3,___fldiv@b+3
  9102  002BB0  0E00               	movlw	0
  9103  002BB2  6E32               	movwf	___fladd@a^0,c
  9104  002BB4  0E00               	movlw	0
  9105  002BB6  6E33               	movwf	(___fladd@a+1)^0,c
  9106  002BB8  0E80               	movlw	128
  9107  002BBA  6E34               	movwf	(___fladd@a+2)^0,c
  9108  002BBC  0E3F               	movlw	63
  9109  002BBE  6E35               	movwf	(___fladd@a+3)^0,c
  9110  002BC0  C09E  F02E         	movff	atanf@x,___fladd@b
  9111  002BC4  C09F  F02F         	movff	atanf@x+1,___fladd@b+1
  9112  002BC8  C0A0  F030         	movff	atanf@x+2,___fladd@b+2
  9113  002BCC  C0A1  F031         	movff	atanf@x+3,___fladd@b+3
  9114  002BD0  EC57  F01C         	call	___fladd	;wreg free
  9115  002BD4  C02E  F081         	movff	?___fladd,___fldiv@a
  9116  002BD8  C02F  F082         	movff	?___fladd+1,___fldiv@a+1
  9117  002BDC  C030  F083         	movff	?___fladd+2,___fldiv@a+2
  9118  002BE0  C031  F084         	movff	?___fladd+3,___fldiv@a+3
  9119  002BE4  EC20  F023         	call	___fldiv	;wreg free
  9120  002BE8  C07D  F09E         	movff	?___fldiv,atanf@x
  9121  002BEC  C07E  F09F         	movff	?___fldiv+1,atanf@x+1
  9122  002BF0  C07F  F0A0         	movff	?___fldiv+2,atanf@x+2
  9123  002BF4  C080  F0A1         	movff	?___fldiv+3,atanf@x+3
  9124  002BF8  EF7D  F016         	goto	l7672
  9125  002BFC                     l7662:
  9126                           
  9127                           ; BSR set to: 0
  9128  002BFC  0E1C               	movlw	28
  9129  002BFE  5DD6               	subwf	(atanf@ix+2)& (0+255),w,b
  9130  002C00  0E40               	movlw	64
  9131  002C02  59D7               	subwfb	(atanf@ix+3)& (0+255),w,b
  9132  002C04  B0D8               	btfsc	status,0,c
  9133  002C06  EF07  F016         	goto	u8381
  9134  002C0A  EF09  F016         	goto	u8380
  9135  002C0E                     u8381:
  9136  002C0E  EF5F  F016         	goto	l7668
  9137  002C12                     u8380:
  9138  002C12                     
  9139                           ; BSR set to: 0
  9140  002C12  0E00               	movlw	0
  9141  002C14  6FCF               	movwf	(atanf@id+1)& (0+255),b
  9142  002C16  0E02               	movlw	2
  9143  002C18  6FCE               	movwf	atanf@id& (0+255),b
  9144  002C1A                     
  9145                           ; BSR set to: 0
  9146  002C1A  0E00               	movlw	0
  9147  002C1C  6E32               	movwf	___fladd@a^0,c
  9148  002C1E  0E00               	movlw	0
  9149  002C20  6E33               	movwf	(___fladd@a+1)^0,c
  9150  002C22  0EC0               	movlw	192
  9151  002C24  6E34               	movwf	(___fladd@a+2)^0,c
  9152  002C26  0EBF               	movlw	191
  9153  002C28  6E35               	movwf	(___fladd@a+3)^0,c
  9154  002C2A  C09E  F02E         	movff	atanf@x,___fladd@b
  9155  002C2E  C09F  F02F         	movff	atanf@x+1,___fladd@b+1
  9156  002C32  C0A0  F030         	movff	atanf@x+2,___fladd@b+2
  9157  002C36  C0A1  F031         	movff	atanf@x+3,___fladd@b+3
  9158  002C3A  EC57  F01C         	call	___fladd	;wreg free
  9159  002C3E  C02E  F07D         	movff	?___fladd,___fldiv@b
  9160  002C42  C02F  F07E         	movff	?___fladd+1,___fldiv@b+1
  9161  002C46  C030  F07F         	movff	?___fladd+2,___fldiv@b+2
  9162  002C4A  C031  F080         	movff	?___fladd+3,___fldiv@b+3
  9163  002C4E  0E00               	movlw	0
  9164  002C50  6E32               	movwf	___fladd@a^0,c
  9165  002C52  0E00               	movlw	0
  9166  002C54  6E33               	movwf	(___fladd@a+1)^0,c
  9167  002C56  0E80               	movlw	128
  9168  002C58  6E34               	movwf	(___fladd@a+2)^0,c
  9169  002C5A  0E3F               	movlw	63
  9170  002C5C  6E35               	movwf	(___fladd@a+3)^0,c
  9171  002C5E  0E00               	movlw	0
  9172  002C60  6E26               	movwf	___flmul@a^0,c
  9173  002C62  0E00               	movlw	0
  9174  002C64  6E27               	movwf	(___flmul@a+1)^0,c
  9175  002C66  0EC0               	movlw	192
  9176  002C68  6E28               	movwf	(___flmul@a+2)^0,c
  9177  002C6A  0E3F               	movlw	63
  9178  002C6C  6E29               	movwf	(___flmul@a+3)^0,c
  9179  002C6E  C09E  F022         	movff	atanf@x,___flmul@b
  9180  002C72  C09F  F023         	movff	atanf@x+1,___flmul@b+1
  9181  002C76  C0A0  F024         	movff	atanf@x+2,___flmul@b+2
  9182  002C7A  C0A1  F025         	movff	atanf@x+3,___flmul@b+3
  9183  002C7E  EC0A  F021         	call	___flmul	;wreg free
  9184  002C82  C022  F02E         	movff	?___flmul,___fladd@b
  9185  002C86  C023  F02F         	movff	?___flmul+1,___fladd@b+1
  9186  002C8A  C024  F030         	movff	?___flmul+2,___fladd@b+2
  9187  002C8E  C025  F031         	movff	?___flmul+3,___fladd@b+3
  9188  002C92  EC57  F01C         	call	___fladd	;wreg free
  9189  002C96  C02E  F081         	movff	?___fladd,___fldiv@a
  9190  002C9A  C02F  F082         	movff	?___fladd+1,___fldiv@a+1
  9191  002C9E  C030  F083         	movff	?___fladd+2,___fldiv@a+2
  9192  002CA2  C031  F084         	movff	?___fladd+3,___fldiv@a+3
  9193  002CA6  EC20  F023         	call	___fldiv	;wreg free
  9194  002CAA  C07D  F09E         	movff	?___fldiv,atanf@x
  9195  002CAE  C07E  F09F         	movff	?___fldiv+1,atanf@x+1
  9196  002CB2  C07F  F0A0         	movff	?___fldiv+2,atanf@x+2
  9197  002CB6  C080  F0A1         	movff	?___fldiv+3,atanf@x+3
  9198  002CBA  EF7D  F016         	goto	l7672
  9199  002CBE                     l7668:
  9200                           
  9201                           ; BSR set to: 0
  9202  002CBE  0E00               	movlw	0
  9203  002CC0  6FCF               	movwf	(atanf@id+1)& (0+255),b
  9204  002CC2  0E03               	movlw	3
  9205  002CC4  6FCE               	movwf	atanf@id& (0+255),b
  9206  002CC6                     
  9207                           ; BSR set to: 0
  9208  002CC6  0E00               	movlw	0
  9209  002CC8  6F7D               	movwf	___fldiv@b& (0+255),b
  9210  002CCA  0E00               	movlw	0
  9211  002CCC  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
  9212  002CCE  0E80               	movlw	128
  9213  002CD0  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
  9214  002CD2  0EBF               	movlw	191
  9215  002CD4  6F80               	movwf	(___fldiv@b+3)& (0+255),b
  9216  002CD6  C09E  F081         	movff	atanf@x,___fldiv@a
  9217  002CDA  C09F  F082         	movff	atanf@x+1,___fldiv@a+1
  9218  002CDE  C0A0  F083         	movff	atanf@x+2,___fldiv@a+2
  9219  002CE2  C0A1  F084         	movff	atanf@x+3,___fldiv@a+3
  9220  002CE6  EC20  F023         	call	___fldiv	;wreg free
  9221  002CEA  C07D  F09E         	movff	?___fldiv,atanf@x
  9222  002CEE  C07E  F09F         	movff	?___fldiv+1,atanf@x+1
  9223  002CF2  C07F  F0A0         	movff	?___fldiv+2,atanf@x+2
  9224  002CF6  C080  F0A1         	movff	?___fldiv+3,atanf@x+3
  9225  002CFA                     l7672:
  9226  002CFA  C09E  F022         	movff	atanf@x,___flmul@b
  9227  002CFE  C09F  F023         	movff	atanf@x+1,___flmul@b+1
  9228  002D02  C0A0  F024         	movff	atanf@x+2,___flmul@b+2
  9229  002D06  C0A1  F025         	movff	atanf@x+3,___flmul@b+3
  9230  002D0A  C09E  F026         	movff	atanf@x,___flmul@a
  9231  002D0E  C09F  F027         	movff	atanf@x+1,___flmul@a+1
  9232  002D12  C0A0  F028         	movff	atanf@x+2,___flmul@a+2
  9233  002D16  C0A1  F029         	movff	atanf@x+3,___flmul@a+3
  9234  002D1A  EC0A  F021         	call	___flmul	;wreg free
  9235  002D1E  C022  F0D0         	movff	?___flmul,atanf@z
  9236  002D22  C023  F0D1         	movff	?___flmul+1,atanf@z+1
  9237  002D26  C024  F0D2         	movff	?___flmul+2,atanf@z+2
  9238  002D2A  C025  F0D3         	movff	?___flmul+3,atanf@z+3
  9239  002D2E  C0D0  F022         	movff	atanf@z,___flmul@b
  9240  002D32  C0D1  F023         	movff	atanf@z+1,___flmul@b+1
  9241  002D36  C0D2  F024         	movff	atanf@z+2,___flmul@b+2
  9242  002D3A  C0D3  F025         	movff	atanf@z+3,___flmul@b+3
  9243  002D3E  C0D0  F026         	movff	atanf@z,___flmul@a
  9244  002D42  C0D1  F027         	movff	atanf@z+1,___flmul@a+1
  9245  002D46  C0D2  F028         	movff	atanf@z+2,___flmul@a+2
  9246  002D4A  C0D3  F029         	movff	atanf@z+3,___flmul@a+3
  9247  002D4E  EC0A  F021         	call	___flmul	;wreg free
  9248  002D52  C022  F0CA         	movff	?___flmul,atanf@w
  9249  002D56  C023  F0CB         	movff	?___flmul+1,atanf@w+1
  9250  002D5A  C024  F0CC         	movff	?___flmul+2,atanf@w+2
  9251  002D5E  C025  F0CD         	movff	?___flmul+3,atanf@w+3
  9252  002D62  0E09               	movlw	low (_aT+8)
  9253  002D64  6EF6               	movwf	tblptrl,c
  9254  002D66  0E10               	movlw	high (_aT+8)
  9255  002D68  6EF7               	movwf	tblptrh,c
  9256  002D6A                     	if	0	;tblptru may be non-zero
  9257  002D6A                     	endif
  9258  002D6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9259  002D6A  0E00               	movlw	low (__mediumconst shr (0+16))
  9260  002D6C  6EF8               	movwf	tblptru,c
  9261  002D6E                     	endif
  9262  002D6E  0009               	tblrd		*+
  9263  002D70  CFF5 F032          	movff	tablat,___fladd@a
  9264  002D74  0009               	tblrd		*+
  9265  002D76  CFF5 F033          	movff	tablat,___fladd@a+1
  9266  002D7A  0009               	tblrd		*+
  9267  002D7C  CFF5 F034          	movff	tablat,___fladd@a+2
  9268  002D80  000A               	tblrd		*-
  9269  002D82  CFF5 F035          	movff	tablat,___fladd@a+3
  9270  002D86  C0CA  F026         	movff	atanf@w,___flmul@a
  9271  002D8A  C0CB  F027         	movff	atanf@w+1,___flmul@a+1
  9272  002D8E  C0CC  F028         	movff	atanf@w+2,___flmul@a+2
  9273  002D92  C0CD  F029         	movff	atanf@w+3,___flmul@a+3
  9274  002D96  0E11               	movlw	low (_aT+16)
  9275  002D98  6EF6               	movwf	tblptrl,c
  9276  002D9A  0E10               	movlw	high (_aT+16)
  9277  002D9C  6EF7               	movwf	tblptrh,c
  9278  002D9E                     	if	0	;tblptru may be non-zero
  9279  002D9E                     	endif
  9280  002D9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9281  002D9E  0E00               	movlw	low (__mediumconst shr (0+16))
  9282  002DA0  6EF8               	movwf	tblptru,c
  9283  002DA2                     	endif
  9284  002DA2  0009               	tblrd		*+
  9285  002DA4  CFF5 F022          	movff	tablat,___flmul@b
  9286  002DA8  0009               	tblrd		*+
  9287  002DAA  CFF5 F023          	movff	tablat,___flmul@b+1
  9288  002DAE  0009               	tblrd		*+
  9289  002DB0  CFF5 F024          	movff	tablat,___flmul@b+2
  9290  002DB4  000A               	tblrd		*-
  9291  002DB6  CFF5 F025          	movff	tablat,___flmul@b+3
  9292  002DBA  EC0A  F021         	call	___flmul	;wreg free
  9293  002DBE  C022  F02E         	movff	?___flmul,___fladd@b
  9294  002DC2  C023  F02F         	movff	?___flmul+1,___fladd@b+1
  9295  002DC6  C024  F030         	movff	?___flmul+2,___fladd@b+2
  9296  002DCA  C025  F031         	movff	?___flmul+3,___fladd@b+3
  9297  002DCE  EC57  F01C         	call	___fladd	;wreg free
  9298  002DD2  C02E  F0C2         	movff	?___fladd,_atanf$2621
  9299  002DD6  C02F  F0C3         	movff	?___fladd+1,_atanf$2621+1
  9300  002DDA  C030  F0C4         	movff	?___fladd+2,_atanf$2621+2
  9301  002DDE  C031  F0C5         	movff	?___fladd+3,_atanf$2621+3
  9302  002DE2  0E01               	movlw	low _aT
  9303  002DE4  6EF6               	movwf	tblptrl,c
  9304  002DE6                     	if	1	;There is more than 1 active tblptr byte
  9305  002DE6  0E10               	movlw	high _aT
  9306  002DE8  6EF7               	movwf	tblptrh,c
  9307  002DEA                     	endif
  9308  002DEA                     	if	1	;There are 3 active tblptr bytes
  9309  002DEA  0E00               	movlw	low (_aT shr (0+16))
  9310  002DEC  6EF8               	movwf	tblptru,c
  9311  002DEE                     	endif
  9312  002DEE  0009               	tblrd		*+
  9313  002DF0  CFF5 F032          	movff	tablat,___fladd@a
  9314  002DF4  0009               	tblrd		*+
  9315  002DF6  CFF5 F033          	movff	tablat,___fladd@a+1
  9316  002DFA  0009               	tblrd		*+
  9317  002DFC  CFF5 F034          	movff	tablat,___fladd@a+2
  9318  002E00  000A               	tblrd		*-
  9319  002E02  CFF5 F035          	movff	tablat,___fladd@a+3
  9320  002E06  C0CA  F026         	movff	atanf@w,___flmul@a
  9321  002E0A  C0CB  F027         	movff	atanf@w+1,___flmul@a+1
  9322  002E0E  C0CC  F028         	movff	atanf@w+2,___flmul@a+2
  9323  002E12  C0CD  F029         	movff	atanf@w+3,___flmul@a+3
  9324  002E16  C0C2  F022         	movff	_atanf$2621,___flmul@b
  9325  002E1A  C0C3  F023         	movff	_atanf$2621+1,___flmul@b+1
  9326  002E1E  C0C4  F024         	movff	_atanf$2621+2,___flmul@b+2
  9327  002E22  C0C5  F025         	movff	_atanf$2621+3,___flmul@b+3
  9328  002E26  EC0A  F021         	call	___flmul	;wreg free
  9329  002E2A  C022  F02E         	movff	?___flmul,___fladd@b
  9330  002E2E  C023  F02F         	movff	?___flmul+1,___fladd@b+1
  9331  002E32  C024  F030         	movff	?___flmul+2,___fladd@b+2
  9332  002E36  C025  F031         	movff	?___flmul+3,___fladd@b+3
  9333  002E3A  EC57  F01C         	call	___fladd	;wreg free
  9334  002E3E  C02E  F0AA         	movff	?___fladd,_atanf$2622
  9335  002E42  C02F  F0AB         	movff	?___fladd+1,_atanf$2622+1
  9336  002E46  C030  F0AC         	movff	?___fladd+2,_atanf$2622+2
  9337  002E4A  C031  F0AD         	movff	?___fladd+3,_atanf$2622+3
  9338  002E4E  C0AA  F022         	movff	_atanf$2622,___flmul@b
  9339  002E52  C0AB  F023         	movff	_atanf$2622+1,___flmul@b+1
  9340  002E56  C0AC  F024         	movff	_atanf$2622+2,___flmul@b+2
  9341  002E5A  C0AD  F025         	movff	_atanf$2622+3,___flmul@b+3
  9342  002E5E  C0D0  F026         	movff	atanf@z,___flmul@a
  9343  002E62  C0D1  F027         	movff	atanf@z+1,___flmul@a+1
  9344  002E66  C0D2  F028         	movff	atanf@z+2,___flmul@a+2
  9345  002E6A  C0D3  F029         	movff	atanf@z+3,___flmul@a+3
  9346  002E6E  EC0A  F021         	call	___flmul	;wreg free
  9347  002E72  C022  F0B6         	movff	?___flmul,atanf@s1
  9348  002E76  C023  F0B7         	movff	?___flmul+1,atanf@s1+1
  9349  002E7A  C024  F0B8         	movff	?___flmul+2,atanf@s1+2
  9350  002E7E  C025  F0B9         	movff	?___flmul+3,atanf@s1+3
  9351  002E82  0E05               	movlw	low (_aT+4)
  9352  002E84  6EF6               	movwf	tblptrl,c
  9353  002E86  0E10               	movlw	high (_aT+4)
  9354  002E88  6EF7               	movwf	tblptrh,c
  9355  002E8A                     	if	0	;tblptru may be non-zero
  9356  002E8A                     	endif
  9357  002E8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9358  002E8A  0E00               	movlw	low (__mediumconst shr (0+16))
  9359  002E8C  6EF8               	movwf	tblptru,c
  9360  002E8E                     	endif
  9361  002E8E  0009               	tblrd		*+
  9362  002E90  CFF5 F032          	movff	tablat,___fladd@a
  9363  002E94  0009               	tblrd		*+
  9364  002E96  CFF5 F033          	movff	tablat,___fladd@a+1
  9365  002E9A  0009               	tblrd		*+
  9366  002E9C  CFF5 F034          	movff	tablat,___fladd@a+2
  9367  002EA0  000A               	tblrd		*-
  9368  002EA2  CFF5 F035          	movff	tablat,___fladd@a+3
  9369  002EA6  C0CA  F026         	movff	atanf@w,___flmul@a
  9370  002EAA  C0CB  F027         	movff	atanf@w+1,___flmul@a+1
  9371  002EAE  C0CC  F028         	movff	atanf@w+2,___flmul@a+2
  9372  002EB2  C0CD  F029         	movff	atanf@w+3,___flmul@a+3
  9373  002EB6  0E0D               	movlw	low (_aT+12)
  9374  002EB8  6EF6               	movwf	tblptrl,c
  9375  002EBA  0E10               	movlw	high (_aT+12)
  9376  002EBC  6EF7               	movwf	tblptrh,c
  9377  002EBE                     	if	0	;tblptru may be non-zero
  9378  002EBE                     	endif
  9379  002EBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9380  002EBE  0E00               	movlw	low (__mediumconst shr (0+16))
  9381  002EC0  6EF8               	movwf	tblptru,c
  9382  002EC2                     	endif
  9383  002EC2  0009               	tblrd		*+
  9384  002EC4  CFF5 F022          	movff	tablat,___flmul@b
  9385  002EC8  0009               	tblrd		*+
  9386  002ECA  CFF5 F023          	movff	tablat,___flmul@b+1
  9387  002ECE  0009               	tblrd		*+
  9388  002ED0  CFF5 F024          	movff	tablat,___flmul@b+2
  9389  002ED4  000A               	tblrd		*-
  9390  002ED6  CFF5 F025          	movff	tablat,___flmul@b+3
  9391  002EDA  EC0A  F021         	call	___flmul	;wreg free
  9392  002EDE  C022  F02E         	movff	?___flmul,___fladd@b
  9393  002EE2  C023  F02F         	movff	?___flmul+1,___fladd@b+1
  9394  002EE6  C024  F030         	movff	?___flmul+2,___fladd@b+2
  9395  002EEA  C025  F031         	movff	?___flmul+3,___fladd@b+3
  9396  002EEE  EC57  F01C         	call	___fladd	;wreg free
  9397  002EF2  C02E  F0C2         	movff	?___fladd,_atanf$2621
  9398  002EF6  C02F  F0C3         	movff	?___fladd+1,_atanf$2621+1
  9399  002EFA  C030  F0C4         	movff	?___fladd+2,_atanf$2621+2
  9400  002EFE  C031  F0C5         	movff	?___fladd+3,_atanf$2621+3
  9401  002F02  C0C2  F022         	movff	_atanf$2621,___flmul@b
  9402  002F06  C0C3  F023         	movff	_atanf$2621+1,___flmul@b+1
  9403  002F0A  C0C4  F024         	movff	_atanf$2621+2,___flmul@b+2
  9404  002F0E  C0C5  F025         	movff	_atanf$2621+3,___flmul@b+3
  9405  002F12  C0CA  F026         	movff	atanf@w,___flmul@a
  9406  002F16  C0CB  F027         	movff	atanf@w+1,___flmul@a+1
  9407  002F1A  C0CC  F028         	movff	atanf@w+2,___flmul@a+2
  9408  002F1E  C0CD  F029         	movff	atanf@w+3,___flmul@a+3
  9409  002F22  EC0A  F021         	call	___flmul	;wreg free
  9410  002F26  C022  F0BA         	movff	?___flmul,atanf@s2
  9411  002F2A  C023  F0BB         	movff	?___flmul+1,atanf@s2+1
  9412  002F2E  C024  F0BC         	movff	?___flmul+2,atanf@s2+2
  9413  002F32  C025  F0BD         	movff	?___flmul+3,atanf@s2+3
  9414  002F36  0100               	movlb	0	; () banked
  9415  002F38  BFCF               	btfsc	(atanf@id+1)& (0+255),7,b
  9416  002F3A  EFA3  F017         	goto	u8390
  9417  002F3E  EFA1  F017         	goto	u8391
  9418  002F42                     u8391:
  9419  002F42  EFEB  F017         	goto	l7694
  9420  002F46                     u8390:
  9421  002F46                     
  9422                           ; BSR set to: 0
  9423  002F46  C09E  F026         	movff	atanf@x,___flmul@a
  9424  002F4A  C09F  F027         	movff	atanf@x+1,___flmul@a+1
  9425  002F4E  C0A0  F028         	movff	atanf@x+2,___flmul@a+2
  9426  002F52  C0A1  F029         	movff	atanf@x+3,___flmul@a+3
  9427  002F56  C0BA  F032         	movff	atanf@s2,___fladd@a
  9428  002F5A  C0BB  F033         	movff	atanf@s2+1,___fladd@a+1
  9429  002F5E  C0BC  F034         	movff	atanf@s2+2,___fladd@a+2
  9430  002F62  C0BD  F035         	movff	atanf@s2+3,___fladd@a+3
  9431  002F66  C0B6  F02E         	movff	atanf@s1,___fladd@b
  9432  002F6A  C0B7  F02F         	movff	atanf@s1+1,___fladd@b+1
  9433  002F6E  C0B8  F030         	movff	atanf@s1+2,___fladd@b+2
  9434  002F72  C0B9  F031         	movff	atanf@s1+3,___fladd@b+3
  9435  002F76  EC57  F01C         	call	___fladd	;wreg free
  9436  002F7A  C02E  F022         	movff	?___fladd,___flmul@b
  9437  002F7E  C02F  F023         	movff	?___fladd+1,___flmul@b+1
  9438  002F82  C030  F024         	movff	?___fladd+2,___flmul@b+2
  9439  002F86  C031  F025         	movff	?___fladd+3,___flmul@b+3
  9440  002F8A  EC0A  F021         	call	___flmul	;wreg free
  9441  002F8E  C022  F0C6         	movff	?___flmul,_atanf$2623
  9442  002F92  C023  F0C7         	movff	?___flmul+1,_atanf$2623+1
  9443  002F96  C024  F0C8         	movff	?___flmul+2,_atanf$2623+2
  9444  002F9A  C025  F0C9         	movff	?___flmul+3,_atanf$2623+3
  9445  002F9E  C09E  F075         	movff	atanf@x,___flsub@b
  9446  002FA2  C09F  F076         	movff	atanf@x+1,___flsub@b+1
  9447  002FA6  C0A0  F077         	movff	atanf@x+2,___flsub@b+2
  9448  002FAA  C0A1  F078         	movff	atanf@x+3,___flsub@b+3
  9449  002FAE  C0C6  F079         	movff	_atanf$2623,___flsub@a
  9450  002FB2  C0C7  F07A         	movff	_atanf$2623+1,___flsub@a+1
  9451  002FB6  C0C8  F07B         	movff	_atanf$2623+2,___flsub@a+2
  9452  002FBA  C0C9  F07C         	movff	_atanf$2623+3,___flsub@a+3
  9453  002FBE  EC3E  F030         	call	___flsub	;wreg free
  9454  002FC2  C075  F09E         	movff	?___flsub,?_atanf
  9455  002FC6  C076  F09F         	movff	?___flsub+1,?_atanf+1
  9456  002FCA  C077  F0A0         	movff	?___flsub+2,?_atanf+2
  9457  002FCE  C078  F0A1         	movff	?___flsub+3,?_atanf+3
  9458  002FD2  EFA3  F018         	goto	l1078
  9459  002FD6                     l7694:
  9460                           
  9461                           ; BSR set to: 0
  9462  002FD6  C09E  F026         	movff	atanf@x,___flmul@a
  9463  002FDA  C09F  F027         	movff	atanf@x+1,___flmul@a+1
  9464  002FDE  C0A0  F028         	movff	atanf@x+2,___flmul@a+2
  9465  002FE2  C0A1  F029         	movff	atanf@x+3,___flmul@a+3
  9466  002FE6  C0BA  F032         	movff	atanf@s2,___fladd@a
  9467  002FEA  C0BB  F033         	movff	atanf@s2+1,___fladd@a+1
  9468  002FEE  C0BC  F034         	movff	atanf@s2+2,___fladd@a+2
  9469  002FF2  C0BD  F035         	movff	atanf@s2+3,___fladd@a+3
  9470  002FF6  C0B6  F02E         	movff	atanf@s1,___fladd@b
  9471  002FFA  C0B7  F02F         	movff	atanf@s1+1,___fladd@b+1
  9472  002FFE  C0B8  F030         	movff	atanf@s1+2,___fladd@b+2
  9473  003002  C0B9  F031         	movff	atanf@s1+3,___fladd@b+3
  9474  003006  EC57  F01C         	call	___fladd	;wreg free
  9475  00300A  C02E  F022         	movff	?___fladd,___flmul@b
  9476  00300E  C02F  F023         	movff	?___fladd+1,___flmul@b+1
  9477  003012  C030  F024         	movff	?___fladd+2,___flmul@b+2
  9478  003016  C031  F025         	movff	?___fladd+3,___flmul@b+3
  9479  00301A  EC0A  F021         	call	___flmul	;wreg free
  9480  00301E  C022  F0C6         	movff	?___flmul,_atanf$2623
  9481  003022  C023  F0C7         	movff	?___flmul+1,_atanf$2623+1
  9482  003026  C024  F0C8         	movff	?___flmul+2,_atanf$2623+2
  9483  00302A  C025  F0C9         	movff	?___flmul+3,_atanf$2623+3
  9484  00302E  C0CE  F0A2         	movff	atanf@id,??_atanf
  9485  003032  C0CF  F0A3         	movff	atanf@id+1,??_atanf+1
  9486  003036  0100               	movlb	0	; () banked
  9487  003038  90D8               	bcf	status,0,c
  9488  00303A  37A2               	rlcf	??_atanf& (0+255),f,b
  9489  00303C  37A3               	rlcf	(??_atanf+1)& (0+255),f,b
  9490  00303E  90D8               	bcf	status,0,c
  9491  003040  37A2               	rlcf	??_atanf& (0+255),f,b
  9492  003042  37A3               	rlcf	(??_atanf+1)& (0+255),f,b
  9493  003044  0E15               	movlw	low _atanlo
  9494  003046  25A2               	addwf	??_atanf& (0+255),w,b
  9495  003048  6EF6               	movwf	tblptrl,c
  9496  00304A  0E10               	movlw	high _atanlo
  9497  00304C  21A3               	addwfc	(??_atanf+1)& (0+255),w,b
  9498  00304E  6EF7               	movwf	tblptrh,c
  9499  003050                     	if	1	;There are 3 active tblptr bytes
  9500  003050  6AF8               	clrf	tblptru,c
  9501  003052  0E00               	movlw	low (__mediumconst shr (0+16))
  9502  003054  22F8               	addwfc	tblptru,f,c
  9503  003056                     	endif
  9504  003056  0009               	tblrd		*+
  9505  003058  CFF5 F079          	movff	tablat,___flsub@a
  9506  00305C  0009               	tblrd		*+
  9507  00305E  CFF5 F07A          	movff	tablat,___flsub@a+1
  9508  003062  0009               	tblrd		*+
  9509  003064  CFF5 F07B          	movff	tablat,___flsub@a+2
  9510  003068  000A               	tblrd		*-
  9511  00306A  CFF5 F07C          	movff	tablat,___flsub@a+3
  9512  00306E  C0C6  F075         	movff	_atanf$2623,___flsub@b
  9513  003072  C0C7  F076         	movff	_atanf$2623+1,___flsub@b+1
  9514  003076  C0C8  F077         	movff	_atanf$2623+2,___flsub@b+2
  9515  00307A  C0C9  F078         	movff	_atanf$2623+3,___flsub@b+3
  9516  00307E  EC3E  F030         	call	___flsub	;wreg free
  9517  003082  C075  F0AE         	movff	?___flsub,_atanf$2624
  9518  003086  C076  F0AF         	movff	?___flsub+1,_atanf$2624+1
  9519  00308A  C077  F0B0         	movff	?___flsub+2,_atanf$2624+2
  9520  00308E  C078  F0B1         	movff	?___flsub+3,_atanf$2624+3
  9521  003092  C09E  F079         	movff	atanf@x,___flsub@a
  9522  003096  C09F  F07A         	movff	atanf@x+1,___flsub@a+1
  9523  00309A  C0A0  F07B         	movff	atanf@x+2,___flsub@a+2
  9524  00309E  C0A1  F07C         	movff	atanf@x+3,___flsub@a+3
  9525  0030A2  C0AE  F075         	movff	_atanf$2624,___flsub@b
  9526  0030A6  C0AF  F076         	movff	_atanf$2624+1,___flsub@b+1
  9527  0030AA  C0B0  F077         	movff	_atanf$2624+2,___flsub@b+2
  9528  0030AE  C0B1  F078         	movff	_atanf$2624+3,___flsub@b+3
  9529  0030B2  EC3E  F030         	call	___flsub	;wreg free
  9530  0030B6  C075  F0B2         	movff	?___flsub,_atanf$2625
  9531  0030BA  C076  F0B3         	movff	?___flsub+1,_atanf$2625+1
  9532  0030BE  C077  F0B4         	movff	?___flsub+2,_atanf$2625+2
  9533  0030C2  C078  F0B5         	movff	?___flsub+3,_atanf$2625+3
  9534  0030C6  C0CE  F0A2         	movff	atanf@id,??_atanf
  9535  0030CA  C0CF  F0A3         	movff	atanf@id+1,??_atanf+1
  9536  0030CE  0100               	movlb	0	; () banked
  9537  0030D0  90D8               	bcf	status,0,c
  9538  0030D2  37A2               	rlcf	??_atanf& (0+255),f,b
  9539  0030D4  37A3               	rlcf	(??_atanf+1)& (0+255),f,b
  9540  0030D6  90D8               	bcf	status,0,c
  9541  0030D8  37A2               	rlcf	??_atanf& (0+255),f,b
  9542  0030DA  37A3               	rlcf	(??_atanf+1)& (0+255),f,b
  9543  0030DC  0E25               	movlw	low _atanhi
  9544  0030DE  25A2               	addwf	??_atanf& (0+255),w,b
  9545  0030E0  6EF6               	movwf	tblptrl,c
  9546  0030E2  0E10               	movlw	high _atanhi
  9547  0030E4  21A3               	addwfc	(??_atanf+1)& (0+255),w,b
  9548  0030E6  6EF7               	movwf	tblptrh,c
  9549  0030E8                     	if	1	;There are 3 active tblptr bytes
  9550  0030E8  6AF8               	clrf	tblptru,c
  9551  0030EA  0E00               	movlw	low (__mediumconst shr (0+16))
  9552  0030EC  22F8               	addwfc	tblptru,f,c
  9553  0030EE                     	endif
  9554  0030EE  0009               	tblrd		*+
  9555  0030F0  CFF5 F075          	movff	tablat,___flsub@b
  9556  0030F4  0009               	tblrd		*+
  9557  0030F6  CFF5 F076          	movff	tablat,___flsub@b+1
  9558  0030FA  0009               	tblrd		*+
  9559  0030FC  CFF5 F077          	movff	tablat,___flsub@b+2
  9560  003100  000A               	tblrd		*-
  9561  003102  CFF5 F078          	movff	tablat,___flsub@b+3
  9562  003106  C0B2  F079         	movff	_atanf$2625,___flsub@a
  9563  00310A  C0B3  F07A         	movff	_atanf$2625+1,___flsub@a+1
  9564  00310E  C0B4  F07B         	movff	_atanf$2625+2,___flsub@a+2
  9565  003112  C0B5  F07C         	movff	_atanf$2625+3,___flsub@a+3
  9566  003116  EC3E  F030         	call	___flsub	;wreg free
  9567  00311A  C075  F0D0         	movff	?___flsub,atanf@z
  9568  00311E  C076  F0D1         	movff	?___flsub+1,atanf@z+1
  9569  003122  C077  F0D2         	movff	?___flsub+2,atanf@z+2
  9570  003126  C078  F0D3         	movff	?___flsub+3,atanf@z+3
  9571  00312A  0100               	movlb	0	; () banked
  9572  00312C  51BE               	movf	atanf@sign& (0+255),w,b
  9573  00312E  11BF               	iorwf	(atanf@sign+1)& (0+255),w,b
  9574  003130  11C0               	iorwf	(atanf@sign+2)& (0+255),w,b
  9575  003132  11C1               	iorwf	(atanf@sign+3)& (0+255),w,b
  9576  003134  A4D8               	btfss	status,2,c
  9577  003136  EF9F  F018         	goto	u8401
  9578  00313A  EFA1  F018         	goto	u8400
  9579  00313E                     u8401:
  9580  00313E  EF0B  F015         	goto	l7638
  9581  003142                     u8400:
  9582  003142  EF01  F015         	goto	l7636
  9583  003146                     l1078:
  9584  003146  0012               	return		;funcret
  9585  003148                     __end_of_atanf:
  9586                           	callstack 0
  9587                           
  9588 ;; *************** function _fabsf *****************
  9589 ;; Defined at:
  9590 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fabsf.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  x               4   54[BANK0 ] float 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  u               4   58[BANK0 ] struct .
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  4   54[BANK0 ] float 
  9597 ;; Registers used:
  9598 ;;		status,2, status,0
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9605 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9607 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9608 ;;Total ram usage:        8 bytes
  9609 ;; Hardware stack levels used: 1
  9610 ;; Hardware stack levels required when called: 3
  9611 ;; This function calls:
  9612 ;;		Nothing
  9613 ;; This function is called by:
  9614 ;;		_atan2f
  9615 ;;		_atanf
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619                           	psect	text27
  9620  00626C                     __ptext27:
  9621                           	callstack 0
  9622  00626C                     _fabsf:
  9623                           	callstack 25
  9624  00626C  C1A6  F09A         	movff	fabsf@F465,fabsf@u
  9625  006270  C1A7  F09B         	movff	fabsf@F465+1,fabsf@u+1
  9626  006274  C1A8  F09C         	movff	fabsf@F465+2,fabsf@u+2
  9627  006278  C1A9  F09D         	movff	fabsf@F465+3,fabsf@u+3
  9628  00627C  C096  F09A         	movff	fabsf@x,fabsf@u
  9629  006280  C097  F09B         	movff	fabsf@x+1,fabsf@u+1
  9630  006284  C098  F09C         	movff	fabsf@x+2,fabsf@u+2
  9631  006288  C099  F09D         	movff	fabsf@x+3,fabsf@u+3
  9632  00628C  0100               	movlb	0	; () banked
  9633  00628E  9F9D               	bcf	(fabsf@u+3)& (0+255),7,b
  9634  006290                     
  9635                           ; BSR set to: 0
  9636  006290  C09A  F096         	movff	fabsf@u,?_fabsf
  9637  006294  C09B  F097         	movff	fabsf@u+1,?_fabsf+1
  9638  006298  C09C  F098         	movff	fabsf@u+2,?_fabsf+2
  9639  00629C  C09D  F099         	movff	fabsf@u+3,?_fabsf+3
  9640  0062A0                     
  9641                           ; BSR set to: 0
  9642  0062A0  0012               	return		;funcret
  9643  0062A2                     __end_of_fabsf:
  9644                           	callstack 0
  9645                           
  9646 ;; *************** function ___fpclassifyf *****************
  9647 ;; Defined at:
  9648 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  x               4   19[COMRAM] float 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;  u               4   29[COMRAM] struct .
  9653 ;;  e               2   27[COMRAM] int 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  2   19[COMRAM] int 
  9656 ;; Registers used:
  9657 ;;		wreg, status,2, status,0
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9664 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9666 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9667 ;;Total ram usage:       14 bytes
  9668 ;; Hardware stack levels used: 1
  9669 ;; Hardware stack levels required when called: 3
  9670 ;; This function calls:
  9671 ;;		Nothing
  9672 ;; This function is called by:
  9673 ;;		_atan2f
  9674 ;;		_atanf
  9675 ;;		_efgtoa
  9676 ;; This function uses a non-reentrant model
  9677 ;;
  9678                           
  9679                           	psect	text28
  9680  00556E                     __ptext28:
  9681                           	callstack 0
  9682  00556E                     ___fpclassifyf:
  9683                           	callstack 22
  9684  00556E  C1AA  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9685  005572  C1AB  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9686  005576  C1AC  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9687  00557A  C1AD  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9688  00557E  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  9689  005582  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9690  005586  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9691  00558A  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9692  00558E  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  9693  005592  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9694  005596  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9695  00559A  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9696  00559E  0E18               	movlw	24
  9697  0055A0  EFD7  F02A         	goto	u7200
  9698  0055A4                     u7205:
  9699  0055A4  90D8               	bcf	status,0,c
  9700  0055A6  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  9701  0055A8  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  9702  0055AA  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  9703  0055AC  3218               	rrcf	??___fpclassifyf^0,f,c
  9704  0055AE                     u7200:
  9705  0055AE  2EE8               	decfsz	wreg,f,c
  9706  0055B0  EFD2  F02A         	goto	u7205
  9707  0055B4  5018               	movf	??___fpclassifyf^0,w,c
  9708  0055B6  6E1C               	movwf	___fpclassifyf@e^0,c
  9709  0055B8  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  9710  0055BA  501C               	movf	___fpclassifyf@e^0,w,c
  9711  0055BC  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9712  0055BE  A4D8               	btfss	status,2,c
  9713  0055C0  EFE4  F02A         	goto	u7211
  9714  0055C4  EFE6  F02A         	goto	u7210
  9715  0055C8                     u7211:
  9716  0055C8  EF06  F02B         	goto	l7064
  9717  0055CC                     u7210:
  9718  0055CC  90D8               	bcf	status,0,c
  9719  0055CE  341E               	rlcf	___fpclassifyf@u^0,w,c
  9720  0055D0  6E18               	movwf	??___fpclassifyf^0,c
  9721  0055D2  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9722  0055D4  6E19               	movwf	(??___fpclassifyf+1)^0,c
  9723  0055D6  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9724  0055D8  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  9725  0055DA  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9726  0055DC  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  9727  0055DE  5018               	movf	??___fpclassifyf^0,w,c
  9728  0055E0  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  9729  0055E2  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  9730  0055E4  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  9731  0055E6  A4D8               	btfss	status,2,c
  9732  0055E8  EFF8  F02A         	goto	u7221
  9733  0055EC  EFFA  F02A         	goto	u7220
  9734  0055F0                     u7221:
  9735  0055F0  EF00  F02B         	goto	l7060
  9736  0055F4                     u7220:
  9737  0055F4  0E00               	movlw	0
  9738  0055F6  6E15               	movwf	(?___fpclassifyf+1)^0,c
  9739  0055F8  0E02               	movlw	2
  9740  0055FA  6E14               	movwf	?___fpclassifyf^0,c
  9741  0055FC  EF35  F02B         	goto	l1060
  9742  005600                     l7060:
  9743  005600  0E00               	movlw	0
  9744  005602  6E15               	movwf	(?___fpclassifyf+1)^0,c
  9745  005604  0E03               	movlw	3
  9746  005606  6E14               	movwf	?___fpclassifyf^0,c
  9747  005608  EF35  F02B         	goto	l1060
  9748  00560C                     l7064:
  9749  00560C  281C               	incf	___fpclassifyf@e^0,w,c
  9750  00560E  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9751  005610  A4D8               	btfss	status,2,c
  9752  005612  EF0D  F02B         	goto	u7231
  9753  005616  EF0F  F02B         	goto	u7230
  9754  00561A                     u7231:
  9755  00561A  EF31  F02B         	goto	l7070
  9756  00561E                     u7230:
  9757  00561E  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  9758  005622  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9759  005626  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9760  00562A  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9761  00562E  0E09               	movlw	9
  9762  005630                     u7245:
  9763  005630  90D8               	bcf	status,0,c
  9764  005632  3618               	rlcf	??___fpclassifyf^0,f,c
  9765  005634  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  9766  005636  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  9767  005638  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  9768  00563A  2EE8               	decfsz	wreg,f,c
  9769  00563C  EF18  F02B         	goto	u7245
  9770  005640  5018               	movf	??___fpclassifyf^0,w,c
  9771  005642  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  9772  005644  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  9773  005646  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  9774  005648  B4D8               	btfsc	status,2,c
  9775  00564A  EF29  F02B         	goto	u7251
  9776  00564E  EF2C  F02B         	goto	u7250
  9777  005652                     u7251:
  9778  005652  0E01               	movlw	1
  9779  005654  EF2D  F02B         	goto	u7260
  9780  005658                     u7250:
  9781  005658  0E00               	movlw	0
  9782  00565A                     u7260:
  9783  00565A  6E14               	movwf	?___fpclassifyf^0,c
  9784  00565C  6A15               	clrf	(?___fpclassifyf+1)^0,c
  9785  00565E  EF35  F02B         	goto	l1060
  9786  005662                     l7070:
  9787  005662  0E00               	movlw	0
  9788  005664  6E15               	movwf	(?___fpclassifyf+1)^0,c
  9789  005666  0E04               	movlw	4
  9790  005668  6E14               	movwf	?___fpclassifyf^0,c
  9791  00566A                     l1060:
  9792  00566A  0012               	return		;funcret
  9793  00566C                     __end_of___fpclassifyf:
  9794                           	callstack 0
  9795                           
  9796 ;; *************** function ___flsub *****************
  9797 ;; Defined at:
  9798 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  b               4   21[BANK0 ] int 
  9801 ;;  a               4   25[BANK0 ] int 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;		None
  9804 ;; Return value:  Size  Location     Type
  9805 ;;                  4   21[BANK0 ] int 
  9806 ;; Registers used:
  9807 ;;		wreg, status,2, status,0, cstack
  9808 ;; Tracked objects:
  9809 ;;		On entry : 0/0
  9810 ;;		On exit  : 0/0
  9811 ;;		Unchanged: 0/0
  9812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9813 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9816 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9817 ;;Total ram usage:        8 bytes
  9818 ;; Hardware stack levels used: 1
  9819 ;; Hardware stack levels required when called: 4
  9820 ;; This function calls:
  9821 ;;		___fladd
  9822 ;; This function is called by:
  9823 ;;		_MPU6050_Read
  9824 ;;		_atan2f
  9825 ;;		_atanf
  9826 ;;		_efgtoa
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           	psect	text29
  9831  00607C                     __ptext29:
  9832                           	callstack 0
  9833  00607C                     ___flsub:
  9834                           	callstack 21
  9835  00607C  0E00               	movlw	0
  9836  00607E  0100               	movlb	0	; () banked
  9837  006080  1B79               	xorwf	___flsub@a& (0+255),f,b
  9838  006082  0E00               	movlw	0
  9839  006084  1B7A               	xorwf	(___flsub@a+1)& (0+255),f,b
  9840  006086  0E00               	movlw	0
  9841  006088  1B7B               	xorwf	(___flsub@a+2)& (0+255),f,b
  9842  00608A  0E80               	movlw	128
  9843  00608C  1B7C               	xorwf	(___flsub@a+3)& (0+255),f,b
  9844  00608E                     
  9845                           ; BSR set to: 0
  9846  00608E  C075  F02E         	movff	___flsub@b,___fladd@b
  9847  006092  C076  F02F         	movff	___flsub@b+1,___fladd@b+1
  9848  006096  C077  F030         	movff	___flsub@b+2,___fladd@b+2
  9849  00609A  C078  F031         	movff	___flsub@b+3,___fladd@b+3
  9850  00609E  C079  F032         	movff	___flsub@a,___fladd@a
  9851  0060A2  C07A  F033         	movff	___flsub@a+1,___fladd@a+1
  9852  0060A6  C07B  F034         	movff	___flsub@a+2,___fladd@a+2
  9853  0060AA  C07C  F035         	movff	___flsub@a+3,___fladd@a+3
  9854  0060AE  EC57  F01C         	call	___fladd	;wreg free
  9855  0060B2  C02E  F075         	movff	?___fladd,?___flsub
  9856  0060B6  C02F  F076         	movff	?___fladd+1,?___flsub+1
  9857  0060BA  C030  F077         	movff	?___fladd+2,?___flsub+2
  9858  0060BE  C031  F078         	movff	?___fladd+3,?___flsub+3
  9859  0060C2  0012               	return		;funcret
  9860  0060C4                     __end_of___flsub:
  9861                           	callstack 0
  9862                           
  9863 ;; *************** function ___fladd *****************
  9864 ;; Defined at:
  9865 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9866 ;; Parameters:    Size  Location     Type
  9867 ;;  b               4   45[COMRAM] int 
  9868 ;;  a               4   49[COMRAM] int 
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;  grs             1   20[BANK0 ] unsigned char 
  9871 ;;  bexp            1   19[BANK0 ] unsigned char 
  9872 ;;  aexp            1   18[BANK0 ] unsigned char 
  9873 ;;  signs           1   17[BANK0 ] unsigned char 
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  4   45[COMRAM] unsigned char 
  9876 ;; Registers used:
  9877 ;;		wreg, status,2, status,0
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9883 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9884 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9885 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9886 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9887 ;;Total ram usage:       16 bytes
  9888 ;; Hardware stack levels used: 1
  9889 ;; Hardware stack levels required when called: 3
  9890 ;; This function calls:
  9891 ;;		Nothing
  9892 ;; This function is called by:
  9893 ;;		_MPU6050_Read
  9894 ;;		___flsub
  9895 ;;		_atan2f
  9896 ;;		_atanf
  9897 ;;		_efgtoa
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text30
  9902  0038AE                     __ptext30:
  9903                           	callstack 0
  9904  0038AE                     ___fladd:
  9905                           	callstack 21
  9906  0038AE  5031               	movf	(___fladd@b+3)^0,w,c
  9907  0038B0  0B80               	andlw	128
  9908  0038B2  0100               	movlb	0	; () banked
  9909  0038B4  6F71               	movwf	___fladd@signs& (0+255),b
  9910  0038B6  5031               	movf	(___fladd@b+3)^0,w,c
  9911  0038B8  2431               	addwf	(___fladd@b+3)^0,w,c
  9912  0038BA  6F73               	movwf	___fladd@bexp& (0+255),b
  9913  0038BC                     
  9914                           ; BSR set to: 0
  9915  0038BC  AE30               	btfss	(___fladd@b+2)^0,7,c
  9916  0038BE  EF63  F01C         	goto	u6071
  9917  0038C2  EF65  F01C         	goto	u6070
  9918  0038C6                     u6071:
  9919  0038C6  EF66  F01C         	goto	l6384
  9920  0038CA                     u6070:
  9921  0038CA                     
  9922                           ; BSR set to: 0
  9923  0038CA  8173               	bsf	___fladd@bexp& (0+255),0,b
  9924  0038CC                     l6384:
  9925                           
  9926                           ; BSR set to: 0
  9927  0038CC  5173               	movf	___fladd@bexp& (0+255),w,b
  9928  0038CE  B4D8               	btfsc	status,2,c
  9929  0038D0  EF6C  F01C         	goto	u6081
  9930  0038D4  EF6E  F01C         	goto	u6080
  9931  0038D8                     u6081:
  9932  0038D8  EF83  F01C         	goto	l6394
  9933  0038DC                     u6080:
  9934  0038DC                     
  9935                           ; BSR set to: 0
  9936  0038DC  2973               	incf	___fladd@bexp& (0+255),w,b
  9937  0038DE  A4D8               	btfss	status,2,c
  9938  0038E0  EF74  F01C         	goto	u6091
  9939  0038E4  EF76  F01C         	goto	u6090
  9940  0038E8                     u6091:
  9941  0038E8  EF7E  F01C         	goto	l6390
  9942  0038EC                     u6090:
  9943  0038EC                     
  9944                           ; BSR set to: 0
  9945  0038EC  0E00               	movlw	0
  9946  0038EE  6E2E               	movwf	___fladd@b^0,c
  9947  0038F0  0E00               	movlw	0
  9948  0038F2  6E2F               	movwf	(___fladd@b+1)^0,c
  9949  0038F4  0E00               	movlw	0
  9950  0038F6  6E30               	movwf	(___fladd@b+2)^0,c
  9951  0038F8  0E00               	movlw	0
  9952  0038FA  6E31               	movwf	(___fladd@b+3)^0,c
  9953  0038FC                     l6390:
  9954                           
  9955                           ; BSR set to: 0
  9956  0038FC  8E30               	bsf	(___fladd@b+2)^0,7,c
  9957  0038FE                     
  9958                           ; BSR set to: 0
  9959  0038FE  0E00               	movlw	0
  9960  003900  6E31               	movwf	(___fladd@b+3)^0,c
  9961  003902  EF8B  F01C         	goto	l6396
  9962  003906                     l6394:
  9963                           
  9964                           ; BSR set to: 0
  9965  003906  0E00               	movlw	0
  9966  003908  6E2E               	movwf	___fladd@b^0,c
  9967  00390A  0E00               	movlw	0
  9968  00390C  6E2F               	movwf	(___fladd@b+1)^0,c
  9969  00390E  0E00               	movlw	0
  9970  003910  6E30               	movwf	(___fladd@b+2)^0,c
  9971  003912  0E00               	movlw	0
  9972  003914  6E31               	movwf	(___fladd@b+3)^0,c
  9973  003916                     l6396:
  9974                           
  9975                           ; BSR set to: 0
  9976  003916  5035               	movf	(___fladd@a+3)^0,w,c
  9977  003918  0B80               	andlw	128
  9978  00391A  6F72               	movwf	___fladd@aexp& (0+255),b
  9979  00391C                     
  9980                           ; BSR set to: 0
  9981  00391C  5171               	movf	___fladd@signs& (0+255),w,b
  9982  00391E  1972               	xorwf	___fladd@aexp& (0+255),w,b
  9983  003920  B4D8               	btfsc	status,2,c
  9984  003922  EF95  F01C         	goto	u6101
  9985  003926  EF97  F01C         	goto	u6100
  9986  00392A                     u6101:
  9987  00392A  EF98  F01C         	goto	l6402
  9988  00392E                     u6100:
  9989  00392E                     
  9990                           ; BSR set to: 0
  9991  00392E  8D71               	bsf	___fladd@signs& (0+255),6,b
  9992  003930                     l6402:
  9993                           
  9994                           ; BSR set to: 0
  9995  003930  5035               	movf	(___fladd@a+3)^0,w,c
  9996  003932  2435               	addwf	(___fladd@a+3)^0,w,c
  9997  003934  6F72               	movwf	___fladd@aexp& (0+255),b
  9998  003936                     
  9999                           ; BSR set to: 0
 10000  003936  AE34               	btfss	(___fladd@a+2)^0,7,c
 10001  003938  EFA0  F01C         	goto	u6111
 10002  00393C  EFA2  F01C         	goto	u6110
 10003  003940                     u6111:
 10004  003940  EFA3  F01C         	goto	l6408
 10005  003944                     u6110:
 10006  003944                     
 10007                           ; BSR set to: 0
 10008  003944  8172               	bsf	___fladd@aexp& (0+255),0,b
 10009  003946                     l6408:
 10010                           
 10011                           ; BSR set to: 0
 10012  003946  5172               	movf	___fladd@aexp& (0+255),w,b
 10013  003948  B4D8               	btfsc	status,2,c
 10014  00394A  EFA9  F01C         	goto	u6121
 10015  00394E  EFAB  F01C         	goto	u6120
 10016  003952                     u6121:
 10017  003952  EFC0  F01C         	goto	l6418
 10018  003956                     u6120:
 10019  003956                     
 10020                           ; BSR set to: 0
 10021  003956  2972               	incf	___fladd@aexp& (0+255),w,b
 10022  003958  A4D8               	btfss	status,2,c
 10023  00395A  EFB1  F01C         	goto	u6131
 10024  00395E  EFB3  F01C         	goto	u6130
 10025  003962                     u6131:
 10026  003962  EFBB  F01C         	goto	l6414
 10027  003966                     u6130:
 10028  003966                     
 10029                           ; BSR set to: 0
 10030  003966  0E00               	movlw	0
 10031  003968  6E32               	movwf	___fladd@a^0,c
 10032  00396A  0E00               	movlw	0
 10033  00396C  6E33               	movwf	(___fladd@a+1)^0,c
 10034  00396E  0E00               	movlw	0
 10035  003970  6E34               	movwf	(___fladd@a+2)^0,c
 10036  003972  0E00               	movlw	0
 10037  003974  6E35               	movwf	(___fladd@a+3)^0,c
 10038  003976                     l6414:
 10039                           
 10040                           ; BSR set to: 0
 10041  003976  8E34               	bsf	(___fladd@a+2)^0,7,c
 10042  003978                     
 10043                           ; BSR set to: 0
 10044  003978  0E00               	movlw	0
 10045  00397A  6E35               	movwf	(___fladd@a+3)^0,c
 10046  00397C  EFC8  F01C         	goto	l6420
 10047  003980                     l6418:
 10048                           
 10049                           ; BSR set to: 0
 10050  003980  0E00               	movlw	0
 10051  003982  6E32               	movwf	___fladd@a^0,c
 10052  003984  0E00               	movlw	0
 10053  003986  6E33               	movwf	(___fladd@a+1)^0,c
 10054  003988  0E00               	movlw	0
 10055  00398A  6E34               	movwf	(___fladd@a+2)^0,c
 10056  00398C  0E00               	movlw	0
 10057  00398E  6E35               	movwf	(___fladd@a+3)^0,c
 10058  003990                     l6420:
 10059                           
 10060                           ; BSR set to: 0
 10061  003990  5173               	movf	___fladd@bexp& (0+255),w,b
 10062  003992  5D72               	subwf	___fladd@aexp& (0+255),w,b
 10063  003994  B0D8               	btfsc	status,0,c
 10064  003996  EFCF  F01C         	goto	u6141
 10065  00399A  EFD1  F01C         	goto	u6140
 10066  00399E                     u6141:
 10067  00399E  EFF8  F01C         	goto	l6456
 10068  0039A2                     u6140:
 10069  0039A2                     
 10070                           ; BSR set to: 0
 10071  0039A2  AD71               	btfss	___fladd@signs& (0+255),6,b
 10072  0039A4  EFD6  F01C         	goto	u6151
 10073  0039A8  EFD8  F01C         	goto	u6150
 10074  0039AC                     u6151:
 10075  0039AC  EFDA  F01C         	goto	l6426
 10076  0039B0                     u6150:
 10077  0039B0                     
 10078                           ; BSR set to: 0
 10079  0039B0  0E80               	movlw	128
 10080  0039B2  1B71               	xorwf	___fladd@signs& (0+255),f,b
 10081  0039B4                     l6426:
 10082                           
 10083                           ; BSR set to: 0
 10084  0039B4  C073  F074         	movff	___fladd@bexp,___fladd@grs
 10085  0039B8                     
 10086                           ; BSR set to: 0
 10087  0039B8  C072  F073         	movff	___fladd@aexp,___fladd@bexp
 10088  0039BC                     
 10089                           ; BSR set to: 0
 10090  0039BC  C074  F072         	movff	___fladd@grs,___fladd@aexp
 10091  0039C0                     
 10092                           ; BSR set to: 0
 10093  0039C0  C02E  F074         	movff	___fladd@b,___fladd@grs
 10094  0039C4                     
 10095                           ; BSR set to: 0
 10096  0039C4  C032  F02E         	movff	___fladd@a,___fladd@b
 10097  0039C8                     
 10098                           ; BSR set to: 0
 10099  0039C8  C074  F032         	movff	___fladd@grs,___fladd@a
 10100  0039CC                     
 10101                           ; BSR set to: 0
 10102  0039CC  C02F  F074         	movff	___fladd@b+1,___fladd@grs
 10103  0039D0                     
 10104                           ; BSR set to: 0
 10105  0039D0  C033  F02F         	movff	___fladd@a+1,___fladd@b+1
 10106  0039D4                     
 10107                           ; BSR set to: 0
 10108  0039D4  C074  F033         	movff	___fladd@grs,___fladd@a+1
 10109  0039D8                     
 10110                           ; BSR set to: 0
 10111  0039D8  C030  F074         	movff	___fladd@b+2,___fladd@grs
 10112  0039DC                     
 10113                           ; BSR set to: 0
 10114  0039DC  C034  F030         	movff	___fladd@a+2,___fladd@b+2
 10115  0039E0                     
 10116                           ; BSR set to: 0
 10117  0039E0  C074  F034         	movff	___fladd@grs,___fladd@a+2
 10118  0039E4                     
 10119                           ; BSR set to: 0
 10120  0039E4  C031  F074         	movff	___fladd@b+3,___fladd@grs
 10121  0039E8                     
 10122                           ; BSR set to: 0
 10123  0039E8  C035  F031         	movff	___fladd@a+3,___fladd@b+3
 10124  0039EC                     
 10125                           ; BSR set to: 0
 10126  0039EC  C074  F035         	movff	___fladd@grs,___fladd@a+3
 10127  0039F0                     l6456:
 10128                           
 10129                           ; BSR set to: 0
 10130  0039F0  0E00               	movlw	0
 10131  0039F2  6F74               	movwf	___fladd@grs& (0+255),b
 10132  0039F4                     
 10133                           ; BSR set to: 0
 10134  0039F4  5173               	movf	___fladd@bexp& (0+255),w,b
 10135  0039F6  C072  F06D         	movff	___fladd@aexp,??___fladd
 10136  0039FA  6B6E               	clrf	(??___fladd+1)& (0+255),b
 10137  0039FC  5F6D               	subwf	??___fladd& (0+255),f,b
 10138  0039FE  0E00               	movlw	0
 10139  003A00  5B6E               	subwfb	(??___fladd+1)& (0+255),f,b
 10140  003A02  BF6E               	btfsc	(??___fladd+1)& (0+255),7,b
 10141  003A04  EF0D  F01D         	goto	u6161
 10142  003A08  516E               	movf	(??___fladd+1)& (0+255),w,b
 10143  003A0A  E109               	bnz	u6160
 10144  003A0C  0E1A               	movlw	26
 10145  003A0E  5D6D               	subwf	??___fladd& (0+255),w,b
 10146  003A10  A0D8               	btfss	status,0,c
 10147  003A12  EF0D  F01D         	goto	u6161
 10148  003A16  EF0F  F01D         	goto	u6160
 10149  003A1A                     u6161:
 10150  003A1A  EF46  F01D         	goto	l845
 10151  003A1E                     u6160:
 10152  003A1E                     
 10153                           ; BSR set to: 0
 10154  003A1E  502E               	movf	___fladd@b^0,w,c
 10155  003A20  102F               	iorwf	(___fladd@b+1)^0,w,c
 10156  003A22  1030               	iorwf	(___fladd@b+2)^0,w,c
 10157  003A24  1031               	iorwf	(___fladd@b+3)^0,w,c
 10158  003A26  A4D8               	btfss	status,2,c
 10159  003A28  EF18  F01D         	goto	u6171
 10160  003A2C  EF1B  F01D         	goto	u6170
 10161  003A30                     u6171:
 10162  003A30  0E01               	movlw	1
 10163  003A32  EF1C  F01D         	goto	u6180
 10164  003A36                     u6170:
 10165  003A36  0E00               	movlw	0
 10166  003A38                     u6180:
 10167  003A38  6F74               	movwf	___fladd@grs& (0+255),b
 10168  003A3A                     
 10169                           ; BSR set to: 0
 10170  003A3A  0E00               	movlw	0
 10171  003A3C  6E2E               	movwf	___fladd@b^0,c
 10172  003A3E  0E00               	movlw	0
 10173  003A40  6E2F               	movwf	(___fladd@b+1)^0,c
 10174  003A42  0E00               	movlw	0
 10175  003A44  6E30               	movwf	(___fladd@b+2)^0,c
 10176  003A46  0E00               	movlw	0
 10177  003A48  6E31               	movwf	(___fladd@b+3)^0,c
 10178  003A4A                     
 10179                           ; BSR set to: 0
 10180  003A4A  C072  F073         	movff	___fladd@aexp,___fladd@bexp
 10181  003A4E  EF4F  F01D         	goto	l844
 10182  003A52                     l846:
 10183                           
 10184                           ; BSR set to: 0
 10185  003A52  A174               	btfss	___fladd@grs& (0+255),0,b
 10186  003A54  EF2E  F01D         	goto	u6191
 10187  003A58  EF30  F01D         	goto	u6190
 10188  003A5C                     u6191:
 10189  003A5C  EF36  F01D         	goto	l6468
 10190  003A60                     u6190:
 10191  003A60                     
 10192                           ; BSR set to: 0
 10193  003A60  90D8               	bcf	status,0,c
 10194  003A62  3174               	rrcf	___fladd@grs& (0+255),w,b
 10195  003A64  0901               	iorlw	1
 10196  003A66  6F74               	movwf	___fladd@grs& (0+255),b
 10197  003A68  EF38  F01D         	goto	l6470
 10198  003A6C                     l6468:
 10199                           
 10200                           ; BSR set to: 0
 10201  003A6C  90D8               	bcf	status,0,c
 10202  003A6E  3374               	rrcf	___fladd@grs& (0+255),f,b
 10203  003A70                     l6470:
 10204                           
 10205                           ; BSR set to: 0
 10206  003A70  A02E               	btfss	___fladd@b^0,0,c
 10207  003A72  EF3D  F01D         	goto	u6201
 10208  003A76  EF3F  F01D         	goto	u6200
 10209  003A7A                     u6201:
 10210  003A7A  EF40  F01D         	goto	l6474
 10211  003A7E                     u6200:
 10212  003A7E                     
 10213                           ; BSR set to: 0
 10214  003A7E  8F74               	bsf	___fladd@grs& (0+255),7,b
 10215  003A80                     l6474:
 10216                           
 10217                           ; BSR set to: 0
 10218  003A80  3431               	rlcf	(___fladd@b+3)^0,w,c
 10219  003A82  3231               	rrcf	(___fladd@b+3)^0,f,c
 10220  003A84  3230               	rrcf	(___fladd@b+2)^0,f,c
 10221  003A86  322F               	rrcf	(___fladd@b+1)^0,f,c
 10222  003A88  322E               	rrcf	___fladd@b^0,f,c
 10223  003A8A                     
 10224                           ; BSR set to: 0
 10225  003A8A  2B73               	incf	___fladd@bexp& (0+255),f,b
 10226  003A8C                     l845:
 10227                           
 10228                           ; BSR set to: 0
 10229  003A8C  5172               	movf	___fladd@aexp& (0+255),w,b
 10230  003A8E  5D73               	subwf	___fladd@bexp& (0+255),w,b
 10231  003A90  A0D8               	btfss	status,0,c
 10232  003A92  EF4D  F01D         	goto	u6211
 10233  003A96  EF4F  F01D         	goto	u6210
 10234  003A9A                     u6211:
 10235  003A9A  EF29  F01D         	goto	l846
 10236  003A9E                     u6210:
 10237  003A9E                     l844:
 10238                           
 10239                           ; BSR set to: 0
 10240  003A9E  BD71               	btfsc	___fladd@signs& (0+255),6,b
 10241  003AA0  EF54  F01D         	goto	u6221
 10242  003AA4  EF56  F01D         	goto	u6220
 10243  003AA8                     u6221:
 10244  003AA8  EF96  F01D         	goto	l6502
 10245  003AAC                     u6220:
 10246  003AAC                     
 10247                           ; BSR set to: 0
 10248  003AAC  5173               	movf	___fladd@bexp& (0+255),w,b
 10249  003AAE  A4D8               	btfss	status,2,c
 10250  003AB0  EF5C  F01D         	goto	u6231
 10251  003AB4  EF5E  F01D         	goto	u6230
 10252  003AB8                     u6231:
 10253  003AB8  EF68  F01D         	goto	l6484
 10254  003ABC                     u6230:
 10255  003ABC                     
 10256                           ; BSR set to: 0
 10257  003ABC  0E00               	movlw	0
 10258  003ABE  6E2E               	movwf	?___fladd^0,c
 10259  003AC0  0E00               	movlw	0
 10260  003AC2  6E2F               	movwf	(?___fladd+1)^0,c
 10261  003AC4  0E00               	movlw	0
 10262  003AC6  6E30               	movwf	(?___fladd+2)^0,c
 10263  003AC8  0E00               	movlw	0
 10264  003ACA  6E31               	movwf	(?___fladd+3)^0,c
 10265  003ACC  EFB7  F01E         	goto	l853
 10266  003AD0                     l6484:
 10267                           
 10268                           ; BSR set to: 0
 10269  003AD0  5032               	movf	___fladd@a^0,w,c
 10270  003AD2  262E               	addwf	___fladd@b^0,f,c
 10271  003AD4  5033               	movf	(___fladd@a+1)^0,w,c
 10272  003AD6  222F               	addwfc	(___fladd@b+1)^0,f,c
 10273  003AD8  5034               	movf	(___fladd@a+2)^0,w,c
 10274  003ADA  2230               	addwfc	(___fladd@b+2)^0,f,c
 10275  003ADC  5035               	movf	(___fladd@a+3)^0,w,c
 10276  003ADE  2231               	addwfc	(___fladd@b+3)^0,f,c
 10277  003AE0                     
 10278                           ; BSR set to: 0
 10279  003AE0  A031               	btfss	(___fladd@b+3)^0,0,c
 10280  003AE2  EF75  F01D         	goto	u6241
 10281  003AE6  EF77  F01D         	goto	u6240
 10282  003AEA                     u6241:
 10283  003AEA  EF23  F01E         	goto	l6538
 10284  003AEE                     u6240:
 10285  003AEE                     
 10286                           ; BSR set to: 0
 10287  003AEE  A174               	btfss	___fladd@grs& (0+255),0,b
 10288  003AF0  EF7C  F01D         	goto	u6251
 10289  003AF4  EF7E  F01D         	goto	u6250
 10290  003AF8                     u6251:
 10291  003AF8  EF84  F01D         	goto	l6492
 10292  003AFC                     u6250:
 10293  003AFC                     
 10294                           ; BSR set to: 0
 10295  003AFC  90D8               	bcf	status,0,c
 10296  003AFE  3174               	rrcf	___fladd@grs& (0+255),w,b
 10297  003B00  0901               	iorlw	1
 10298  003B02  6F74               	movwf	___fladd@grs& (0+255),b
 10299  003B04  EF86  F01D         	goto	l6494
 10300  003B08                     l6492:
 10301                           
 10302                           ; BSR set to: 0
 10303  003B08  90D8               	bcf	status,0,c
 10304  003B0A  3374               	rrcf	___fladd@grs& (0+255),f,b
 10305  003B0C                     l6494:
 10306                           
 10307                           ; BSR set to: 0
 10308  003B0C  A02E               	btfss	___fladd@b^0,0,c
 10309  003B0E  EF8B  F01D         	goto	u6261
 10310  003B12  EF8D  F01D         	goto	u6260
 10311  003B16                     u6261:
 10312  003B16  EF8E  F01D         	goto	l6498
 10313  003B1A                     u6260:
 10314  003B1A                     
 10315                           ; BSR set to: 0
 10316  003B1A  8F74               	bsf	___fladd@grs& (0+255),7,b
 10317  003B1C                     l6498:
 10318                           
 10319                           ; BSR set to: 0
 10320  003B1C  3431               	rlcf	(___fladd@b+3)^0,w,c
 10321  003B1E  3231               	rrcf	(___fladd@b+3)^0,f,c
 10322  003B20  3230               	rrcf	(___fladd@b+2)^0,f,c
 10323  003B22  322F               	rrcf	(___fladd@b+1)^0,f,c
 10324  003B24  322E               	rrcf	___fladd@b^0,f,c
 10325  003B26                     
 10326                           ; BSR set to: 0
 10327  003B26  2B73               	incf	___fladd@bexp& (0+255),f,b
 10328  003B28  EF23  F01E         	goto	l6538
 10329  003B2C                     l6502:
 10330                           
 10331                           ; BSR set to: 0
 10332  003B2C  5032               	movf	___fladd@a^0,w,c
 10333  003B2E  5C2E               	subwf	___fladd@b^0,w,c
 10334  003B30  5033               	movf	(___fladd@a+1)^0,w,c
 10335  003B32  582F               	subwfb	(___fladd@b+1)^0,w,c
 10336  003B34  5034               	movf	(___fladd@a+2)^0,w,c
 10337  003B36  5830               	subwfb	(___fladd@b+2)^0,w,c
 10338  003B38  5031               	movf	(___fladd@b+3)^0,w,c
 10339  003B3A  0A80               	xorlw	128
 10340  003B3C  6F6D               	movwf	??___fladd& (0+255),b
 10341  003B3E  5035               	movf	(___fladd@a+3)^0,w,c
 10342  003B40  0A80               	xorlw	128
 10343  003B42  596D               	subwfb	??___fladd& (0+255),w,b
 10344  003B44  B0D8               	btfsc	status,0,c
 10345  003B46  EFA7  F01D         	goto	u6271
 10346  003B4A  EFA9  F01D         	goto	u6270
 10347  003B4E                     u6271:
 10348  003B4E  EFD4  F01D         	goto	l6512
 10349  003B52                     u6270:
 10350  003B52                     
 10351                           ; BSR set to: 0
 10352  003B52  502E               	movf	___fladd@b^0,w,c
 10353  003B54  5C32               	subwf	___fladd@a^0,w,c
 10354  003B56  6F6D               	movwf	??___fladd& (0+255),b
 10355  003B58  502F               	movf	(___fladd@b+1)^0,w,c
 10356  003B5A  5833               	subwfb	(___fladd@a+1)^0,w,c
 10357  003B5C  6F6E               	movwf	(??___fladd+1)& (0+255),b
 10358  003B5E  5030               	movf	(___fladd@b+2)^0,w,c
 10359  003B60  5834               	subwfb	(___fladd@a+2)^0,w,c
 10360  003B62  6F6F               	movwf	(??___fladd+2)& (0+255),b
 10361  003B64  5031               	movf	(___fladd@b+3)^0,w,c
 10362  003B66  5835               	subwfb	(___fladd@a+3)^0,w,c
 10363  003B68  6F70               	movwf	(??___fladd+3)& (0+255),b
 10364  003B6A  0EFF               	movlw	255
 10365  003B6C  256D               	addwf	??___fladd& (0+255),w,b
 10366  003B6E  6E2E               	movwf	___fladd@b^0,c
 10367  003B70  0EFF               	movlw	255
 10368  003B72  216E               	addwfc	(??___fladd+1)& (0+255),w,b
 10369  003B74  6E2F               	movwf	(___fladd@b+1)^0,c
 10370  003B76  0EFF               	movlw	255
 10371  003B78  216F               	addwfc	(??___fladd+2)& (0+255),w,b
 10372  003B7A  6E30               	movwf	(___fladd@b+2)^0,c
 10373  003B7C  0EFF               	movlw	255
 10374  003B7E  2170               	addwfc	(??___fladd+3)& (0+255),w,b
 10375  003B80  6E31               	movwf	(___fladd@b+3)^0,c
 10376  003B82  0E80               	movlw	128
 10377  003B84  1B71               	xorwf	___fladd@signs& (0+255),f,b
 10378  003B86                     
 10379                           ; BSR set to: 0
 10380  003B86  6D74               	negf	___fladd@grs& (0+255),b
 10381  003B88                     
 10382                           ; BSR set to: 0
 10383  003B88  5174               	movf	___fladd@grs& (0+255),w,b
 10384  003B8A  A4D8               	btfss	status,2,c
 10385  003B8C  EFCA  F01D         	goto	u6281
 10386  003B90  EFCC  F01D         	goto	u6280
 10387  003B94                     u6281:
 10388  003B94  EFDC  F01D         	goto	l861
 10389  003B98                     u6280:
 10390  003B98                     
 10391                           ; BSR set to: 0
 10392  003B98  0E01               	movlw	1
 10393  003B9A  262E               	addwf	___fladd@b^0,f,c
 10394  003B9C  0E00               	movlw	0
 10395  003B9E  222F               	addwfc	(___fladd@b+1)^0,f,c
 10396  003BA0  2230               	addwfc	(___fladd@b+2)^0,f,c
 10397  003BA2  2231               	addwfc	(___fladd@b+3)^0,f,c
 10398  003BA4  EFDC  F01D         	goto	l861
 10399  003BA8                     l6512:
 10400                           
 10401                           ; BSR set to: 0
 10402  003BA8  5032               	movf	___fladd@a^0,w,c
 10403  003BAA  5E2E               	subwf	___fladd@b^0,f,c
 10404  003BAC  5033               	movf	(___fladd@a+1)^0,w,c
 10405  003BAE  5A2F               	subwfb	(___fladd@b+1)^0,f,c
 10406  003BB0  5034               	movf	(___fladd@a+2)^0,w,c
 10407  003BB2  5A30               	subwfb	(___fladd@b+2)^0,f,c
 10408  003BB4  5035               	movf	(___fladd@a+3)^0,w,c
 10409  003BB6  5A31               	subwfb	(___fladd@b+3)^0,f,c
 10410  003BB8                     l861:
 10411                           
 10412                           ; BSR set to: 0
 10413  003BB8  502E               	movf	___fladd@b^0,w,c
 10414  003BBA  102F               	iorwf	(___fladd@b+1)^0,w,c
 10415  003BBC  1030               	iorwf	(___fladd@b+2)^0,w,c
 10416  003BBE  1031               	iorwf	(___fladd@b+3)^0,w,c
 10417  003BC0  A4D8               	btfss	status,2,c
 10418  003BC2  EFE5  F01D         	goto	u6291
 10419  003BC6  EFE7  F01D         	goto	u6290
 10420  003BCA                     u6291:
 10421  003BCA  EF1C  F01E         	goto	l6536
 10422  003BCE                     u6290:
 10423  003BCE                     
 10424                           ; BSR set to: 0
 10425  003BCE  5174               	movf	___fladd@grs& (0+255),w,b
 10426  003BD0  A4D8               	btfss	status,2,c
 10427  003BD2  EFED  F01D         	goto	u6301
 10428  003BD6  EFEF  F01D         	goto	u6300
 10429  003BDA                     u6301:
 10430  003BDA  EF1C  F01E         	goto	l6536
 10431  003BDE                     u6300:
 10432  003BDE                     
 10433                           ; BSR set to: 0
 10434  003BDE  0E00               	movlw	0
 10435  003BE0  6E2E               	movwf	?___fladd^0,c
 10436  003BE2  0E00               	movlw	0
 10437  003BE4  6E2F               	movwf	(?___fladd+1)^0,c
 10438  003BE6  0E00               	movlw	0
 10439  003BE8  6E30               	movwf	(?___fladd+2)^0,c
 10440  003BEA  0E00               	movlw	0
 10441  003BEC  6E31               	movwf	(?___fladd+3)^0,c
 10442  003BEE  EFB7  F01E         	goto	l853
 10443  003BF2                     l6520:
 10444                           
 10445                           ; BSR set to: 0
 10446  003BF2  90D8               	bcf	status,0,c
 10447  003BF4  362E               	rlcf	___fladd@b^0,f,c
 10448  003BF6  362F               	rlcf	(___fladd@b+1)^0,f,c
 10449  003BF8  3630               	rlcf	(___fladd@b+2)^0,f,c
 10450  003BFA  3631               	rlcf	(___fladd@b+3)^0,f,c
 10451  003BFC                     
 10452                           ; BSR set to: 0
 10453  003BFC  AF74               	btfss	___fladd@grs& (0+255),7,b
 10454  003BFE  EF03  F01E         	goto	u6311
 10455  003C02  EF05  F01E         	goto	u6310
 10456  003C06                     u6311:
 10457  003C06  EF06  F01E         	goto	l6526
 10458  003C0A                     u6310:
 10459  003C0A                     
 10460                           ; BSR set to: 0
 10461  003C0A  802E               	bsf	___fladd@b^0,0,c
 10462  003C0C                     l6526:
 10463                           
 10464                           ; BSR set to: 0
 10465  003C0C  A174               	btfss	___fladd@grs& (0+255),0,b
 10466  003C0E  EF0B  F01E         	goto	u6321
 10467  003C12  EF0D  F01E         	goto	u6320
 10468  003C16                     u6321:
 10469  003C16  EF11  F01E         	goto	l6530
 10470  003C1A                     u6320:
 10471  003C1A                     
 10472                           ; BSR set to: 0
 10473  003C1A  80D8               	bsf	status,0,c
 10474  003C1C  3774               	rlcf	___fladd@grs& (0+255),f,b
 10475  003C1E  EF13  F01E         	goto	l6532
 10476  003C22                     l6530:
 10477                           
 10478                           ; BSR set to: 0
 10479  003C22  90D8               	bcf	status,0,c
 10480  003C24  3774               	rlcf	___fladd@grs& (0+255),f,b
 10481  003C26                     l6532:
 10482                           
 10483                           ; BSR set to: 0
 10484  003C26  5173               	movf	___fladd@bexp& (0+255),w,b
 10485  003C28  B4D8               	btfsc	status,2,c
 10486  003C2A  EF19  F01E         	goto	u6331
 10487  003C2E  EF1B  F01E         	goto	u6330
 10488  003C32                     u6331:
 10489  003C32  EF1C  F01E         	goto	l6536
 10490  003C36                     u6330:
 10491  003C36                     
 10492                           ; BSR set to: 0
 10493  003C36  0773               	decf	___fladd@bexp& (0+255),f,b
 10494  003C38                     l6536:
 10495                           
 10496                           ; BSR set to: 0
 10497  003C38  AE30               	btfss	(___fladd@b+2)^0,7,c
 10498  003C3A  EF21  F01E         	goto	u6341
 10499  003C3E  EF23  F01E         	goto	u6340
 10500  003C42                     u6341:
 10501  003C42  EFF9  F01D         	goto	l6520
 10502  003C46                     u6340:
 10503  003C46                     l6538:
 10504                           
 10505                           ; BSR set to: 0
 10506  003C46  0E00               	movlw	0
 10507  003C48  6F72               	movwf	___fladd@aexp& (0+255),b
 10508  003C4A                     
 10509                           ; BSR set to: 0
 10510  003C4A  AF74               	btfss	___fladd@grs& (0+255),7,b
 10511  003C4C  EF2A  F01E         	goto	u6351
 10512  003C50  EF2C  F01E         	goto	u6350
 10513  003C54                     u6351:
 10514  003C54  EF44  F01E         	goto	l870
 10515  003C58                     u6350:
 10516  003C58                     
 10517                           ; BSR set to: 0
 10518  003C58  C074  F06D         	movff	___fladd@grs,??___fladd
 10519  003C5C  0E7F               	movlw	127
 10520  003C5E  176D               	andwf	??___fladd& (0+255),f,b
 10521  003C60  B4D8               	btfsc	status,2,c
 10522  003C62  EF35  F01E         	goto	u6361
 10523  003C66  EF37  F01E         	goto	u6360
 10524  003C6A                     u6361:
 10525  003C6A  EF3B  F01E         	goto	l871
 10526  003C6E                     u6360:
 10527  003C6E                     l6544:
 10528                           
 10529                           ; BSR set to: 0
 10530  003C6E  0E01               	movlw	1
 10531  003C70  6F72               	movwf	___fladd@aexp& (0+255),b
 10532  003C72  EF44  F01E         	goto	l870
 10533  003C76                     l871:
 10534                           
 10535                           ; BSR set to: 0
 10536  003C76  A02E               	btfss	___fladd@b^0,0,c
 10537  003C78  EF40  F01E         	goto	u6371
 10538  003C7C  EF42  F01E         	goto	u6370
 10539  003C80                     u6371:
 10540  003C80  EF44  F01E         	goto	l870
 10541  003C84                     u6370:
 10542  003C84  EF37  F01E         	goto	l6544
 10543  003C88                     l870:
 10544                           
 10545                           ; BSR set to: 0
 10546  003C88  5172               	movf	___fladd@aexp& (0+255),w,b
 10547  003C8A  B4D8               	btfsc	status,2,c
 10548  003C8C  EF4A  F01E         	goto	u6381
 10549  003C90  EF4C  F01E         	goto	u6380
 10550  003C94                     u6381:
 10551  003C94  EF77  F01E         	goto	l6556
 10552  003C98                     u6380:
 10553  003C98                     
 10554                           ; BSR set to: 0
 10555  003C98  0E01               	movlw	1
 10556  003C9A  262E               	addwf	___fladd@b^0,f,c
 10557  003C9C  0E00               	movlw	0
 10558  003C9E  222F               	addwfc	(___fladd@b+1)^0,f,c
 10559  003CA0  2230               	addwfc	(___fladd@b+2)^0,f,c
 10560  003CA2  2231               	addwfc	(___fladd@b+3)^0,f,c
 10561  003CA4                     
 10562                           ; BSR set to: 0
 10563  003CA4  A031               	btfss	(___fladd@b+3)^0,0,c
 10564  003CA6  EF57  F01E         	goto	u6391
 10565  003CAA  EF59  F01E         	goto	u6390
 10566  003CAE                     u6391:
 10567  003CAE  EF77  F01E         	goto	l6556
 10568  003CB2                     u6390:
 10569  003CB2                     
 10570                           ; BSR set to: 0
 10571  003CB2  C02E  F06D         	movff	___fladd@b,??___fladd
 10572  003CB6  C02F  F06E         	movff	___fladd@b+1,??___fladd+1
 10573  003CBA  C030  F06F         	movff	___fladd@b+2,??___fladd+2
 10574  003CBE  C031  F070         	movff	___fladd@b+3,??___fladd+3
 10575  003CC2  3570               	rlcf	(??___fladd+3)& (0+255),w,b
 10576  003CC4  3370               	rrcf	(??___fladd+3)& (0+255),f,b
 10577  003CC6  336F               	rrcf	(??___fladd+2)& (0+255),f,b
 10578  003CC8  336E               	rrcf	(??___fladd+1)& (0+255),f,b
 10579  003CCA  336D               	rrcf	??___fladd& (0+255),f,b
 10580  003CCC  C06D  F02E         	movff	??___fladd,___fladd@b
 10581  003CD0  C06E  F02F         	movff	??___fladd+1,___fladd@b+1
 10582  003CD4  C06F  F030         	movff	??___fladd+2,___fladd@b+2
 10583  003CD8  C070  F031         	movff	??___fladd+3,___fladd@b+3
 10584  003CDC  2973               	incf	___fladd@bexp& (0+255),w,b
 10585  003CDE  B4D8               	btfsc	status,2,c
 10586  003CE0  EF74  F01E         	goto	u6401
 10587  003CE4  EF76  F01E         	goto	u6400
 10588  003CE8                     u6401:
 10589  003CE8  EF77  F01E         	goto	l6556
 10590  003CEC                     u6400:
 10591  003CEC                     
 10592                           ; BSR set to: 0
 10593  003CEC  2B73               	incf	___fladd@bexp& (0+255),f,b
 10594  003CEE                     l6556:
 10595                           
 10596                           ; BSR set to: 0
 10597  003CEE  2973               	incf	___fladd@bexp& (0+255),w,b
 10598  003CF0  B4D8               	btfsc	status,2,c
 10599  003CF2  EF7D  F01E         	goto	u6411
 10600  003CF6  EF7F  F01E         	goto	u6410
 10601  003CFA                     u6411:
 10602  003CFA  EF87  F01E         	goto	l6560
 10603  003CFE                     u6410:
 10604  003CFE                     
 10605                           ; BSR set to: 0
 10606  003CFE  5173               	movf	___fladd@bexp& (0+255),w,b
 10607  003D00  A4D8               	btfss	status,2,c
 10608  003D02  EF85  F01E         	goto	u6421
 10609  003D06  EF87  F01E         	goto	u6420
 10610  003D0A                     u6421:
 10611  003D0A  EF99  F01E         	goto	l6564
 10612  003D0E                     u6420:
 10613  003D0E                     l6560:
 10614                           
 10615                           ; BSR set to: 0
 10616  003D0E  0E00               	movlw	0
 10617  003D10  6E2E               	movwf	___fladd@b^0,c
 10618  003D12  0E00               	movlw	0
 10619  003D14  6E2F               	movwf	(___fladd@b+1)^0,c
 10620  003D16  0E00               	movlw	0
 10621  003D18  6E30               	movwf	(___fladd@b+2)^0,c
 10622  003D1A  0E00               	movlw	0
 10623  003D1C  6E31               	movwf	(___fladd@b+3)^0,c
 10624  003D1E  5173               	movf	___fladd@bexp& (0+255),w,b
 10625  003D20  A4D8               	btfss	status,2,c
 10626  003D22  EF95  F01E         	goto	u6431
 10627  003D26  EF97  F01E         	goto	u6430
 10628  003D2A                     u6431:
 10629  003D2A  EF99  F01E         	goto	l6564
 10630  003D2E                     u6430:
 10631  003D2E                     
 10632                           ; BSR set to: 0
 10633  003D2E  0E00               	movlw	0
 10634  003D30  6F71               	movwf	___fladd@signs& (0+255),b
 10635  003D32                     l6564:
 10636                           
 10637                           ; BSR set to: 0
 10638  003D32  A173               	btfss	___fladd@bexp& (0+255),0,b
 10639  003D34  EF9E  F01E         	goto	u6441
 10640  003D38  EFA0  F01E         	goto	u6440
 10641  003D3C                     u6441:
 10642  003D3C  EFA3  F01E         	goto	l6568
 10643  003D40                     u6440:
 10644  003D40                     
 10645                           ; BSR set to: 0
 10646  003D40  8E30               	bsf	(___fladd@b+2)^0,7,c
 10647  003D42  EFA4  F01E         	goto	l6570
 10648  003D46                     l6568:
 10649                           
 10650                           ; BSR set to: 0
 10651  003D46  9E30               	bcf	(___fladd@b+2)^0,7,c
 10652  003D48                     l6570:
 10653                           
 10654                           ; BSR set to: 0
 10655  003D48  90D8               	bcf	status,0,c
 10656  003D4A  3173               	rrcf	___fladd@bexp& (0+255),w,b
 10657  003D4C  6E31               	movwf	(___fladd@b+3)^0,c
 10658  003D4E                     
 10659                           ; BSR set to: 0
 10660  003D4E  AF71               	btfss	___fladd@signs& (0+255),7,b
 10661  003D50  EFAC  F01E         	goto	u6451
 10662  003D54  EFAE  F01E         	goto	u6450
 10663  003D58                     u6451:
 10664  003D58  EFAF  F01E         	goto	l6576
 10665  003D5C                     u6450:
 10666  003D5C                     
 10667                           ; BSR set to: 0
 10668  003D5C  8E31               	bsf	(___fladd@b+3)^0,7,c
 10669  003D5E                     l6576:
 10670                           
 10671                           ; BSR set to: 0
 10672  003D5E  C02E  F02E         	movff	___fladd@b,?___fladd
 10673  003D62  C02F  F02F         	movff	___fladd@b+1,?___fladd+1
 10674  003D66  C030  F030         	movff	___fladd@b+2,?___fladd+2
 10675  003D6A  C031  F031         	movff	___fladd@b+3,?___fladd+3
 10676  003D6E                     l853:
 10677                           
 10678                           ; BSR set to: 0
 10679  003D6E  0012               	return		;funcret
 10680  003D70                     __end_of___fladd:
 10681                           	callstack 0
 10682                           
 10683 ;; *************** function ___flneg *****************
 10684 ;; Defined at:
 10685 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;  f1              4   19[COMRAM] unsigned char 
 10688 ;; Auto vars:     Size  Location     Type
 10689 ;;		None
 10690 ;; Return value:  Size  Location     Type
 10691 ;;                  4   19[COMRAM] unsigned char 
 10692 ;; Registers used:
 10693 ;;		wreg, status,2, status,0
 10694 ;; Tracked objects:
 10695 ;;		On entry : 0/0
 10696 ;;		On exit  : 0/0
 10697 ;;		Unchanged: 0/0
 10698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10702 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10703 ;;Total ram usage:        4 bytes
 10704 ;; Hardware stack levels used: 1
 10705 ;; Hardware stack levels required when called: 3
 10706 ;; This function calls:
 10707 ;;		Nothing
 10708 ;; This function is called by:
 10709 ;;		_MPU6050_Read
 10710 ;;		_atan2f
 10711 ;;		_atanf
 10712 ;;		_efgtoa
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           
 10716                           	psect	text31
 10717  0061FE                     __ptext31:
 10718                           	callstack 0
 10719  0061FE                     ___flneg:
 10720                           	callstack 22
 10721  0061FE  5014               	movf	___flneg@f1^0,w,c
 10722  006200  1015               	iorwf	(___flneg@f1+1)^0,w,c
 10723  006202  1016               	iorwf	(___flneg@f1+2)^0,w,c
 10724  006204  1017               	iorwf	(___flneg@f1+3)^0,w,c
 10725  006206  B4D8               	btfsc	status,2,c
 10726  006208  EF08  F031         	goto	u7121
 10727  00620C  EF0A  F031         	goto	u7120
 10728  006210                     u7121:
 10729  006210  EF12  F031         	goto	l7004
 10730  006214                     u7120:
 10731  006214  0E00               	movlw	0
 10732  006216  1A14               	xorwf	___flneg@f1^0,f,c
 10733  006218  0E00               	movlw	0
 10734  00621A  1A15               	xorwf	(___flneg@f1+1)^0,f,c
 10735  00621C  0E00               	movlw	0
 10736  00621E  1A16               	xorwf	(___flneg@f1+2)^0,f,c
 10737  006220  0E80               	movlw	128
 10738  006222  1A17               	xorwf	(___flneg@f1+3)^0,f,c
 10739  006224                     l7004:
 10740  006224  C014  F014         	movff	___flneg@f1,?___flneg
 10741  006228  C015  F015         	movff	___flneg@f1+1,?___flneg+1
 10742  00622C  C016  F016         	movff	___flneg@f1+2,?___flneg+2
 10743  006230  C017  F017         	movff	___flneg@f1+3,?___flneg+3
 10744  006234  0012               	return		;funcret
 10745  006236                     __end_of___flneg:
 10746                           	callstack 0
 10747                           
 10748 ;; *************** function ___flmul *****************
 10749 ;; Defined at:
 10750 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;  b               4   33[COMRAM] unsigned char 
 10753 ;;  a               4   37[COMRAM] unsigned char 
 10754 ;; Auto vars:     Size  Location     Type
 10755 ;;  prod            4    7[BANK0 ] struct .
 10756 ;;  grs             4    2[BANK0 ] unsigned long 
 10757 ;;  temp            2   11[BANK0 ] struct .
 10758 ;;  bexp            1    6[BANK0 ] unsigned char 
 10759 ;;  aexp            1    1[BANK0 ] unsigned char 
 10760 ;;  sign            1    0[BANK0 ] unsigned char 
 10761 ;; Return value:  Size  Location     Type
 10762 ;;                  4   33[COMRAM] unsigned char 
 10763 ;; Registers used:
 10764 ;;		wreg, status,2, status,0, prodl, prodh
 10765 ;; Tracked objects:
 10766 ;;		On entry : 0/0
 10767 ;;		On exit  : 0/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10770 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10773 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10774 ;;Total ram usage:       25 bytes
 10775 ;; Hardware stack levels used: 1
 10776 ;; Hardware stack levels required when called: 3
 10777 ;; This function calls:
 10778 ;;		Nothing
 10779 ;; This function is called by:
 10780 ;;		_MPU6050_Read
 10781 ;;		_atanf
 10782 ;;		_efgtoa
 10783 ;;		_TMR0handler
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786                           
 10787                           	psect	text32
 10788  004214                     __ptext32:
 10789                           	callstack 0
 10790  004214                     ___flmul:
 10791                           	callstack 22
 10792  004214  5025               	movf	(___flmul@b+3)^0,w,c
 10793  004216  0B80               	andlw	128
 10794  004218  0100               	movlb	0	; () banked
 10795  00421A  6F60               	movwf	___flmul@sign& (0+255),b
 10796  00421C  5025               	movf	(___flmul@b+3)^0,w,c
 10797  00421E  2425               	addwf	(___flmul@b+3)^0,w,c
 10798  004220  6F66               	movwf	___flmul@bexp& (0+255),b
 10799  004222                     
 10800                           ; BSR set to: 0
 10801  004222  AE24               	btfss	(___flmul@b+2)^0,7,c
 10802  004224  EF16  F021         	goto	u6731
 10803  004228  EF18  F021         	goto	u6730
 10804  00422C                     u6731:
 10805  00422C  EF19  F021         	goto	l6752
 10806  004230                     u6730:
 10807  004230                     
 10808                           ; BSR set to: 0
 10809  004230  8166               	bsf	___flmul@bexp& (0+255),0,b
 10810  004232                     l6752:
 10811                           
 10812                           ; BSR set to: 0
 10813  004232  5166               	movf	___flmul@bexp& (0+255),w,b
 10814  004234  B4D8               	btfsc	status,2,c
 10815  004236  EF1F  F021         	goto	u6741
 10816  00423A  EF21  F021         	goto	u6740
 10817  00423E                     u6741:
 10818  00423E  EF34  F021         	goto	l6760
 10819  004242                     u6740:
 10820  004242                     
 10821                           ; BSR set to: 0
 10822  004242  2966               	incf	___flmul@bexp& (0+255),w,b
 10823  004244  A4D8               	btfss	status,2,c
 10824  004246  EF27  F021         	goto	u6751
 10825  00424A  EF29  F021         	goto	u6750
 10826  00424E                     u6751:
 10827  00424E  EF31  F021         	goto	l6758
 10828  004252                     u6750:
 10829  004252                     
 10830                           ; BSR set to: 0
 10831  004252  0E00               	movlw	0
 10832  004254  6E22               	movwf	___flmul@b^0,c
 10833  004256  0E00               	movlw	0
 10834  004258  6E23               	movwf	(___flmul@b+1)^0,c
 10835  00425A  0E00               	movlw	0
 10836  00425C  6E24               	movwf	(___flmul@b+2)^0,c
 10837  00425E  0E00               	movlw	0
 10838  004260  6E25               	movwf	(___flmul@b+3)^0,c
 10839  004262                     l6758:
 10840                           
 10841                           ; BSR set to: 0
 10842  004262  8E24               	bsf	(___flmul@b+2)^0,7,c
 10843  004264  EF3C  F021         	goto	l6762
 10844  004268                     l6760:
 10845                           
 10846                           ; BSR set to: 0
 10847  004268  0E00               	movlw	0
 10848  00426A  6E22               	movwf	___flmul@b^0,c
 10849  00426C  0E00               	movlw	0
 10850  00426E  6E23               	movwf	(___flmul@b+1)^0,c
 10851  004270  0E00               	movlw	0
 10852  004272  6E24               	movwf	(___flmul@b+2)^0,c
 10853  004274  0E00               	movlw	0
 10854  004276  6E25               	movwf	(___flmul@b+3)^0,c
 10855  004278                     l6762:
 10856                           
 10857                           ; BSR set to: 0
 10858  004278  5029               	movf	(___flmul@a+3)^0,w,c
 10859  00427A  0B80               	andlw	128
 10860  00427C  1B60               	xorwf	___flmul@sign& (0+255),f,b
 10861  00427E                     
 10862                           ; BSR set to: 0
 10863  00427E  5029               	movf	(___flmul@a+3)^0,w,c
 10864  004280  2429               	addwf	(___flmul@a+3)^0,w,c
 10865  004282  6F61               	movwf	___flmul@aexp& (0+255),b
 10866  004284                     
 10867                           ; BSR set to: 0
 10868  004284  AE28               	btfss	(___flmul@a+2)^0,7,c
 10869  004286  EF47  F021         	goto	u6761
 10870  00428A  EF49  F021         	goto	u6760
 10871  00428E                     u6761:
 10872  00428E  EF4A  F021         	goto	l6770
 10873  004292                     u6760:
 10874  004292                     
 10875                           ; BSR set to: 0
 10876  004292  8161               	bsf	___flmul@aexp& (0+255),0,b
 10877  004294                     l6770:
 10878                           
 10879                           ; BSR set to: 0
 10880  004294  5161               	movf	___flmul@aexp& (0+255),w,b
 10881  004296  B4D8               	btfsc	status,2,c
 10882  004298  EF50  F021         	goto	u6771
 10883  00429C  EF52  F021         	goto	u6770
 10884  0042A0                     u6771:
 10885  0042A0  EF65  F021         	goto	l6778
 10886  0042A4                     u6770:
 10887  0042A4                     
 10888                           ; BSR set to: 0
 10889  0042A4  2961               	incf	___flmul@aexp& (0+255),w,b
 10890  0042A6  A4D8               	btfss	status,2,c
 10891  0042A8  EF58  F021         	goto	u6781
 10892  0042AC  EF5A  F021         	goto	u6780
 10893  0042B0                     u6781:
 10894  0042B0  EF62  F021         	goto	l6776
 10895  0042B4                     u6780:
 10896  0042B4                     
 10897                           ; BSR set to: 0
 10898  0042B4  0E00               	movlw	0
 10899  0042B6  6E26               	movwf	___flmul@a^0,c
 10900  0042B8  0E00               	movlw	0
 10901  0042BA  6E27               	movwf	(___flmul@a+1)^0,c
 10902  0042BC  0E00               	movlw	0
 10903  0042BE  6E28               	movwf	(___flmul@a+2)^0,c
 10904  0042C0  0E00               	movlw	0
 10905  0042C2  6E29               	movwf	(___flmul@a+3)^0,c
 10906  0042C4                     l6776:
 10907                           
 10908                           ; BSR set to: 0
 10909  0042C4  8E28               	bsf	(___flmul@a+2)^0,7,c
 10910  0042C6  EF6D  F021         	goto	l930
 10911  0042CA                     l6778:
 10912                           
 10913                           ; BSR set to: 0
 10914  0042CA  0E00               	movlw	0
 10915  0042CC  6E26               	movwf	___flmul@a^0,c
 10916  0042CE  0E00               	movlw	0
 10917  0042D0  6E27               	movwf	(___flmul@a+1)^0,c
 10918  0042D2  0E00               	movlw	0
 10919  0042D4  6E28               	movwf	(___flmul@a+2)^0,c
 10920  0042D6  0E00               	movlw	0
 10921  0042D8  6E29               	movwf	(___flmul@a+3)^0,c
 10922  0042DA                     l930:
 10923                           
 10924                           ; BSR set to: 0
 10925  0042DA  5161               	movf	___flmul@aexp& (0+255),w,b
 10926  0042DC  B4D8               	btfsc	status,2,c
 10927  0042DE  EF73  F021         	goto	u6791
 10928  0042E2  EF75  F021         	goto	u6790
 10929  0042E6                     u6791:
 10930  0042E6  EF7D  F021         	goto	l6782
 10931  0042EA                     u6790:
 10932  0042EA                     
 10933                           ; BSR set to: 0
 10934  0042EA  5166               	movf	___flmul@bexp& (0+255),w,b
 10935  0042EC  A4D8               	btfss	status,2,c
 10936  0042EE  EF7B  F021         	goto	u6801
 10937  0042F2  EF7D  F021         	goto	u6800
 10938  0042F6                     u6801:
 10939  0042F6  EF87  F021         	goto	l6786
 10940  0042FA                     u6800:
 10941  0042FA                     l6782:
 10942                           
 10943                           ; BSR set to: 0
 10944  0042FA  0E00               	movlw	0
 10945  0042FC  6E22               	movwf	?___flmul^0,c
 10946  0042FE  0E00               	movlw	0
 10947  004300  6E23               	movwf	(?___flmul+1)^0,c
 10948  004302  0E00               	movlw	0
 10949  004304  6E24               	movwf	(?___flmul+2)^0,c
 10950  004306  0E00               	movlw	0
 10951  004308  6E25               	movwf	(?___flmul+3)^0,c
 10952  00430A  EF1F  F023         	goto	l934
 10953  00430E                     l6786:
 10954                           
 10955                           ; BSR set to: 0
 10956  00430E  5028               	movf	(___flmul@a+2)^0,w,c
 10957  004310  0222               	mulwf	___flmul@b^0,c
 10958  004312  CFF3 F06B          	movff	prodl,___flmul@temp
 10959  004316  CFF4 F06C          	movff	prodh,___flmul@temp+1
 10960  00431A                     
 10961                           ; BSR set to: 0
 10962  00431A  516B               	movf	___flmul@temp& (0+255),w,b
 10963  00431C  6F62               	movwf	___flmul@grs& (0+255),b
 10964  00431E  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 10965  004320  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 10966  004322  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 10967  004324                     
 10968                           ; BSR set to: 0
 10969  004324  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 10970  004326  6F67               	movwf	___flmul@prod& (0+255),b
 10971  004328  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 10972  00432A  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 10973  00432C  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 10974  00432E  5027               	movf	(___flmul@a+1)^0,w,c
 10975  004330  0223               	mulwf	(___flmul@b+1)^0,c
 10976  004332  CFF3 F06B          	movff	prodl,___flmul@temp
 10977  004336  CFF4 F06C          	movff	prodh,___flmul@temp+1
 10978  00433A                     
 10979                           ; BSR set to: 0
 10980  00433A  516B               	movf	___flmul@temp& (0+255),w,b
 10981  00433C  2762               	addwf	___flmul@grs& (0+255),f,b
 10982  00433E  0E00               	movlw	0
 10983  004340  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10984  004342  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10985  004344  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10986  004346                     
 10987                           ; BSR set to: 0
 10988  004346  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 10989  004348  2767               	addwf	___flmul@prod& (0+255),f,b
 10990  00434A  0E00               	movlw	0
 10991  00434C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10992  00434E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10993  004350  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10994  004352  5026               	movf	___flmul@a^0,w,c
 10995  004354  0224               	mulwf	(___flmul@b+2)^0,c
 10996  004356  CFF3 F06B          	movff	prodl,___flmul@temp
 10997  00435A  CFF4 F06C          	movff	prodh,___flmul@temp+1
 10998  00435E                     
 10999                           ; BSR set to: 0
 11000  00435E  516B               	movf	___flmul@temp& (0+255),w,b
 11001  004360  2762               	addwf	___flmul@grs& (0+255),f,b
 11002  004362  0E00               	movlw	0
 11003  004364  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11004  004366  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11005  004368  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11006  00436A                     
 11007                           ; BSR set to: 0
 11008  00436A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11009  00436C  2767               	addwf	___flmul@prod& (0+255),f,b
 11010  00436E  0E00               	movlw	0
 11011  004370  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11012  004372  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11013  004374  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11014  004376                     
 11015                           ; BSR set to: 0
 11016  004376  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 11017  00437A  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 11018  00437E  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 11019  004382  6B62               	clrf	___flmul@grs& (0+255),b
 11020  004384                     
 11021                           ; BSR set to: 0
 11022  004384  5026               	movf	___flmul@a^0,w,c
 11023  004386  0223               	mulwf	(___flmul@b+1)^0,c
 11024  004388  CFF3 F06B          	movff	prodl,___flmul@temp
 11025  00438C  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11026  004390                     
 11027                           ; BSR set to: 0
 11028  004390  516B               	movf	___flmul@temp& (0+255),w,b
 11029  004392  2762               	addwf	___flmul@grs& (0+255),f,b
 11030  004394  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11031  004396  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11032  004398  0E00               	movlw	0
 11033  00439A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11034  00439C  0E00               	movlw	0
 11035  00439E  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11036  0043A0                     
 11037                           ; BSR set to: 0
 11038  0043A0  5027               	movf	(___flmul@a+1)^0,w,c
 11039  0043A2  0222               	mulwf	___flmul@b^0,c
 11040  0043A4  CFF3 F06B          	movff	prodl,___flmul@temp
 11041  0043A8  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11042  0043AC                     
 11043                           ; BSR set to: 0
 11044  0043AC  516B               	movf	___flmul@temp& (0+255),w,b
 11045  0043AE  2762               	addwf	___flmul@grs& (0+255),f,b
 11046  0043B0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11047  0043B2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11048  0043B4  0E00               	movlw	0
 11049  0043B6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11050  0043B8  0E00               	movlw	0
 11051  0043BA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11052  0043BC                     
 11053                           ; BSR set to: 0
 11054  0043BC  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 11055  0043C0  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 11056  0043C4  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 11057  0043C8  6B62               	clrf	___flmul@grs& (0+255),b
 11058  0043CA  5026               	movf	___flmul@a^0,w,c
 11059  0043CC  0222               	mulwf	___flmul@b^0,c
 11060  0043CE  CFF3 F06B          	movff	prodl,___flmul@temp
 11061  0043D2  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11062  0043D6                     
 11063                           ; BSR set to: 0
 11064  0043D6  516B               	movf	___flmul@temp& (0+255),w,b
 11065  0043D8  2762               	addwf	___flmul@grs& (0+255),f,b
 11066  0043DA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11067  0043DC  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11068  0043DE  0E00               	movlw	0
 11069  0043E0  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11070  0043E2  0E00               	movlw	0
 11071  0043E4  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11072  0043E6                     
 11073                           ; BSR set to: 0
 11074  0043E6  5028               	movf	(___flmul@a+2)^0,w,c
 11075  0043E8  0223               	mulwf	(___flmul@b+1)^0,c
 11076  0043EA  CFF3 F06B          	movff	prodl,___flmul@temp
 11077  0043EE  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11078  0043F2  516B               	movf	___flmul@temp& (0+255),w,b
 11079  0043F4  2767               	addwf	___flmul@prod& (0+255),f,b
 11080  0043F6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11081  0043F8  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11082  0043FA  0E00               	movlw	0
 11083  0043FC  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11084  0043FE  0E00               	movlw	0
 11085  004400  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11086  004402                     
 11087                           ; BSR set to: 0
 11088  004402  5027               	movf	(___flmul@a+1)^0,w,c
 11089  004404  0224               	mulwf	(___flmul@b+2)^0,c
 11090  004406  CFF3 F06B          	movff	prodl,___flmul@temp
 11091  00440A  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11092  00440E                     
 11093                           ; BSR set to: 0
 11094  00440E  516B               	movf	___flmul@temp& (0+255),w,b
 11095  004410  2767               	addwf	___flmul@prod& (0+255),f,b
 11096  004412  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11097  004414  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11098  004416  0E00               	movlw	0
 11099  004418  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11100  00441A  0E00               	movlw	0
 11101  00441C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11102  00441E  5028               	movf	(___flmul@a+2)^0,w,c
 11103  004420  0224               	mulwf	(___flmul@b+2)^0,c
 11104  004422  CFF3 F06B          	movff	prodl,___flmul@temp
 11105  004426  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11106  00442A                     
 11107                           ; BSR set to: 0
 11108  00442A  516B               	movf	___flmul@temp& (0+255),w,b
 11109  00442C  6E2A               	movwf	??___flmul^0,c
 11110  00442E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11111  004430  6E2B               	movwf	(??___flmul+1)^0,c
 11112  004432  6A2C               	clrf	(??___flmul+2)^0,c
 11113  004434  6A2D               	clrf	(??___flmul+3)^0,c
 11114  004436  C02C  F02D         	movff	??___flmul+2,??___flmul+3
 11115  00443A  C02B  F02C         	movff	??___flmul+1,??___flmul+2
 11116  00443E  C02A  F02B         	movff	??___flmul,??___flmul+1
 11117  004442  6A2A               	clrf	??___flmul^0,c
 11118  004444  502A               	movf	??___flmul^0,w,c
 11119  004446  2767               	addwf	___flmul@prod& (0+255),f,b
 11120  004448  502B               	movf	(??___flmul+1)^0,w,c
 11121  00444A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11122  00444C  502C               	movf	(??___flmul+2)^0,w,c
 11123  00444E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11124  004450  502D               	movf	(??___flmul+3)^0,w,c
 11125  004452  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11126  004454                     
 11127                           ; BSR set to: 0
 11128  004454  C062  F02A         	movff	___flmul@grs,??___flmul
 11129  004458  C063  F02B         	movff	___flmul@grs+1,??___flmul+1
 11130  00445C  C064  F02C         	movff	___flmul@grs+2,??___flmul+2
 11131  004460  C065  F02D         	movff	___flmul@grs+3,??___flmul+3
 11132  004464  0E19               	movlw	25
 11133  004466  EF3A  F022         	goto	u6810
 11134  00446A                     u6815:
 11135  00446A  90D8               	bcf	status,0,c
 11136  00446C  322D               	rrcf	(??___flmul+3)^0,f,c
 11137  00446E  322C               	rrcf	(??___flmul+2)^0,f,c
 11138  004470  322B               	rrcf	(??___flmul+1)^0,f,c
 11139  004472  322A               	rrcf	??___flmul^0,f,c
 11140  004474                     u6810:
 11141  004474  2EE8               	decfsz	wreg,f,c
 11142  004476  EF35  F022         	goto	u6815
 11143  00447A  502A               	movf	??___flmul^0,w,c
 11144  00447C  2767               	addwf	___flmul@prod& (0+255),f,b
 11145  00447E  502B               	movf	(??___flmul+1)^0,w,c
 11146  004480  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11147  004482  502C               	movf	(??___flmul+2)^0,w,c
 11148  004484  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11149  004486  502D               	movf	(??___flmul+3)^0,w,c
 11150  004488  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11151  00448A                     
 11152                           ; BSR set to: 0
 11153  00448A  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 11154  00448E  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 11155  004492  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 11156  004496  6B62               	clrf	___flmul@grs& (0+255),b
 11157  004498                     
 11158                           ; BSR set to: 0
 11159  004498  5161               	movf	___flmul@aexp& (0+255),w,b
 11160  00449A  C066  F02A         	movff	___flmul@bexp,??___flmul
 11161  00449E  6A2B               	clrf	(??___flmul+1)^0,c
 11162  0044A0  262A               	addwf	??___flmul^0,f,c
 11163  0044A2  0E00               	movlw	0
 11164  0044A4  222B               	addwfc	(??___flmul+1)^0,f,c
 11165  0044A6  0E82               	movlw	130
 11166  0044A8  242A               	addwf	??___flmul^0,w,c
 11167  0044AA  6F6B               	movwf	___flmul@temp& (0+255),b
 11168  0044AC  0EFF               	movlw	255
 11169  0044AE  202B               	addwfc	(??___flmul+1)^0,w,c
 11170  0044B0  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 11171  0044B2  EF70  F022         	goto	l6834
 11172  0044B6                     l6828:
 11173                           
 11174                           ; BSR set to: 0
 11175  0044B6  90D8               	bcf	status,0,c
 11176  0044B8  3767               	rlcf	___flmul@prod& (0+255),f,b
 11177  0044BA  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 11178  0044BC  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 11179  0044BE  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 11180  0044C0                     
 11181                           ; BSR set to: 0
 11182  0044C0  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 11183  0044C2  EF65  F022         	goto	u6821
 11184  0044C6  EF67  F022         	goto	u6820
 11185  0044CA                     u6821:
 11186  0044CA  EF68  F022         	goto	l937
 11187  0044CE                     u6820:
 11188  0044CE                     
 11189                           ; BSR set to: 0
 11190  0044CE  8167               	bsf	___flmul@prod& (0+255),0,b
 11191  0044D0                     l937:
 11192                           
 11193                           ; BSR set to: 0
 11194  0044D0  90D8               	bcf	status,0,c
 11195  0044D2  3762               	rlcf	___flmul@grs& (0+255),f,b
 11196  0044D4  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 11197  0044D6  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 11198  0044D8  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 11199  0044DA  076B               	decf	___flmul@temp& (0+255),f,b
 11200  0044DC  A0D8               	btfss	status,0,c
 11201  0044DE  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 11202  0044E0                     l6834:
 11203                           
 11204                           ; BSR set to: 0
 11205  0044E0  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 11206  0044E2  EF75  F022         	goto	u6831
 11207  0044E6  EF77  F022         	goto	u6830
 11208  0044EA                     u6831:
 11209  0044EA  EF5B  F022         	goto	l6828
 11210  0044EE                     u6830:
 11211  0044EE                     
 11212                           ; BSR set to: 0
 11213  0044EE  0E00               	movlw	0
 11214  0044F0  6F61               	movwf	___flmul@aexp& (0+255),b
 11215  0044F2                     
 11216                           ; BSR set to: 0
 11217  0044F2  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 11218  0044F4  EF7E  F022         	goto	u6841
 11219  0044F8  EF80  F022         	goto	u6840
 11220  0044FC                     u6841:
 11221  0044FC  EFA4  F022         	goto	l939
 11222  004500                     u6840:
 11223  004500                     
 11224                           ; BSR set to: 0
 11225  004500  0EFF               	movlw	255
 11226  004502  1562               	andwf	___flmul@grs& (0+255),w,b
 11227  004504  6E2A               	movwf	??___flmul^0,c
 11228  004506  0EFF               	movlw	255
 11229  004508  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 11230  00450A  6E2B               	movwf	(??___flmul+1)^0,c
 11231  00450C  0EFF               	movlw	255
 11232  00450E  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 11233  004510  6E2C               	movwf	(??___flmul+2)^0,c
 11234  004512  0E7F               	movlw	127
 11235  004514  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 11236  004516  6E2D               	movwf	(??___flmul+3)^0,c
 11237  004518  502A               	movf	??___flmul^0,w,c
 11238  00451A  102B               	iorwf	(??___flmul+1)^0,w,c
 11239  00451C  102C               	iorwf	(??___flmul+2)^0,w,c
 11240  00451E  102D               	iorwf	(??___flmul+3)^0,w,c
 11241  004520  B4D8               	btfsc	status,2,c
 11242  004522  EF95  F022         	goto	u6851
 11243  004526  EF97  F022         	goto	u6850
 11244  00452A                     u6851:
 11245  00452A  EF9B  F022         	goto	l940
 11246  00452E                     u6850:
 11247  00452E                     l6842:
 11248                           
 11249                           ; BSR set to: 0
 11250  00452E  0E01               	movlw	1
 11251  004530  6F61               	movwf	___flmul@aexp& (0+255),b
 11252  004532  EFA4  F022         	goto	l939
 11253  004536                     l940:
 11254                           
 11255                           ; BSR set to: 0
 11256  004536  A167               	btfss	___flmul@prod& (0+255),0,b
 11257  004538  EFA0  F022         	goto	u6861
 11258  00453C  EFA2  F022         	goto	u6860
 11259  004540                     u6861:
 11260  004540  EFA4  F022         	goto	l939
 11261  004544                     u6860:
 11262  004544  EF97  F022         	goto	l6842
 11263  004548                     l939:
 11264                           
 11265                           ; BSR set to: 0
 11266  004548  5161               	movf	___flmul@aexp& (0+255),w,b
 11267  00454A  B4D8               	btfsc	status,2,c
 11268  00454C  EFAA  F022         	goto	u6871
 11269  004550  EFAC  F022         	goto	u6870
 11270  004554                     u6871:
 11271  004554  EFD0  F022         	goto	l6854
 11272  004558                     u6870:
 11273  004558                     
 11274                           ; BSR set to: 0
 11275  004558  0E01               	movlw	1
 11276  00455A  2767               	addwf	___flmul@prod& (0+255),f,b
 11277  00455C  0E00               	movlw	0
 11278  00455E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11279  004560  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11280  004562  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11281  004564                     
 11282                           ; BSR set to: 0
 11283  004564  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 11284  004566  EFB7  F022         	goto	u6881
 11285  00456A  EFB9  F022         	goto	u6880
 11286  00456E                     u6881:
 11287  00456E  EFD0  F022         	goto	l6854
 11288  004572                     u6880:
 11289  004572                     
 11290                           ; BSR set to: 0
 11291  004572  C067  F02A         	movff	___flmul@prod,??___flmul
 11292  004576  C068  F02B         	movff	___flmul@prod+1,??___flmul+1
 11293  00457A  C069  F02C         	movff	___flmul@prod+2,??___flmul+2
 11294  00457E  C06A  F02D         	movff	___flmul@prod+3,??___flmul+3
 11295  004582  342D               	rlcf	(??___flmul+3)^0,w,c
 11296  004584  322D               	rrcf	(??___flmul+3)^0,f,c
 11297  004586  322C               	rrcf	(??___flmul+2)^0,f,c
 11298  004588  322B               	rrcf	(??___flmul+1)^0,f,c
 11299  00458A  322A               	rrcf	??___flmul^0,f,c
 11300  00458C  C02A  F067         	movff	??___flmul,___flmul@prod
 11301  004590  C02B  F068         	movff	??___flmul+1,___flmul@prod+1
 11302  004594  C02C  F069         	movff	??___flmul+2,___flmul@prod+2
 11303  004598  C02D  F06A         	movff	??___flmul+3,___flmul@prod+3
 11304  00459C                     
 11305                           ; BSR set to: 0
 11306  00459C  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 11307  00459E  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 11308  0045A0                     l6854:
 11309                           
 11310                           ; BSR set to: 0
 11311  0045A0  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11312  0045A2  EFDB  F022         	goto	u6891
 11313  0045A6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11314  0045A8  E108               	bnz	u6890
 11315  0045AA  296B               	incf	___flmul@temp& (0+255),w,b
 11316  0045AC  A0D8               	btfss	status,0,c
 11317  0045AE  EFDB  F022         	goto	u6891
 11318  0045B2  EFDD  F022         	goto	u6890
 11319  0045B6                     u6891:
 11320  0045B6  EFE7  F022         	goto	l6858
 11321  0045BA                     u6890:
 11322  0045BA                     
 11323                           ; BSR set to: 0
 11324  0045BA  0E00               	movlw	0
 11325  0045BC  6F67               	movwf	___flmul@prod& (0+255),b
 11326  0045BE  0E00               	movlw	0
 11327  0045C0  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 11328  0045C2  0E80               	movlw	128
 11329  0045C4  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 11330  0045C6  0E7F               	movlw	127
 11331  0045C8  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 11332  0045CA  EF15  F023         	goto	l6870
 11333  0045CE                     l6858:
 11334                           
 11335                           ; BSR set to: 0
 11336  0045CE  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11337  0045D0  EFF4  F022         	goto	u6900
 11338  0045D4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11339  0045D6  E106               	bnz	u6901
 11340  0045D8  056B               	decf	___flmul@temp& (0+255),w,b
 11341  0045DA  B0D8               	btfsc	status,0,c
 11342  0045DC  EFF2  F022         	goto	u6901
 11343  0045E0  EFF4  F022         	goto	u6900
 11344  0045E4                     u6901:
 11345  0045E4  EF00  F023         	goto	l947
 11346  0045E8                     u6900:
 11347  0045E8                     
 11348                           ; BSR set to: 0
 11349  0045E8  0E00               	movlw	0
 11350  0045EA  6F67               	movwf	___flmul@prod& (0+255),b
 11351  0045EC  0E00               	movlw	0
 11352  0045EE  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 11353  0045F0  0E00               	movlw	0
 11354  0045F2  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 11355  0045F4  0E00               	movlw	0
 11356  0045F6  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 11357  0045F8  0E00               	movlw	0
 11358  0045FA  6F60               	movwf	___flmul@sign& (0+255),b
 11359  0045FC  EF15  F023         	goto	l6870
 11360  004600                     l947:
 11361                           
 11362                           ; BSR set to: 0
 11363  004600  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 11364  004604                     
 11365                           ; BSR set to: 0
 11366  004604  0EFF               	movlw	255
 11367  004606  1767               	andwf	___flmul@prod& (0+255),f,b
 11368  004608  0EFF               	movlw	255
 11369  00460A  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 11370  00460C  0E7F               	movlw	127
 11371  00460E  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 11372  004610  0E00               	movlw	0
 11373  004612  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 11374  004614                     
 11375                           ; BSR set to: 0
 11376  004614  A166               	btfss	___flmul@bexp& (0+255),0,b
 11377  004616  EF0F  F023         	goto	u6911
 11378  00461A  EF11  F023         	goto	u6910
 11379  00461E                     u6911:
 11380  00461E  EF12  F023         	goto	l6868
 11381  004622                     u6910:
 11382  004622                     
 11383                           ; BSR set to: 0
 11384  004622  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 11385  004624                     l6868:
 11386                           
 11387                           ; BSR set to: 0
 11388  004624  90D8               	bcf	status,0,c
 11389  004626  3166               	rrcf	___flmul@bexp& (0+255),w,b
 11390  004628  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 11391  00462A                     l6870:
 11392                           
 11393                           ; BSR set to: 0
 11394  00462A  5160               	movf	___flmul@sign& (0+255),w,b
 11395  00462C  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 11396  00462E                     
 11397                           ; BSR set to: 0
 11398  00462E  C067  F022         	movff	___flmul@prod,?___flmul
 11399  004632  C068  F023         	movff	___flmul@prod+1,?___flmul+1
 11400  004636  C069  F024         	movff	___flmul@prod+2,?___flmul+2
 11401  00463A  C06A  F025         	movff	___flmul@prod+3,?___flmul+3
 11402  00463E                     l934:
 11403                           
 11404                           ; BSR set to: 0
 11405  00463E  0012               	return		;funcret
 11406  004640                     __end_of___flmul:
 11407                           	callstack 0
 11408                           
 11409 ;; *************** function ___fldiv *****************
 11410 ;; Defined at:
 11411 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 11412 ;; Parameters:    Size  Location     Type
 11413 ;;  b               4   29[BANK0 ] unsigned char 
 11414 ;;  a               4   33[BANK0 ] unsigned char 
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;  grs             4   48[BANK0 ] unsigned long 
 11417 ;;  rem             4   41[BANK0 ] unsigned long 
 11418 ;;  new_exp         2   46[BANK0 ] short 
 11419 ;;  aexp            1   53[BANK0 ] unsigned char 
 11420 ;;  bexp            1   52[BANK0 ] unsigned char 
 11421 ;;  sign            1   45[BANK0 ] unsigned char 
 11422 ;; Return value:  Size  Location     Type
 11423 ;;                  4   29[BANK0 ] unsigned char 
 11424 ;; Registers used:
 11425 ;;		wreg, status,2, status,0
 11426 ;; Tracked objects:
 11427 ;;		On entry : 0/0
 11428 ;;		On exit  : 0/0
 11429 ;;		Unchanged: 0/0
 11430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11431 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11432 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11433 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11434 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11435 ;;Total ram usage:       25 bytes
 11436 ;; Hardware stack levels used: 1
 11437 ;; Hardware stack levels required when called: 3
 11438 ;; This function calls:
 11439 ;;		Nothing
 11440 ;; This function is called by:
 11441 ;;		_MPU6050_Read
 11442 ;;		_atan2f
 11443 ;;		_atanf
 11444 ;;		_efgtoa
 11445 ;; This function uses a non-reentrant model
 11446 ;;
 11447                           
 11448                           	psect	text33
 11449  004640                     __ptext33:
 11450                           	callstack 0
 11451  004640                     ___fldiv:
 11452                           	callstack 22
 11453  004640  0100               	movlb	0	; () banked
 11454  004642  5180               	movf	(___fldiv@b+3)& (0+255),w,b
 11455  004644  0B80               	andlw	128
 11456  004646  6F8D               	movwf	___fldiv@sign& (0+255),b
 11457  004648  5180               	movf	(___fldiv@b+3)& (0+255),w,b
 11458  00464A  2580               	addwf	(___fldiv@b+3)& (0+255),w,b
 11459  00464C  6F94               	movwf	___fldiv@bexp& (0+255),b
 11460  00464E                     
 11461                           ; BSR set to: 0
 11462  00464E  AF7F               	btfss	(___fldiv@b+2)& (0+255),7,b
 11463  004650  EF2C  F023         	goto	u6501
 11464  004654  EF2E  F023         	goto	u6500
 11465  004658                     u6501:
 11466  004658  EF2F  F023         	goto	l6614
 11467  00465C                     u6500:
 11468  00465C                     
 11469                           ; BSR set to: 0
 11470  00465C  8194               	bsf	___fldiv@bexp& (0+255),0,b
 11471  00465E                     l6614:
 11472                           
 11473                           ; BSR set to: 0
 11474  00465E  5194               	movf	___fldiv@bexp& (0+255),w,b
 11475  004660  B4D8               	btfsc	status,2,c
 11476  004662  EF35  F023         	goto	u6511
 11477  004666  EF37  F023         	goto	u6510
 11478  00466A                     u6511:
 11479  00466A  EF4C  F023         	goto	l6624
 11480  00466E                     u6510:
 11481  00466E                     
 11482                           ; BSR set to: 0
 11483  00466E  2994               	incf	___fldiv@bexp& (0+255),w,b
 11484  004670  A4D8               	btfss	status,2,c
 11485  004672  EF3D  F023         	goto	u6521
 11486  004676  EF3F  F023         	goto	u6520
 11487  00467A                     u6521:
 11488  00467A  EF47  F023         	goto	l6620
 11489  00467E                     u6520:
 11490  00467E                     
 11491                           ; BSR set to: 0
 11492  00467E  0E00               	movlw	0
 11493  004680  6F7D               	movwf	___fldiv@b& (0+255),b
 11494  004682  0E00               	movlw	0
 11495  004684  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 11496  004686  0E00               	movlw	0
 11497  004688  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 11498  00468A  0E00               	movlw	0
 11499  00468C  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 11500  00468E                     l6620:
 11501                           
 11502                           ; BSR set to: 0
 11503  00468E  8F7F               	bsf	(___fldiv@b+2)& (0+255),7,b
 11504  004690                     
 11505                           ; BSR set to: 0
 11506  004690  0E00               	movlw	0
 11507  004692  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 11508  004694  EF54  F023         	goto	l6626
 11509  004698                     l6624:
 11510                           
 11511                           ; BSR set to: 0
 11512  004698  0E00               	movlw	0
 11513  00469A  6F7D               	movwf	___fldiv@b& (0+255),b
 11514  00469C  0E00               	movlw	0
 11515  00469E  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 11516  0046A0  0E00               	movlw	0
 11517  0046A2  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 11518  0046A4  0E00               	movlw	0
 11519  0046A6  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 11520  0046A8                     l6626:
 11521                           
 11522                           ; BSR set to: 0
 11523  0046A8  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 11524  0046AA  0B80               	andlw	128
 11525  0046AC  1B8D               	xorwf	___fldiv@sign& (0+255),f,b
 11526  0046AE                     
 11527                           ; BSR set to: 0
 11528  0046AE  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 11529  0046B0  2584               	addwf	(___fldiv@a+3)& (0+255),w,b
 11530  0046B2  6F95               	movwf	___fldiv@aexp& (0+255),b
 11531  0046B4                     
 11532                           ; BSR set to: 0
 11533  0046B4  AF83               	btfss	(___fldiv@a+2)& (0+255),7,b
 11534  0046B6  EF5F  F023         	goto	u6531
 11535  0046BA  EF61  F023         	goto	u6530
 11536  0046BE                     u6531:
 11537  0046BE  EF62  F023         	goto	l6634
 11538  0046C2                     u6530:
 11539  0046C2                     
 11540                           ; BSR set to: 0
 11541  0046C2  8195               	bsf	___fldiv@aexp& (0+255),0,b
 11542  0046C4                     l6634:
 11543                           
 11544                           ; BSR set to: 0
 11545  0046C4  5195               	movf	___fldiv@aexp& (0+255),w,b
 11546  0046C6  B4D8               	btfsc	status,2,c
 11547  0046C8  EF68  F023         	goto	u6541
 11548  0046CC  EF6A  F023         	goto	u6540
 11549  0046D0                     u6541:
 11550  0046D0  EF7F  F023         	goto	l6644
 11551  0046D4                     u6540:
 11552  0046D4                     
 11553                           ; BSR set to: 0
 11554  0046D4  2995               	incf	___fldiv@aexp& (0+255),w,b
 11555  0046D6  A4D8               	btfss	status,2,c
 11556  0046D8  EF70  F023         	goto	u6551
 11557  0046DC  EF72  F023         	goto	u6550
 11558  0046E0                     u6551:
 11559  0046E0  EF7A  F023         	goto	l6640
 11560  0046E4                     u6550:
 11561  0046E4                     
 11562                           ; BSR set to: 0
 11563  0046E4  0E00               	movlw	0
 11564  0046E6  6F81               	movwf	___fldiv@a& (0+255),b
 11565  0046E8  0E00               	movlw	0
 11566  0046EA  6F82               	movwf	(___fldiv@a+1)& (0+255),b
 11567  0046EC  0E00               	movlw	0
 11568  0046EE  6F83               	movwf	(___fldiv@a+2)& (0+255),b
 11569  0046F0  0E00               	movlw	0
 11570  0046F2  6F84               	movwf	(___fldiv@a+3)& (0+255),b
 11571  0046F4                     l6640:
 11572                           
 11573                           ; BSR set to: 0
 11574  0046F4  8F83               	bsf	(___fldiv@a+2)& (0+255),7,b
 11575  0046F6                     
 11576                           ; BSR set to: 0
 11577  0046F6  0E00               	movlw	0
 11578  0046F8  6F84               	movwf	(___fldiv@a+3)& (0+255),b
 11579  0046FA  EF87  F023         	goto	l6646
 11580  0046FE                     l6644:
 11581                           
 11582                           ; BSR set to: 0
 11583  0046FE  0E00               	movlw	0
 11584  004700  6F81               	movwf	___fldiv@a& (0+255),b
 11585  004702  0E00               	movlw	0
 11586  004704  6F82               	movwf	(___fldiv@a+1)& (0+255),b
 11587  004706  0E00               	movlw	0
 11588  004708  6F83               	movwf	(___fldiv@a+2)& (0+255),b
 11589  00470A  0E00               	movlw	0
 11590  00470C  6F84               	movwf	(___fldiv@a+3)& (0+255),b
 11591  00470E                     l6646:
 11592                           
 11593                           ; BSR set to: 0
 11594  00470E  5181               	movf	___fldiv@a& (0+255),w,b
 11595  004710  1182               	iorwf	(___fldiv@a+1)& (0+255),w,b
 11596  004712  1183               	iorwf	(___fldiv@a+2)& (0+255),w,b
 11597  004714  1184               	iorwf	(___fldiv@a+3)& (0+255),w,b
 11598  004716  A4D8               	btfss	status,2,c
 11599  004718  EF90  F023         	goto	u6561
 11600  00471C  EF92  F023         	goto	u6560
 11601  004720                     u6561:
 11602  004720  EFAA  F023         	goto	l6658
 11603  004724                     u6560:
 11604  004724                     
 11605                           ; BSR set to: 0
 11606  004724  0E00               	movlw	0
 11607  004726  6F7D               	movwf	___fldiv@b& (0+255),b
 11608  004728  0E00               	movlw	0
 11609  00472A  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 11610  00472C  0E00               	movlw	0
 11611  00472E  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 11612  004730  0E00               	movlw	0
 11613  004732  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 11614  004734                     
 11615                           ; BSR set to: 0
 11616  004734  0E80               	movlw	128
 11617  004736  137F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 11618  004738  0E7F               	movlw	127
 11619  00473A  1380               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11620  00473C                     l6652:
 11621                           
 11622                           ; BSR set to: 0
 11623  00473C  518D               	movf	___fldiv@sign& (0+255),w,b
 11624  00473E  1380               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11625  004740                     
 11626                           ; BSR set to: 0
 11627  004740  C07D  F07D         	movff	___fldiv@b,?___fldiv
 11628  004744  C07E  F07E         	movff	___fldiv@b+1,?___fldiv+1
 11629  004748  C07F  F07F         	movff	___fldiv@b+2,?___fldiv+2
 11630  00474C  C080  F080         	movff	___fldiv@b+3,?___fldiv+3
 11631  004750  EFED  F024         	goto	l898
 11632  004754                     l6658:
 11633                           
 11634                           ; BSR set to: 0
 11635  004754  5194               	movf	___fldiv@bexp& (0+255),w,b
 11636  004756  A4D8               	btfss	status,2,c
 11637  004758  EFB0  F023         	goto	u6571
 11638  00475C  EFB2  F023         	goto	u6570
 11639  004760                     u6571:
 11640  004760  EFBC  F023         	goto	l6666
 11641  004764                     u6570:
 11642  004764                     
 11643                           ; BSR set to: 0
 11644  004764  0E00               	movlw	0
 11645  004766  6F7D               	movwf	?___fldiv& (0+255),b
 11646  004768  0E00               	movlw	0
 11647  00476A  6F7E               	movwf	(?___fldiv+1)& (0+255),b
 11648  00476C  0E00               	movlw	0
 11649  00476E  6F7F               	movwf	(?___fldiv+2)& (0+255),b
 11650  004770  0E00               	movlw	0
 11651  004772  6F80               	movwf	(?___fldiv+3)& (0+255),b
 11652  004774  EFED  F024         	goto	l898
 11653  004778                     l6666:
 11654                           
 11655                           ; BSR set to: 0
 11656  004778  5195               	movf	___fldiv@aexp& (0+255),w,b
 11657  00477A  C094  F085         	movff	___fldiv@bexp,??___fldiv
 11658  00477E  6B86               	clrf	(??___fldiv+1)& (0+255),b
 11659  004780  5F85               	subwf	??___fldiv& (0+255),f,b
 11660  004782  0E00               	movlw	0
 11661  004784  5B86               	subwfb	(??___fldiv+1)& (0+255),f,b
 11662  004786  0E7F               	movlw	127
 11663  004788  2585               	addwf	??___fldiv& (0+255),w,b
 11664  00478A  6F8E               	movwf	___fldiv@new_exp& (0+255),b
 11665  00478C  0E00               	movlw	0
 11666  00478E  2186               	addwfc	(??___fldiv+1)& (0+255),w,b
 11667  004790  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11668  004792                     
 11669                           ; BSR set to: 0
 11670  004792  C07D  F089         	movff	___fldiv@b,___fldiv@rem
 11671  004796  C07E  F08A         	movff	___fldiv@b+1,___fldiv@rem+1
 11672  00479A  C07F  F08B         	movff	___fldiv@b+2,___fldiv@rem+2
 11673  00479E  C080  F08C         	movff	___fldiv@b+3,___fldiv@rem+3
 11674  0047A2                     
 11675                           ; BSR set to: 0
 11676  0047A2  0E00               	movlw	0
 11677  0047A4  6F7D               	movwf	___fldiv@b& (0+255),b
 11678  0047A6  0E00               	movlw	0
 11679  0047A8  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 11680  0047AA  0E00               	movlw	0
 11681  0047AC  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 11682  0047AE  0E00               	movlw	0
 11683  0047B0  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 11684  0047B2                     
 11685                           ; BSR set to: 0
 11686  0047B2  0E00               	movlw	0
 11687  0047B4  6F90               	movwf	___fldiv@grs& (0+255),b
 11688  0047B6  0E00               	movlw	0
 11689  0047B8  6F91               	movwf	(___fldiv@grs+1)& (0+255),b
 11690  0047BA  0E00               	movlw	0
 11691  0047BC  6F92               	movwf	(___fldiv@grs+2)& (0+255),b
 11692  0047BE  0E00               	movlw	0
 11693  0047C0  6F93               	movwf	(___fldiv@grs+3)& (0+255),b
 11694  0047C2                     
 11695                           ; BSR set to: 0
 11696  0047C2  0E00               	movlw	0
 11697  0047C4  6F95               	movwf	___fldiv@aexp& (0+255),b
 11698  0047C6  EF1D  F024         	goto	l900
 11699  0047CA                     l6676:
 11700                           
 11701                           ; BSR set to: 0
 11702  0047CA  5195               	movf	___fldiv@aexp& (0+255),w,b
 11703  0047CC  B4D8               	btfsc	status,2,c
 11704  0047CE  EFEB  F023         	goto	u6581
 11705  0047D2  EFED  F023         	goto	u6580
 11706  0047D6                     u6581:
 11707  0047D6  EF04  F024         	goto	l6684
 11708  0047DA                     u6580:
 11709  0047DA                     
 11710                           ; BSR set to: 0
 11711  0047DA  90D8               	bcf	status,0,c
 11712  0047DC  3789               	rlcf	___fldiv@rem& (0+255),f,b
 11713  0047DE  378A               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11714  0047E0  378B               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11715  0047E2  378C               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11716  0047E4  90D8               	bcf	status,0,c
 11717  0047E6  377D               	rlcf	___fldiv@b& (0+255),f,b
 11718  0047E8  377E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11719  0047EA  377F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11720  0047EC  3780               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11721  0047EE                     
 11722                           ; BSR set to: 0
 11723  0047EE  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11724  0047F0  EFFC  F023         	goto	u6591
 11725  0047F4  EFFE  F023         	goto	u6590
 11726  0047F8                     u6591:
 11727  0047F8  EFFF  F023         	goto	l903
 11728  0047FC                     u6590:
 11729  0047FC                     
 11730                           ; BSR set to: 0
 11731  0047FC  817D               	bsf	___fldiv@b& (0+255),0,b
 11732  0047FE                     l903:
 11733                           
 11734                           ; BSR set to: 0
 11735  0047FE  90D8               	bcf	status,0,c
 11736  004800  3790               	rlcf	___fldiv@grs& (0+255),f,b
 11737  004802  3791               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11738  004804  3792               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11739  004806  3793               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11740  004808                     l6684:
 11741                           
 11742                           ; BSR set to: 0
 11743  004808  5181               	movf	___fldiv@a& (0+255),w,b
 11744  00480A  5D89               	subwf	___fldiv@rem& (0+255),w,b
 11745  00480C  5182               	movf	(___fldiv@a+1)& (0+255),w,b
 11746  00480E  598A               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11747  004810  5183               	movf	(___fldiv@a+2)& (0+255),w,b
 11748  004812  598B               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11749  004814  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 11750  004816  598C               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11751  004818  A0D8               	btfss	status,0,c
 11752  00481A  EF11  F024         	goto	u6601
 11753  00481E  EF13  F024         	goto	u6600
 11754  004822                     u6601:
 11755  004822  EF1C  F024         	goto	l6690
 11756  004826                     u6600:
 11757  004826                     
 11758                           ; BSR set to: 0
 11759  004826  8D93               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11760  004828                     
 11761                           ; BSR set to: 0
 11762  004828  5181               	movf	___fldiv@a& (0+255),w,b
 11763  00482A  5F89               	subwf	___fldiv@rem& (0+255),f,b
 11764  00482C  5182               	movf	(___fldiv@a+1)& (0+255),w,b
 11765  00482E  5B8A               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11766  004830  5183               	movf	(___fldiv@a+2)& (0+255),w,b
 11767  004832  5B8B               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11768  004834  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 11769  004836  5B8C               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11770  004838                     l6690:
 11771                           
 11772                           ; BSR set to: 0
 11773  004838  2B95               	incf	___fldiv@aexp& (0+255),f,b
 11774  00483A                     l900:
 11775                           
 11776                           ; BSR set to: 0
 11777  00483A  0E19               	movlw	25
 11778  00483C  6595               	cpfsgt	___fldiv@aexp& (0+255),b
 11779  00483E  EF23  F024         	goto	u6611
 11780  004842  EF25  F024         	goto	u6610
 11781  004846                     u6611:
 11782  004846  EFE5  F023         	goto	l6676
 11783  00484A                     u6610:
 11784  00484A                     
 11785                           ; BSR set to: 0
 11786  00484A  5189               	movf	___fldiv@rem& (0+255),w,b
 11787  00484C  118A               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11788  00484E  118B               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11789  004850  118C               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11790  004852  B4D8               	btfsc	status,2,c
 11791  004854  EF2E  F024         	goto	u6621
 11792  004858  EF30  F024         	goto	u6620
 11793  00485C                     u6621:
 11794  00485C  EF48  F024         	goto	l6702
 11795  004860                     u6620:
 11796  004860                     
 11797                           ; BSR set to: 0
 11798  004860  8190               	bsf	___fldiv@grs& (0+255),0,b
 11799  004862  EF48  F024         	goto	l6702
 11800  004866                     l6696:
 11801                           
 11802                           ; BSR set to: 0
 11803  004866  90D8               	bcf	status,0,c
 11804  004868  377D               	rlcf	___fldiv@b& (0+255),f,b
 11805  00486A  377E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11806  00486C  377F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11807  00486E  3780               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11808  004870                     
 11809                           ; BSR set to: 0
 11810  004870  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11811  004872  EF3D  F024         	goto	u6631
 11812  004876  EF3F  F024         	goto	u6630
 11813  00487A                     u6631:
 11814  00487A  EF40  F024         	goto	l909
 11815  00487E                     u6630:
 11816  00487E                     
 11817                           ; BSR set to: 0
 11818  00487E  817D               	bsf	___fldiv@b& (0+255),0,b
 11819  004880                     l909:
 11820                           
 11821                           ; BSR set to: 0
 11822  004880  90D8               	bcf	status,0,c
 11823  004882  3790               	rlcf	___fldiv@grs& (0+255),f,b
 11824  004884  3791               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11825  004886  3792               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11826  004888  3793               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11827  00488A  078E               	decf	___fldiv@new_exp& (0+255),f,b
 11828  00488C  A0D8               	btfss	status,0,c
 11829  00488E  078F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11830  004890                     l6702:
 11831                           
 11832                           ; BSR set to: 0
 11833  004890  AF7F               	btfss	(___fldiv@b+2)& (0+255),7,b
 11834  004892  EF4D  F024         	goto	u6641
 11835  004896  EF4F  F024         	goto	u6640
 11836  00489A                     u6641:
 11837  00489A  EF33  F024         	goto	l6696
 11838  00489E                     u6640:
 11839  00489E                     
 11840                           ; BSR set to: 0
 11841  00489E  0E00               	movlw	0
 11842  0048A0  6F95               	movwf	___fldiv@aexp& (0+255),b
 11843  0048A2                     
 11844                           ; BSR set to: 0
 11845  0048A2  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11846  0048A4  EF56  F024         	goto	u6651
 11847  0048A8  EF58  F024         	goto	u6650
 11848  0048AC                     u6651:
 11849  0048AC  EF7C  F024         	goto	l911
 11850  0048B0                     u6650:
 11851  0048B0                     
 11852                           ; BSR set to: 0
 11853  0048B0  0EFF               	movlw	255
 11854  0048B2  1590               	andwf	___fldiv@grs& (0+255),w,b
 11855  0048B4  6F85               	movwf	??___fldiv& (0+255),b
 11856  0048B6  0EFF               	movlw	255
 11857  0048B8  1591               	andwf	(___fldiv@grs+1)& (0+255),w,b
 11858  0048BA  6F86               	movwf	(??___fldiv+1)& (0+255),b
 11859  0048BC  0EFF               	movlw	255
 11860  0048BE  1592               	andwf	(___fldiv@grs+2)& (0+255),w,b
 11861  0048C0  6F87               	movwf	(??___fldiv+2)& (0+255),b
 11862  0048C2  0E7F               	movlw	127
 11863  0048C4  1593               	andwf	(___fldiv@grs+3)& (0+255),w,b
 11864  0048C6  6F88               	movwf	(??___fldiv+3)& (0+255),b
 11865  0048C8  5185               	movf	??___fldiv& (0+255),w,b
 11866  0048CA  1186               	iorwf	(??___fldiv+1)& (0+255),w,b
 11867  0048CC  1187               	iorwf	(??___fldiv+2)& (0+255),w,b
 11868  0048CE  1188               	iorwf	(??___fldiv+3)& (0+255),w,b
 11869  0048D0  B4D8               	btfsc	status,2,c
 11870  0048D2  EF6D  F024         	goto	u6661
 11871  0048D6  EF6F  F024         	goto	u6660
 11872  0048DA                     u6661:
 11873  0048DA  EF73  F024         	goto	l912
 11874  0048DE                     u6660:
 11875  0048DE                     l6710:
 11876                           
 11877                           ; BSR set to: 0
 11878  0048DE  0E01               	movlw	1
 11879  0048E0  6F95               	movwf	___fldiv@aexp& (0+255),b
 11880  0048E2  EF7C  F024         	goto	l911
 11881  0048E6                     l912:
 11882                           
 11883                           ; BSR set to: 0
 11884  0048E6  A17D               	btfss	___fldiv@b& (0+255),0,b
 11885  0048E8  EF78  F024         	goto	u6671
 11886  0048EC  EF7A  F024         	goto	u6670
 11887  0048F0                     u6671:
 11888  0048F0  EF7C  F024         	goto	l911
 11889  0048F4                     u6670:
 11890  0048F4  EF6F  F024         	goto	l6710
 11891  0048F8                     l911:
 11892                           
 11893                           ; BSR set to: 0
 11894  0048F8  5195               	movf	___fldiv@aexp& (0+255),w,b
 11895  0048FA  B4D8               	btfsc	status,2,c
 11896  0048FC  EF82  F024         	goto	u6681
 11897  004900  EF84  F024         	goto	u6680
 11898  004904                     u6681:
 11899  004904  EFA8  F024         	goto	l6722
 11900  004908                     u6680:
 11901  004908                     
 11902                           ; BSR set to: 0
 11903  004908  0E01               	movlw	1
 11904  00490A  277D               	addwf	___fldiv@b& (0+255),f,b
 11905  00490C  0E00               	movlw	0
 11906  00490E  237E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 11907  004910  237F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 11908  004912  2380               	addwfc	(___fldiv@b+3)& (0+255),f,b
 11909  004914                     
 11910                           ; BSR set to: 0
 11911  004914  A180               	btfss	(___fldiv@b+3)& (0+255),0,b
 11912  004916  EF8F  F024         	goto	u6691
 11913  00491A  EF91  F024         	goto	u6690
 11914  00491E                     u6691:
 11915  00491E  EFA8  F024         	goto	l6722
 11916  004922                     u6690:
 11917  004922                     
 11918                           ; BSR set to: 0
 11919  004922  C07D  F085         	movff	___fldiv@b,??___fldiv
 11920  004926  C07E  F086         	movff	___fldiv@b+1,??___fldiv+1
 11921  00492A  C07F  F087         	movff	___fldiv@b+2,??___fldiv+2
 11922  00492E  C080  F088         	movff	___fldiv@b+3,??___fldiv+3
 11923  004932  3588               	rlcf	(??___fldiv+3)& (0+255),w,b
 11924  004934  3388               	rrcf	(??___fldiv+3)& (0+255),f,b
 11925  004936  3387               	rrcf	(??___fldiv+2)& (0+255),f,b
 11926  004938  3386               	rrcf	(??___fldiv+1)& (0+255),f,b
 11927  00493A  3385               	rrcf	??___fldiv& (0+255),f,b
 11928  00493C  C085  F07D         	movff	??___fldiv,___fldiv@b
 11929  004940  C086  F07E         	movff	??___fldiv+1,___fldiv@b+1
 11930  004944  C087  F07F         	movff	??___fldiv+2,___fldiv@b+2
 11931  004948  C088  F080         	movff	??___fldiv+3,___fldiv@b+3
 11932  00494C                     
 11933                           ; BSR set to: 0
 11934  00494C  4B8E               	infsnz	___fldiv@new_exp& (0+255),f,b
 11935  00494E  2B8F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11936  004950                     l6722:
 11937                           
 11938                           ; BSR set to: 0
 11939  004950  BF8F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11940  004952  EFB3  F024         	goto	u6701
 11941  004956  518F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11942  004958  E108               	bnz	u6700
 11943  00495A  298E               	incf	___fldiv@new_exp& (0+255),w,b
 11944  00495C  A0D8               	btfss	status,0,c
 11945  00495E  EFB3  F024         	goto	u6701
 11946  004962  EFB5  F024         	goto	u6700
 11947  004966                     u6701:
 11948  004966  EFC0  F024         	goto	l6726
 11949  00496A                     u6700:
 11950  00496A                     
 11951                           ; BSR set to: 0
 11952  00496A  0E00               	movlw	0
 11953  00496C  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11954  00496E  698E               	setf	___fldiv@new_exp& (0+255),b
 11955  004970  0E00               	movlw	0
 11956  004972  6F7D               	movwf	___fldiv@b& (0+255),b
 11957  004974  0E00               	movlw	0
 11958  004976  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 11959  004978  0E00               	movlw	0
 11960  00497A  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 11961  00497C  0E00               	movlw	0
 11962  00497E  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 11963  004980                     l6726:
 11964                           
 11965                           ; BSR set to: 0
 11966  004980  BF8F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11967  004982  EFCD  F024         	goto	u6710
 11968  004986  518F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11969  004988  E106               	bnz	u6711
 11970  00498A  058E               	decf	___fldiv@new_exp& (0+255),w,b
 11971  00498C  B0D8               	btfsc	status,0,c
 11972  00498E  EFCB  F024         	goto	u6711
 11973  004992  EFCD  F024         	goto	u6710
 11974  004996                     u6711:
 11975  004996  EFDB  F024         	goto	l6730
 11976  00499A                     u6710:
 11977  00499A                     
 11978                           ; BSR set to: 0
 11979  00499A  0E00               	movlw	0
 11980  00499C  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11981  00499E  0E00               	movlw	0
 11982  0049A0  6F8E               	movwf	___fldiv@new_exp& (0+255),b
 11983  0049A2  0E00               	movlw	0
 11984  0049A4  6F7D               	movwf	___fldiv@b& (0+255),b
 11985  0049A6  0E00               	movlw	0
 11986  0049A8  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 11987  0049AA  0E00               	movlw	0
 11988  0049AC  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 11989  0049AE  0E00               	movlw	0
 11990  0049B0  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 11991  0049B2  0E00               	movlw	0
 11992  0049B4  6F8D               	movwf	___fldiv@sign& (0+255),b
 11993  0049B6                     l6730:
 11994                           
 11995                           ; BSR set to: 0
 11996  0049B6  C08E  F094         	movff	___fldiv@new_exp,___fldiv@bexp
 11997  0049BA                     
 11998                           ; BSR set to: 0
 11999  0049BA  A194               	btfss	___fldiv@bexp& (0+255),0,b
 12000  0049BC  EFE2  F024         	goto	u6721
 12001  0049C0  EFE4  F024         	goto	u6720
 12002  0049C4                     u6721:
 12003  0049C4  EFE7  F024         	goto	l6736
 12004  0049C8                     u6720:
 12005  0049C8                     
 12006                           ; BSR set to: 0
 12007  0049C8  8F7F               	bsf	(___fldiv@b+2)& (0+255),7,b
 12008  0049CA  EFE8  F024         	goto	l6738
 12009  0049CE                     l6736:
 12010                           
 12011                           ; BSR set to: 0
 12012  0049CE  9F7F               	bcf	(___fldiv@b+2)& (0+255),7,b
 12013  0049D0                     l6738:
 12014                           
 12015                           ; BSR set to: 0
 12016  0049D0  90D8               	bcf	status,0,c
 12017  0049D2  3194               	rrcf	___fldiv@bexp& (0+255),w,b
 12018  0049D4  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 12019  0049D6  EF9E  F023         	goto	l6652
 12020  0049DA                     l898:
 12021                           
 12022                           ; BSR set to: 0
 12023  0049DA  0012               	return		;funcret
 12024  0049DC                     __end_of___fldiv:
 12025                           	callstack 0
 12026                           
 12027 ;; *************** function ___xxtofl *****************
 12028 ;; Defined at:
 12029 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12030 ;; Parameters:    Size  Location     Type
 12031 ;;  sign            1    wreg     unsigned char 
 12032 ;;  val             4   19[COMRAM] long 
 12033 ;; Auto vars:     Size  Location     Type
 12034 ;;  sign            1   27[COMRAM] unsigned char 
 12035 ;;  arg             4   29[COMRAM] unsigned long 
 12036 ;;  exp             1   28[COMRAM] unsigned char 
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  4   19[COMRAM] unsigned char 
 12039 ;; Registers used:
 12040 ;;		wreg, status,2, status,0
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/0
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12047 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12048 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12049 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;Total ram usage:       14 bytes
 12051 ;; Hardware stack levels used: 1
 12052 ;; Hardware stack levels required when called: 3
 12053 ;; This function calls:
 12054 ;;		Nothing
 12055 ;; This function is called by:
 12056 ;;		_MPU6050_Read
 12057 ;;		_TMR0handler
 12058 ;; This function uses a non-reentrant model
 12059 ;;
 12060                           
 12061                           	psect	text34
 12062  004BF2                     __ptext34:
 12063                           	callstack 0
 12064  004BF2                     ___xxtofl:
 12065                           	callstack 26
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;incstack = 0
 12069                           ;___xxtofl@sign stored from wreg
 12070  004BF2  6E1C               	movwf	___xxtofl@sign^0,c
 12071  004BF4  501C               	movf	___xxtofl@sign^0,w,c
 12072  004BF6  B4D8               	btfsc	status,2,c
 12073  004BF8  EF00  F026         	goto	u5731
 12074  004BFC  EF02  F026         	goto	u5730
 12075  004C00                     u5731:
 12076  004C00  EF24  F026         	goto	l971
 12077  004C04                     u5730:
 12078  004C04  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
 12079  004C06  EF09  F026         	goto	u5740
 12080  004C0A  EF07  F026         	goto	u5741
 12081  004C0E                     u5741:
 12082  004C0E  EF24  F026         	goto	l971
 12083  004C12                     u5740:
 12084  004C12  C014  F018         	movff	___xxtofl@val,??___xxtofl
 12085  004C16  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
 12086  004C1A  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
 12087  004C1E  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
 12088  004C22  1E18               	comf	??___xxtofl^0,f,c
 12089  004C24  1E19               	comf	(??___xxtofl+1)^0,f,c
 12090  004C26  1E1A               	comf	(??___xxtofl+2)^0,f,c
 12091  004C28  1E1B               	comf	(??___xxtofl+3)^0,f,c
 12092  004C2A  2A18               	incf	??___xxtofl^0,f,c
 12093  004C2C  0E00               	movlw	0
 12094  004C2E  2219               	addwfc	(??___xxtofl+1)^0,f,c
 12095  004C30  221A               	addwfc	(??___xxtofl+2)^0,f,c
 12096  004C32  221B               	addwfc	(??___xxtofl+3)^0,f,c
 12097  004C34  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
 12098  004C38  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
 12099  004C3C  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
 12100  004C40  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
 12101  004C44  EF2C  F026         	goto	l5570
 12102  004C48                     l971:
 12103  004C48  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
 12104  004C4C  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12105  004C50  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12106  004C54  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12107  004C58                     l5570:
 12108  004C58  5014               	movf	___xxtofl@val^0,w,c
 12109  004C5A  1015               	iorwf	(___xxtofl@val+1)^0,w,c
 12110  004C5C  1016               	iorwf	(___xxtofl@val+2)^0,w,c
 12111  004C5E  1017               	iorwf	(___xxtofl@val+3)^0,w,c
 12112  004C60  A4D8               	btfss	status,2,c
 12113  004C62  EF35  F026         	goto	u5751
 12114  004C66  EF37  F026         	goto	u5750
 12115  004C6A                     u5751:
 12116  004C6A  EF41  F026         	goto	l5576
 12117  004C6E                     u5750:
 12118  004C6E  0E00               	movlw	0
 12119  004C70  6E14               	movwf	?___xxtofl^0,c
 12120  004C72  0E00               	movlw	0
 12121  004C74  6E15               	movwf	(?___xxtofl+1)^0,c
 12122  004C76  0E00               	movlw	0
 12123  004C78  6E16               	movwf	(?___xxtofl+2)^0,c
 12124  004C7A  0E00               	movlw	0
 12125  004C7C  6E17               	movwf	(?___xxtofl+3)^0,c
 12126  004C7E  EFD2  F026         	goto	l974
 12127  004C82                     l5576:
 12128  004C82  0E96               	movlw	150
 12129  004C84  6E1D               	movwf	___xxtofl@exp^0,c
 12130  004C86  EF4B  F026         	goto	l5580
 12131  004C8A                     l5578:
 12132  004C8A  2A1D               	incf	___xxtofl@exp^0,f,c
 12133  004C8C  90D8               	bcf	status,0,c
 12134  004C8E  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
 12135  004C90  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
 12136  004C92  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
 12137  004C94  321E               	rrcf	___xxtofl@arg^0,f,c
 12138  004C96                     l5580:
 12139  004C96  0E00               	movlw	0
 12140  004C98  141E               	andwf	___xxtofl@arg^0,w,c
 12141  004C9A  6E18               	movwf	??___xxtofl^0,c
 12142  004C9C  0E00               	movlw	0
 12143  004C9E  141F               	andwf	(___xxtofl@arg+1)^0,w,c
 12144  004CA0  6E19               	movwf	(??___xxtofl+1)^0,c
 12145  004CA2  0E00               	movlw	0
 12146  004CA4  1420               	andwf	(___xxtofl@arg+2)^0,w,c
 12147  004CA6  6E1A               	movwf	(??___xxtofl+2)^0,c
 12148  004CA8  0EFE               	movlw	254
 12149  004CAA  1421               	andwf	(___xxtofl@arg+3)^0,w,c
 12150  004CAC  6E1B               	movwf	(??___xxtofl+3)^0,c
 12151  004CAE  5018               	movf	??___xxtofl^0,w,c
 12152  004CB0  1019               	iorwf	(??___xxtofl+1)^0,w,c
 12153  004CB2  101A               	iorwf	(??___xxtofl+2)^0,w,c
 12154  004CB4  101B               	iorwf	(??___xxtofl+3)^0,w,c
 12155  004CB6  A4D8               	btfss	status,2,c
 12156  004CB8  EF60  F026         	goto	u5761
 12157  004CBC  EF62  F026         	goto	u5760
 12158  004CC0                     u5761:
 12159  004CC0  EF45  F026         	goto	l5578
 12160  004CC4                     u5760:
 12161  004CC4  EF70  F026         	goto	l978
 12162  004CC8                     l5582:
 12163  004CC8  2A1D               	incf	___xxtofl@exp^0,f,c
 12164  004CCA  0E01               	movlw	1
 12165  004CCC  261E               	addwf	___xxtofl@arg^0,f,c
 12166  004CCE  0E00               	movlw	0
 12167  004CD0  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
 12168  004CD2  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
 12169  004CD4  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
 12170  004CD6  90D8               	bcf	status,0,c
 12171  004CD8  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
 12172  004CDA  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
 12173  004CDC  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
 12174  004CDE  321E               	rrcf	___xxtofl@arg^0,f,c
 12175  004CE0                     l978:
 12176  004CE0  0E00               	movlw	0
 12177  004CE2  141E               	andwf	___xxtofl@arg^0,w,c
 12178  004CE4  6E18               	movwf	??___xxtofl^0,c
 12179  004CE6  0E00               	movlw	0
 12180  004CE8  141F               	andwf	(___xxtofl@arg+1)^0,w,c
 12181  004CEA  6E19               	movwf	(??___xxtofl+1)^0,c
 12182  004CEC  0E00               	movlw	0
 12183  004CEE  1420               	andwf	(___xxtofl@arg+2)^0,w,c
 12184  004CF0  6E1A               	movwf	(??___xxtofl+2)^0,c
 12185  004CF2  0EFF               	movlw	255
 12186  004CF4  1421               	andwf	(___xxtofl@arg+3)^0,w,c
 12187  004CF6  6E1B               	movwf	(??___xxtofl+3)^0,c
 12188  004CF8  5018               	movf	??___xxtofl^0,w,c
 12189  004CFA  1019               	iorwf	(??___xxtofl+1)^0,w,c
 12190  004CFC  101A               	iorwf	(??___xxtofl+2)^0,w,c
 12191  004CFE  101B               	iorwf	(??___xxtofl+3)^0,w,c
 12192  004D00  A4D8               	btfss	status,2,c
 12193  004D02  EF85  F026         	goto	u5771
 12194  004D06  EF87  F026         	goto	u5770
 12195  004D0A                     u5771:
 12196  004D0A  EF64  F026         	goto	l5582
 12197  004D0E                     u5770:
 12198  004D0E  EF8F  F026         	goto	l5590
 12199  004D12                     l5588:
 12200  004D12  061D               	decf	___xxtofl@exp^0,f,c
 12201  004D14  90D8               	bcf	status,0,c
 12202  004D16  361E               	rlcf	___xxtofl@arg^0,f,c
 12203  004D18  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
 12204  004D1A  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
 12205  004D1C  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
 12206  004D1E                     l5590:
 12207  004D1E  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
 12208  004D20  EF94  F026         	goto	u5781
 12209  004D24  EF96  F026         	goto	u5780
 12210  004D28                     u5781:
 12211  004D28  EF9E  F026         	goto	l985
 12212  004D2C                     u5780:
 12213  004D2C  0E02               	movlw	2
 12214  004D2E  601D               	cpfslt	___xxtofl@exp^0,c
 12215  004D30  EF9C  F026         	goto	u5791
 12216  004D34  EF9E  F026         	goto	u5790
 12217  004D38                     u5791:
 12218  004D38  EF89  F026         	goto	l5588
 12219  004D3C                     u5790:
 12220  004D3C                     l985:
 12221  004D3C  B01D               	btfsc	___xxtofl@exp^0,0,c
 12222  004D3E  EFA3  F026         	goto	u5801
 12223  004D42  EFA5  F026         	goto	u5800
 12224  004D46                     u5801:
 12225  004D46  EFA6  F026         	goto	l5596
 12226  004D4A                     u5800:
 12227  004D4A  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
 12228  004D4C                     l5596:
 12229  004D4C  90D8               	bcf	status,0,c
 12230  004D4E  321D               	rrcf	___xxtofl@exp^0,f,c
 12231  004D50  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
 12232  004D54  6A19               	clrf	(??___xxtofl+1)^0,c
 12233  004D56  6A1A               	clrf	(??___xxtofl+2)^0,c
 12234  004D58  6A1B               	clrf	(??___xxtofl+3)^0,c
 12235  004D5A  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
 12236  004D5E  6A1A               	clrf	(??___xxtofl+2)^0,c
 12237  004D60  6A19               	clrf	(??___xxtofl+1)^0,c
 12238  004D62  6A18               	clrf	??___xxtofl^0,c
 12239  004D64  5018               	movf	??___xxtofl^0,w,c
 12240  004D66  121E               	iorwf	___xxtofl@arg^0,f,c
 12241  004D68  5019               	movf	(??___xxtofl+1)^0,w,c
 12242  004D6A  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
 12243  004D6C  501A               	movf	(??___xxtofl+2)^0,w,c
 12244  004D6E  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
 12245  004D70  501B               	movf	(??___xxtofl+3)^0,w,c
 12246  004D72  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
 12247  004D74  501C               	movf	___xxtofl@sign^0,w,c
 12248  004D76  B4D8               	btfsc	status,2,c
 12249  004D78  EFC0  F026         	goto	u5811
 12250  004D7C  EFC2  F026         	goto	u5810
 12251  004D80                     u5811:
 12252  004D80  EFCA  F026         	goto	l5606
 12253  004D84                     u5810:
 12254  004D84  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
 12255  004D86  EFC9  F026         	goto	u5820
 12256  004D8A  EFC7  F026         	goto	u5821
 12257  004D8E                     u5821:
 12258  004D8E  EFCA  F026         	goto	l5606
 12259  004D92                     u5820:
 12260  004D92  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
 12261  004D94                     l5606:
 12262  004D94  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
 12263  004D98  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
 12264  004D9C  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
 12265  004DA0  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
 12266  004DA4                     l974:
 12267  004DA4  0012               	return		;funcret
 12268  004DA6                     __end_of___xxtofl:
 12269                           	callstack 0
 12270                           
 12271 ;; *************** function _UART_Write_String *****************
 12272 ;; Defined at:
 12273 ;;		line 516 in file "Le_Jason_Project.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;  buf             2   20[COMRAM] PTR unsigned char 
 12276 ;;		 -> MPU6050_Read@buffer(40), 
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;  i               2   22[COMRAM] int 
 12279 ;; Return value:  Size  Location     Type
 12280 ;;                  1    wreg      void 
 12281 ;; Registers used:
 12282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12283 ;; Tracked objects:
 12284 ;;		On entry : 0/0
 12285 ;;		On exit  : 0/0
 12286 ;;		Unchanged: 0/0
 12287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12289 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12291 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12292 ;;Total ram usage:        4 bytes
 12293 ;; Hardware stack levels used: 1
 12294 ;; Hardware stack levels required when called: 4
 12295 ;; This function calls:
 12296 ;;		_UART_Write
 12297 ;; This function is called by:
 12298 ;;		_MPU6050_Read
 12299 ;; This function uses a non-reentrant model
 12300 ;;
 12301                           
 12302                           	psect	text35
 12303  00614E                     __ptext35:
 12304                           	callstack 0
 12305  00614E                     _UART_Write_String:
 12306                           	callstack 25
 12307  00614E                     
 12308                           ;Le_Jason_Project.c: 517:     int i = 0;
 12309  00614E  0E00               	movlw	0
 12310  006150  6E18               	movwf	(UART_Write_String@i+1)^0,c
 12311  006152  0E00               	movlw	0
 12312  006154  6E17               	movwf	UART_Write_String@i^0,c
 12313                           
 12314                           ;Le_Jason_Project.c: 518:     while(buf[i] != '\0')
 12315  006156  EFB8  F030         	goto	l5562
 12316  00615A                     l5558:
 12317                           
 12318                           ;Le_Jason_Project.c: 519:         UART_Write(buf[i++]);
 12319  00615A  5017               	movf	UART_Write_String@i^0,w,c
 12320  00615C  2415               	addwf	UART_Write_String@buf^0,w,c
 12321  00615E  6ED9               	movwf	fsr2l,c
 12322  006160  5018               	movf	(UART_Write_String@i+1)^0,w,c
 12323  006162  2016               	addwfc	(UART_Write_String@buf+1)^0,w,c
 12324  006164  6EDA               	movwf	fsr2h,c
 12325  006166  50DF               	movf	indf2,w,c
 12326  006168  EC86  F031         	call	_UART_Write
 12327  00616C  4A17               	infsnz	UART_Write_String@i^0,f,c
 12328  00616E  2A18               	incf	(UART_Write_String@i+1)^0,f,c
 12329  006170                     l5562:
 12330                           
 12331                           ;Le_Jason_Project.c: 518:     while(buf[i] != '\0')
 12332  006170  5017               	movf	UART_Write_String@i^0,w,c
 12333  006172  2415               	addwf	UART_Write_String@buf^0,w,c
 12334  006174  6ED9               	movwf	fsr2l,c
 12335  006176  5018               	movf	(UART_Write_String@i+1)^0,w,c
 12336  006178  2016               	addwfc	(UART_Write_String@buf+1)^0,w,c
 12337  00617A  6EDA               	movwf	fsr2h,c
 12338  00617C  50DF               	movf	indf2,w,c
 12339  00617E  A4D8               	btfss	status,2,c
 12340  006180  EFC4  F030         	goto	u5721
 12341  006184  EFC6  F030         	goto	u5720
 12342  006188                     u5721:
 12343  006188  EFAD  F030         	goto	l5558
 12344  00618C                     u5720:
 12345  00618C  0012               	return		;funcret
 12346  00618E                     __end_of_UART_Write_String:
 12347                           	callstack 0
 12348                           
 12349 ;; *************** function _UART_Write *****************
 12350 ;; Defined at:
 12351 ;;		line 510 in file "Le_Jason_Project.c"
 12352 ;; Parameters:    Size  Location     Type
 12353 ;;  data            1    wreg     unsigned char 
 12354 ;; Auto vars:     Size  Location     Type
 12355 ;;  data            1   19[COMRAM] unsigned char 
 12356 ;; Return value:  Size  Location     Type
 12357 ;;                  1    wreg      void 
 12358 ;; Registers used:
 12359 ;;		wreg
 12360 ;; Tracked objects:
 12361 ;;		On entry : 0/0
 12362 ;;		On exit  : 0/0
 12363 ;;		Unchanged: 0/0
 12364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12369 ;;Total ram usage:        1 bytes
 12370 ;; Hardware stack levels used: 1
 12371 ;; Hardware stack levels required when called: 3
 12372 ;; This function calls:
 12373 ;;		Nothing
 12374 ;; This function is called by:
 12375 ;;		_UART_Write_String
 12376 ;; This function uses a non-reentrant model
 12377 ;;
 12378                           
 12379                           	psect	text36
 12380  00630C                     __ptext36:
 12381                           	callstack 0
 12382  00630C                     _UART_Write:
 12383                           	callstack 25
 12384                           
 12385                           ;incstack = 0
 12386                           ;UART_Write@data stored from wreg
 12387  00630C  6E14               	movwf	UART_Write@data^0,c
 12388  00630E                     l304:
 12389                           
 12390                           ;Le_Jason_Project.c: 511:     while(PIR1bits.TX1IF == 0){
 12391  00630E  A89E               	btfss	158,4,c	;volatile
 12392  006310  EF8C  F031         	goto	u5391
 12393  006314  EF8E  F031         	goto	u5390
 12394  006318                     u5391:
 12395  006318  EF87  F031         	goto	l304
 12396  00631C                     u5390:
 12397  00631C                     
 12398                           ;Le_Jason_Project.c: 513:     TXREG1 = data;
 12399  00631C  C014  FFAD         	movff	UART_Write@data,4013	;volatile
 12400  006320  0012               	return		;funcret
 12401  006322                     __end_of_UART_Write:
 12402                           	callstack 0
 12403                           
 12404 ;; *************** function _Servo2 *****************
 12405 ;; Defined at:
 12406 ;;		line 334 in file "Le_Jason_Project.c"
 12407 ;; Parameters:    Size  Location     Type
 12408 ;;  angle           2   37[BANK0 ] unsigned int 
 12409 ;; Auto vars:     Size  Location     Type
 12410 ;;  temp            2   47[BANK0 ] unsigned int 
 12411 ;; Return value:  Size  Location     Type
 12412 ;;                  1    wreg      void 
 12413 ;; Registers used:
 12414 ;;		wreg, status,2, status,0, cstack
 12415 ;; Tracked objects:
 12416 ;;		On entry : 0/0
 12417 ;;		On exit  : 0/0
 12418 ;;		Unchanged: 0/0
 12419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12422 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12423 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12424 ;;Total ram usage:       12 bytes
 12425 ;; Hardware stack levels used: 1
 12426 ;; Hardware stack levels required when called: 5
 12427 ;; This function calls:
 12428 ;;		_map
 12429 ;; This function is called by:
 12430 ;;		_main
 12431 ;;		_MPU6050_Read
 12432 ;; This function uses a non-reentrant model
 12433 ;;
 12434                           
 12435                           	psect	text37
 12436  005AF8                     __ptext37:
 12437                           	callstack 0
 12438  005AF8                     _Servo2:
 12439                           	callstack 25
 12440  005AF8                     
 12441                           ;Le_Jason_Project.c: 339:     SSP1CON2bits.SEN = 1;
 12442  005AF8  0100               	movlb	0	; () banked
 12443  005AFA  5186               	movf	(Servo2@angle+1)& (0+255),w,b
 12444  005AFC  E109               	bnz	u5530
 12445  005AFE  0EB5               	movlw	181
 12446  005B00  5D85               	subwf	Servo2@angle& (0+255),w,b
 12447  005B02  A0D8               	btfss	status,0,c
 12448  005B04  EF86  F02D         	goto	u5531
 12449  005B08  EF88  F02D         	goto	u5530
 12450  005B0C                     u5531:
 12451  005B0C  EF8C  F02D         	goto	l5326
 12452  005B10                     u5530:
 12453  005B10                     
 12454                           ; BSR set to: 0
 12455                           ;Le_Jason_Project.c: 340: }
 12456  005B10  0E00               	movlw	0
 12457  005B12  6F86               	movwf	(Servo2@angle+1)& (0+255),b
 12458  005B14  0EB4               	movlw	180
 12459  005B16  6F85               	movwf	Servo2@angle& (0+255),b
 12460  005B18                     l5326:
 12461                           
 12462                           ; BSR set to: 0
 12463                           ;Le_Jason_Project.c: 345:     I2C_Master_Write(add);
 12464  005B18  C043  F08F         	movff	_Servo2_on,Servo2@temp
 12465  005B1C  C044  F090         	movff	_Servo2_on+1,Servo2@temp+1
 12466  005B20                     
 12467                           ; BSR set to: 0
 12468                           ;Le_Jason_Project.c: 346: }
 12469  005B20  C085  F021         	movff	Servo2@angle,map@value
 12470  005B24  C086  F022         	movff	Servo2@angle+1,map@value+1
 12471  005B28  0E00               	movlw	0
 12472  005B2A  6E24               	movwf	(map@valuemin+1)^0,c
 12473  005B2C  0E00               	movlw	0
 12474  005B2E  6E23               	movwf	map@valuemin^0,c
 12475  005B30  0E00               	movlw	0
 12476  005B32  6E26               	movwf	(map@valuemax+1)^0,c
 12477  005B34  0EB4               	movlw	180
 12478  005B36  6E25               	movwf	map@valuemax^0,c
 12479  005B38  0E07               	movlw	7
 12480  005B3A  6E28               	movwf	(map@newmin+1)^0,c
 12481  005B3C  0ED0               	movlw	208
 12482  005B3E  6E27               	movwf	map@newmin^0,c
 12483  005B40  0E25               	movlw	37
 12484  005B42  6E2A               	movwf	(map@newmax+1)^0,c
 12485  005B44  0E80               	movlw	128
 12486  005B46  6E29               	movwf	map@newmax^0,c
 12487  005B48  EC74  F02E         	call	_map	;wreg free
 12488  005B4C  C021  F043         	movff	?_map,_Servo2_on
 12489  005B50  C022  F044         	movff	?_map+1,_Servo2_on+1
 12490  005B54  6A45               	clrf	(_Servo2_on+2)^0,c
 12491  005B56  6A46               	clrf	(_Servo2_on+3)^0,c
 12492  005B58                     
 12493                           ;Le_Jason_Project.c: 347: 
 12494  005B58  0100               	movlb	0	; () banked
 12495  005B5A  518F               	movf	Servo2@temp& (0+255),w,b
 12496  005B5C  6F87               	movwf	??_Servo2& (0+255),b
 12497  005B5E  5190               	movf	(Servo2@temp+1)& (0+255),w,b
 12498  005B60  6F88               	movwf	(??_Servo2+1)& (0+255),b
 12499  005B62  6B89               	clrf	(??_Servo2+2)& (0+255),b
 12500  005B64  6B8A               	clrf	(??_Servo2+3)& (0+255),b
 12501  005B66  5187               	movf	??_Servo2& (0+255),w,b
 12502  005B68  5C43               	subwf	_Servo2_on^0,w,c
 12503  005B6A  6F8B               	movwf	(??_Servo2+4)& (0+255),b
 12504  005B6C  5188               	movf	(??_Servo2+1)& (0+255),w,b
 12505  005B6E  5844               	subwfb	(_Servo2_on+1)^0,w,c
 12506  005B70  6F8C               	movwf	(??_Servo2+5)& (0+255),b
 12507  005B72  5189               	movf	(??_Servo2+2)& (0+255),w,b
 12508  005B74  5845               	subwfb	(_Servo2_on+2)^0,w,c
 12509  005B76  6F8D               	movwf	(??_Servo2+6)& (0+255),b
 12510  005B78  518A               	movf	(??_Servo2+3)& (0+255),w,b
 12511  005B7A  5846               	subwfb	(_Servo2_on+3)^0,w,c
 12512  005B7C  6F8E               	movwf	(??_Servo2+7)& (0+255),b
 12513  005B7E  518B               	movf	(??_Servo2+4)& (0+255),w,b
 12514  005B80  0101               	movlb	1	; () banked
 12515  005B82  5FC8               	subwf	_Servo2_off& (0+255),f,b
 12516  005B84  0100               	movlb	0	; () banked
 12517  005B86  518C               	movf	(??_Servo2+5)& (0+255),w,b
 12518  005B88  0101               	movlb	1	; () banked
 12519  005B8A  5BC9               	subwfb	(_Servo2_off+1)& (0+255),f,b
 12520  005B8C  0100               	movlb	0	; () banked
 12521  005B8E  518D               	movf	(??_Servo2+6)& (0+255),w,b
 12522  005B90  0101               	movlb	1	; () banked
 12523  005B92  5BCA               	subwfb	(_Servo2_off+2)& (0+255),f,b
 12524  005B94  0100               	movlb	0	; () banked
 12525  005B96  518E               	movf	(??_Servo2+7)& (0+255),w,b
 12526  005B98  0101               	movlb	1	; () banked
 12527  005B9A  5BCB               	subwfb	(_Servo2_off+3)& (0+255),f,b
 12528  005B9C                     
 12529                           ; BSR set to: 1
 12530  005B9C  0012               	return		;funcret
 12531  005B9E                     __end_of_Servo2:
 12532                           	callstack 0
 12533                           
 12534 ;; *************** function _Servo1 *****************
 12535 ;; Defined at:
 12536 ;;		line 319 in file "Le_Jason_Project.c"
 12537 ;; Parameters:    Size  Location     Type
 12538 ;;  angle           2   37[BANK0 ] unsigned int 
 12539 ;; Auto vars:     Size  Location     Type
 12540 ;;  temp            2   47[BANK0 ] unsigned int 
 12541 ;; Return value:  Size  Location     Type
 12542 ;;                  1    wreg      void 
 12543 ;; Registers used:
 12544 ;;		wreg, status,2, status,0, cstack
 12545 ;; Tracked objects:
 12546 ;;		On entry : 0/0
 12547 ;;		On exit  : 0/0
 12548 ;;		Unchanged: 0/0
 12549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12550 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12552 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12553 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12554 ;;Total ram usage:       12 bytes
 12555 ;; Hardware stack levels used: 1
 12556 ;; Hardware stack levels required when called: 5
 12557 ;; This function calls:
 12558 ;;		_map
 12559 ;; This function is called by:
 12560 ;;		_main
 12561 ;;		_MPU6050_Read
 12562 ;; This function uses a non-reentrant model
 12563 ;;
 12564                           
 12565                           	psect	text38
 12566  005B9E                     __ptext38:
 12567                           	callstack 0
 12568  005B9E                     _Servo1:
 12569                           	callstack 25
 12570  005B9E                     
 12571                           ;Le_Jason_Project.c: 324:     if(angle < 0){
 12572  005B9E  0100               	movlb	0	; () banked
 12573  005BA0  5186               	movf	(Servo1@angle+1)& (0+255),w,b
 12574  005BA2  E109               	bnz	u5520
 12575  005BA4  0EB5               	movlw	181
 12576  005BA6  5D85               	subwf	Servo1@angle& (0+255),w,b
 12577  005BA8  A0D8               	btfss	status,0,c
 12578  005BAA  EFD9  F02D         	goto	u5521
 12579  005BAE  EFDB  F02D         	goto	u5520
 12580  005BB2                     u5521:
 12581  005BB2  EFDF  F02D         	goto	l5310
 12582  005BB6                     u5520:
 12583  005BB6                     
 12584                           ; BSR set to: 0
 12585                           ;Le_Jason_Project.c: 325:         angle = 0;
 12586  005BB6  0E00               	movlw	0
 12587  005BB8  6F86               	movwf	(Servo1@angle+1)& (0+255),b
 12588  005BBA  0EB4               	movlw	180
 12589  005BBC  6F85               	movwf	Servo1@angle& (0+255),b
 12590  005BBE                     l5310:
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;Le_Jason_Project.c: 330: }
 12594  005BBE  C047  F08F         	movff	_Servo1_on,Servo1@temp
 12595  005BC2  C048  F090         	movff	_Servo1_on+1,Servo1@temp+1
 12596  005BC6                     
 12597                           ; BSR set to: 0
 12598                           ;Le_Jason_Project.c: 331: 
 12599  005BC6  C085  F021         	movff	Servo1@angle,map@value
 12600  005BCA  C086  F022         	movff	Servo1@angle+1,map@value+1
 12601  005BCE  0E00               	movlw	0
 12602  005BD0  6E24               	movwf	(map@valuemin+1)^0,c
 12603  005BD2  0E00               	movlw	0
 12604  005BD4  6E23               	movwf	map@valuemin^0,c
 12605  005BD6  0E00               	movlw	0
 12606  005BD8  6E26               	movwf	(map@valuemax+1)^0,c
 12607  005BDA  0EB4               	movlw	180
 12608  005BDC  6E25               	movwf	map@valuemax^0,c
 12609  005BDE  0E07               	movlw	7
 12610  005BE0  6E28               	movwf	(map@newmin+1)^0,c
 12611  005BE2  0ED0               	movlw	208
 12612  005BE4  6E27               	movwf	map@newmin^0,c
 12613  005BE6  0E25               	movlw	37
 12614  005BE8  6E2A               	movwf	(map@newmax+1)^0,c
 12615  005BEA  0E80               	movlw	128
 12616  005BEC  6E29               	movwf	map@newmax^0,c
 12617  005BEE  EC74  F02E         	call	_map	;wreg free
 12618  005BF2  C021  F047         	movff	?_map,_Servo1_on
 12619  005BF6  C022  F048         	movff	?_map+1,_Servo1_on+1
 12620  005BFA  6A49               	clrf	(_Servo1_on+2)^0,c
 12621  005BFC  6A4A               	clrf	(_Servo1_on+3)^0,c
 12622  005BFE                     
 12623                           ;Le_Jason_Project.c: 332: void I2C_Master_Wait(void){
 12624  005BFE  0100               	movlb	0	; () banked
 12625  005C00  518F               	movf	Servo1@temp& (0+255),w,b
 12626  005C02  6F87               	movwf	??_Servo1& (0+255),b
 12627  005C04  5190               	movf	(Servo1@temp+1)& (0+255),w,b
 12628  005C06  6F88               	movwf	(??_Servo1+1)& (0+255),b
 12629  005C08  6B89               	clrf	(??_Servo1+2)& (0+255),b
 12630  005C0A  6B8A               	clrf	(??_Servo1+3)& (0+255),b
 12631  005C0C  5187               	movf	??_Servo1& (0+255),w,b
 12632  005C0E  5C47               	subwf	_Servo1_on^0,w,c
 12633  005C10  6F8B               	movwf	(??_Servo1+4)& (0+255),b
 12634  005C12  5188               	movf	(??_Servo1+1)& (0+255),w,b
 12635  005C14  5848               	subwfb	(_Servo1_on+1)^0,w,c
 12636  005C16  6F8C               	movwf	(??_Servo1+5)& (0+255),b
 12637  005C18  5189               	movf	(??_Servo1+2)& (0+255),w,b
 12638  005C1A  5849               	subwfb	(_Servo1_on+2)^0,w,c
 12639  005C1C  6F8D               	movwf	(??_Servo1+6)& (0+255),b
 12640  005C1E  518A               	movf	(??_Servo1+3)& (0+255),w,b
 12641  005C20  584A               	subwfb	(_Servo1_on+3)^0,w,c
 12642  005C22  6F8E               	movwf	(??_Servo1+7)& (0+255),b
 12643  005C24  518B               	movf	(??_Servo1+4)& (0+255),w,b
 12644  005C26  0101               	movlb	1	; () banked
 12645  005C28  5FCC               	subwf	_Servo1_off& (0+255),f,b
 12646  005C2A  0100               	movlb	0	; () banked
 12647  005C2C  518C               	movf	(??_Servo1+5)& (0+255),w,b
 12648  005C2E  0101               	movlb	1	; () banked
 12649  005C30  5BCD               	subwfb	(_Servo1_off+1)& (0+255),f,b
 12650  005C32  0100               	movlb	0	; () banked
 12651  005C34  518D               	movf	(??_Servo1+6)& (0+255),w,b
 12652  005C36  0101               	movlb	1	; () banked
 12653  005C38  5BCE               	subwfb	(_Servo1_off+2)& (0+255),f,b
 12654  005C3A  0100               	movlb	0	; () banked
 12655  005C3C  518E               	movf	(??_Servo1+7)& (0+255),w,b
 12656  005C3E  0101               	movlb	1	; () banked
 12657  005C40  5BCF               	subwfb	(_Servo1_off+3)& (0+255),f,b
 12658  005C42                     
 12659                           ; BSR set to: 1
 12660  005C42  0012               	return		;funcret
 12661  005C44                     __end_of_Servo1:
 12662                           	callstack 0
 12663                           
 12664 ;; *************** function _map *****************
 12665 ;; Defined at:
 12666 ;;		line 312 in file "Le_Jason_Project.c"
 12667 ;; Parameters:    Size  Location     Type
 12668 ;;  value           2   32[COMRAM] unsigned int 
 12669 ;;  valuemin        2   34[COMRAM] unsigned int 
 12670 ;;  valuemax        2   36[COMRAM] unsigned int 
 12671 ;;  newmin          2   38[COMRAM] unsigned int 
 12672 ;;  newmax          2   40[COMRAM] unsigned int 
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;  second          4   44[COMRAM] unsigned long 
 12675 ;;  third           2   50[COMRAM] unsigned int 
 12676 ;;  first           2   48[COMRAM] unsigned int 
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  2   32[COMRAM] unsigned int 
 12679 ;; Registers used:
 12680 ;;		wreg, status,2, status,0, cstack
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12686 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12687 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12689 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;Total ram usage:       20 bytes
 12691 ;; Hardware stack levels used: 1
 12692 ;; Hardware stack levels required when called: 4
 12693 ;; This function calls:
 12694 ;;		___lldiv
 12695 ;;		___lmul
 12696 ;; This function is called by:
 12697 ;;		_Servo1
 12698 ;;		_Servo2
 12699 ;; This function uses a non-reentrant model
 12700 ;;
 12701                           
 12702                           	psect	text39
 12703  005CE8                     __ptext39:
 12704                           	callstack 0
 12705  005CE8                     _map:
 12706                           	callstack 25
 12707  005CE8                     
 12708                           ;Le_Jason_Project.c: 313:     Servo1_on = map(angle,0,180,2000,9600);
 12709  005CE8  5023               	movf	map@valuemin^0,w,c
 12710  005CEA  5C21               	subwf	map@value^0,w,c
 12711  005CEC  6E31               	movwf	map@first^0,c
 12712  005CEE  5024               	movf	(map@valuemin+1)^0,w,c
 12713  005CF0  5822               	subwfb	(map@value+1)^0,w,c
 12714  005CF2  6E32               	movwf	(map@first+1)^0,c
 12715  005CF4                     
 12716                           ;Le_Jason_Project.c: 314:     Servo1_off -= Servo1_on - temp;
 12717  005CF4  C031  F014         	movff	map@first,___lmul@multiplier
 12718  005CF8  C032  F015         	movff	map@first+1,___lmul@multiplier+1
 12719  005CFC  6A16               	clrf	(___lmul@multiplier+2)^0,c
 12720  005CFE  6A17               	clrf	(___lmul@multiplier+3)^0,c
 12721  005D00  5027               	movf	map@newmin^0,w,c
 12722  005D02  5C29               	subwf	map@newmax^0,w,c
 12723  005D04  6E18               	movwf	___lmul@multiplicand^0,c
 12724  005D06  5028               	movf	(map@newmin+1)^0,w,c
 12725  005D08  582A               	subwfb	(map@newmax+1)^0,w,c
 12726  005D0A  6E19               	movwf	(___lmul@multiplicand+1)^0,c
 12727  005D0C  6A1A               	clrf	(___lmul@multiplicand+2)^0,c
 12728  005D0E  A0D8               	btfss	status,0,c
 12729  005D10  061A               	decf	(___lmul@multiplicand+2)^0,f,c
 12730  005D12  501A               	movf	(___lmul@multiplicand+2)^0,w,c
 12731  005D14  6E1B               	movwf	(___lmul@multiplicand+3)^0,c
 12732  005D16  EC24  F02F         	call	___lmul	;wreg free
 12733  005D1A  C014  F02D         	movff	?___lmul,map@second
 12734  005D1E  C015  F02E         	movff	?___lmul+1,map@second+1
 12735  005D22  C016  F02F         	movff	?___lmul+2,map@second+2
 12736  005D26  C017  F030         	movff	?___lmul+3,map@second+3
 12737  005D2A                     
 12738                           ;Le_Jason_Project.c: 315: }
 12739  005D2A  C02D  F014         	movff	map@second,___lldiv@dividend
 12740  005D2E  C02E  F015         	movff	map@second+1,___lldiv@dividend+1
 12741  005D32  C02F  F016         	movff	map@second+2,___lldiv@dividend+2
 12742  005D36  C030  F017         	movff	map@second+3,___lldiv@dividend+3
 12743  005D3A  5023               	movf	map@valuemin^0,w,c
 12744  005D3C  5C25               	subwf	map@valuemax^0,w,c
 12745  005D3E  6E2B               	movwf	??_map^0,c
 12746  005D40  5024               	movf	(map@valuemin+1)^0,w,c
 12747  005D42  5826               	subwfb	(map@valuemax+1)^0,w,c
 12748  005D44  6E2C               	movwf	(??_map+1)^0,c
 12749  005D46  C02B  F018         	movff	??_map,___lldiv@divisor
 12750  005D4A  C02C  F019         	movff	??_map+1,___lldiv@divisor+1
 12751  005D4E  6A1A               	clrf	(___lldiv@divisor+2)^0,c
 12752  005D50  6A1B               	clrf	(___lldiv@divisor+3)^0,c
 12753  005D52  EC22  F02E         	call	___lldiv	;wreg free
 12754  005D56  C014  F033         	movff	?___lldiv,map@third
 12755  005D5A  C015  F034         	movff	?___lldiv+1,map@third+1
 12756                           
 12757                           ;Le_Jason_Project.c: 316: void Servo2(unsigned int angle){
 12758  005D5E  5027               	movf	map@newmin^0,w,c
 12759  005D60  2433               	addwf	map@third^0,w,c
 12760  005D62  6E21               	movwf	?_map^0,c
 12761  005D64  5028               	movf	(map@newmin+1)^0,w,c
 12762  005D66  2034               	addwfc	(map@third+1)^0,w,c
 12763  005D68  6E22               	movwf	(?_map+1)^0,c
 12764  005D6A  0012               	return		;funcret
 12765  005D6C                     __end_of_map:
 12766                           	callstack 0
 12767                           
 12768 ;; *************** function ___lmul *****************
 12769 ;; Defined at:
 12770 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
 12771 ;; Parameters:    Size  Location     Type
 12772 ;;  multiplier      4   19[COMRAM] unsigned long 
 12773 ;;  multiplicand    4   23[COMRAM] unsigned long 
 12774 ;; Auto vars:     Size  Location     Type
 12775 ;;  product         4   27[COMRAM] unsigned long 
 12776 ;; Return value:  Size  Location     Type
 12777 ;;                  4   19[COMRAM] unsigned long 
 12778 ;; Registers used:
 12779 ;;		wreg, status,2, status,0
 12780 ;; Tracked objects:
 12781 ;;		On entry : 0/0
 12782 ;;		On exit  : 0/0
 12783 ;;		Unchanged: 0/0
 12784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12785 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12786 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12788 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12789 ;;Total ram usage:       12 bytes
 12790 ;; Hardware stack levels used: 1
 12791 ;; Hardware stack levels required when called: 3
 12792 ;; This function calls:
 12793 ;;		Nothing
 12794 ;; This function is called by:
 12795 ;;		_map
 12796 ;; This function uses a non-reentrant model
 12797 ;;
 12798                           
 12799                           	psect	text40
 12800  005E48                     __ptext40:
 12801                           	callstack 0
 12802  005E48                     ___lmul:
 12803                           	callstack 25
 12804  005E48  0E00               	movlw	0
 12805  005E4A  6E1C               	movwf	___lmul@product^0,c
 12806  005E4C  0E00               	movlw	0
 12807  005E4E  6E1D               	movwf	(___lmul@product+1)^0,c
 12808  005E50  0E00               	movlw	0
 12809  005E52  6E1E               	movwf	(___lmul@product+2)^0,c
 12810  005E54  0E00               	movlw	0
 12811  005E56  6E1F               	movwf	(___lmul@product+3)^0,c
 12812  005E58                     l5052:
 12813  005E58  A014               	btfss	___lmul@multiplier^0,0,c
 12814  005E5A  EF31  F02F         	goto	u5171
 12815  005E5E  EF33  F02F         	goto	u5170
 12816  005E62                     u5171:
 12817  005E62  EF3B  F02F         	goto	l5056
 12818  005E66                     u5170:
 12819  005E66  5018               	movf	___lmul@multiplicand^0,w,c
 12820  005E68  261C               	addwf	___lmul@product^0,f,c
 12821  005E6A  5019               	movf	(___lmul@multiplicand+1)^0,w,c
 12822  005E6C  221D               	addwfc	(___lmul@product+1)^0,f,c
 12823  005E6E  501A               	movf	(___lmul@multiplicand+2)^0,w,c
 12824  005E70  221E               	addwfc	(___lmul@product+2)^0,f,c
 12825  005E72  501B               	movf	(___lmul@multiplicand+3)^0,w,c
 12826  005E74  221F               	addwfc	(___lmul@product+3)^0,f,c
 12827  005E76                     l5056:
 12828  005E76  90D8               	bcf	status,0,c
 12829  005E78  3618               	rlcf	___lmul@multiplicand^0,f,c
 12830  005E7A  3619               	rlcf	(___lmul@multiplicand+1)^0,f,c
 12831  005E7C  361A               	rlcf	(___lmul@multiplicand+2)^0,f,c
 12832  005E7E  361B               	rlcf	(___lmul@multiplicand+3)^0,f,c
 12833  005E80  90D8               	bcf	status,0,c
 12834  005E82  3217               	rrcf	(___lmul@multiplier+3)^0,f,c
 12835  005E84  3216               	rrcf	(___lmul@multiplier+2)^0,f,c
 12836  005E86  3215               	rrcf	(___lmul@multiplier+1)^0,f,c
 12837  005E88  3214               	rrcf	___lmul@multiplier^0,f,c
 12838  005E8A  5014               	movf	___lmul@multiplier^0,w,c
 12839  005E8C  1015               	iorwf	(___lmul@multiplier+1)^0,w,c
 12840  005E8E  1016               	iorwf	(___lmul@multiplier+2)^0,w,c
 12841  005E90  1017               	iorwf	(___lmul@multiplier+3)^0,w,c
 12842  005E92  A4D8               	btfss	status,2,c
 12843  005E94  EF4E  F02F         	goto	u5181
 12844  005E98  EF50  F02F         	goto	u5180
 12845  005E9C                     u5181:
 12846  005E9C  EF2C  F02F         	goto	l5052
 12847  005EA0                     u5180:
 12848  005EA0  C01C  F014         	movff	___lmul@product,?___lmul
 12849  005EA4  C01D  F015         	movff	___lmul@product+1,?___lmul+1
 12850  005EA8  C01E  F016         	movff	___lmul@product+2,?___lmul+2
 12851  005EAC  C01F  F017         	movff	___lmul@product+3,?___lmul+3
 12852  005EB0  0012               	return		;funcret
 12853  005EB2                     __end_of___lmul:
 12854                           	callstack 0
 12855                           
 12856 ;; *************** function ___lldiv *****************
 12857 ;; Defined at:
 12858 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 12859 ;; Parameters:    Size  Location     Type
 12860 ;;  dividend        4   19[COMRAM] unsigned long 
 12861 ;;  divisor         4   23[COMRAM] unsigned long 
 12862 ;; Auto vars:     Size  Location     Type
 12863 ;;  quotient        4   27[COMRAM] unsigned long 
 12864 ;;  counter         1   31[COMRAM] unsigned char 
 12865 ;; Return value:  Size  Location     Type
 12866 ;;                  4   19[COMRAM] unsigned long 
 12867 ;; Registers used:
 12868 ;;		wreg, status,2, status,0
 12869 ;; Tracked objects:
 12870 ;;		On entry : 0/0
 12871 ;;		On exit  : 0/0
 12872 ;;		Unchanged: 0/0
 12873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12874 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12875 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12877 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12878 ;;Total ram usage:       13 bytes
 12879 ;; Hardware stack levels used: 1
 12880 ;; Hardware stack levels required when called: 3
 12881 ;; This function calls:
 12882 ;;		Nothing
 12883 ;; This function is called by:
 12884 ;;		_map
 12885 ;; This function uses a non-reentrant model
 12886 ;;
 12887                           
 12888                           	psect	text41
 12889  005C44                     __ptext41:
 12890                           	callstack 0
 12891  005C44                     ___lldiv:
 12892                           	callstack 25
 12893  005C44  0E00               	movlw	0
 12894  005C46  6E1C               	movwf	___lldiv@quotient^0,c
 12895  005C48  0E00               	movlw	0
 12896  005C4A  6E1D               	movwf	(___lldiv@quotient+1)^0,c
 12897  005C4C  0E00               	movlw	0
 12898  005C4E  6E1E               	movwf	(___lldiv@quotient+2)^0,c
 12899  005C50  0E00               	movlw	0
 12900  005C52  6E1F               	movwf	(___lldiv@quotient+3)^0,c
 12901  005C54  5018               	movf	___lldiv@divisor^0,w,c
 12902  005C56  1019               	iorwf	(___lldiv@divisor+1)^0,w,c
 12903  005C58  101A               	iorwf	(___lldiv@divisor+2)^0,w,c
 12904  005C5A  101B               	iorwf	(___lldiv@divisor+3)^0,w,c
 12905  005C5C  B4D8               	btfsc	status,2,c
 12906  005C5E  EF33  F02E         	goto	u5191
 12907  005C62  EF35  F02E         	goto	u5190
 12908  005C66                     u5191:
 12909  005C66  EF6B  F02E         	goto	l343
 12910  005C6A                     u5190:
 12911  005C6A  0E01               	movlw	1
 12912  005C6C  6E20               	movwf	___lldiv@counter^0,c
 12913  005C6E  EF3F  F02E         	goto	l5068
 12914  005C72                     l5066:
 12915  005C72  90D8               	bcf	status,0,c
 12916  005C74  3618               	rlcf	___lldiv@divisor^0,f,c
 12917  005C76  3619               	rlcf	(___lldiv@divisor+1)^0,f,c
 12918  005C78  361A               	rlcf	(___lldiv@divisor+2)^0,f,c
 12919  005C7A  361B               	rlcf	(___lldiv@divisor+3)^0,f,c
 12920  005C7C  2A20               	incf	___lldiv@counter^0,f,c
 12921  005C7E                     l5068:
 12922  005C7E  AE1B               	btfss	(___lldiv@divisor+3)^0,7,c
 12923  005C80  EF44  F02E         	goto	u5201
 12924  005C84  EF46  F02E         	goto	u5200
 12925  005C88                     u5201:
 12926  005C88  EF39  F02E         	goto	l5066
 12927  005C8C                     u5200:
 12928  005C8C                     l5070:
 12929  005C8C  90D8               	bcf	status,0,c
 12930  005C8E  361C               	rlcf	___lldiv@quotient^0,f,c
 12931  005C90  361D               	rlcf	(___lldiv@quotient+1)^0,f,c
 12932  005C92  361E               	rlcf	(___lldiv@quotient+2)^0,f,c
 12933  005C94  361F               	rlcf	(___lldiv@quotient+3)^0,f,c
 12934  005C96  5018               	movf	___lldiv@divisor^0,w,c
 12935  005C98  5C14               	subwf	___lldiv@dividend^0,w,c
 12936  005C9A  5019               	movf	(___lldiv@divisor+1)^0,w,c
 12937  005C9C  5815               	subwfb	(___lldiv@dividend+1)^0,w,c
 12938  005C9E  501A               	movf	(___lldiv@divisor+2)^0,w,c
 12939  005CA0  5816               	subwfb	(___lldiv@dividend+2)^0,w,c
 12940  005CA2  501B               	movf	(___lldiv@divisor+3)^0,w,c
 12941  005CA4  5817               	subwfb	(___lldiv@dividend+3)^0,w,c
 12942  005CA6  A0D8               	btfss	status,0,c
 12943  005CA8  EF58  F02E         	goto	u5211
 12944  005CAC  EF5A  F02E         	goto	u5210
 12945  005CB0                     u5211:
 12946  005CB0  EF63  F02E         	goto	l5078
 12947  005CB4                     u5210:
 12948  005CB4  5018               	movf	___lldiv@divisor^0,w,c
 12949  005CB6  5E14               	subwf	___lldiv@dividend^0,f,c
 12950  005CB8  5019               	movf	(___lldiv@divisor+1)^0,w,c
 12951  005CBA  5A15               	subwfb	(___lldiv@dividend+1)^0,f,c
 12952  005CBC  501A               	movf	(___lldiv@divisor+2)^0,w,c
 12953  005CBE  5A16               	subwfb	(___lldiv@dividend+2)^0,f,c
 12954  005CC0  501B               	movf	(___lldiv@divisor+3)^0,w,c
 12955  005CC2  5A17               	subwfb	(___lldiv@dividend+3)^0,f,c
 12956  005CC4  801C               	bsf	___lldiv@quotient^0,0,c
 12957  005CC6                     l5078:
 12958  005CC6  90D8               	bcf	status,0,c
 12959  005CC8  321B               	rrcf	(___lldiv@divisor+3)^0,f,c
 12960  005CCA  321A               	rrcf	(___lldiv@divisor+2)^0,f,c
 12961  005CCC  3219               	rrcf	(___lldiv@divisor+1)^0,f,c
 12962  005CCE  3218               	rrcf	___lldiv@divisor^0,f,c
 12963  005CD0  2E20               	decfsz	___lldiv@counter^0,f,c
 12964  005CD2  EF46  F02E         	goto	l5070
 12965  005CD6                     l343:
 12966  005CD6  C01C  F014         	movff	___lldiv@quotient,?___lldiv
 12967  005CDA  C01D  F015         	movff	___lldiv@quotient+1,?___lldiv+1
 12968  005CDE  C01E  F016         	movff	___lldiv@quotient+2,?___lldiv+2
 12969  005CE2  C01F  F017         	movff	___lldiv@quotient+3,?___lldiv+3
 12970  005CE6  0012               	return		;funcret
 12971  005CE8                     __end_of___lldiv:
 12972                           	callstack 0
 12973                           
 12974 ;; *************** function _I2C_Read *****************
 12975 ;; Defined at:
 12976 ;;		line 409 in file "Le_Jason_Project.c"
 12977 ;; Parameters:    Size  Location     Type
 12978 ;;  ACK_NACK        1    wreg     unsigned char 
 12979 ;; Auto vars:     Size  Location     Type
 12980 ;;  ACK_NACK        1   19[COMRAM] unsigned char 
 12981 ;;  Data            1   20[COMRAM] unsigned char 
 12982 ;; Return value:  Size  Location     Type
 12983 ;;                  1    wreg      unsigned char 
 12984 ;; Registers used:
 12985 ;;		wreg, status,2, cstack
 12986 ;; Tracked objects:
 12987 ;;		On entry : 0/0
 12988 ;;		On exit  : 0/0
 12989 ;;		Unchanged: 0/0
 12990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12995 ;;Total ram usage:        2 bytes
 12996 ;; Hardware stack levels used: 1
 12997 ;; Hardware stack levels required when called: 4
 12998 ;; This function calls:
 12999 ;;		_I2C_ACK
 13000 ;;		_I2C_NACK
 13001 ;; This function is called by:
 13002 ;;		_MPU6050_Read
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006                           	psect	text42
 13007  0060C4                     __ptext42:
 13008                           	callstack 0
 13009  0060C4                     _I2C_Read:
 13010                           	callstack 25
 13011                           
 13012                           ;incstack = 0
 13013                           ;I2C_Read@ACK_NACK stored from wreg
 13014  0060C4  6E14               	movwf	I2C_Read@ACK_NACK^0,c
 13015  0060C6                     
 13016                           ;Le_Jason_Project.c: 410:     char buffer[40];;Le_Jason_Project.c: 411:     int Ax,Ay,Az
      +                          ,Gx,Gy,Gz,T;
 13017  0060C6  86C5               	bsf	197,3,c	;volatile
 13018  0060C8                     l290:
 13019                           
 13020                           ;Le_Jason_Project.c: 412:     float accAngleX, accAngleY;
 13021  0060C8  A0C7               	btfss	199,0,c	;volatile
 13022  0060CA  EF69  F030         	goto	u5541
 13023  0060CE  EF6B  F030         	goto	u5540
 13024  0060D2                     u5541:
 13025  0060D2  EF64  F030         	goto	l290
 13026  0060D6                     u5540:
 13027  0060D6                     
 13028                           ;Le_Jason_Project.c: 414:     CurrentTime = ((time0counter*0.016384)+(((double)TMR1H*256
      +                          ) + (double)TMR1L)*0.000000250)*1000;
 13029  0060D6  CFC9 F015          	movff	4041,I2C_Read@Data	;volatile
 13030  0060DA                     
 13031                           ;Le_Jason_Project.c: 415:     float elapsedTime = (CurrentTime - previousTime) / 1000;
 13032  0060DA  5014               	movf	I2C_Read@ACK_NACK^0,w,c
 13033  0060DC  A4D8               	btfss	status,2,c
 13034  0060DE  EF73  F030         	goto	u5551
 13035  0060E2  EF75  F030         	goto	u5550
 13036  0060E6                     u5551:
 13037  0060E6  EF79  F030         	goto	l5346
 13038  0060EA                     u5550:
 13039  0060EA                     
 13040                           ;Le_Jason_Project.c: 416:     previousTime = CurrentTime;
 13041  0060EA  EC9B  F031         	call	_I2C_ACK	;wreg free
 13042                           
 13043                           ;Le_Jason_Project.c: 417:     I2C_Start(0xD0);
 13044  0060EE  EF7B  F030         	goto	l295
 13045  0060F2                     l5346:
 13046                           
 13047                           ;Le_Jason_Project.c: 419:     I2C_Master_Stop();
 13048  0060F2  EC91  F031         	call	_I2C_NACK	;wreg free
 13049  0060F6                     l295:
 13050                           
 13051                           ;Le_Jason_Project.c: 421:     I2C_Read(0);
 13052  0060F6  A69E               	btfss	158,3,c	;volatile
 13053  0060F8  EF80  F030         	goto	u5561
 13054  0060FC  EF82  F030         	goto	u5560
 13055  006100                     u5561:
 13056  006100  EF7B  F030         	goto	l295
 13057  006104                     u5560:
 13058  006104                     
 13059                           ;Le_Jason_Project.c: 423:     Ay = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
 13060  006104  969E               	bcf	158,3,c	;volatile
 13061                           
 13062                           ;Le_Jason_Project.c: 424:     Az = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
 13063  006106  5015               	movf	I2C_Read@Data^0,w,c
 13064  006108  0012               	return		;funcret
 13065  00610A                     __end_of_I2C_Read:
 13066                           	callstack 0
 13067                           
 13068 ;; *************** function _I2C_NACK *****************
 13069 ;; Defined at:
 13070 ;;		line 383 in file "Le_Jason_Project.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;		None
 13073 ;; Auto vars:     Size  Location     Type
 13074 ;;		None
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  1    wreg      void 
 13077 ;; Registers used:
 13078 ;;		None
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13088 ;;Total ram usage:        0 bytes
 13089 ;; Hardware stack levels used: 1
 13090 ;; Hardware stack levels required when called: 3
 13091 ;; This function calls:
 13092 ;;		Nothing
 13093 ;; This function is called by:
 13094 ;;		_I2C_Read
 13095 ;; This function uses a non-reentrant model
 13096 ;;
 13097                           
 13098                           	psect	text43
 13099  006322                     __ptext43:
 13100                           	callstack 0
 13101  006322                     _I2C_NACK:
 13102                           	callstack 25
 13103  006322                     
 13104                           ;Le_Jason_Project.c: 384:     while(!PIR1bits.SSP1IF){
 13105  006322  8AC5               	bsf	197,5,c	;volatile
 13106                           
 13107                           ;Le_Jason_Project.c: 385:     }
 13108  006324  88C5               	bsf	197,4,c	;volatile
 13109  006326                     l272:
 13110                           
 13111                           ;Le_Jason_Project.c: 386:     PIR1bits.SSP1IF = 0;
 13112  006326  B8C5               	btfsc	197,4,c	;volatile
 13113  006328  EF98  F031         	goto	u5381
 13114  00632C  EF9A  F031         	goto	u5380
 13115  006330                     u5381:
 13116  006330  EF93  F031         	goto	l272
 13117  006334                     u5380:
 13118  006334  0012               	return		;funcret
 13119  006336                     __end_of_I2C_NACK:
 13120                           	callstack 0
 13121                           
 13122 ;; *************** function _I2C_ACK *****************
 13123 ;; Defined at:
 13124 ;;		line 376 in file "Le_Jason_Project.c"
 13125 ;; Parameters:    Size  Location     Type
 13126 ;;		None
 13127 ;; Auto vars:     Size  Location     Type
 13128 ;;		None
 13129 ;; Return value:  Size  Location     Type
 13130 ;;                  1    wreg      void 
 13131 ;; Registers used:
 13132 ;;		None
 13133 ;; Tracked objects:
 13134 ;;		On entry : 0/0
 13135 ;;		On exit  : 0/0
 13136 ;;		Unchanged: 0/0
 13137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13142 ;;Total ram usage:        0 bytes
 13143 ;; Hardware stack levels used: 1
 13144 ;; Hardware stack levels required when called: 3
 13145 ;; This function calls:
 13146 ;;		Nothing
 13147 ;; This function is called by:
 13148 ;;		_I2C_Read
 13149 ;; This function uses a non-reentrant model
 13150 ;;
 13151                           
 13152                           	psect	text44
 13153  006336                     __ptext44:
 13154                           	callstack 0
 13155  006336                     _I2C_ACK:
 13156                           	callstack 25
 13157  006336                     
 13158                           ;Le_Jason_Project.c: 377:     PIR1bits.SSP1IF = 0;
 13159  006336  9AC5               	bcf	197,5,c	;volatile
 13160                           
 13161                           ;Le_Jason_Project.c: 378:     return SSP1CON2bits.ACKSTAT;
 13162  006338  88C5               	bsf	197,4,c	;volatile
 13163  00633A                     l266:
 13164                           
 13165                           ;Le_Jason_Project.c: 379: }
 13166  00633A  B8C5               	btfsc	197,4,c	;volatile
 13167  00633C  EFA2  F031         	goto	u5371
 13168  006340  EFA4  F031         	goto	u5370
 13169  006344                     u5371:
 13170  006344  EF9D  F031         	goto	l266
 13171  006348                     u5370:
 13172  006348  0012               	return		;funcret
 13173  00634A                     __end_of_I2C_ACK:
 13174                           	callstack 0
 13175                           
 13176 ;; *************** function _Initial *****************
 13177 ;; Defined at:
 13178 ;;		line 86 in file "Le_Jason_Project.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;		None
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;		None
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      void 
 13185 ;; Registers used:
 13186 ;;		wreg, status,2, status,0, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13196 ;;Total ram usage:        2 bytes
 13197 ;; Hardware stack levels used: 1
 13198 ;; Hardware stack levels required when called: 6
 13199 ;; This function calls:
 13200 ;;		_I2C_Master_Stop
 13201 ;;		_I2C_Master_Write
 13202 ;;		_I2C_Start
 13203 ;; This function is called by:
 13204 ;;		_main
 13205 ;; This function uses a non-reentrant model
 13206 ;;
 13207                           
 13208                           	psect	text45
 13209  00523A                     __ptext45:
 13210                           	callstack 0
 13211  00523A                     _Initial:
 13212                           	callstack 24
 13213  00523A                     
 13214                           ;Le_Jason_Project.c: 88:     PIE3bits.CCP1IE = 1;
 13215  00523A  0E00               	movlw	0
 13216  00523C  6E94               	movwf	148,c	;volatile
 13217                           
 13218                           ;Le_Jason_Project.c: 89:     PIE1bits.TMR1IE = 1;
 13219  00523E  0E00               	movlw	0
 13220  005240  6E8B               	movwf	139,c	;volatile
 13221                           
 13222                           ;Le_Jason_Project.c: 90:     CCPR1X = (Servo1_on & 0xFF0000)/65536;
 13223  005242  0E00               	movlw	0
 13224  005244  6E95               	movwf	149,c	;volatile
 13225                           
 13226                           ;Le_Jason_Project.c: 91: 
 13227  005246  0E00               	movlw	0
 13228  005248  6E8C               	movwf	140,c	;volatile
 13229                           
 13230                           ;Le_Jason_Project.c: 92: 
 13231  00524A  0E00               	movlw	0
 13232  00524C  6E96               	movwf	150,c	;volatile
 13233                           
 13234                           ;Le_Jason_Project.c: 93:     T3CON = 0b00000010;
 13235  00524E  0E00               	movlw	0
 13236  005250  6E8D               	movwf	141,c	;volatile
 13237  005252                     
 13238                           ;Le_Jason_Project.c: 96:     IPR2bits.TMR3IP = 0;
 13239  005252  8ED0               	bsf	208,7,c	;volatile
 13240  005254                     
 13241                           ;Le_Jason_Project.c: 97:     IPR4bits.CCP4IP = 0;
 13242  005254  8CF2               	bsf	242,6,c	;volatile
 13243  005256                     
 13244                           ;Le_Jason_Project.c: 98:     PIE4bits.CCP4IE = 1;
 13245  005256  8EF2               	bsf	242,7,c	;volatile
 13246                           
 13247                           ;Le_Jason_Project.c: 101: 
 13248  005258  0E02               	movlw	2
 13249  00525A  6ECD               	movwf	205,c	;volatile
 13250                           
 13251                           ;Le_Jason_Project.c: 102: 
 13252  00525C  0E08               	movlw	8
 13253  00525E  6EBB               	movwf	187,c	;volatile
 13254                           
 13255                           ;Le_Jason_Project.c: 103: 
 13256  005260  0E00               	movlw	0
 13257  005262  010F               	movlb	15	; () banked
 13258  005264  6F2D               	movwf	45,b	;volatile
 13259  005266                     
 13260                           ; BSR set to: 15
 13261                           ;Le_Jason_Project.c: 104: 
 13262  005266  909F               	bcf	159,0,c	;volatile
 13263  005268                     
 13264                           ; BSR set to: 15
 13265                           ;Le_Jason_Project.c: 105: 
 13266  005268  92A5               	bcf	165,1,c	;volatile
 13267  00526A                     
 13268                           ; BSR set to: 15
 13269                           ;Le_Jason_Project.c: 106: 
 13270  00526A  82A3               	bsf	163,1,c	;volatile
 13271  00526C                     
 13272                           ; BSR set to: 15
 13273                           ;Le_Jason_Project.c: 107: 
 13274  00526C  809D               	bsf	157,0,c	;volatile
 13275  00526E                     
 13276                           ; BSR set to: 15
 13277                           ;Le_Jason_Project.c: 108:     SSP1CON1 = 0x28;
 13278  00526E  C049  F04B         	movff	_Servo1_on+2,_CCPR1X
 13279                           
 13280                           ;Le_Jason_Project.c: 111:     SSP1ADD = ((16000000/4)/100000) - 1;
 13281  005272  0E02               	movlw	2
 13282  005274  6EB1               	movwf	177,c	;volatile
 13283                           
 13284                           ;Le_Jason_Project.c: 112:     TRISCbits.TRISC3 = 1;
 13285  005276  0E08               	movlw	8
 13286  005278  6E77               	movwf	119,c	;volatile
 13287                           
 13288                           ;Le_Jason_Project.c: 113:     TRISCbits.TRISC4 = 1;
 13289  00527A  0E01               	movlw	1
 13290  00527C  6F2C               	movwf	44,b	;volatile
 13291  00527E                     
 13292                           ; BSR set to: 15
 13293                           ;Le_Jason_Project.c: 114: 
 13294  00527E  92A2               	bcf	162,1,c	;volatile
 13295  005280                     
 13296                           ; BSR set to: 15
 13297                           ;Le_Jason_Project.c: 115: 
 13298  005280  92B8               	bcf	184,1,c	;volatile
 13299  005282                     
 13300                           ; BSR set to: 15
 13301                           ;Le_Jason_Project.c: 116:     _delay((unsigned long)((100)*(16000000/4000.0)));
 13302  005282  82B6               	bsf	182,1,c	;volatile
 13303  005284                     
 13304                           ; BSR set to: 15
 13305                           ;Le_Jason_Project.c: 117: 
 13306  005284  82A0               	bsf	160,1,c	;volatile
 13307  005286                     
 13308                           ; BSR set to: 15
 13309                           ;Le_Jason_Project.c: 118: 
 13310  005286  C045  F0FE         	movff	_Servo2_on+2,_CCPR4X
 13311                           
 13312                           ;Le_Jason_Project.c: 126:     I2C_Master_Write(0x6B);
 13313  00528A  0E28               	movlw	40
 13314  00528C  6EC6               	movwf	198,c	;volatile
 13315                           
 13316                           ;Le_Jason_Project.c: 127:     I2C_Master_Write(0x01);
 13317  00528E  0E00               	movlw	0
 13318  005290  6EC5               	movwf	197,c	;volatile
 13319                           
 13320                           ;Le_Jason_Project.c: 128:     I2C_Master_Stop();
 13321  005292  0E00               	movlw	0
 13322  005294  6EC7               	movwf	199,c	;volatile
 13323                           
 13324                           ;Le_Jason_Project.c: 129: 
 13325  005296  0E27               	movlw	39
 13326  005298  6EC8               	movwf	200,c	;volatile
 13327  00529A                     
 13328                           ; BSR set to: 15
 13329                           ;Le_Jason_Project.c: 130: 
 13330  00529A  8694               	bsf	148,3,c	;volatile
 13331  00529C                     
 13332                           ; BSR set to: 15
 13333                           ;Le_Jason_Project.c: 131:     I2C_Start(0xD0);
 13334  00529C  8894               	bsf	148,4,c	;volatile
 13335  00529E                     
 13336                           ; BSR set to: 15
 13337                           ;Le_Jason_Project.c: 134:     I2C_Master_Stop();
 13338  00529E  0E03               	movlw	3
 13339  0052A0  6E18               	movwf	(??_Initial+1)^0,c
 13340  0052A2  0E08               	movlw	8
 13341  0052A4  6E17               	movwf	??_Initial^0,c
 13342  0052A6  0E77               	movlw	119
 13343  0052A8                     u8597:
 13344  0052A8  2EE8               	decfsz	wreg,f,c
 13345  0052AA  D7FE               	bra	u8597
 13346  0052AC  2E17               	decfsz	??_Initial^0,f,c
 13347  0052AE  D7FC               	bra	u8597
 13348  0052B0  2E18               	decfsz	(??_Initial+1)^0,f,c
 13349  0052B2  D7FA               	bra	u8597
 13350  0052B4  F000               	nop	
 13351  0052B6                     
 13352                           ;Le_Jason_Project.c: 137:     I2C_Start(0xD0);
 13353  0052B6  0ED0               	movlw	208
 13354  0052B8  ECAF  F031         	call	_I2C_Start
 13355  0052BC                     
 13356                           ;Le_Jason_Project.c: 138:     I2C_Master_Write(0x1C);
 13357  0052BC  0E19               	movlw	25
 13358  0052BE  EC77  F031         	call	_I2C_Master_Write
 13359  0052C2                     
 13360                           ;Le_Jason_Project.c: 139:     I2C_Master_Write(0x00);
 13361  0052C2  0E07               	movlw	7
 13362  0052C4  EC77  F031         	call	_I2C_Master_Write
 13363  0052C8                     
 13364                           ;Le_Jason_Project.c: 140:     I2C_Master_Stop();
 13365  0052C8  ECBF  F031         	call	_I2C_Master_Stop	;wreg free
 13366  0052CC                     
 13367                           ;Le_Jason_Project.c: 143:     I2C_Start(0xD0);
 13368  0052CC  0ED0               	movlw	208
 13369  0052CE  ECAF  F031         	call	_I2C_Start
 13370  0052D2                     
 13371                           ;Le_Jason_Project.c: 144:     I2C_Master_Write(0x1B);
 13372  0052D2  0E6B               	movlw	107
 13373  0052D4  EC77  F031         	call	_I2C_Master_Write
 13374  0052D8                     
 13375                           ;Le_Jason_Project.c: 145:     I2C_Master_Write(0x18);
 13376  0052D8  0E01               	movlw	1
 13377  0052DA  EC77  F031         	call	_I2C_Master_Write
 13378  0052DE                     
 13379                           ;Le_Jason_Project.c: 146:     I2C_Master_Stop();
 13380  0052DE  ECBF  F031         	call	_I2C_Master_Stop	;wreg free
 13381  0052E2                     
 13382                           ;Le_Jason_Project.c: 149:     I2C_Start(0xD0);
 13383  0052E2  0ED0               	movlw	208
 13384  0052E4  ECAF  F031         	call	_I2C_Start
 13385  0052E8                     
 13386                           ;Le_Jason_Project.c: 150:     I2C_Master_Write(0x56);
 13387  0052E8  0E1A               	movlw	26
 13388  0052EA  EC77  F031         	call	_I2C_Master_Write
 13389  0052EE                     
 13390                           ;Le_Jason_Project.c: 151:     I2C_Master_Write(0x01);
 13391  0052EE  0E00               	movlw	0
 13392  0052F0  EC77  F031         	call	_I2C_Master_Write
 13393  0052F4                     
 13394                           ;Le_Jason_Project.c: 152:     I2C_Master_Stop();
 13395  0052F4  ECBF  F031         	call	_I2C_Master_Stop	;wreg free
 13396  0052F8                     
 13397                           ;Le_Jason_Project.c: 155:     TRISCbits.TRISC7 = 1;
 13398  0052F8  0ED0               	movlw	208
 13399  0052FA  ECAF  F031         	call	_I2C_Start
 13400  0052FE                     
 13401                           ;Le_Jason_Project.c: 156:     TRISCbits.TRISC6 = 0;
 13402  0052FE  0E1C               	movlw	28
 13403  005300  EC77  F031         	call	_I2C_Master_Write
 13404  005304                     
 13405                           ;Le_Jason_Project.c: 157:     BAUDCON1bits.BRG16 = 0;
 13406  005304  0E00               	movlw	0
 13407  005306  EC77  F031         	call	_I2C_Master_Write
 13408  00530A                     
 13409                           ;Le_Jason_Project.c: 158:     BAUDCON1bits.RCIDL = 1;
 13410  00530A  ECBF  F031         	call	_I2C_Master_Stop	;wreg free
 13411  00530E                     
 13412                           ;Le_Jason_Project.c: 161:     TXSTA1bits.BRGH = 0;
 13413  00530E  0ED0               	movlw	208
 13414  005310  ECAF  F031         	call	_I2C_Start
 13415  005314                     
 13416                           ;Le_Jason_Project.c: 162:     TXSTA1bits.TX9 = 0;
 13417  005314  0E1B               	movlw	27
 13418  005316  EC77  F031         	call	_I2C_Master_Write
 13419  00531A                     
 13420                           ;Le_Jason_Project.c: 163:     TXSTA1bits.TXEN = 1;
 13421  00531A  0E18               	movlw	24
 13422  00531C  EC77  F031         	call	_I2C_Master_Write
 13423  005320                     
 13424                           ;Le_Jason_Project.c: 164:     RCSTA1bits.SPEN = 1;
 13425  005320  ECBF  F031         	call	_I2C_Master_Stop	;wreg free
 13426  005324                     
 13427                           ;Le_Jason_Project.c: 167:     PIE1bits.RC1IE = 1;
 13428  005324  0ED0               	movlw	208
 13429  005326  ECAF  F031         	call	_I2C_Start
 13430  00532A                     
 13431                           ;Le_Jason_Project.c: 168: 
 13432  00532A  0E56               	movlw	86
 13433  00532C  EC77  F031         	call	_I2C_Master_Write
 13434  005330                     
 13435                           ;Le_Jason_Project.c: 169: 
 13436  005330  0E01               	movlw	1
 13437  005332  EC77  F031         	call	_I2C_Master_Write
 13438  005336                     
 13439                           ;Le_Jason_Project.c: 170:     T0CONbits.TMR0ON = 1;
 13440  005336  ECBF  F031         	call	_I2C_Master_Stop	;wreg free
 13441  00533A                     
 13442                           ;Le_Jason_Project.c: 173: 
 13443  00533A  8E94               	bsf	148,7,c	;volatile
 13444  00533C                     
 13445                           ;Le_Jason_Project.c: 174: }
 13446  00533C  9C94               	bcf	148,6,c	;volatile
 13447  00533E                     
 13448                           ;Le_Jason_Project.c: 175: 
 13449  00533E  9665               	bcf	101,3,c	;volatile
 13450  005340                     
 13451                           ;Le_Jason_Project.c: 176: void __attribute__((picinterrupt(("")))) HiPriISR (void){
 13452  005340  8C65               	bsf	101,6,c	;volatile
 13453  005342                     
 13454                           ;Le_Jason_Project.c: 177:     while(1){
 13455  005342  0E0C               	movlw	12
 13456  005344  6EAF               	movwf	175,c	;volatile
 13457  005346                     
 13458                           ;Le_Jason_Project.c: 178: 
 13459  005346  0E00               	movlw	0
 13460  005348  6ED4               	movwf	212,c	;volatile
 13461  00534A                     
 13462                           ;Le_Jason_Project.c: 179: 
 13463  00534A  94AC               	bcf	172,2,c	;volatile
 13464  00534C                     
 13465                           ;Le_Jason_Project.c: 180: 
 13466  00534C  9CAC               	bcf	172,6,c	;volatile
 13467  00534E                     
 13468                           ;Le_Jason_Project.c: 181: 
 13469  00534E  8AAC               	bsf	172,5,c	;volatile
 13470  005350                     
 13471                           ;Le_Jason_Project.c: 182:     break;
 13472  005350  8EAB               	bsf	171,7,c	;volatile
 13473  005352                     
 13474                           ;Le_Jason_Project.c: 183:     }
 13475  005352  88AB               	bsf	171,4,c	;volatile
 13476  005354                     
 13477                           ;Le_Jason_Project.c: 184:     return;
 13478  005354  9A9F               	bcf	159,5,c	;volatile
 13479  005356                     
 13480                           ;Le_Jason_Project.c: 185: }
 13481  005356  8A9D               	bsf	157,5,c	;volatile
 13482  005358                     
 13483                           ;Le_Jason_Project.c: 188:     Wreg_temp = WREG;
 13484  005358  8ED5               	bsf	213,7,c	;volatile
 13485  00535A                     
 13486                           ;Le_Jason_Project.c: 189:     BSR_temp = BSR;
 13487  00535A  80CD               	bsf	205,0,c	;volatile
 13488  00535C                     
 13489                           ;Le_Jason_Project.c: 190:     while(1){
 13490  00535C  80B1               	bsf	177,0,c	;volatile
 13491  00535E  0012               	return		;funcret
 13492  005360                     __end_of_Initial:
 13493                           	callstack 0
 13494                           
 13495 ;; *************** function _I2C_Start *****************
 13496 ;; Defined at:
 13497 ;;		line 360 in file "Le_Jason_Project.c"
 13498 ;; Parameters:    Size  Location     Type
 13499 ;;  add             1    wreg     unsigned char 
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;  add             1   21[COMRAM] unsigned char 
 13502 ;; Return value:  Size  Location     Type
 13503 ;;                  1    wreg      void 
 13504 ;; Registers used:
 13505 ;;		wreg, status,2, status,0, cstack
 13506 ;; Tracked objects:
 13507 ;;		On entry : 0/0
 13508 ;;		On exit  : 0/0
 13509 ;;		Unchanged: 0/0
 13510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13515 ;;Total ram usage:        1 bytes
 13516 ;; Hardware stack levels used: 1
 13517 ;; Hardware stack levels required when called: 5
 13518 ;; This function calls:
 13519 ;;		_I2C_Master_Wait
 13520 ;;		_I2C_Master_Write
 13521 ;; This function is called by:
 13522 ;;		_Initial
 13523 ;;		_MPU6050_Read
 13524 ;; This function uses a non-reentrant model
 13525 ;;
 13526                           
 13527                           	psect	text46
 13528  00635E                     __ptext46:
 13529                           	callstack 0
 13530  00635E                     _I2C_Start:
 13531                           	callstack 24
 13532                           
 13533                           ;incstack = 0
 13534                           ;I2C_Start@add stored from wreg
 13535  00635E  6E16               	movwf	I2C_Start@add^0,c
 13536  006360                     
 13537                           ;Le_Jason_Project.c: 361:     while(SSP1CON2bits.ACKEN == 1){
 13538  006360  EC64  F031         	call	_I2C_Master_Wait	;wreg free
 13539  006364                     
 13540                           ;Le_Jason_Project.c: 362:     }
 13541  006364  80C5               	bsf	197,0,c	;volatile
 13542                           
 13543                           ;Le_Jason_Project.c: 363: }
 13544  006366  5016               	movf	I2C_Start@add^0,w,c
 13545  006368  EC77  F031         	call	_I2C_Master_Write
 13546  00636C  0012               	return		;funcret
 13547  00636E                     __end_of_I2C_Start:
 13548                           	callstack 0
 13549                           
 13550 ;; *************** function _I2C_Master_Write *****************
 13551 ;; Defined at:
 13552 ;;		line 390 in file "Le_Jason_Project.c"
 13553 ;; Parameters:    Size  Location     Type
 13554 ;;  data            1    wreg     unsigned char 
 13555 ;; Auto vars:     Size  Location     Type
 13556 ;;  data            1   20[COMRAM] unsigned char 
 13557 ;; Return value:  Size  Location     Type
 13558 ;;                  1    wreg      unsigned char 
 13559 ;; Registers used:
 13560 ;;		wreg, status,2, status,0, cstack
 13561 ;; Tracked objects:
 13562 ;;		On entry : 0/0
 13563 ;;		On exit  : 0/0
 13564 ;;		Unchanged: 0/0
 13565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13570 ;;Total ram usage:        1 bytes
 13571 ;; Hardware stack levels used: 1
 13572 ;; Hardware stack levels required when called: 4
 13573 ;; This function calls:
 13574 ;;		_I2C_Master_Wait
 13575 ;; This function is called by:
 13576 ;;		_Initial
 13577 ;;		_I2C_Start
 13578 ;;		_MPU6050_Read
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           	psect	text47
 13583  0062EE                     __ptext47:
 13584                           	callstack 0
 13585  0062EE                     _I2C_Master_Write:
 13586                           	callstack 24
 13587                           
 13588                           ;incstack = 0
 13589                           ;I2C_Master_Write@data stored from wreg
 13590  0062EE  6E15               	movwf	I2C_Master_Write@data^0,c
 13591  0062F0                     
 13592                           ;Le_Jason_Project.c: 391: unsigned char I2C_Read(unsigned char ACK_NACK){
 13593  0062F0  EC64  F031         	call	_I2C_Master_Wait	;wreg free
 13594  0062F4                     
 13595                           ;Le_Jason_Project.c: 392:     unsigned char Data;
 13596  0062F4  C015  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
 13597  0062F8                     l278:
 13598                           
 13599                           ;Le_Jason_Project.c: 393:     SSP1CON2bits.RCEN = 1;
 13600  0062F8  A69E               	btfss	158,3,c	;volatile
 13601  0062FA  EF81  F031         	goto	u5361
 13602  0062FE  EF83  F031         	goto	u5360
 13603  006302                     u5361:
 13604  006302  EF7C  F031         	goto	l278
 13605  006306                     u5360:
 13606  006306                     
 13607                           ;Le_Jason_Project.c: 395:     }
 13608  006306  969E               	bcf	158,3,c	;volatile
 13609  006308                     
 13610                           ;Le_Jason_Project.c: 396:     Data = SSP1BUF;;	Return value of _I2C_Master_Write is neve
      +                          r used
 13611  006308  50C5               	movf	197,w,c	;volatile
 13612  00630A  0012               	return		;funcret
 13613  00630C                     __end_of_I2C_Master_Write:
 13614                           	callstack 0
 13615                           
 13616 ;; *************** function _I2C_Master_Stop *****************
 13617 ;; Defined at:
 13618 ;;		line 371 in file "Le_Jason_Project.c"
 13619 ;; Parameters:    Size  Location     Type
 13620 ;;		None
 13621 ;; Auto vars:     Size  Location     Type
 13622 ;;		None
 13623 ;; Return value:  Size  Location     Type
 13624 ;;                  1    wreg      void 
 13625 ;; Registers used:
 13626 ;;		wreg, status,2, status,0, cstack
 13627 ;; Tracked objects:
 13628 ;;		On entry : 0/0
 13629 ;;		On exit  : 0/0
 13630 ;;		Unchanged: 0/0
 13631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13636 ;;Total ram usage:        0 bytes
 13637 ;; Hardware stack levels used: 1
 13638 ;; Hardware stack levels required when called: 4
 13639 ;; This function calls:
 13640 ;;		_I2C_Master_Wait
 13641 ;; This function is called by:
 13642 ;;		_Initial
 13643 ;;		_MPU6050_Read
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647                           	psect	text48
 13648  00637E                     __ptext48:
 13649                           	callstack 0
 13650  00637E                     _I2C_Master_Stop:
 13651                           	callstack 25
 13652  00637E                     
 13653                           ;Le_Jason_Project.c: 372: unsigned char I2C_Master_Write(unsigned char data){
 13654  00637E  EC64  F031         	call	_I2C_Master_Wait	;wreg free
 13655  006382                     
 13656                           ;Le_Jason_Project.c: 373:     I2C_Master_Wait();
 13657  006382  84C5               	bsf	197,2,c	;volatile
 13658  006384  0012               	return		;funcret
 13659  006386                     __end_of_I2C_Master_Stop:
 13660                           	callstack 0
 13661                           
 13662 ;; *************** function _I2C_Master_Wait *****************
 13663 ;; Defined at:
 13664 ;;		line 350 in file "Le_Jason_Project.c"
 13665 ;; Parameters:    Size  Location     Type
 13666 ;;		None
 13667 ;; Auto vars:     Size  Location     Type
 13668 ;;		None
 13669 ;; Return value:  Size  Location     Type
 13670 ;;                  1    wreg      void 
 13671 ;; Registers used:
 13672 ;;		wreg, status,2, status,0
 13673 ;; Tracked objects:
 13674 ;;		On entry : 0/0
 13675 ;;		On exit  : 0/0
 13676 ;;		Unchanged: 0/0
 13677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13681 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13682 ;;Total ram usage:        1 bytes
 13683 ;; Hardware stack levels used: 1
 13684 ;; Hardware stack levels required when called: 3
 13685 ;; This function calls:
 13686 ;;		Nothing
 13687 ;; This function is called by:
 13688 ;;		_I2C_Start
 13689 ;;		_I2C_Master_Stop
 13690 ;;		_I2C_Master_Write
 13691 ;;		_I2C_Master_Start
 13692 ;;		_I2C_Master_RepeatedStart
 13693 ;;		_I2C_Read_Byte
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           	psect	text49
 13698  0062C8                     __ptext49:
 13699                           	callstack 0
 13700  0062C8                     _I2C_Master_Wait:
 13701                           	callstack 24
 13702  0062C8                     l248:
 13703                           
 13704                           ;Le_Jason_Project.c: 351: }
 13705  0062C8  B4C7               	btfsc	199,2,c	;volatile
 13706  0062CA  EF69  F031         	goto	u5151
 13707  0062CE  EF6B  F031         	goto	u5150
 13708  0062D2                     u5151:
 13709  0062D2  EF64  F031         	goto	l248
 13710  0062D6                     u5150:
 13711  0062D6  CFC5 F014          	movff	4037,??_I2C_Master_Wait	;volatile
 13712  0062DA  0E1F               	movlw	31
 13713  0062DC  1614               	andwf	??_I2C_Master_Wait^0,f,c
 13714  0062DE  A4D8               	btfss	status,2,c
 13715  0062E0  EF74  F031         	goto	u5161
 13716  0062E4  EF76  F031         	goto	u5160
 13717  0062E8                     u5161:
 13718  0062E8  EF64  F031         	goto	l248
 13719  0062EC                     u5160:
 13720  0062EC  0012               	return		;funcret
 13721  0062EE                     __end_of_I2C_Master_Wait:
 13722                           	callstack 0
 13723                           
 13724 ;; *************** function _LoPriISR *****************
 13725 ;; Defined at:
 13726 ;;		line 204 in file "Le_Jason_Project.c"
 13727 ;; Parameters:    Size  Location     Type
 13728 ;;		None
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;		None
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  1    wreg      void 
 13733 ;; Registers used:
 13734 ;;		wreg, status,2, status,0, cstack
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13742 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13743 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13744 ;;Total ram usage:        3 bytes
 13745 ;; Hardware stack levels used: 1
 13746 ;; Hardware stack levels required when called: 2
 13747 ;; This function calls:
 13748 ;;		_CCP1handler
 13749 ;;		_CCP4handler
 13750 ;;		_TMR1handler
 13751 ;;		_TMR3handler
 13752 ;; This function is called by:
 13753 ;;		Interrupt level 1
 13754 ;; This function uses a non-reentrant model
 13755 ;;
 13756                           
 13757                           	psect	intcodelo
 13758  000018                     __pintcodelo:
 13759                           	callstack 0
 13760  000018                     _LoPriISR:
 13761                           	callstack 19
 13762                           
 13763                           ;incstack = 0
 13764  000018  804C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 13765  00001A  CFD8 F011          	movff	status,??_LoPriISR
 13766  00001E  CFE8 F012          	movff	wreg,??_LoPriISR+1
 13767  000022  CFE0 F013          	movff	bsr,??_LoPriISR+2
 13768  000026                     
 13769                           ;Le_Jason_Project.c: 205:             TMR3handler();
 13770  000026  CFD8 F040          	movff	status,_Status_temp	;volatile
 13771  00002A                     
 13772                           ;Le_Jason_Project.c: 206:             continue;
 13773  00002A  6E3F               	movwf	_Wreg_temp^0,c
 13774  00002C                     
 13775                           ;Le_Jason_Project.c: 207:         }
 13776  00002C  CFE0 F03E          	movff	bsr,_BSR_temp	;volatile
 13777  000030                     i1l5944:
 13778                           
 13779                           ;Le_Jason_Project.c: 209:         break;
 13780  000030  A2A4               	btfss	164,1,c	;volatile
 13781  000032  EF1D  F000         	goto	i1u598_21
 13782  000036  EF1F  F000         	goto	i1u598_20
 13783  00003A                     i1u598_21:
 13784  00003A  EF23  F000         	goto	i1l199
 13785  00003E                     i1u598_20:
 13786  00003E                     
 13787                           ;Le_Jason_Project.c: 210:     }
 13788  00003E  ECA5  F027         	call	_CCP1handler	;wreg free
 13789                           
 13790                           ;Le_Jason_Project.c: 211:     STATUS = Status_temp;
 13791  000042  EF18  F000         	goto	i1l5944
 13792  000046                     i1l199:
 13793                           
 13794                           ;Le_Jason_Project.c: 213:     BSR = BSR_temp;
 13795  000046  A2B7               	btfss	183,1,c	;volatile
 13796  000048  EF28  F000         	goto	i1u599_21
 13797  00004C  EF2A  F000         	goto	i1u599_20
 13798  000050                     i1u599_21:
 13799  000050  EF2E  F000         	goto	i1l201
 13800  000054                     i1u599_20:
 13801  000054                     
 13802                           ;Le_Jason_Project.c: 214: }
 13803  000054  EC64  F028         	call	_CCP4handler	;wreg free
 13804                           
 13805                           ;Le_Jason_Project.c: 215: void CCP1handler(void){
 13806  000058  EF18  F000         	goto	i1l5944
 13807  00005C                     i1l201:
 13808                           
 13809                           ;Le_Jason_Project.c: 217:     if(PIR1bits.TMR1IF){
 13810  00005C  A09E               	btfss	158,0,c	;volatile
 13811  00005E  EF33  F000         	goto	i1u600_21
 13812  000062  EF35  F000         	goto	i1u600_20
 13813  000066                     i1u600_21:
 13814  000066  EF39  F000         	goto	i1l202
 13815  00006A                     i1u600_20:
 13816  00006A                     
 13817                           ;Le_Jason_Project.c: 218:         if(CCPR1H < 0b10000000){
 13818  00006A  ECA5  F031         	call	_TMR1handler	;wreg free
 13819                           
 13820                           ;Le_Jason_Project.c: 219:             TMR1X++;
 13821  00006E  EF18  F000         	goto	i1l5944
 13822  000072                     i1l202:
 13823                           
 13824                           ;Le_Jason_Project.c: 222:         }
 13825  000072  A2A1               	btfss	161,1,c	;volatile
 13826  000074  EF3E  F000         	goto	i1u601_21
 13827  000078  EF40  F000         	goto	i1u601_20
 13828  00007C                     i1u601_21:
 13829  00007C  EF44  F000         	goto	i1l204
 13830  000080                     i1u601_20:
 13831  000080                     
 13832                           ;Le_Jason_Project.c: 223:     }
 13833  000080  ECC3  F031         	call	_TMR3handler	;wreg free
 13834                           
 13835                           ;Le_Jason_Project.c: 224:     if(CCPR1X != TMR1X){
 13836  000084  EF18  F000         	goto	i1l5944
 13837  000088                     i1l204:
 13838                           
 13839                           ;Le_Jason_Project.c: 229:     if(LATDbits.LATD1 == 1){
 13840  000088  C040  FFD8         	movff	_Status_temp,status	;volatile
 13841  00008C                     
 13842                           ;Le_Jason_Project.c: 230:         CCPRT = ((unsigned long)CCPR1X*65536) + ((unsigned lon
      +                          g)CCPR1H*256) + (unsigned long)CCPR1L;
 13843  00008C  503F               	movf	_Wreg_temp^0,w,c
 13844  00008E                     
 13845                           ;Le_Jason_Project.c: 231:         CCPRT += Servo1_on;
 13846  00008E  C03E  FFE0         	movff	_BSR_temp,bsr	;volatile
 13847  000092  C013  FFE0         	movff	??_LoPriISR+2,bsr
 13848  000096  C012  FFE8         	movff	??_LoPriISR+1,wreg
 13849  00009A  C011  FFD8         	movff	??_LoPriISR,status
 13850  00009E  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13851  0000A0  0010               	retfie	
 13852  0000A2                     __end_of_LoPriISR:
 13853                           	callstack 0
 13854                           
 13855 ;; *************** function _TMR3handler *****************
 13856 ;; Defined at:
 13857 ;;		line 300 in file "Le_Jason_Project.c"
 13858 ;; Parameters:    Size  Location     Type
 13859 ;;		None
 13860 ;; Auto vars:     Size  Location     Type
 13861 ;;		None
 13862 ;; Return value:  Size  Location     Type
 13863 ;;                  1    wreg      void 
 13864 ;; Registers used:
 13865 ;;		status,2, status,0
 13866 ;; Tracked objects:
 13867 ;;		On entry : 0/0
 13868 ;;		On exit  : 0/0
 13869 ;;		Unchanged: 0/0
 13870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13875 ;;Total ram usage:        0 bytes
 13876 ;; Hardware stack levels used: 1
 13877 ;; Hardware stack levels required when called: 1
 13878 ;; This function calls:
 13879 ;;		Nothing
 13880 ;; This function is called by:
 13881 ;;		_LoPriISR
 13882 ;; This function uses a non-reentrant model
 13883 ;;
 13884                           
 13885                           	psect	text51
 13886  006386                     __ptext51:
 13887                           	callstack 0
 13888  006386                     _TMR3handler:
 13889                           	callstack 19
 13890  006386                     
 13891                           ;Le_Jason_Project.c: 301: void Servo1(unsigned int angle){
 13892  006386  2A41               	incf	_TMR3X^0,f,c
 13893  006388                     
 13894                           ;Le_Jason_Project.c: 302:     unsigned int temp;
 13895  006388  92A1               	bcf	161,1,c	;volatile
 13896  00638A  0012               	return		;funcret
 13897  00638C                     __end_of_TMR3handler:
 13898                           	callstack 0
 13899                           
 13900 ;; *************** function _TMR1handler *****************
 13901 ;; Defined at:
 13902 ;;		line 294 in file "Le_Jason_Project.c"
 13903 ;; Parameters:    Size  Location     Type
 13904 ;;		None
 13905 ;; Auto vars:     Size  Location     Type
 13906 ;;		None
 13907 ;; Return value:  Size  Location     Type
 13908 ;;                  1    wreg      void 
 13909 ;; Registers used:
 13910 ;;		wreg, status,2, status,0
 13911 ;; Tracked objects:
 13912 ;;		On entry : 0/0
 13913 ;;		On exit  : 0/0
 13914 ;;		Unchanged: 0/0
 13915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13920 ;;Total ram usage:        0 bytes
 13921 ;; Hardware stack levels used: 1
 13922 ;; Hardware stack levels required when called: 1
 13923 ;; This function calls:
 13924 ;;		Nothing
 13925 ;; This function is called by:
 13926 ;;		_LoPriISR
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930                           	psect	text52
 13931  00634A                     __ptext52:
 13932                           	callstack 0
 13933  00634A                     _TMR1handler:
 13934                           	callstack 19
 13935  00634A                     
 13936                           ;Le_Jason_Project.c: 295:     unsigned int first = (value - valuemin);
 13937  00634A  2A42               	incf	_TMR1X^0,f,c
 13938  00634C                     
 13939                           ;Le_Jason_Project.c: 296:     unsigned long second = (unsigned long)first*((unsigned lon
      +                          g)newmax - (unsigned long)newmin);
 13940  00634C  0E01               	movlw	1
 13941  00634E  0101               	movlb	1	; () banked
 13942  006350  27BA               	addwf	_time0counter& (0+255),f,b
 13943  006352  0E00               	movlw	0
 13944  006354  23BB               	addwfc	(_time0counter+1)& (0+255),f,b
 13945  006356  23BC               	addwfc	(_time0counter+2)& (0+255),f,b
 13946  006358  23BD               	addwfc	(_time0counter+3)& (0+255),f,b
 13947  00635A                     
 13948                           ; BSR set to: 1
 13949                           ;Le_Jason_Project.c: 297:     unsigned int third = second/(valuemax - valuemin);
 13950  00635A  909E               	bcf	158,0,c	;volatile
 13951  00635C                     
 13952                           ; BSR set to: 1
 13953  00635C  0012               	return		;funcret
 13954  00635E                     __end_of_TMR1handler:
 13955                           	callstack 0
 13956                           
 13957 ;; *************** function _CCP4handler *****************
 13958 ;; Defined at:
 13959 ;;		line 264 in file "Le_Jason_Project.c"
 13960 ;; Parameters:    Size  Location     Type
 13961 ;;		None
 13962 ;; Auto vars:     Size  Location     Type
 13963 ;;  CCPRT           4   12[COMRAM] unsigned long 
 13964 ;; Return value:  Size  Location     Type
 13965 ;;                  1    wreg      void 
 13966 ;; Registers used:
 13967 ;;		wreg, status,2, status,0
 13968 ;; Tracked objects:
 13969 ;;		On entry : 0/0
 13970 ;;		On exit  : 0/0
 13971 ;;		Unchanged: 0/0
 13972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13974 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13975 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13976 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13977 ;;Total ram usage:       16 bytes
 13978 ;; Hardware stack levels used: 1
 13979 ;; Hardware stack levels required when called: 1
 13980 ;; This function calls:
 13981 ;;		Nothing
 13982 ;; This function is called by:
 13983 ;;		_LoPriISR
 13984 ;; This function uses a non-reentrant model
 13985 ;;
 13986                           
 13987                           	psect	text53
 13988  0050C8                     __ptext53:
 13989                           	callstack 0
 13990  0050C8                     _CCP4handler:
 13991                           	callstack 19
 13992  0050C8                     
 13993                           ;Le_Jason_Project.c: 265:     };Le_Jason_Project.c: 266:     if(LATEbits.LATE1 == 0){
 13994  0050C8  A2A1               	btfss	161,1,c	;volatile
 13995  0050CA  EF69  F028         	goto	i1u590_21
 13996  0050CE  EF6B  F028         	goto	i1u590_20
 13997  0050D2                     i1u590_21:
 13998  0050D2  EF75  F028         	goto	i1l5884
 13999  0050D6                     i1u590_20:
 14000  0050D6                     
 14001                           ;Le_Jason_Project.c: 267:         CCPRT = ((unsigned long)CCPR4X*65536) + ((unsigned lon
      +                          g)CCPR4H*256) + (unsigned long)CCPR4L;
 14002  0050D6  0E80               	movlw	128
 14003  0050D8  6079               	cpfslt	121,c	;volatile
 14004  0050DA  EF71  F028         	goto	i1u591_21
 14005  0050DE  EF73  F028         	goto	i1u591_20
 14006  0050E2                     i1u591_21:
 14007  0050E2  EF75  F028         	goto	i1l5884
 14008  0050E6                     i1u591_20:
 14009  0050E6                     
 14010                           ;Le_Jason_Project.c: 268:         CCPRT += Servo2_off;
 14011  0050E6  2A41               	incf	_TMR3X^0,f,c
 14012  0050E8                     
 14013                           ;Le_Jason_Project.c: 269:         CCPR4L = (CCPRT & 0x0000FF);
 14014  0050E8  92A1               	bcf	161,1,c	;volatile
 14015  0050EA                     i1l5884:
 14016                           
 14017                           ;Le_Jason_Project.c: 272:     }
 14018  0050EA  5041               	movf	_TMR3X^0,w,c
 14019  0050EC  0100               	movlb	0	; () banked
 14020  0050EE  19FE               	xorwf	_CCPR4X& (0+255),w,b
 14021  0050F0  B4D8               	btfsc	status,2,c
 14022  0050F2  EF7D  F028         	goto	i1u592_21
 14023  0050F6  EF7F  F028         	goto	i1u592_20
 14024  0050FA                     i1u592_21:
 14025  0050FA  EF82  F028         	goto	i1l5888
 14026  0050FE                     i1u592_20:
 14027  0050FE                     
 14028                           ; BSR set to: 0
 14029                           ;Le_Jason_Project.c: 273:     PIR4bits.CCP4IF = 0;
 14030  0050FE  92B7               	bcf	183,1,c	;volatile
 14031                           
 14032                           ;Le_Jason_Project.c: 274:     return;
 14033  005100  EF1C  F029         	goto	i1l219
 14034  005104                     i1l5888:
 14035                           
 14036                           ; BSR set to: 0
 14037                           ;Le_Jason_Project.c: 276: void TMR1handler(void){
 14038  005104  A28D               	btfss	141,1,c	;volatile
 14039  005106  EF87  F028         	goto	i1u593_21
 14040  00510A  EF8B  F028         	goto	i1u593_20
 14041  00510E                     i1u593_21:
 14042  00510E  6A01               	clrf	??_CCP4handler^0,c
 14043  005110  2A01               	incf	??_CCP4handler^0,f,c
 14044  005112  EF8C  F028         	goto	i1u594_28
 14045  005116                     i1u593_20:
 14046  005116  6A01               	clrf	??_CCP4handler^0,c
 14047  005118                     i1u594_28:
 14048  005118  4601               	rlncf	??_CCP4handler^0,f,c
 14049  00511A  508D               	movf	141,w,c	;volatile
 14050  00511C  1801               	xorwf	??_CCP4handler^0,w,c
 14051  00511E  0BFD               	andlw	-3
 14052  005120  1801               	xorwf	??_CCP4handler^0,w,c
 14053  005122  6E8D               	movwf	141,c	;volatile
 14054  005124                     
 14055                           ;Le_Jason_Project.c: 277:     TMR1X++;
 14056  005124  A28D               	btfss	141,1,c	;volatile
 14057  005126  EF97  F028         	goto	i1u595_21
 14058  00512A  EF99  F028         	goto	i1u595_20
 14059  00512E                     i1u595_21:
 14060  00512E  EFD6  F028         	goto	i1l5900
 14061  005132                     i1u595_20:
 14062  005132                     
 14063                           ;Le_Jason_Project.c: 278:     time0counter++;
 14064  005132  CF79 F001          	movff	3961,??_CCP4handler	;volatile
 14065  005136  6A02               	clrf	(??_CCP4handler+1)^0,c
 14066  005138  6A03               	clrf	(??_CCP4handler+2)^0,c
 14067  00513A  6A04               	clrf	(??_CCP4handler+3)^0,c
 14068  00513C  C003  F004         	movff	??_CCP4handler+2,??_CCP4handler+3
 14069  005140  C002  F003         	movff	??_CCP4handler+1,??_CCP4handler+2
 14070  005144  C001  F002         	movff	??_CCP4handler,??_CCP4handler+1
 14071  005148  6A01               	clrf	??_CCP4handler^0,c
 14072  00514A  C0FE  F005         	movff	_CCPR4X,??_CCP4handler+4
 14073  00514E  6A06               	clrf	(??_CCP4handler+5)^0,c
 14074  005150  6A07               	clrf	(??_CCP4handler+6)^0,c
 14075  005152  6A08               	clrf	(??_CCP4handler+7)^0,c
 14076  005154  C006  F008         	movff	??_CCP4handler+5,??_CCP4handler+7
 14077  005158  C005  F007         	movff	??_CCP4handler+4,??_CCP4handler+6
 14078  00515C  6A06               	clrf	(??_CCP4handler+5)^0,c
 14079  00515E  6A05               	clrf	(??_CCP4handler+4)^0,c
 14080  005160  5001               	movf	??_CCP4handler^0,w,c
 14081  005162  2405               	addwf	(??_CCP4handler+4)^0,w,c
 14082  005164  6E09               	movwf	(??_CCP4handler+8)^0,c
 14083  005166  5002               	movf	(??_CCP4handler+1)^0,w,c
 14084  005168  2006               	addwfc	(??_CCP4handler+5)^0,w,c
 14085  00516A  6E0A               	movwf	(??_CCP4handler+9)^0,c
 14086  00516C  5003               	movf	(??_CCP4handler+2)^0,w,c
 14087  00516E  2007               	addwfc	(??_CCP4handler+6)^0,w,c
 14088  005170  6E0B               	movwf	(??_CCP4handler+10)^0,c
 14089  005172  5004               	movf	(??_CCP4handler+3)^0,w,c
 14090  005174  2008               	addwfc	(??_CCP4handler+7)^0,w,c
 14091  005176  6E0C               	movwf	(??_CCP4handler+11)^0,c
 14092  005178  5078               	movf	120,w,c	;volatile
 14093  00517A  2409               	addwf	(??_CCP4handler+8)^0,w,c
 14094  00517C  6E0D               	movwf	CCP4handler@CCPRT^0,c
 14095  00517E  0E00               	movlw	0
 14096  005180  200A               	addwfc	(??_CCP4handler+9)^0,w,c
 14097  005182  6E0E               	movwf	(CCP4handler@CCPRT+1)^0,c
 14098  005184  0E00               	movlw	0
 14099  005186  200B               	addwfc	(??_CCP4handler+10)^0,w,c
 14100  005188  6E0F               	movwf	(CCP4handler@CCPRT+2)^0,c
 14101  00518A  0E00               	movlw	0
 14102  00518C  200C               	addwfc	(??_CCP4handler+11)^0,w,c
 14103  00518E  6E10               	movwf	(CCP4handler@CCPRT+3)^0,c
 14104                           
 14105                           ;Le_Jason_Project.c: 279:     PIR1bits.TMR1IF = 0;
 14106  005190  5043               	movf	_Servo2_on^0,w,c
 14107  005192  260D               	addwf	CCP4handler@CCPRT^0,f,c
 14108  005194  5044               	movf	(_Servo2_on+1)^0,w,c
 14109  005196  220E               	addwfc	(CCP4handler@CCPRT+1)^0,f,c
 14110  005198  5045               	movf	(_Servo2_on+2)^0,w,c
 14111  00519A  220F               	addwfc	(CCP4handler@CCPRT+2)^0,f,c
 14112  00519C  5046               	movf	(_Servo2_on+3)^0,w,c
 14113  00519E  2210               	addwfc	(CCP4handler@CCPRT+3)^0,f,c
 14114  0051A0                     
 14115                           ;Le_Jason_Project.c: 280:     return;
 14116  0051A0  C00D  FF78         	movff	CCP4handler@CCPRT,3960	;volatile
 14117  0051A4                     
 14118                           ;Le_Jason_Project.c: 281: }
 14119  0051A4  C00E  FF79         	movff	CCP4handler@CCPRT+1,3961	;volatile
 14120  0051A8                     
 14121                           ;Le_Jason_Project.c: 282: void TMR3handler(void){
 14122  0051A8  C00F  F0FE         	movff	CCP4handler@CCPRT+2,_CCPR4X
 14123  0051AC                     i1l5900:
 14124                           
 14125                           ;Le_Jason_Project.c: 284:     PIR2bits.TMR3IF = 0;
 14126  0051AC  B28D               	btfsc	141,1,c	;volatile
 14127  0051AE  EFDB  F028         	goto	i1u596_21
 14128  0051B2  EFDD  F028         	goto	i1u596_20
 14129  0051B6                     i1u596_21:
 14130  0051B6  EF1B  F029         	goto	i1l5910
 14131  0051BA                     i1u596_20:
 14132  0051BA                     
 14133                           ;Le_Jason_Project.c: 285:     return;
 14134  0051BA  CF79 F001          	movff	3961,??_CCP4handler	;volatile
 14135  0051BE  6A02               	clrf	(??_CCP4handler+1)^0,c
 14136  0051C0  6A03               	clrf	(??_CCP4handler+2)^0,c
 14137  0051C2  6A04               	clrf	(??_CCP4handler+3)^0,c
 14138  0051C4  C003  F004         	movff	??_CCP4handler+2,??_CCP4handler+3
 14139  0051C8  C002  F003         	movff	??_CCP4handler+1,??_CCP4handler+2
 14140  0051CC  C001  F002         	movff	??_CCP4handler,??_CCP4handler+1
 14141  0051D0  6A01               	clrf	??_CCP4handler^0,c
 14142  0051D2  C0FE  F005         	movff	_CCPR4X,??_CCP4handler+4
 14143  0051D6  6A06               	clrf	(??_CCP4handler+5)^0,c
 14144  0051D8  6A07               	clrf	(??_CCP4handler+6)^0,c
 14145  0051DA  6A08               	clrf	(??_CCP4handler+7)^0,c
 14146  0051DC  C006  F008         	movff	??_CCP4handler+5,??_CCP4handler+7
 14147  0051E0  C005  F007         	movff	??_CCP4handler+4,??_CCP4handler+6
 14148  0051E4  6A06               	clrf	(??_CCP4handler+5)^0,c
 14149  0051E6  6A05               	clrf	(??_CCP4handler+4)^0,c
 14150  0051E8  5001               	movf	??_CCP4handler^0,w,c
 14151  0051EA  2405               	addwf	(??_CCP4handler+4)^0,w,c
 14152  0051EC  6E09               	movwf	(??_CCP4handler+8)^0,c
 14153  0051EE  5002               	movf	(??_CCP4handler+1)^0,w,c
 14154  0051F0  2006               	addwfc	(??_CCP4handler+5)^0,w,c
 14155  0051F2  6E0A               	movwf	(??_CCP4handler+9)^0,c
 14156  0051F4  5003               	movf	(??_CCP4handler+2)^0,w,c
 14157  0051F6  2007               	addwfc	(??_CCP4handler+6)^0,w,c
 14158  0051F8  6E0B               	movwf	(??_CCP4handler+10)^0,c
 14159  0051FA  5004               	movf	(??_CCP4handler+3)^0,w,c
 14160  0051FC  2008               	addwfc	(??_CCP4handler+7)^0,w,c
 14161  0051FE  6E0C               	movwf	(??_CCP4handler+11)^0,c
 14162  005200  5078               	movf	120,w,c	;volatile
 14163  005202  2409               	addwf	(??_CCP4handler+8)^0,w,c
 14164  005204  6E0D               	movwf	CCP4handler@CCPRT^0,c
 14165  005206  0E00               	movlw	0
 14166  005208  200A               	addwfc	(??_CCP4handler+9)^0,w,c
 14167  00520A  6E0E               	movwf	(CCP4handler@CCPRT+1)^0,c
 14168  00520C  0E00               	movlw	0
 14169  00520E  200B               	addwfc	(??_CCP4handler+10)^0,w,c
 14170  005210  6E0F               	movwf	(CCP4handler@CCPRT+2)^0,c
 14171  005212  0E00               	movlw	0
 14172  005214  200C               	addwfc	(??_CCP4handler+11)^0,w,c
 14173  005216  6E10               	movwf	(CCP4handler@CCPRT+3)^0,c
 14174                           
 14175                           ;Le_Jason_Project.c: 286: }
 14176  005218  0101               	movlb	1	; () banked
 14177  00521A  51C8               	movf	_Servo2_off& (0+255),w,b
 14178  00521C  260D               	addwf	CCP4handler@CCPRT^0,f,c
 14179  00521E  51C9               	movf	(_Servo2_off+1)& (0+255),w,b
 14180  005220  220E               	addwfc	(CCP4handler@CCPRT+1)^0,f,c
 14181  005222  51CA               	movf	(_Servo2_off+2)& (0+255),w,b
 14182  005224  220F               	addwfc	(CCP4handler@CCPRT+2)^0,f,c
 14183  005226  51CB               	movf	(_Servo2_off+3)& (0+255),w,b
 14184  005228  2210               	addwfc	(CCP4handler@CCPRT+3)^0,f,c
 14185  00522A                     
 14186                           ; BSR set to: 1
 14187                           ;Le_Jason_Project.c: 287: void TMR0handler(void){
 14188  00522A  C00D  FF78         	movff	CCP4handler@CCPRT,3960	;volatile
 14189  00522E                     
 14190                           ; BSR set to: 1
 14191                           ;Le_Jason_Project.c: 288:     time0counter++;
 14192  00522E  C00E  FF79         	movff	CCP4handler@CCPRT+1,3961	;volatile
 14193  005232                     
 14194                           ; BSR set to: 1
 14195                           ;Le_Jason_Project.c: 289:     CurrentTime = time0counter*0.064;
 14196  005232  C00F  F0FE         	movff	CCP4handler@CCPRT+2,_CCPR4X
 14197  005236                     i1l5910:
 14198                           
 14199                           ;Le_Jason_Project.c: 291:     return;
 14200  005236  92B7               	bcf	183,1,c	;volatile
 14201  005238                     i1l219:
 14202  005238  0012               	return		;funcret
 14203  00523A                     __end_of_CCP4handler:
 14204                           	callstack 0
 14205                           
 14206 ;; *************** function _CCP1handler *****************
 14207 ;; Defined at:
 14208 ;;		line 233 in file "Le_Jason_Project.c"
 14209 ;; Parameters:    Size  Location     Type
 14210 ;;		None
 14211 ;; Auto vars:     Size  Location     Type
 14212 ;;  CCPRT           4   12[COMRAM] unsigned long 
 14213 ;; Return value:  Size  Location     Type
 14214 ;;                  1    wreg      void 
 14215 ;; Registers used:
 14216 ;;		wreg, status,2, status,0
 14217 ;; Tracked objects:
 14218 ;;		On entry : 0/0
 14219 ;;		On exit  : 0/0
 14220 ;;		Unchanged: 0/0
 14221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14223 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14224 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14225 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14226 ;;Total ram usage:       16 bytes
 14227 ;; Hardware stack levels used: 1
 14228 ;; Hardware stack levels required when called: 1
 14229 ;; This function calls:
 14230 ;;		Nothing
 14231 ;; This function is called by:
 14232 ;;		_LoPriISR
 14233 ;; This function uses a non-reentrant model
 14234 ;;
 14235                           
 14236                           	psect	text54
 14237  004F4A                     __ptext54:
 14238                           	callstack 0
 14239  004F4A                     _CCP1handler:
 14240                           	callstack 19
 14241  004F4A                     
 14242                           ;Le_Jason_Project.c: 234:         CCPR1X = (CCPRT & 0xFF0000)/65536;;Le_Jason_Project.c:
      +                           235:     }
 14243  004F4A  A09E               	btfss	158,0,c	;volatile
 14244  004F4C  EFAA  F027         	goto	i1u583_21
 14245  004F50  EFAC  F027         	goto	i1u583_20
 14246  004F54                     i1u583_21:
 14247  004F54  EFBD  F027         	goto	i1l5846
 14248  004F58                     i1u583_20:
 14249  004F58                     
 14250                           ;Le_Jason_Project.c: 236:     if(LATDbits.LATD1 == 0){
 14251  004F58  0E80               	movlw	128
 14252  004F5A  60BD               	cpfslt	189,c	;volatile
 14253  004F5C  EFB2  F027         	goto	i1u584_21
 14254  004F60  EFB4  F027         	goto	i1u584_20
 14255  004F64                     i1u584_21:
 14256  004F64  EFBD  F027         	goto	i1l5846
 14257  004F68                     i1u584_20:
 14258  004F68                     
 14259                           ;Le_Jason_Project.c: 237:       CCPRT = ((unsigned long)CCPR1X*65536) + ((unsigned long)
      +                          CCPR1H*256) + (unsigned long)CCPR1L;
 14260  004F68  2A42               	incf	_TMR1X^0,f,c
 14261  004F6A                     
 14262                           ;Le_Jason_Project.c: 238:         CCPRT += Servo1_off;
 14263  004F6A  0E01               	movlw	1
 14264  004F6C  0101               	movlb	1	; () banked
 14265  004F6E  27BA               	addwf	_time0counter& (0+255),f,b
 14266  004F70  0E00               	movlw	0
 14267  004F72  23BB               	addwfc	(_time0counter+1)& (0+255),f,b
 14268  004F74  23BC               	addwfc	(_time0counter+2)& (0+255),f,b
 14269  004F76  23BD               	addwfc	(_time0counter+3)& (0+255),f,b
 14270  004F78                     
 14271                           ; BSR set to: 1
 14272                           ;Le_Jason_Project.c: 239:         CCPR1L = CCPRT & 0x0000FF;
 14273  004F78  909E               	bcf	158,0,c	;volatile
 14274  004F7A                     i1l5846:
 14275                           
 14276                           ;Le_Jason_Project.c: 242:     }
 14277  004F7A  5042               	movf	_TMR1X^0,w,c
 14278  004F7C  184B               	xorwf	_CCPR1X^0,w,c
 14279  004F7E  B4D8               	btfsc	status,2,c
 14280  004F80  EFC4  F027         	goto	i1u585_21
 14281  004F84  EFC6  F027         	goto	i1u585_20
 14282  004F88                     i1u585_21:
 14283  004F88  EFC9  F027         	goto	i1l5850
 14284  004F8C                     i1u585_20:
 14285  004F8C                     
 14286                           ;Le_Jason_Project.c: 243:     PIR3bits.CCP1IF = 0;
 14287  004F8C  92A4               	bcf	164,1,c	;volatile
 14288                           
 14289                           ;Le_Jason_Project.c: 244:     return;
 14290  004F8E  EF63  F028         	goto	i1l211
 14291  004F92                     i1l5850:
 14292                           
 14293                           ;Le_Jason_Project.c: 246: void CCP4handler(void){
 14294  004F92  A28C               	btfss	140,1,c	;volatile
 14295  004F94  EFCE  F027         	goto	i1u586_21
 14296  004F98  EFD2  F027         	goto	i1u586_20
 14297  004F9C                     i1u586_21:
 14298  004F9C  6A01               	clrf	??_CCP1handler^0,c
 14299  004F9E  2A01               	incf	??_CCP1handler^0,f,c
 14300  004FA0  EFD3  F027         	goto	i1u587_28
 14301  004FA4                     i1u586_20:
 14302  004FA4  6A01               	clrf	??_CCP1handler^0,c
 14303  004FA6                     i1u587_28:
 14304  004FA6  4601               	rlncf	??_CCP1handler^0,f,c
 14305  004FA8  508C               	movf	140,w,c	;volatile
 14306  004FAA  1801               	xorwf	??_CCP1handler^0,w,c
 14307  004FAC  0BFD               	andlw	-3
 14308  004FAE  1801               	xorwf	??_CCP1handler^0,w,c
 14309  004FB0  6E8C               	movwf	140,c	;volatile
 14310  004FB2                     
 14311                           ;Le_Jason_Project.c: 247:     unsigned long CCPRT;
 14312  004FB2  A28C               	btfss	140,1,c	;volatile
 14313  004FB4  EFDE  F027         	goto	i1u588_21
 14314  004FB8  EFE0  F027         	goto	i1u588_20
 14315  004FBC                     i1u588_21:
 14316  004FBC  EF1D  F028         	goto	i1l5862
 14317  004FC0                     i1u588_20:
 14318  004FC0                     
 14319                           ;Le_Jason_Project.c: 248:     if(PIR2bits.TMR3IF){
 14320  004FC0  CFBD F001          	movff	4029,??_CCP1handler	;volatile
 14321  004FC4  6A02               	clrf	(??_CCP1handler+1)^0,c
 14322  004FC6  6A03               	clrf	(??_CCP1handler+2)^0,c
 14323  004FC8  6A04               	clrf	(??_CCP1handler+3)^0,c
 14324  004FCA  C003  F004         	movff	??_CCP1handler+2,??_CCP1handler+3
 14325  004FCE  C002  F003         	movff	??_CCP1handler+1,??_CCP1handler+2
 14326  004FD2  C001  F002         	movff	??_CCP1handler,??_CCP1handler+1
 14327  004FD6  6A01               	clrf	??_CCP1handler^0,c
 14328  004FD8  C04B  F005         	movff	_CCPR1X,??_CCP1handler+4
 14329  004FDC  6A06               	clrf	(??_CCP1handler+5)^0,c
 14330  004FDE  6A07               	clrf	(??_CCP1handler+6)^0,c
 14331  004FE0  6A08               	clrf	(??_CCP1handler+7)^0,c
 14332  004FE2  C006  F008         	movff	??_CCP1handler+5,??_CCP1handler+7
 14333  004FE6  C005  F007         	movff	??_CCP1handler+4,??_CCP1handler+6
 14334  004FEA  6A06               	clrf	(??_CCP1handler+5)^0,c
 14335  004FEC  6A05               	clrf	(??_CCP1handler+4)^0,c
 14336  004FEE  5001               	movf	??_CCP1handler^0,w,c
 14337  004FF0  2405               	addwf	(??_CCP1handler+4)^0,w,c
 14338  004FF2  6E09               	movwf	(??_CCP1handler+8)^0,c
 14339  004FF4  5002               	movf	(??_CCP1handler+1)^0,w,c
 14340  004FF6  2006               	addwfc	(??_CCP1handler+5)^0,w,c
 14341  004FF8  6E0A               	movwf	(??_CCP1handler+9)^0,c
 14342  004FFA  5003               	movf	(??_CCP1handler+2)^0,w,c
 14343  004FFC  2007               	addwfc	(??_CCP1handler+6)^0,w,c
 14344  004FFE  6E0B               	movwf	(??_CCP1handler+10)^0,c
 14345  005000  5004               	movf	(??_CCP1handler+3)^0,w,c
 14346  005002  2008               	addwfc	(??_CCP1handler+7)^0,w,c
 14347  005004  6E0C               	movwf	(??_CCP1handler+11)^0,c
 14348  005006  50BC               	movf	188,w,c	;volatile
 14349  005008  2409               	addwf	(??_CCP1handler+8)^0,w,c
 14350  00500A  6E0D               	movwf	CCP1handler@CCPRT^0,c
 14351  00500C  0E00               	movlw	0
 14352  00500E  200A               	addwfc	(??_CCP1handler+9)^0,w,c
 14353  005010  6E0E               	movwf	(CCP1handler@CCPRT+1)^0,c
 14354  005012  0E00               	movlw	0
 14355  005014  200B               	addwfc	(??_CCP1handler+10)^0,w,c
 14356  005016  6E0F               	movwf	(CCP1handler@CCPRT+2)^0,c
 14357  005018  0E00               	movlw	0
 14358  00501A  200C               	addwfc	(??_CCP1handler+11)^0,w,c
 14359  00501C  6E10               	movwf	(CCP1handler@CCPRT+3)^0,c
 14360                           
 14361                           ;Le_Jason_Project.c: 249:         if(CCPR4H < 0b10000000){
 14362  00501E  5047               	movf	_Servo1_on^0,w,c
 14363  005020  260D               	addwf	CCP1handler@CCPRT^0,f,c
 14364  005022  5048               	movf	(_Servo1_on+1)^0,w,c
 14365  005024  220E               	addwfc	(CCP1handler@CCPRT+1)^0,f,c
 14366  005026  5049               	movf	(_Servo1_on+2)^0,w,c
 14367  005028  220F               	addwfc	(CCP1handler@CCPRT+2)^0,f,c
 14368  00502A  504A               	movf	(_Servo1_on+3)^0,w,c
 14369  00502C  2210               	addwfc	(CCP1handler@CCPRT+3)^0,f,c
 14370  00502E                     
 14371                           ;Le_Jason_Project.c: 250:             TMR3X++;
 14372  00502E  C00D  FFBC         	movff	CCP1handler@CCPRT,4028	;volatile
 14373  005032                     
 14374                           ;Le_Jason_Project.c: 251:             PIR2bits.TMR3IF = 0;
 14375  005032  C00E  FFBD         	movff	CCP1handler@CCPRT+1,4029	;volatile
 14376  005036                     
 14377                           ;Le_Jason_Project.c: 252:         }
 14378  005036  C00F  F04B         	movff	CCP1handler@CCPRT+2,_CCPR1X
 14379  00503A                     i1l5862:
 14380                           
 14381                           ;Le_Jason_Project.c: 254:     if(CCPR4X != TMR3X){
 14382  00503A  B28C               	btfsc	140,1,c	;volatile
 14383  00503C  EF22  F028         	goto	i1u589_21
 14384  005040  EF24  F028         	goto	i1u589_20
 14385  005044                     i1u589_21:
 14386  005044  EF62  F028         	goto	i1l5872
 14387  005048                     i1u589_20:
 14388  005048                     
 14389                           ;Le_Jason_Project.c: 255:         PIR4bits.CCP4IF = 0;
 14390  005048  CFBD F001          	movff	4029,??_CCP1handler	;volatile
 14391  00504C  6A02               	clrf	(??_CCP1handler+1)^0,c
 14392  00504E  6A03               	clrf	(??_CCP1handler+2)^0,c
 14393  005050  6A04               	clrf	(??_CCP1handler+3)^0,c
 14394  005052  C003  F004         	movff	??_CCP1handler+2,??_CCP1handler+3
 14395  005056  C002  F003         	movff	??_CCP1handler+1,??_CCP1handler+2
 14396  00505A  C001  F002         	movff	??_CCP1handler,??_CCP1handler+1
 14397  00505E  6A01               	clrf	??_CCP1handler^0,c
 14398  005060  C04B  F005         	movff	_CCPR1X,??_CCP1handler+4
 14399  005064  6A06               	clrf	(??_CCP1handler+5)^0,c
 14400  005066  6A07               	clrf	(??_CCP1handler+6)^0,c
 14401  005068  6A08               	clrf	(??_CCP1handler+7)^0,c
 14402  00506A  C006  F008         	movff	??_CCP1handler+5,??_CCP1handler+7
 14403  00506E  C005  F007         	movff	??_CCP1handler+4,??_CCP1handler+6
 14404  005072  6A06               	clrf	(??_CCP1handler+5)^0,c
 14405  005074  6A05               	clrf	(??_CCP1handler+4)^0,c
 14406  005076  5001               	movf	??_CCP1handler^0,w,c
 14407  005078  2405               	addwf	(??_CCP1handler+4)^0,w,c
 14408  00507A  6E09               	movwf	(??_CCP1handler+8)^0,c
 14409  00507C  5002               	movf	(??_CCP1handler+1)^0,w,c
 14410  00507E  2006               	addwfc	(??_CCP1handler+5)^0,w,c
 14411  005080  6E0A               	movwf	(??_CCP1handler+9)^0,c
 14412  005082  5003               	movf	(??_CCP1handler+2)^0,w,c
 14413  005084  2007               	addwfc	(??_CCP1handler+6)^0,w,c
 14414  005086  6E0B               	movwf	(??_CCP1handler+10)^0,c
 14415  005088  5004               	movf	(??_CCP1handler+3)^0,w,c
 14416  00508A  2008               	addwfc	(??_CCP1handler+7)^0,w,c
 14417  00508C  6E0C               	movwf	(??_CCP1handler+11)^0,c
 14418  00508E  50BC               	movf	188,w,c	;volatile
 14419  005090  2409               	addwf	(??_CCP1handler+8)^0,w,c
 14420  005092  6E0D               	movwf	CCP1handler@CCPRT^0,c
 14421  005094  0E00               	movlw	0
 14422  005096  200A               	addwfc	(??_CCP1handler+9)^0,w,c
 14423  005098  6E0E               	movwf	(CCP1handler@CCPRT+1)^0,c
 14424  00509A  0E00               	movlw	0
 14425  00509C  200B               	addwfc	(??_CCP1handler+10)^0,w,c
 14426  00509E  6E0F               	movwf	(CCP1handler@CCPRT+2)^0,c
 14427  0050A0  0E00               	movlw	0
 14428  0050A2  200C               	addwfc	(??_CCP1handler+11)^0,w,c
 14429  0050A4  6E10               	movwf	(CCP1handler@CCPRT+3)^0,c
 14430                           
 14431                           ;Le_Jason_Project.c: 256:         return;
 14432  0050A6  0101               	movlb	1	; () banked
 14433  0050A8  51CC               	movf	_Servo1_off& (0+255),w,b
 14434  0050AA  260D               	addwf	CCP1handler@CCPRT^0,f,c
 14435  0050AC  51CD               	movf	(_Servo1_off+1)& (0+255),w,b
 14436  0050AE  220E               	addwfc	(CCP1handler@CCPRT+1)^0,f,c
 14437  0050B0  51CE               	movf	(_Servo1_off+2)& (0+255),w,b
 14438  0050B2  220F               	addwfc	(CCP1handler@CCPRT+2)^0,f,c
 14439  0050B4  51CF               	movf	(_Servo1_off+3)& (0+255),w,b
 14440  0050B6  2210               	addwfc	(CCP1handler@CCPRT+3)^0,f,c
 14441  0050B8                     
 14442                           ; BSR set to: 1
 14443                           ;Le_Jason_Project.c: 257:     }
 14444  0050B8  C00D  FFBC         	movff	CCP1handler@CCPRT,4028	;volatile
 14445  0050BC                     
 14446                           ; BSR set to: 1
 14447                           ;Le_Jason_Project.c: 258:     LATEbits.LATE1 = !LATEbits.LATE1;
 14448  0050BC  C00E  FFBD         	movff	CCP1handler@CCPRT+1,4029	;volatile
 14449  0050C0                     
 14450                           ; BSR set to: 1
 14451                           ;Le_Jason_Project.c: 259:     if(LATEbits.LATE1 == 1){
 14452  0050C0  C00F  F04B         	movff	CCP1handler@CCPRT+2,_CCPR1X
 14453  0050C4                     i1l5872:
 14454                           
 14455                           ;Le_Jason_Project.c: 261:         CCPRT += Servo2_on;
 14456  0050C4  92A4               	bcf	164,1,c	;volatile
 14457  0050C6                     i1l211:
 14458  0050C6  0012               	return		;funcret
 14459  0050C8                     __end_of_CCP1handler:
 14460                           	callstack 0
 14461                           
 14462 ;; *************** function _HiPriISR *****************
 14463 ;; Defined at:
 14464 ;;		line 194 in file "Le_Jason_Project.c"
 14465 ;; Parameters:    Size  Location     Type
 14466 ;;		None
 14467 ;; Auto vars:     Size  Location     Type
 14468 ;;		None
 14469 ;; Return value:  Size  Location     Type
 14470 ;;                  1    wreg      void 
 14471 ;; Registers used:
 14472 ;;		None
 14473 ;; Tracked objects:
 14474 ;;		On entry : 0/0
 14475 ;;		On exit  : 0/0
 14476 ;;		Unchanged: 0/0
 14477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14482 ;;Total ram usage:        0 bytes
 14483 ;; Hardware stack levels used: 1
 14484 ;; This function calls:
 14485 ;;		Nothing
 14486 ;; This function is called by:
 14487 ;;		Interrupt level 2
 14488 ;; This function uses a non-reentrant model
 14489 ;;
 14490                           
 14491                           	psect	intcode
 14492  000008                     __pintcode:
 14493                           	callstack 0
 14494  000008                     _HiPriISR:
 14495                           	callstack 19
 14496                           
 14497                           ;incstack = 0
 14498  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14499  00000A  EFC6  F031         	goto	int_func
 14500                           
 14501                           	psect	intcode_body
 14502  00638C                     __pintcode_body:
 14503                           	callstack 19
 14504  00638C                     int_func:
 14505                           	callstack 19
 14506  00638C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14507  00638E  0011               	retfie		f
 14508  006390                     __end_of_HiPriISR:
 14509                           	callstack 0
 14510                           
 14511                           	psect	rparam
 14512  0000                     
 14513                           	psect	temp
 14514  00004C                     btemp:
 14515                           	callstack 0
 14516  00004C                     	ds	1
 14517  0000                     int$flags	set	btemp
 14518  0000                     wtemp8	set	btemp+1
 14519  0000                     ttemp5	set	btemp+1
 14520  0000                     ttemp6	set	btemp+4
 14521  0000                     ttemp7	set	btemp+8
 14522                           
 14523                           	psect	idloc
 14524                           
 14525                           ;Config register IDLOC0 @ 0x200000
 14526                           ;	unspecified, using default values
 14527  200000                     	org	2097152
 14528  200000  FF                 	db	255
 14529                           
 14530                           ;Config register IDLOC1 @ 0x200001
 14531                           ;	unspecified, using default values
 14532  200001                     	org	2097153
 14533  200001  FF                 	db	255
 14534                           
 14535                           ;Config register IDLOC2 @ 0x200002
 14536                           ;	unspecified, using default values
 14537  200002                     	org	2097154
 14538  200002  FF                 	db	255
 14539                           
 14540                           ;Config register IDLOC3 @ 0x200003
 14541                           ;	unspecified, using default values
 14542  200003                     	org	2097155
 14543  200003  FF                 	db	255
 14544                           
 14545                           ;Config register IDLOC4 @ 0x200004
 14546                           ;	unspecified, using default values
 14547  200004                     	org	2097156
 14548  200004  FF                 	db	255
 14549                           
 14550                           ;Config register IDLOC5 @ 0x200005
 14551                           ;	unspecified, using default values
 14552  200005                     	org	2097157
 14553  200005  FF                 	db	255
 14554                           
 14555                           ;Config register IDLOC6 @ 0x200006
 14556                           ;	unspecified, using default values
 14557  200006                     	org	2097158
 14558  200006  FF                 	db	255
 14559                           
 14560                           ;Config register IDLOC7 @ 0x200007
 14561                           ;	unspecified, using default values
 14562  200007                     	org	2097159
 14563  200007  FF                 	db	255
 14564                           
 14565                           	psect	config
 14566                           
 14567                           ;Config register CONFIG1L @ 0x300000
 14568                           ;	VREG Sleep Enable bit
 14569                           ;	RETEN = 0x1, unprogrammed default
 14570                           ;	LF-INTOSC Low-power Enable bit
 14571                           ;	INTOSCSEL = 0x1, unprogrammed default
 14572                           ;	SOSC Power Selection and mode Configuration bits
 14573                           ;	SOSCSEL = 0x3, unprogrammed default
 14574                           ;	Extended Instruction Set
 14575                           ;	XINST = OFF, Disabled
 14576  300000                     	org	3145728
 14577  300000  1D                 	db	29
 14578                           
 14579                           ;Config register CONFIG1H @ 0x300001
 14580                           ;	Oscillator
 14581                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 14582                           ;	PLL x4 Enable bit
 14583                           ;	PLLCFG = OFF, Disabled
 14584                           ;	Fail-Safe Clock Monitor
 14585                           ;	FCMEN = 0x0, unprogrammed default
 14586                           ;	Internal External Oscillator Switch Over Mode
 14587                           ;	IESO = 0x0, unprogrammed default
 14588  300001                     	org	3145729
 14589  300001  03                 	db	3
 14590                           
 14591                           ;Config register CONFIG2L @ 0x300002
 14592                           ;	Power Up Timer
 14593                           ;	PWRTEN = ON, Enabled
 14594                           ;	Brown Out Detect
 14595                           ;	BOREN = ON, Controlled with SBOREN bit
 14596                           ;	Brown-out Reset Voltage bits
 14597                           ;	BORV = 2, 2.0V
 14598                           ;	BORMV Power level
 14599                           ;	BORPWR = 0x3, unprogrammed default
 14600  300002                     	org	3145730
 14601  300002  72                 	db	114
 14602                           
 14603                           ;Config register CONFIG2H @ 0x300003
 14604                           ;	Watchdog Timer
 14605                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 14606                           ;	Watchdog Postscaler
 14607                           ;	WDTPS = 0x1F, unprogrammed default
 14608  300003                     	org	3145731
 14609  300003  7C                 	db	124
 14610                           
 14611                           ;Config register CONFIG3L @ 0x300004
 14612                           ;	unspecified, using default values
 14613                           ;	RTCC Clock Select
 14614                           ;	RTCOSC = 0x1, unprogrammed default
 14615                           ;	External Address Shift bit
 14616                           ;	EASHFT = 0x1, unprogrammed default
 14617                           ;	Address Bus Width Select bits
 14618                           ;	ABW = 0x3, unprogrammed default
 14619                           ;	Data Bus Width
 14620                           ;	BW = 0x1, unprogrammed default
 14621                           ;	External Bus Wait
 14622                           ;	WAIT = 0x1, unprogrammed default
 14623  300004                     	org	3145732
 14624  300004  F9                 	db	249
 14625                           
 14626                           ;Config register CONFIG3H @ 0x300005
 14627                           ;	CCP2 Mux
 14628                           ;	CCP2MX = PORTC, RC1
 14629                           ;	ECCP Mux
 14630                           ;	ECCPMX = 0x1, unprogrammed default
 14631                           ;	MSSP address masking
 14632                           ;	MSSPMSK = 0x1, unprogrammed default
 14633                           ;	Master Clear Enable
 14634                           ;	MCLRE = 0x1, unprogrammed default
 14635  300005                     	org	3145733
 14636  300005  8B                 	db	139
 14637                           
 14638                           ;Config register CONFIG4L @ 0x300006
 14639                           ;	unspecified, using default values
 14640                           ;	Stack Overflow Reset
 14641                           ;	STVREN = 0x1, unprogrammed default
 14642                           ;	Boot Block Size
 14643                           ;	BBSIZ = 0x1, unprogrammed default
 14644                           ;	Background Debug
 14645                           ;	DEBUG = 0x1, unprogrammed default
 14646  300006                     	org	3145734
 14647  300006  91                 	db	145
 14648                           
 14649                           ; Padding undefined space
 14650  300007                     	org	3145735
 14651  300007  FF                 	db	255
 14652                           
 14653                           ;Config register CONFIG5L @ 0x300008
 14654                           ;	unspecified, using default values
 14655                           ;	Code Protect 00800-03FFF
 14656                           ;	CP0 = 0x1, unprogrammed default
 14657                           ;	Code Protect 04000-07FFF
 14658                           ;	CP1 = 0x1, unprogrammed default
 14659                           ;	Code Protect 08000-0BFFF
 14660                           ;	CP2 = 0x1, unprogrammed default
 14661                           ;	Code Protect 0C000-0FFFF
 14662                           ;	CP3 = 0x1, unprogrammed default
 14663                           ;	Code Protect 10000-13FFF
 14664                           ;	CP4 = 0x1, unprogrammed default
 14665                           ;	Code Protect 14000-17FFF
 14666                           ;	CP5 = 0x1, unprogrammed default
 14667                           ;	Code Protect 18000-1BFFF
 14668                           ;	CP6 = 0x1, unprogrammed default
 14669                           ;	Code Protect 1C000-1FFFF
 14670                           ;	CP7 = 0x1, unprogrammed default
 14671  300008                     	org	3145736
 14672  300008  FF                 	db	255
 14673                           
 14674                           ;Config register CONFIG5H @ 0x300009
 14675                           ;	unspecified, using default values
 14676                           ;	Code Protect Boot
 14677                           ;	CPB = 0x1, unprogrammed default
 14678                           ;	Data EE Read Protect
 14679                           ;	CPD = 0x1, unprogrammed default
 14680  300009                     	org	3145737
 14681  300009  C0                 	db	192
 14682                           
 14683                           ;Config register CONFIG6L @ 0x30000A
 14684                           ;	unspecified, using default values
 14685                           ;	Table Write Protect 00800-03FFF
 14686                           ;	WRT0 = 0x1, unprogrammed default
 14687                           ;	Table Write Protect 04000-07FFF
 14688                           ;	WRT1 = 0x1, unprogrammed default
 14689                           ;	Table Write Protect 08000-0BFFF
 14690                           ;	WRT2 = 0x1, unprogrammed default
 14691                           ;	Table Write Protect 0C000-0FFFF
 14692                           ;	WRT3 = 0x1, unprogrammed default
 14693                           ;	Table Write Protect 10000-13FFF
 14694                           ;	WRT4 = 0x1, unprogrammed default
 14695                           ;	Table Write Protect 14000-17FFF
 14696                           ;	WRT5 = 0x1, unprogrammed default
 14697                           ;	Table Write Protect 18000-1BFFF
 14698                           ;	WRT6 = 0x1, unprogrammed default
 14699                           ;	Table Write Protect 1C000-1FFFF
 14700                           ;	WRT7 = 0x1, unprogrammed default
 14701  30000A                     	org	3145738
 14702  30000A  FF                 	db	255
 14703                           
 14704                           ;Config register CONFIG6H @ 0x30000B
 14705                           ;	unspecified, using default values
 14706                           ;	Config. Write Protect
 14707                           ;	WRTC = 0x1, unprogrammed default
 14708                           ;	Table Write Protect Boot
 14709                           ;	WRTB = 0x1, unprogrammed default
 14710                           ;	Data EE Write Protect
 14711                           ;	WRTD = 0x1, unprogrammed default
 14712  30000B                     	org	3145739
 14713  30000B  E0                 	db	224
 14714                           
 14715                           ;Config register CONFIG7L @ 0x30000C
 14716                           ;	unspecified, using default values
 14717                           ;	Table Read Protect 00800-03FFF
 14718                           ;	EBRT0 = 0x1, unprogrammed default
 14719                           ;	Table Read Protect 04000-07FFF
 14720                           ;	EBRT1 = 0x1, unprogrammed default
 14721                           ;	Table Read Protect 08000-0BFFF
 14722                           ;	EBRT2 = 0x1, unprogrammed default
 14723                           ;	Table Read Protect 0C000-0FFFF
 14724                           ;	EBRT3 = 0x1, unprogrammed default
 14725                           ;	Table Read Protect 10000-13FFF
 14726                           ;	EBRT4 = 0x1, unprogrammed default
 14727                           ;	Table Read Protect 14000-17FFF
 14728                           ;	EBRT5 = 0x1, unprogrammed default
 14729                           ;	Table Read Protect 18000-1BFFF
 14730                           ;	EBRT6 = 0x1, unprogrammed default
 14731                           ;	Table Read Protect 1C000-1FFFF
 14732                           ;	EBRT7 = 0x1, unprogrammed default
 14733  30000C                     	org	3145740
 14734  30000C  FF                 	db	255
 14735                           
 14736                           ;Config register CONFIG7H @ 0x30000D
 14737                           ;	unspecified, using default values
 14738                           ;	Table Read Protect Boot
 14739                           ;	EBRTB = 0x1, unprogrammed default
 14740  30000D                     	org	3145741
 14741  30000D  40                 	db	64
 14742                           tosu	equ	0xFFF
 14743                           tosh	equ	0xFFE
 14744                           tosl	equ	0xFFD
 14745                           stkptr	equ	0xFFC
 14746                           pclatu	equ	0xFFB
 14747                           pclath	equ	0xFFA
 14748                           pcl	equ	0xFF9
 14749                           tblptru	equ	0xFF8
 14750                           tblptrh	equ	0xFF7
 14751                           tblptrl	equ	0xFF6
 14752                           tablat	equ	0xFF5
 14753                           prodh	equ	0xFF4
 14754                           prodl	equ	0xFF3
 14755                           indf0	equ	0xFEF
 14756                           postinc0	equ	0xFEE
 14757                           postdec0	equ	0xFED
 14758                           preinc0	equ	0xFEC
 14759                           plusw0	equ	0xFEB
 14760                           fsr0h	equ	0xFEA
 14761                           fsr0l	equ	0xFE9
 14762                           wreg	equ	0xFE8
 14763                           indf1	equ	0xFE7
 14764                           postinc1	equ	0xFE6
 14765                           postdec1	equ	0xFE5
 14766                           preinc1	equ	0xFE4
 14767                           plusw1	equ	0xFE3
 14768                           fsr1h	equ	0xFE2
 14769                           fsr1l	equ	0xFE1
 14770                           bsr	equ	0xFE0
 14771                           indf2	equ	0xFDF
 14772                           postinc2	equ	0xFDE
 14773                           postdec2	equ	0xFDD
 14774                           preinc2	equ	0xFDC
 14775                           plusw2	equ	0xFDB
 14776                           fsr2h	equ	0xFDA
 14777                           fsr2l	equ	0xFD9
 14778                           status	equ	0xFD8

Data Sizes:
    Strings     155
    Constant    60
    Data        16
    BSS         129
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      75
    BANK0           160    158     159
    BANK1           256    162     208
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[22]), STR_2(CODE[16]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[22]), STR_2(CODE[16]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[22]), STR_2(CODE[16]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[22]), STR_2(CODE[16]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2122_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 

    UART_Write_String@buf	PTR unsigned char  size(2) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 


Critical Paths under _main in COMRAM

    _MPU6050_Read->___fltol
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    ___flge->___flmul
    _atoi->_isspace
    _atan2f->___fladd
    _atanf->___fladd
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _UART_Write_String->_UART_Write
    _Servo2->___fltol
    _Servo1->___fltol
    _map->___lldiv
    _Initial->_I2C_Start
    _I2C_Start->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait

Critical Paths under _LoPriISR in COMRAM

    _LoPriISR->_CCP1handler
    _LoPriISR->_CCP4handler

Critical Paths under _HiPriISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___fltol->___flsub
    ___flge->___flmul
    _atan2f->_atanf
    _atanf->_fabsf
    _fabsf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___fldiv->___flsub
    _Servo2->___fltol
    _Servo1->___fltol

Critical Paths under _LoPriISR in BANK0

    None.

Critical Paths under _HiPriISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MPU6050_Read
    _MPU6050_Read->_atan2f
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LoPriISR in BANK1

    None.

Critical Paths under _HiPriISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LoPriISR in BANK2

    None.

Critical Paths under _HiPriISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LoPriISR in BANK3

    None.

Critical Paths under _HiPriISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LoPriISR in BANK4

    None.

Critical Paths under _HiPriISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LoPriISR in BANK5

    None.

Critical Paths under _HiPriISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LoPriISR in BANK6

    None.

Critical Paths under _HiPriISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LoPriISR in BANK7

    None.

Critical Paths under _HiPriISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LoPriISR in BANK8

    None.

Critical Paths under _HiPriISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LoPriISR in BANK9

    None.

Critical Paths under _HiPriISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LoPriISR in BANK10

    None.

Critical Paths under _HiPriISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LoPriISR in BANK11

    None.

Critical Paths under _HiPriISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LoPriISR in BANK12

    None.

Critical Paths under _HiPriISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LoPriISR in BANK13

    None.

Critical Paths under _HiPriISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LoPriISR in BANK14

    None.

Critical Paths under _HiPriISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _LoPriISR in BANK15

    None.

Critical Paths under _HiPriISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  167569
                                            158 BANK1      4     4      0
                            _Initial
                       _MPU6050_Read
                             _Servo1
                             _Servo2
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                       134   134      0  163613
                                             32 BANK1    126   126      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                             _Servo1
                             _Servo2
                  _UART_Write_String
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                             _atan2f
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   58260
                                             14 BANK1     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   56676
                                            152 BANK0      6     0      6
                                             12 BANK1      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   56149
                                            142 BANK0     10     4      6
                                              0 BANK1     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   49340
                                             74 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3957
                                             35 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             28 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             19 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             54 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     697
                                             53 COMRAM     2     2      0
                                             29 BANK0      8     4      4
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             45 COMRAM     8     0      8
                                             13 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1515
                                             26 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             19 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _atan2f                                              56    48      8   63928
                                            120 BANK0     24    16      8
                                              0 BANK1     32    32      0
                            ___fladd
                            ___fldiv
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _atanf
                              _fabsf
 ---------------------------------------------------------------------------------
 (3) _atanf                                               58    54      4   36101
                                             62 BANK0     58    54      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _fabsf
 ---------------------------------------------------------------------------------
 (3) _fabsf                                                8     4      4     251
                                             54 BANK0      8     4      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     645
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    9947
                                             21 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    7942
                                             45 COMRAM     8     0      8
                                             13 BANK0      8     8      0
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     965
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    7913
                                             33 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    6503
                                             29 BANK0     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1158
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    4     2      2     644
                                             20 COMRAM     4     2      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Servo2                                              12    10      2    1911
                                             37 BANK0     12    10      2
                            ___flsub (ARG)
                            ___fltol (ARG)
                                _map
 ---------------------------------------------------------------------------------
 (1) _Servo1                                              12    10      2    1911
                                             37 BANK0     12    10      2
                            ___flsub (ARG)
                            ___fltol (ARG)
                                _map
 ---------------------------------------------------------------------------------
 (2) _map                                                 20    10     10    1667
                                             32 COMRAM    20    10     10
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                             19 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0      45
                                             19 COMRAM     2     2      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initial                                              2     2      0      66
                                             22 COMRAM     2     2      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                             21 COMRAM     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                             20 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LoPriISR                                            3     3      0     272
                                             16 COMRAM     3     3      0
                        _CCP1handler
                        _CCP4handler
                        _TMR1handler
                        _TMR3handler
 ---------------------------------------------------------------------------------
 (11) _TMR3handler                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1handler                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP4handler                                        16    16      0     136
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 (11) _CCP1handler                                        16    16      0     136
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HiPriISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
   _MPU6050_Read
     _I2C_Master_Stop
     _I2C_Master_Write
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
     _Servo1
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
       ___fltol (ARG)
         ___flsub (ARG)
       _map (ARG)
         ___lldiv
         ___lmul
     _Servo2
       ___flsub (ARG)
       ___fltol (ARG)
       _map (ARG)
     _UART_Write_String
       _UART_Write
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___flneg
     ___flsub
     ___fltol
     ___xxtofl
     _atan2f
       ___fladd
       ___fldiv
       ___flneg
       ___flsub
       ___fpclassifyf
       _atanf
         ___fladd
         ___fldiv
         ___flmul
         ___flneg
         ___flsub
         ___fpclassifyf
         _fabsf
           ___fldiv (ARG)
       _fabsf
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
   _Servo1
   _Servo2

 _LoPriISR (ROOT)
   _CCP1handler
   _CCP4handler
   _TMR1handler
   _TMR3handler

 _HiPriISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      50       9       31.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A2      D0       7       81.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      4B       1       79.8%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     20A      12        0.0%
DATA                 0      0     20A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 13 00:25:21 2021

              ___fldiv@aexp 0095                ___fldiv@bexp 0094                ___fldiv@sign 008D  
        __size_of_I2C_Start 0010                ___awdiv@sign 0019                          _aT 1001  
                        _pi 1039                          bsr 000FE0         ___wmul@multiplicand 0016  
__size_of_UART_Write_String 0040                 map@valuemax 0025                 map@valuemin 0023  
                       l301 28F6                         l304 630E                         l233 5D6A  
                       l313 618C                         l251 62EC                         l307 6320  
                       l316 62C6                         l245 5B9C                         l350 5CE6  
                       l263 6384                         l343 5CD6                         l327 5EA0  
                       l239 5C42                         l248 62C8                         l280 6306  
                       l272 6326                         l328 5EB0                         l281 630A  
                       l257 636C                         l185 535E                         l266 633A  
                       l290 60C8                         l275 6334                         l292 60D6  
                       l269 6348                         l613 5466                         l278 62F8  
                       l295 60F6                         l560 5A4C                         l297 6104  
         MPU6050_Read@pitch 017A                         l298 6108                         l547 58DA  
                       l900 483A                         l581 5526                         l590 6234  
                       l911 48F8                         l903 47FE                         l575 5AF6  
                       l912 48E6                         l930 42DA                         l586 556C  
                       l940 4536                         l844 3A9E                         l909 4880  
                       l861 3BB8                         l853 3D6E                         l845 3A8C  
                       l934 463E                         l870 3C88                         l846 3A52  
                       l871 3C76                         l937 44D0                         l971 4C48  
                       l947 4600                         l939 4548                         l974 4DA4  
                       l886 60C2                         l985 4D3C                         l978 4CE0  
                       l898 49DA                         _BSR 000FE0             __end_of_I2C_ACK 634A  
                       _map 5CE8                         _pad 58DC                         _yaw 01AE  
              ___awmod@sign 0019                         wreg 000FE8                  _TXSTA1bits 000FAC  
              ___flmul@aexp 0061                ___flmul@bexp 0066                ___flmul@sign 0060  
              ___flmul@temp 006B                ___flmul@prod 0067          MPU6050_Read@buffer 0124  
              ___fltol@exp1 0037                        l1003 38AC                        l1012 3314  
                      l1004 31CC                        l1102 62A0                        l1006 31EC  
                      l1060 566A                        l1036 3654                        l1109 6028  
                      l1046 373C                        l1038 3618                        l1310 4F48  
                      l1150 5920                        l1153 5962                        l1074 28F8  
                      l1307 4F40                        l1155 599C                        l1219 190A  
                      l1084 2A6E                        l1316 4BF0                        l1340 61C4  
                      l1173 1D38                        l1078 3146                        l1326 61FC  
                      l1334 607A                        l1319 4B34                        l1191 14C8  
                      l1272 4150                        l1265 4212                        l1355 5816  
                      l1363 614C                        l1372 5FD4                        l1366 6390  
                      l1382 574C                        l1278 5E3E                        l1279 5E46  
                      l1392 5F6E                        l1378 626A                        l1397 5F76  
                      l5200 630E                        l5050 5E48                        l5202 631C  
                      l5060 5C44                        l5052 5E58                        l5300 5B9E  
                      l5046 62C8                        l5070 5C8C                        l5062 5C54  
                      l5054 5E66                        l5310 5BBE                        l5048 62D6  
                      l5080 5CD0                        l5072 5C96                        l5064 5C6A  
                      l5056 5E76                        l5312 5BC6                        l5304 5B9E  
                      l5320 5AF8                        l7000 61FE                        l5074 5CB4  
                      l5066 5C72                        l5058 5E80                        l5314 5BFE  
                      l5306 5BB6                        l5330 5B58                        l5322 5B10  
                      l7002 6214                        l7010 5378                        l5180 62F0  
                      l5332 6360                        l5340 60C6                        l5076 5CC4  
                      l5068 5C7E                        l5316 5AF8                        l7004 6224  
                      l7020 53C8                        l7100 5F18                        l5182 62F4  
                      l5334 6364                        l5342 60DA                        l5078 5CC6  
                      l5190 5CF4                        l5326 5B18                        l7030 53F2  
                      l7022 53CC                        l7014 538C                        l7110 49DC  
                      ?_pad 0024                        ?_map 0021                        l5336 637E  
                      l5184 6308                        l5344 60EA                        l5192 5D2A  
                      l5328 5B20                        l5600 4D74                        l6400 392E  
                      l7040 541A                        l7032 53FC                        l7024 53DA  
                      l7016 53B6                        l7008 5360                        l7112 49FC  
                      l7104 5F4E                        l8000 265C                        l5338 6382  
                      l5610 523A                        l5346 60F2                        l5602 4D84  
                      l6410 3956                        l6402 3930                        l7042 5426  
                      l7034 5406                        l7018 53B8                        l7130 4BA8  
                      l7122 4AE8                        l7114 4A54                        l7106 5F60  
                      l7210 12D6                        l7202 1268                        l8010 2764  
                      l8002 26B4                        l5700 5342                        l5620 5268  
                      l5612 5252                        l5196 6336                        l5188 5CE8  
                      l5604 4D92                        l6500 3B26                        l6420 3990  
                      l6412 3966                        l6404 3936                        l7060 5600  
                      l7052 556E                        l7044 5436                        l7132 4BD0  
                      l7124 4B24                        l7116 4A68                        l7300 1704  
                      l7212 12F2                        l7204 128E                        l7220 130E  
                      l8020 27D4                        l8012 2770                        l8004 270C  
                      l5710 5350                        l5702 5346                        l5630 5280  
                      l5622 526A                        l5614 5254                        l5198 6322  
                      l5606 4D94                        l6510 3B98                        l6502 3B2C  
                      l6430 39BC                        l6422 39A2                        l6414 3976  
                      l6406 3944                        l7070 5662                        l7054 558E  
                      l7150 6074                        l7142 602A                        l7046 5446  
                      l7134 4BE0                        l7118 4A76                        l7126 4B58  
                      l7310 17A4                        l7302 170A                        l7230 1398  
                      l7222 1328                        l8030 285E                        l8022 27FA  
                      l8014 2796                        l8006 2732                        l5720 535A  
                      l5712 5352                        l5704 534A                        l5640 529C  
                      l5632 5282                        l5624 526C                        l5616 5256  
                      l5560 616C                        l6520 3BF2                        l6504 3B52  
                      l6512 3BA8                        l6440 39D0                        l6432 39C0  
                      l6424 39B0                        l6416 3978                        l6408 3946  
                      l7056 55CC                        l7064 560C                        l7144 602E  
                      l7048 5456                        l7128 4B94                        l7080 590C  
                      l7400 1B94                        l7320 1880                        l7312 17D6  
                      l7304 1728                        l7240 1472                        l7232 13F2  
                      l7208 12C4                        l7160 1102                        l8032 286A  
                      l8024 2806                        l8016 27A2                        l8008 273E  
                      l8040 5ED2                        l5722 535C                        l5714 5354  
                      l5706 534C                        l5650 52C8                        l5642 529E  
                      l5634 5284                        l5626 526E                        l5618 5266  
                      l5562 6170                        l5570 4C58                        l6610 464E  
                      l6530 3C22                        l6522 3BFC                        l6514 3BCE  
                      l6506 3B86                        l6450 39E4                        l6442 39D4  
                      l6434 39C4                        l6426 39B4                        l6418 3980  
                      l7066 561E                        l7058 55F4                        l6602 62A2  
                      l7138 61C6                        l7146 6042                        l6370 577C  
                      l7090 5970                        l7082 5918                        l7074 58DC  
                      l7410 1BCA                        l7402 1B9C                        l7330 18E2  
                      l7322 1886                        l7314 17E6                        l7306 175C  
                      l7250 14BC                        l7242 1476                        l7234 1428  
                      l7226 135E                        l7170 1152                        l7162 110A  
                      l7154 10DA                        l8034 28B0                        l8026 282C  
                      l8018 27C8                        l8050 5EFA                        l5716 5356  
                      l5708 534E                        l5660 52E2                        l5652 52CC  
                      l5644 52B6                        l5636 5286                        l5628 527E  
                      l5556 614E                        l5580 4C96                        l5572 4C6E  
                      l5564 4BF4                        l6700 487E                        l6620 468E  
                      l6612 465C                        l6540 3C4A                        l6532 3C26  
                      l6524 3C0A                        l6516 3BDE                        l6508 3B88  
                      l6460 3A1E                        l6452 39E8                        l6444 39D8  
                      l6436 39C8                        l6428 39B8                        l6380 38BC  
                      l6604 62BE                        l7148 6070                        l6372 579A  
                      l6364 574E                        l7092 5984                        l7084 592C  
                      l7076 58EA                        l7420 1C26                        l7412 1BD2  
                      l7404 1BAC                        l7340 1998                        l7332 18F6  
                      l7324 18BA                        l7316 17F6                        l7308 178E  
                      l7260 14F8                        l7244 1488                        l7252 14D4  
                      l7236 1430                        l7228 1392                        l7180 118A  
                      l7172 1160                        l7164 112E                        l7156 10E4  
                      l8028 2838                        l8052 5F02                        l5718 5358  
                      l5670 52FE                        l5662 52E8                        l5654 52D2  
                      l5646 52BC                        l5638 529A                        l5558 615A  
                      l5590 4D1E                        l5582 4CC8                        l5566 4C04  
                      l6710 48DE                        l6702 4890                        l6630 46B4  
                      l6622 4690                        l6614 465E                        l6550 3CA4  
                      l6542 3C58                        l6534 3C36                        l6526 3C0C  
                      l6470 3A70                        l6462 3A3A                        l6454 39EC  
                      l6446 39DC                        l6438 39CC                        l6390 38FC  
                      l6382 38CA                        l6374 57D0                        l6366 5760  
                      l7086 5940                        l7078 58FE                        l7430 1C66  
                      l7422 1C2E                        l7414 1BDE                        l7406 1BB4  
                      l7350 19E8                        l7342 19AC                        l7334 1902  
                      l7326 18CE                        l7318 182A                        l7270 155E  
                      l7262 1514                        l7246 149A                        l7238 1462  
                      l7190 11F0                        l7182 118E                        l7174 1172  
                      l7166 1138                        l7158 10F4                        l7510 56A2  
                      l8046 5EDC                        l8038 5EB2                        l5680 531A  
                      l5672 5304                        l5664 52EE                        l5656 52D8  
                      l5648 52C2                        l5592 4D2C                        l5584 4CCA  
                      l5576 4C82                        l5568 4C12                        l6720 494C  
                      l6704 489E                        l6640 46F4                        l6632 46C2  
                      l6616 466E                        l6624 4698                        l6608 4640  
                      l6800 4376                        l6560 3D0E                        l6552 3CB2  
                      l6544 3C6E                        l6528 3C1A                        l6536 3C38  
                      l6480 3ABC                        l6472 3A7E                        l6464 3A4A  
                      l6448 39E0                        l6456 39F0                        l6392 38FE  
                      l6384 38CC                        l6368 5772                        l7088 5944  
                      l7096 5F78                        l7440 1CA2                        l7432 1C78  
                      l7416 1BE4                        l7424 1C34                        l7408 1BC2  
                      l7360 1A1C                        l7352 19F6                        l7344 19BE  
                      l7336 1926                        l7328 18D2                        l7280 15A6  
                      l7272 1570                        l7264 154A                        l7248 14A2  
                      l7192 1202                        l7176 117E                        l7184 1194  
                      l7168 1140                        l7520 5726                        l7512 56B0  
                      l7504 566C                        l7600 418C                        l8048 5EE0  
                      l5690 5336                        l5682 5320                        l5674 530A  
                      l5666 52F4                        l5658 52DE                        l5594 4D4A  
                      l5586 4CD6                        l5578 4C8A                        l6730 49B6  
                      l6714 4908                        l6722 4950                        l6706 48A2  
                      l6650 4734                        l6642 46F6                        l6634 46C4  
                      l6626 46A8                        l6618 467E                        l6810 43BC  
                      l6802 4384                        l6570 3D48                        l6562 3D2E  
                      l6554 3CEC                        l6490 3AFC                        l6538 3C46  
                      l6474 3A80                        l6466 3A60                        l6458 39F4  
                      l6386 38DC                        l6394 3906                        l6378 38AE  
                      l7098 5F88                        l7450 1CFA                        l7442 1CA8  
                      l7434 1C84                        l7426 1C46                        l7418 1C0A  
                      l7370 1A4E                        l7362 1A2C                        l7354 1A06  
                      l7346 19CC                        l7338 198A                        l7290 15EE  
                      l7282 15B4                        l7274 1582                        l7266 1552  
                      l7258 14E6                        l7194 121E                        l7186 11BA  
                      l7178 1186                        l7514 56C8                        l7506 5696  
                      l7610 41CA                        l7602 419A                        l5692 533A  
                      l5684 5324                        l5676 530E                        l5668 52F8  
                      l5596 4D4C                        l5588 4D12                        l6732 49BA  
                      l6724 496A                        l6716 4914                        l6708 48B0  
                      l6660 4764                        l6652 473C                        l6636 46D4  
                      l6644 46FE                        l6628 46AE                        l6820 442A  
                      l6812 43D6                        l6804 4390                        l6572 3D4E  
                      l6564 3D32                        l6548 3C98                        l6556 3CEE  
                      l6492 3B08                        l6484 3AD0                        l6476 3A8A  
                      l6468 3A6C                        l6396 3916                        l6388 38EC  
                      l7524 626C                        l7700 30C6                        l6900 586A  
                      l6580 610A                        l7452 1D02                        l7436 1C8C  
                      l7428 1C60                        l7380 1AF8                        l7372 1A60  
                      l7364 1A30                        l7356 1A0A                        l7348 19D4  
                      l7292 15FE                        l7284 15CC                        l7276 1590  
                      l7268 1556                        l7196 1236                        l7516 56E8  
                      l7604 41AE                        l7540 3DBA                        l7532 3D70  
                      l5694 533C                        l5686 532A                        l5678 5314  
                      l5598 4D50                        l6734 49C8                        l6726 4980  
                      l6718 4922                        l6670 47A2                        l6662 4764  
                      l6654 4740                        l6646 470E                        l6638 46E4  
                      l6830 44C0                        l6822 4454                        l6814 43E6  
                      l6806 43A0                        l6750 4230                        l6574 3D5C  
                      l6566 3D40                        l6558 3CFE                        l6494 3B0C  
                      l6486 3AE0                        l6478 3AAC                        l6398 391C  
                      l7526 628C                        l7702 312A                        l7630 298E  
                      l7622 2918                        l7470 4DE2                        l7462 4DA6  
                      l6910 58A4                        l6902 5872                        l6582 6116  
                      l6590 6242                        l7454 1D12                        l7446 1CDC  
                      l7438 1C9C                        l7390 1B50                        l7382 1B00  
                      l7374 1A64                        l7366 1A36                        l7358 1A10  
                      l7294 1612                        l7286 15DE                        l7278 1594  
                      l7198 1240                        l7518 56FA                        l7550 3E5A  
                      l7542 3DE2                        l7534 3D98                        l7614 41D8  
                      l7710 5DDA                        l5696 533E                        l5688 5330  
                      l6736 49CE                        l6728 499A                        l6680 47EE  
                      l6672 47B2                        l6648 4724                        l6840 4500  
                      l6832 44CE                        l6824 448A                        l6816 4402  
                      l6808 43AC                        l6760 4268                        l6752 4232  
                      l6576 3D5E                        l6568 3D46                        l6496 3B1A  
                      l6488 3AEE                        l7528 6290                        l7632 29A2  
                      l7624 2950                        l7800 352E                        l7720 316E  
                      l7480 4E3C                        l7472 4E1C                        l7464 4DBA  
                      l6920 58CA                        l6912 58AC                        l6904 587A  
                      l6584 6128                        l6592 6246                        l7456 1D18  
                      l7448 1CEE                        l7392 1B5E                        l7368 1A3C  
                      l7376 1A6A                        l7384 1B04                        l7296 1676  
                      l7288 15E6                        l7616 4200                        l7608 41BC  
                      l7552 3E7A                        l7544 3DEA                        l7560 3EE8  
                      l7536 3DA6                        l7712 5DE2                        l5698 5340  
                      l6738 49D0                        l6690 4838                        l6682 47FC  
                      l6674 47C2                        l6666 4778                        l6658 4754  
                      l6850 4572                        l6842 452E                        l6834 44E0  
                      l6826 4498                        l6818 440E                        l6770 4294  
                      l6762 4278                        l6754 4242                        l6746 4214  
                      l6498 3B1C                        l7650 2A9A                        l7634 29EA  
                      l7642 2A3E                        l7626 2952                        l7810 35FA  
                      l8450 34B0                        l7722 3194                        l8442 4E6E  
                      l7490 4EBE                        l7482 4E44                        l7474 4E20  
                      l7466 4DBE                        l6922 58D2                        l6914 58AE  
                      l6906 5888                        l6930 59B0                        l6586 612C  
                      l6594 625E                        l7394 1B6E                        l7386 1B22  
                      l7378 1AC2                        l7298 16CE                        l7570 3F9E  
                      l7562 3F0E                        l7554 3E88                        l7546 3DF8  
                      l7538 3DB6                        l7714 5DF0                        l6692 484A  
                      l6684 4808                        l6676 47CA                        l6668 4792  
                      l6860 45E8                        l6852 459C                        l6836 44EE  
                      l6828 44B6                        l6780 42EA                        l6772 42A4  
                      l6764 427E                        l6756 4252                        l6748 4222  
                      l7660 2B7C                        l7652 2AB2                        l7644 2A54  
                      l7636 2A02                        l7628 2968                        l7820 36B6  
                      l7812 3628                        l8460 3570                        l8452 34E4  
                      l8444 3370                        l7740 3328                        l7732 3252  
                      l7484 4E4C                        l7468 4DC2                        l6916 58B4  
                      l6908 588E                        l6940 59E4                        l6932 59B8  
                      l6588 6236                        l7396 1B72                        l7388 1B3E  
                      l7572 3FB0                        l7564 3F1E                        l7548 3E20  
                      l7716 5E1E                        l6694 4860                        l6686 4826  
                      l6678 47DA                        l6862 4604                        l6870 462A  
                      l6846 4558                        l6854 45A0                        l6838 44F2  
                      l6790 4324                        l6782 42FA                        l6774 42B4  
                      l6766 4284                        l6758 4262                        l7670 2CC6  
                      l7654 2AC8                        l7662 2BFC                        l7638 2A16  
                      l8462 3872                        l7830 3778                        l7822 36CC  
                      l7814 363E                        l8454 34BE                        l7806 3542  
                      l8446 33A4                        l7750 3350                        l7734 32F6  
                      l7726 320C                        l7718 3148                        l7494 4F00  
                      l7486 4E84                        l7478 4E26                        l6918 58BA  
                      l6950 5A20                        l6942 59EC                        l6934 59BC  
                      l6926 599E                        l6598 618E                        l7398 1B82  
                      l7590 40EC                        l7574 3FCA                        l7582 4034  
                      l7566 3F56                        l7558 3ED6                        l6696 4866  
                      l6688 4828                        l6872 462E                        l6864 4614  
                      l6856 45BA                        l6848 4564                        l6792 433A  
                      l6776 42C4                        l6768 4292                        l7680 2E4E  
                      l7664 2C12                        l7656 2AD0                        l7672 2CFA  
                      l7648 2A76                        l8464 389E                        l7824 3714  
                      l7840 3852                        l8456 3562                        l7808 35A4  
                      l8448 337E                        l7744 333C                        l7752 33B2  
                      l7736 32F8                        l7728 322A                        l7496 4F12  
                      l6952 5A26                        l6944 59F4                        l6936 59CA  
                      l6928 59A2                        l7592 4120                        l7584 4062  
                      l7576 3FD8                        l7568 3F66                        l7920 5FF8  
                      l6698 4870                        l6866 4622                        l6858 45CE  
                      l6794 4346                        l6786 430E                        l6778 42CA  
                      l7690 2F9E                        l7682 2E82                        l7674 2D2E  
                      l7666 2C1A                        l7658 2B74                        l8466 3880  
                      l7834 37E6                        l7826 3750                        l7818 3662  
                      l8458 3596                        l7754 33CA                        l7762 3404  
                      l7498 4F24                        l6890 5836                        l6882 5818  
                      l6946 5A02                        l6954 5A2C                        l6938 59D2  
                      l6970 5ACA                        l6962 5A4E                        l7578 4008  
                      l7922 6016                        l7914 5FD6                        l7930 1ED2  
                      l6868 4624                        l6796 435E                        l6788 431A  
                      l6876 607C                        l7684 2F02                        l7676 2D62  
                      l7668 2CBE                        l7780 347C                        l7772 3454  
                      l7764 3420                        l7756 33D8                        l6892 5844  
                      l6884 581C                        l6956 5A3C                        l6948 5A18  
                      l6972 5AEE                        l6964 5A7C                        l6980 5498  
                      l7588 40DA                        l7916 5FE8                        l7940 1EF8  
                      l7932 1EE2                        l6798 436A                        l6878 608E  
                      l7694 2FD6                        l7686 2F36                        l7678 2DE2  
                      l7758 33EE                        l6894 584C                        l6886 582A  
                      l6958 5A44                        l6974 5AF4                        l6966 5A8C  
                      l6990 5506                        l6982 54A8                        l7598 4164  
                      l7918 5FF0                        l7950 1F8E                        l7942 1EFE  
                      l7934 1EE8                        l7926 1D3A                        l7696 302E  
                      l7688 2F46                        l7792 3506                        l7776 3468  
                      l7768 3440                        l6896 5850                        l6888 5832  
                      l6968 5ABA                        l6992 5514                        l6984 54D6  
                      l7960 204C                        l7952 1FB2                        l7944 1F22  
                      l7936 1EEE                        l7928 1E78                        l7698 3092  
                      l7786 3490                        l6898 5858                        l6994 5564  
                      l6986 54E6                        l6978 5468                        l7970 21C2  
                      l7962 209A                        l7954 1FD6                        l7946 1F46  
                      l7938 1EF2                        l7796 351A                        l7788 34F2  
                      l6996 556A                        l6988 54F4                        l7980 2322  
                      l7972 2224                        l7964 20E8                        l7956 1FFA  
                      l7948 1F6A                        l7990 24B2                        l7982 23A0  
                      l7974 226E                        l7966 2136                        l7958 1FFE  
                      l7992 2530                        l7984 23EA                        l7976 22A4  
                      l7968 2174                        l7994 2564                        l7986 2434  
                      l7978 22D8                        l7996 25AC                        l7988 2468  
                      l7998 2604                        STR_1 10B6                        STR_2 10A6  
                      STR_3 103D                        STR_4 1053                        STR_5 1068  
                      STR_6 1092                        STR_7 107D                        STR_8 10C5  
                      STR_9 10CD                        _LATC 000F8B                        _LATD 000F8C  
                      _LATE 000F8D                        u5200 5C8C                        u5201 5C88  
                      u5210 5CB4                        u5211 5CB0                        u6100 392E  
                      u6101 392A                        u5150 62D6                        u6110 3944  
                      u6030 5760                        u5151 62D2                        u6111 3940  
                      u6031 575C                        u5160 62EC                        u6200 3A7E  
                      u6120 3956                        u7000 59E4                        u6040 5772  
                      u5161 62E8                        u6201 3A7A                        u6121 3952  
                      u7001 59E0                        u6041 576E                        u5170 5E66  
                      u6210 3A9E                        u6130 3966                        u7010 5A02  
                      u6050 579A                        u5171 5E62                        u6211 3A9A  
                      u6131 3962                        u7011 59FE                        u6051 5796  
                      u5180 5EA0                        u6300 3BDE                        u6220 3AAC  
                      u6140 39A2                        u7020 5A18                        u7100 5514  
                      u6060 57D0                        u5181 5E9C                        u6301 3BDA  
                      u6221 3AA8                        u6141 399E                        u7021 5A14  
                      u7101 5510                        u6061 57CC                        u5190 5C6A  
                      u6310 3C0A                        u6230 3ABC                        u6150 39B0  
                      u6070 38CA                        u7030 5A3C                        u7110 5564  
                      u5191 5C66                        u6311 3C06                        u6231 3AB8  
                      u6151 39AC                        u6071 38C6                        u7031 5A38  
                      u7111 5560                        u5360 6306                        u5520 5BB6  
                      u7120 6214                        u6400 3CEC                        u6320 3C1A  
                      u6240 3AEE                        u6160 3A1E                        u6080 38DC  
                      u7200 55AE                        u7040 5A7C                        u8000 1C78  
                      u5361 6302                        u5521 5BB2                        u7121 6210  
                      u6401 3CE8                        u6321 3C16                        u6241 3AEA  
                      u6161 3A1A                        u6081 38D8                        u7041 5A78  
                      u8001 1C74                        u5370 6348                        u5530 5B10  
                      u6410 3CFE                        u6330 3C36                        u6250 3AFC  
                      u6170 3A36                        u6090 38EC                        u7210 55CC  
                      u7050 5ABA                        u7130 5378                        u8010 1CD6  
                      u5371 6344                        u5531 5B0C                        u6411 3CFA  
                      u6331 3C32                        u6251 3AF8                        u6171 3A30  
                      u6091 38E8                        u7211 55C8                        u7051 5AB6  
                      u7131 5374                        u8011 1CD0                        u5380 6334  
                      u5540 60D6                        u6500 465C                        u6420 3D0E  
                      u6340 3C46                        u6260 3B1A                        u6180 3A38  
                      u7220 55F4                        u8100 4F24                        u7060 5AEE  
                      u7140 53AC                        u7300 5970                        u8020 1CD8  
                      u5381 6330                        u5541 60D2                        u6501 4658  
                      u6421 3D0A                        u6341 3C42                        u6261 3B16  
                      u7221 55F0                        u7205 55A4                        u8101 4F20  
                      u7061 5AEA                        u7301 596C                        u5550 60EA  
                      u5390 631C                        u6510 466E                        u6430 3D2E  
                      u6350 3C58                        u6270 3B52                        u6190 3A60  
                      u7230 561E                        u7070 5498                        u7150 53DA  
                      u7310 5FC2                        u8030 1CEE                        u8110 5696  
                      u5551 60E6                        u5391 6318                        u6511 466A  
                      u6431 3D2A                        u6351 3C54                        u6271 3B4E  
                      u6191 3A5C                        u7231 561A                        u7071 5494  
                      u7151 53D6                        u8031 1CEA                        u8111 5692  
                      u5560 6104                        u5720 618C                        u5800 4D4A  
                      u6600 4826                        u6520 467E                        u6440 3D40  
                      u6360 3C6E                        u6280 3B98                        u8040 4DE2  
                      u7080 54D6                        u7160 53EE                        u7400 4AE4  
                      u7320 5FD4                        u8120 56C8                        u8200 3ED0  
                      u5561 6100                        u5721 6188                        u5801 4D46  
                      u6601 4822                        u6521 467A                        u6441 3D3C  
                      u6361 3C6A                        u6281 3B94                        u8041 4DDE  
                      u7081 54D2                        u7161 53EA                        u7145 53A2  
                      u7401 4AE0                        u7321 5FD0                        u8121 56C4  
                      u5810 4D84                        u5730 4C04                        u6610 484A  
                      u6530 46C2                        u6450 3D5C                        u6370 3C84  
                      u6290 3BCE                        u7250 5658                        u8050 4E1C  
                      u7090 54F4                        u7170 5416                        u7410 4B08  
                      u7330 5F48                        u8130 56E8                        u8210 3EE8  
                      u5811 4D80                        u5731 4C00                        u6611 4846  
                      u6531 46BE                        u6451 3D58                        u6371 3C80  
                      u6291 3BCA                        u7251 5652                        u8051 4E18  
                      u7091 54F0                        u7171 5412                        u7331 5F42  
                      u8131 56E4                        u8211 3EE4                        u5820 4D92  
                      u5740 4C12                        u6700 496A                        u6620 4860  
                      u6540 46D4                        u6380 3C98                        u7260 565A  
                      u8300 293A                        u8060 4E38                        u7180 5436  
                      u7420 4B24                        u6460 614C                        u7340 5F4A  
                      u7500 1102                        u8140 56FA                        u8220 3F1E  
                      u5821 4D8E                        u5741 4C0E                        u6701 4966  
                      u6621 485C                        u6541 46D0                        u6381 3C94  
                      u7245 5630                        u8061 4E34                        u7181 5432  
                      u7421 4B20                        u6461 6148                        u7317 5FB8  
                      u7501 10FE                        u8141 56F6                        u8221 3F1A  
                      u5750 4C6E                        u6710 499A                        u6630 487E  
                      u6550 46E4                        u6390 3CB2                        u8310 2968  
                      u8070 4EFA                        u7190 5446                        u7430 4B78  
                      u6470 625E                        u7270 58EA                        u7350 5F60  
                      u7510 1152                        u8150 5726                        u8230 3F66  
                      u5751 4C6A                        u6711 4996                        u6631 487A  
                      u6551 46E0                        u6391 3CAE                        u8311 2964  
                      u8071 4EF4                        u7191 5442                        u7415 4AFE  
                      u6471 625A                        u7271 58E6                        u7351 5F5C  
                      u7511 114E                        u8151 5722                        u8231 3F62  
                      u5760 4CC4                        u6720 49C8                        u6640 489E  
                      u6560 4724                        u6800 42FA                        u8400 3142  
                      u8320 298E                        u8080 4EFC                        u7440 4B94  
                      u7360 4A26                        u7280 590C                        u6480 61BE  
                      u7600 12C0                        u7520 1160                        u8240 3FB0  
                      u8160 3D98                        u5761 4CC0                        u6721 49C4  
                      u6641 489A                        u6561 4720                        u6801 42F6  
                      u8401 313E                        u8321 298A                        u8305 292E  
                      u7441 4B90                        u7281 5908                        u6481 61B8  
                      u7521 115C                        u8241 3FAC                        u8161 3D94  
                      u5770 4D0E                        u6650 48B0                        u6570 4764  
                      u6810 4474                        u6730 4230                        u8330 2A02  
                      u8090 4F12                        u7450 4BD0                        u7370 4A54  
                      u7290 5962                        u6490 61C0                        u7610 12D6  
                      u7530 1172                        u8250 4062                        u8170 3DE2  
                      u8410 5E3E                        u5771 4D0A                        u6651 48AC  
                      u6571 4760                        u6731 422C                        u8331 29FE  
                      u8091 4F0E                        u7451 4BCC                        u7435 4B6E  
                      u7371 4A50                        u7291 595E                        u7611 12D2  
                      u7531 116E                        u8251 405E                        u8171 3DDE  
                      u8411 5E3A                        u5780 4D2C                        u6660 48DE  
                      u6580 47DA                        u6900 45E8                        u6820 44CE  
                      u6740 4242                        u8340 2A54                        u8500 3420  
                      u8420 316E                        u7460 61F6                        u7380 4A76  
                      u7700 1514                        u7620 135A                        u7540 11BA  
                      u8260 40D2                        u8180 3E20                        u5781 4D28  
                      u6661 48DA                        u6581 47D6                        u6901 45E4  
                      u6821 44CA                        u6741 423E                        u8341 2A50  
                      u8501 341C                        u8421 316A                        u7461 61F0  
                      u7381 4A72                        u7365 4A1C                        u7701 1510  
                      u7621 1356                        u7541 11B6                        u8261 40CC  
                      u8181 3E1C                        u5790 4D3C                        u6670 48F4  
                      u6590 47FC                        u6910 4622                        u6830 44EE  
                      u6750 4252                        u8350 2A6A                        u8510 343C  
                      u8430 3194                        u7470 61F8                        u7710 154A  
                      u7630 13EE                        u7550 11EA                        u8270 40D4  
                      u8190 3ECE                        u5791 4D38                        u6671 48F0  
                      u6591 47F8                        u6911 461E                        u6831 44EA  
                      u6815 446A                        u6751 424E                        u8351 2A66  
                      u8511 3438                        u8431 3190                        u7711 1546  
                      u7631 13EA                        u7551 11E4                        u8191 3EC8  
                      u6680 4908                        u6840 4500                        u6760 4292  
                      u8360 2AB2                        u8520 35FA                        u8440 322A  
                      u7480 6042                        u6920 582A                        u7800 17D6  
                      u7720 1570                        u7640 1462                        u7560 11EC  
                      u8280 40EC                        u6681 4904                        u6841 44FC  
                      u6761 428E                        u8361 2AAE                        u8521 35F6  
                      u8441 3226                        u7481 603E                        u6921 5826  
                      u7801 17D2                        u7721 156C                        u7641 145E  
                      u8281 40E8                        u6690 4922                        u6850 452E  
                      u6770 42A4                        u8370 2AC8                        u8530 3618  
                      u8450 3274                        u7490 6070                        u6930 5844  
                      u7810 17E6                        u7730 1582                        u7650 1488  
                      u7570 1202                        u8290 418C                        u6691 491E  
                      u6851 452A                        u6771 42A0                        u8371 2AC4  
                      u8531 3614                        u7491 606C                        u6931 5840  
                      u7395 4A8A                        u7811 17E2                        u7731 157E  
                      u7651 1484                        u7571 11FE                        u8291 4188  
                      u6860 4544                        u6780 42B4                        u8380 2C12  
                      u8540 3628                        u8460 32B2                        u6940 586A  
                      u7396 4A94                        u7900 19F6                        u7820 1880  
                      u7740 1590                        u7660 149A                        u7580 128E  
                      u6861 4540                        u6781 42B0                        u8381 2C0E  
                      u8541 3624                        u6941 5866                        u7397 4AA4  
                      u7901 19F2                        u7821 187C                        u7741 158C  
                      u7661 1496                        u7581 128A                        u6870 4558  
                      u6790 42EA                        u8390 2F46                        u8550 3662  
                      u8470 3310                        u6950 5888                        u7910 1A4E  
                      u7830 18CE                        u7750 15A6                        u7670 14BC  
                      u7590 12BE                        u6871 4554                        u6791 42E6  
                      u8391 2F42                        u8551 365E                        u8471 330C  
                      u8455 3268                        u6951 5884                        u7911 1A4A  
                      u7831 18CA                        u7751 15A2                        u7671 14B8  
                      u7591 12B8                        u6880 4572                        u8560 36B6  
                      u8480 33CA                        u6960 58A4                        u7920 1B22  
                      u7840 18F6                        u7760 15B4                        u7680 14E2  
                      u6881 456E                        u8561 36B2                        u8481 33C6  
                      u8465 32A8                        u6961 58A0                        u7921 1B1E  
                      u7841 18F2                        u7761 15B0                        u7681 14DE  
                      u6890 45BA                        u8490 33D8                        u6970 58CA  
                      u7930 1B3E                        u7850 1998                        u7770 15DE  
                      u7690 14F8                        u8570 5F10                        u6891 45B6  
                      u8491 33D4                        u6971 58C6                        u7931 1B3A  
                      u7851 1994                        u7771 15DA                        u7691 14F4  
                      u8571 5F0C                        u6980 59B0                        u7940 1B50  
                      u7860 19AC                        u7780 1728                        u6981 59AC  
                      u7941 1B4C                        u7861 19A8                        u7781 1724  
                      u6990 59CA                        u7950 1B5E                        u7870 19BE  
                      u7790 178E                        u6991 59C6                        u7951 1B5A  
                      u7871 19BA                        u7791 178A                        u7960 1B94  
                      u7880 19CC                        u7961 1B90                        u7881 19C8  
                      u7970 1BC2                        u7890 19E8                        u7971 1BBE  
                      u7891 19E4                        u8587 5EEC                        u7980 1C46  
                      u8597 52A8                        u7981 1C42                        u7990 1C60  
                      u7991 1C5C                        _WREG 000FE8            __end_of_I2C_NACK 6336  
                      _dbuf 0200                        _atoi 4DA6        __size_of_CCP1handler 017E  
                      _main 5EB2                        _prec 003A            __end_of_I2C_Read 610A  
                      _nout 01BE                        pad@i 002B                        pad@p 0028  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf1 000FE7  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 002D  
                      fsr2l 000FD9                        btemp 004C               ___fpclassifyf 556E  
                      prodh 000FF4                        prodl 000FF3        __size_of_CCP4handler 0172  
                      start 00A2             ___fldiv@new_exp 008E                _tolower$2390 0020  
              ___param_bank 000000             __end_of_Initial 5360                       ??_map 002B  
                     ??_pad 002A            CCP1handler@CCPRT 000D            ?_I2C_Master_Wait 0001  
              _BAUDCON1bits 000F65            ?_I2C_Master_Stop 0001               ___fltol@sign1 0036  
                     ?_atoi 001B             __end_of___fladd 3D70                       ?_main 0001  
           __end_of___fldiv 49DC             __end_of___awdiv 58DC             __end_of___flneg 6236  
                     STR_12 10C9                       STR_13 10D1                       STR_16 10D5  
                     STR_18 10D5             __end_of___awmod 5A4E             __end_of___flmul 4640  
           __end_of___flsub 60C4             __end_of___fltol 5468             __end_of___lldiv 5CE8  
           ___awdiv@divisor 0016                       _T1CON 000FCD                       _T3CON 000FB1  
                     i1l201 005C                       i1l202 0072                       i1l211 50C6  
                     i1l204 0088                       i1l205 0092                       i1l224 635C  
                     i1l219 5238                       i1l227 638A                       i1l199 0046  
                     i2l190 638C                       i2l193 638C             ___awdiv@counter 0018  
              vfpfcnvrt@fmt 00F0                       _TMR1H 000FCF                       _TMR1L 000FCE  
                     _TMR1X 0042                       _TMR3X 0041                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96         ___lmul@multiplicand 0018  
               ?_UART_Write 0001                       _fabsf 626C                       _atanf 28F8  
                     _flags 003C               ?_MPU6050_Read 0001                       _fputc 574E  
                     _pi_lo 1035                       _fputs 610A             __end_of_isdigit 61FE  
                     atoi@n 0028                       pad@fp 0024                       atoi@s 001B  
                     _width 0038                       _putch 6390                       main@i 01A0  
           __end_of_isspace 607C           __end_of_I2C_Start 636E             __end_of_isupper 61C6  
                     tablat 000FF5                       ttemp5 004D                       ttemp6 0050  
                     ttemp7 0054                       status 000FD8                       wtemp8 004D  
           __end_of_sprintf 602A              ?___fpclassifyf 0014             __end_of_tolower 5F78  
           __end_of_strncmp 574E            __end_of_HiPriISR 6390              MPU6050_Read@AX 016E  
            MPU6050_Read@AY 0172              MPU6050_Read@AZ 014C              MPU6050_Read@GX 0150  
            MPU6050_Read@GZ 0154              MPU6050_Read@Ax 0160              MPU6050_Read@Ay 0162  
            MPU6050_Read@Az 0164              MPU6050_Read@Gx 0166              MPU6050_Read@Gy 0168  
            MPU6050_Read@Gz 016A             __initialization 5D6C            __end_of_LoPriISR 00A2  
              __end_of_atoi 4F4A                __end_of_main 5F18                   ??_I2C_ACK 0014  
                    ??_atoi 001D                      ??_main 019E               __activetblptr 000003  
    atan2f@__xc8_float_word 010C           ?_I2C_Master_Write 0001              ??_MPU6050_Read 0120  
                    ?_fabsf 0096                  _GyroAngleX 01C4                  _GyroAngleY 01C0  
                    ?_atanf 009E          ??_I2C_Master_Write 0015                      ?_fputc 0014  
                    ?_fputs 001D                      _CCPR1H 000FBD                      _CCPR1L 000FBC  
                    _CCPR4H 000F79                      _CCPR4L 000F78                      _CCPR1X 004B  
                    _CCPR4X 00FE            ___awdiv@dividend 0014                      ?_putch 0001  
                    i1l3440 6388                      i1l3438 6386                      i1l5900 51AC  
                    i1l5902 51BA                      i1l5910 5236                      i1l5840 4F68  
                    i1l5904 522A                      i1l5850 4F92                      i1l5842 4F6A  
                    i1l5906 522E                      i1l5914 634A                      i1l5860 5036  
                    i1l5852 4FB2                      i1l5844 4F78                      i1l5836 4F4A  
                    i1l5908 5232                      i1l5916 634C                      i1l5940 002A  
                    i1l5870 50C0                      i1l5854 4FC0                      i1l5862 503A  
                    i1l5838 4F58                      i1l5846 4F7A                      i1l5918 635A  
                    i1l5950 006A                      i1l5942 002C                      i1l5864 5048  
                    i1l5872 50C4                      i1l5856 502E                      i1l5848 4F8C  
                    i1l5880 50E6                      i1l5952 0080                      i1l5944 0030  
                    i1l5866 50B8                      i1l5858 5032                      i1l5890 5124  
                    i1l5882 50E8                      i1l5954 008C                      i1l5946 003E  
                    i1l5938 0026                      i1l5868 50BC                      i1l5892 5132  
                    i1l5884 50EA                      i1l5876 50C8                      i1l5956 008E  
                    i1l5948 0054                      i1l5894 51A0                      i1l5886 50FE  
                    i1l5878 50D6                      i1l5896 51A4                      i1l5888 5104  
                    i1l5898 51A8                  Servo1@temp 008F                  Servo2@temp 008F  
                    _SPBRG1 000FAF                      _STATUS 000FD8                      _TXREG1 000FAD  
          __end_of___xxtofl 4DA6                   ??_Initial 0017                      _Servo1 5B9E  
                    _Servo2 5AF8                vfprintf@cfmt 010C                  _Servo1_off 01CC  
                _Servo2_off 01C8                      ___flge 5468                      ___fleq 5A4E  
                    ___lmul 5E48            I2C_Read@ACK_NACK 0014         __size_of_UART_Write 0016  
                 ??___fladd 006D                      ___wmul 62A2                   ??___fldiv 0085  
                 ??___awdiv 0018                   ??___flneg 0018                   ??___awmod 0018  
   MPU6050_Read@elapsedTime 017E                   ??___flmul 002A                      _atan2f 3148  
                 ??___flsub 0036                   ??___fltol 0081                   ??___lldiv 001C  
                    _efgtoa 10DA                      _atanhi 1025                      _atanlo 1015  
                    _floorf 49DC                      fabsf@u 009A                      fabsf@x 0096  
                    clear_0 5DB2                      clear_1 5DBE                      clear_2 5DCA  
          ___awdiv@quotient 001A             ___awmod@divisor 0016                      atanf@w 00CA  
                    atanf@x 009E                      atanf@z 00D0                      isa$std 000001  
           ___awmod@counter 0018                      pad@buf 0026                      _strcpy 5F78  
                    _strlen 6236                   ?_I2C_NACK 0001                ?_TMR1handler 0001  
                    fputc@c 0014                      fputs@c 0021                      fputs@i 0022  
              __pdataCOMRAM 0043                      fputs@s 001D                   ??_isdigit 0016  
                 ?_I2C_Read 0001                ?_TMR3handler 0001             ___fpclassifyf@e 001C  
           ___fpclassifyf@u 001E             ___fpclassifyf@x 0014                __mediumconst 0000  
                 ??_isspace 0016                      tblptrh 000FF7                   ??_isupper 0016  
                    tblptrl 000FF6                      tblptru 000FF8                      putch@c 0001  
          __end_of_vfprintf 5E48                   ??_sprintf 0038                   ??_tolower 001C  
                 ??_strncmp 001A       MPU6050_Read@accAngleX 0196       MPU6050_Read@accAngleY 019A  
                ___flge@ff1 002E                  ___flge@ff2 0032             ??___fpclassifyf 0018  
              ___xxtofl@arg 001E                ___xxtofl@exp 001D                ___xxtofl@val 0014  
                ___fleq@ff1 0014                  ___fleq@ff2 0018                  __accesstop 0060  
   __end_of__initialization 5DD0                  ___flneg@f1 0014               ___rparam_used 000001  
                ___fltol@f1 007D              __pcstackCOMRAM 0001                __pidataBANK1 6376  
             __end_of_fabsf 62A2               __end_of_atanf 3148               __end_of_fputc 5818  
             __end_of_pi_lo 1039               __end_of_fputs 614E               __end_of_putch 6392  
                __end_of_aT 1015                  __end_of_pi 103D                 _CurrentTime 01B6  
                ??_I2C_NACK 0014                  ??_I2C_Read 0014                   ?_HiPriISR 0001  
                   ??_fabsf 0036                     ??_atanf 00A2                     ??_fputc 0018  
                   ??_fputs 0021                     ??_putch 0014                   ?_LoPriISR 0001  
                __pbssBANK1 01A2                  __pbssBANK2 0200                  _atanf$2621 00C2  
                _atanf$2622 00AA                  _atanf$2623 00C6                  _atanf$2624 00AE  
                _atanf$2625 00B2                  __pnvCOMRAM 004B           _MPU6050_Read$2611 0158  
         _MPU6050_Read$2612 015C           _MPU6050_Read$2613 0182           _MPU6050_Read$2614 0186  
         _MPU6050_Read$2615 018A           _MPU6050_Read$2616 018E           _MPU6050_Read$2617 0192  
              I2C_Read@Data 0015                     ?_Servo1 0085                     ?_Servo2 0085  
                   ?___flge 002E                     ?___fleq 0014                     ?___lmul 0014  
      __end_of_MPU6050_Read 28F8                     ?___wmul 0014                     ?_atan2f 00D8  
                   ?_efgtoa 00AA                     _I2C_ACK 6336                     _CCP1CON 000FBB  
                   _CCP4CON 000F77                     ?_floorf 0096              ___lmul@product 001C  
                   ?_strcpy 0014                     ?_strlen 0014                 Servo1@angle 0085  
               Servo2@angle 0085                   ?___xxtofl 0014                  ??_HiPriISR 0001  
              ??_UART_Write 0014          __size_of_vfpfcnvrt 04A4                     _SPBRGH1 000FD4  
                   _SSP1ADD 000FC8                     _SSP1BUF 000FC9               ??_CCP1handler 0001  
                ??_LoPriISR 0011               ??_CCP4handler 0001                I2C_Start@add 0016  
                 _I2C_Start 635E                     _Initial 523A                     __Hparam 0000  
                   __Lparam 0000             __size_of_Servo1 00A6             __size_of_Servo2 00A6  
           __size_of___flge 0106             __size_of___fleq 00AA                     ___fladd 38AE  
                   ___fldiv 4640                     ___awdiv 5818                     ___flneg 61FE  
           __size_of___lmul 006A                     ___awmod 599E                     ___flmul 4214  
                   ___flsub 607C                     ___fltol 5360                     ___lldiv 5C44  
           __size_of___wmul 0026          __end_of_UART_Write 6322             __size_of_atan2f 0766  
                 ?_vfprintf 00F8                __psmallconst 1000             __size_of_efgtoa 0C60  
           __size_of_floorf 0216                     __pcinit 5D6C                     __ramtop 1000  
                   __ptext0 5EB2                     __ptext1 1D3A                     __ptext2 5FD6  
                   __ptext3 5DDA                     __ptext4 3D70                     __ptext5 566C  
                   __ptext6 10DA                     __ptext7 5F18                     __ptext8 618E  
                   __ptext9 5F78                   _T0CONbits 000FD5             __size_of_strcpy 005E  
           __size_of_strlen 0036                   _T1CONbits 000FCD                __size_of_map 0084  
              __size_of_pad 00C2                     _isdigit 61C6                     atan2f@m 011C  
                   atan2f@x 00DC                     atan2f@y 00D8                     atan2f@z 0110  
                ??___xxtofl 0018                   _T3CONbits 000FB1            ___awmod@dividend 0014  
                   _isspace 602A                     atanf@s1 00B6                     atanf@s2 00BA  
                   atanf@id 00CE                     _isupper 618E                     atanf@ix 00D4  
                   efgtoa@c 00B0                     efgtoa@d 00CE                     efgtoa@e 00E6  
                   efgtoa@f 00AC                     efgtoa@g 00E2                     efgtoa@h 00D8  
                   efgtoa@i 00E0                     efgtoa@l 00DC                     efgtoa@m 00C8  
                   efgtoa@n 00E8                     efgtoa@p 00D2        __size_of_TMR1handler 0014  
                   efgtoa@t 00C2                     efgtoa@u 00EA                     efgtoa@w 00D4  
  __size_of_I2C_Master_Wait 0026    __size_of_I2C_Master_Stop 0008                     atoi@neg 0021  
      __size_of_TMR3handler 0006                     _sprintf 5FD6                     _tolower 5F18  
                   _strncmp 566C              __pintcode_body 638C        end_of_initialization 5DD0  
                   floorf@e 00A4                     floorf@m 00A0                     floorf@u 00A6  
                   floorf@x 0096                     fputc@fp 0016                     int_func 638C  
                   fputs@fp 001F                  ?_I2C_Start 0001         __end_of_CCP1handler 50C8  
 __size_of_I2C_Master_Write 001E             ___lldiv@divisor 0018             ___lldiv@counter 0020  
       __end_of_CCP4handler 523A           __end_of_vfpfcnvrt 4214                  efgtoa@mode 00D7  
                efgtoa@sign 00D0                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
                ??_vfprintf 0038                     strcpy@d 001C                     strlen@a 0016  
                   strcpy@s 001A                     strlen@s 0014            CCP4handler@CCPRT 000D  
            UART_Write@data 0014                 ___fladd@grs 0074               ___xxtofl@sign 001C  
               _Status_temp 0040           __size_of_I2C_NACK 0014                   _TRISCbits 000F94  
         __size_of_I2C_Read 0046                 ___fldiv@grs 0090                 ___fldiv@rem 0089  
          MPU6050_Read@roll 0176                 ___flmul@grs 0062       __size_of_MPU6050_Read 0BBE  
            __end_of_Servo1 5C44              __end_of_Servo2 5B9E              __end_of___flge 556E  
            __end_of___fleq 5AF8              __end_of___lmul 5EB2                 vfpfcnvrt@ap 00F2  
               vfpfcnvrt@ct 0108                 vfpfcnvrt@fp 00EE              __end_of___wmul 62C8  
            __end_of_atan2f 38AE               __pidataCOMRAM 636E              __end_of_efgtoa 1D3A  
            __end_of_atanhi 1035              __end_of_atanlo 1025              __end_of_floorf 4BF2  
                floorf@F527 01A2              __end_of_strcpy 5FD6              __end_of_strlen 626C  
       start_initialization 5D6C               MPU6050_Read@T 016C                 __end_of_map 5D6C  
               __end_of_pad 599E           __size_of_HiPriISR 6388                _MPU6050_Read 1D3A  
               _CCP1handler 4F4A                 _CCP4handler 50C8           ??_I2C_Master_Wait 0014  
         ??_I2C_Master_Stop 0015           __size_of_LoPriISR 008A       __end_of___fpclassifyf 566C  
               ??_I2C_Start 0016                    ??_Servo1 0087                    ??_Servo2 0087  
               vfprintf@fmt 00FA                   _Servo1_on 0047                   _Servo2_on 0043  
                  ??___flge 006D                    ??___fleq 001C                    ??___lmul 001C  
                  ??___wmul 0018                    ??_atan2f 00E0                    ??_efgtoa 00B1  
               __pdataBANK1 01C8                    ?_I2C_ACK 0001                    ??_floorf 009A  
               _atan2f$2620 0108                 _atan2f$2618 0100                 _atan2f$2619 0104  
                  ??_strcpy 0018                    ??_strlen 0016                   ___fladd@a 0032  
                 ___fladd@b 002E                   ___fldiv@a 0081                   ___fldiv@b 007D  
     atanf@__xc8_float_word 00A6                   ___flmul@a 0026                   ___flmul@b 0022  
               __pbssCOMRAM 0038                   _Wreg_temp 003F                   ___flsub@a 0079  
                 ___flsub@b 0075               __pcstackBANK0 0060               __pcstackBANK1 0100  
         __size_of___xxtofl 01B4                   _atoi$2295 0023                   _atoi$2296 0027  
                 _atoi$2297 0025                   __pnvBANK0 00FE                    ?_Initial 0001  
          _I2C_Master_Write 62EE                 _efgtoa$2243 00B6                 _efgtoa$2244 00B8  
               _efgtoa$2253 00BC                 _efgtoa$2254 00BE                 _efgtoa$2255 00C0  
               _efgtoa$2249 00BA                   __pintcode 0008                    ?___fladd 002E  
                  ?___fldiv 007D                    ?___awdiv 0014                    ?___flneg 0014  
                  ?___awmod 0014                    ?___flmul 0022                    ?___flsub 0075  
                  ?___fltol 007D                    ?___lldiv 0014                 __pintcodelo 0018  
      I2C_Master_Write@data 0015           __size_of_vfprintf 006E                    _I2C_NACK 6322  
                 fabsf@F465 01A6                 __smallconst 1000                    ?_isdigit 0014  
                  _I2C_Read 60C4                    ?_isspace 0014                    ?_isupper 0014  
                  _CCPTMRS0 000F2D                    _CCPTMRS1 000F2C              __size_of_fabsf 0036  
            __size_of_atanf 0850                    ?_sprintf 010E                    ?_tolower 001A  
            __size_of_fputc 00CA              __size_of_fputs 0044                    ?_strncmp 0014  
            __size_of_putch 0002              ___wmul@product 0018                    _LATDbits 000F8C  
                  _LATEbits 000F8D                    _IPR1bits 000F9F                    _IPR2bits 000FA2  
                  _IPR3bits 000FA5                    _PIE1bits 000F9D                    _IPR4bits 000FB8  
                  _PIE2bits 000FA0                    _PIE3bits 000FA3                    _PIE4bits 000FB6  
                  _BSR_temp 003E                    i1u600_20 006A                    i1u600_21 0066  
                  i1u601_20 0080                    i1u601_21 007C                    i1u590_20 50D6  
                  i1u590_21 50D2                    i1u583_20 4F58                    i1u591_20 50E6  
                  i1u583_21 4F54                    i1u591_21 50E2                    i1u584_20 4F68  
                  i1u592_20 50FE                    i1u584_21 4F64                    i1u592_21 50FA  
                  i1u585_20 4F8C                    i1u593_20 5116                    i1u585_21 4F88  
                  i1u593_21 510E                    _PIR1bits 000F9E                    i1u586_20 4FA4  
                  i1u586_21 4F9C                    i1u595_20 5132                    i1u594_28 5118  
                  i1u595_21 512E                    _PIR2bits 000FA1                    i1u588_20 4FC0  
                  i1u587_28 4FA6                    i1u596_20 51BA                    i1u588_21 4FBC  
                  i1u596_21 51B6                    i1u589_20 5048                    i1u589_21 5044  
                  _PIR3bits 000FA4                    i1u598_20 003E                    i1u598_21 003A  
                  i1u599_20 0054                    i1u599_21 0050                    _PIR4bits 000FB7  
                 atanf@sign 00BE                    _RCONbits 000FD0                    _SSP1CON1 000FC6  
                  _SSP1CON2 000FC5                    _SSP1STAT 000FC7                   _vfpfcnvrt 3D70  
          __size_of_I2C_ACK 0014        UART_Write_String@buf 0015                   map@newmax 0029  
                 map@newmin 0027                   map@second 002D           ___wmul@multiplier 0014  
             ??_TMR1handler 0001               ??_TMR3handler 0001                    _HiPriISR 0008  
              _isspace$2326 001A                  vfpfcnvrt@c 010B                  vfpfcnvrt@f 0104  
         ___lmul@multiplier 0014                   copy_data0 5D80                   copy_data1 5DA0  
                  _LoPriISR 0018                    __Hrparam 0000            __size_of_Initial 0126  
                vfprintf@ap 00FC                    __Lrparam 0000                  vfprintf@fp 00F8  
          __size_of___fladd 04C2            __size_of___fldiv 039C            __size_of___awdiv 00C4  
          __size_of___flneg 0038            __size_of___awmod 00B0                _time0counter 01BA  
          __size_of___flmul 042C            __size_of___flsub 0048            __size_of___fltol 0108  
          __size_of___lldiv 00A4                  ?_vfpfcnvrt 00EE          ___fpclassifyf@F465 01AA  
         _UART_Write_String 614E                  sprintf@fmt 0110                    ___xxtofl 4BF2  
           _I2C_Master_Wait 62C8             _I2C_Master_Stop 637E            __size_of_isdigit 0038  
        ?_UART_Write_String 0015            __size_of_isspace 0052                    __ptext10 58DC  
                  __ptext11 6236                    __ptext20 5818                    __ptext12 610A  
                  __ptext21 4DA6                    __ptext13 574E                    __ptext30 38AE  
                  __ptext22 602A                    __ptext14 6390                    __ptext31 61FE  
                  __ptext23 61C6                    __ptext15 49DC                    __ptext40 5E48  
                  __ptext32 4214                    __ptext24 62A2                    __ptext16 5360  
                  __ptext41 5C44                    __ptext33 4640                    __ptext25 3148  
                  __ptext17 5468                    __ptext42 60C4                    __ptext34 4BF2  
                  __ptext26 28F8                    __ptext18 5A4E                    __ptext51 6386  
                  __ptext43 6322                    __ptext35 614E                    __ptext27 626C  
                  __ptext19 599E                    __ptext52 634A                    __ptext44 6336  
                  __ptext36 630C                    __ptext28 556E                    __ptext53 50C8  
                  __ptext45 523A                    __ptext37 5AF8                    __ptext29 607C  
                  __ptext54 4F4A                    __ptext46 635E                    __ptext38 5B9E  
                  __ptext47 62EE                    __ptext39 5CE8                    __ptext48 637E  
                  __ptext49 62C8            __size_of_isupper 0038                _SSP1CON2bits 000FC5  
       __end_of_TMR1handler 635E                ?_CCP1handler 0001         __end_of_TMR3handler 638C  
          __size_of_sprintf 0054            __size_of_tolower 0060                  strcpy@dest 0014  
          __size_of_strncmp 00E2         ??_UART_Write_String 0017                ?_CCP4handler 0001  
             __size_of_atoi 01A4               __size_of_main 0066                    atan2f@ix 0114  
                  atan2f@iy 0118                    efgtoa@fp 00AA                    efgtoa@ne 00C6  
                  efgtoa@pp 00C4                    efgtoa@ou 00CA                    isa$xinst 000000  
                  int$flags 004C                    map@first 0031                    map@value 0021  
                  map@third 0033                    _vfprintf 5DDA                _SSP1STATbits 000FC7  
 __end_of_UART_Write_String 618E              _vfpfcnvrt$2273 0102              _vfpfcnvrt$2269 0100  
  __end_of_I2C_Master_Write 630C                  _INTCONbits 000FF2                    isdigit@c 0014  
                  intlevel1 0000                    intlevel2 0000                   sprintf@ap 0116  
                  isspace@c 0014            ___lldiv@dividend 0014                   strcpy@src 0016  
                _RCSTA1bits 000FAB                    isupper@c 0014                   strncmp@_l 0014  
                 strncmp@_r 0016                 efgtoa@nmode 00D6          UART_Write_String@i 0017  
   __end_of_I2C_Master_Wait 62EE     __end_of_I2C_Master_Stop 6386                 ??_vfpfcnvrt 00F4  
                  sprintf@f 0118                    tolower@c 001A                    sprintf@s 010E  
               _TMR1handler 634A      __size_of___fpclassifyf 00FE            ___lldiv@quotient 001C  
               _TMR3handler 6386                    strncmp@l 001B                    strncmp@n 0018  
                  strncmp@r 001D                _previousTime 01B2                  _UART_Write 630C  
             ___fladd@signs 0071                ___fladd@aexp 0072                ___fladd@bexp 0073  
